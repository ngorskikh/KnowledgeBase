[{"title":"安装方式","type":0,"sectionRef":"#","url":"adguard-browser-extension/installation/","content":"","keywords":""},{"title":"How to install AdGuard Browser Extension for Google Chrome or Chromium browsers​","type":1,"pageTitle":"安装方式","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-google-chrome-or-chromium-browsers","content":"Open the extension's page in Chrome Web Store and click Add to Chrome.  In the opened dialog box, click Add extension.  "},{"title":"How to install AdGuard Browser Extension for Opera​","type":1,"pageTitle":"安装方式","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-opera","content":"打开 addons.opera.com 页面。  Click Add to Opera. "},{"title":"How to install AdGuard Browser Extension for Firefox​","type":1,"pageTitle":"安装方式","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-firefox","content":"打开 addons.mozilla.org 网页。  Click Add to Firefox. "},{"title":"How to install AdGuard Browser Extension for Yandex Browser​","type":1,"pageTitle":"安装方式","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-yandex-browser","content":"Click the browser settings button in the upper right corner of the browser, then choose Add-ons in the drop-down menu. Scroll down to find AdGuard, then click Install.  "},{"title":"How to install AdGuard Browser Extension for Microsoft Edge​","type":1,"pageTitle":"安装方式","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-microsoft-edge","content":"Find AdGuard Browser Extension in the Edge Add-ons store and click Get.  In the opened dialog window, press Add extension.  Alternatively, you can install AdGuard Browser Extension for Edge from the Chrome Web Store. 在 Edge 浏览器中打开 Chrome 的网页，在页面顶部的横幅上选择「允许来自其他应用商店的扩展程序」（Allow extensions from other stores）。  在弹出的对话框中，点击「允许」（Allow）。  点击「添加到 Chrome」（Add to Chrome）。  In the opened dialog window, click Add extension to install AdGuard Browser Extension.  "},{"title":"How to install AdGuard Browser Extension for Safari​","type":1,"pageTitle":"安装方式","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-safari","content":"适用于 Safari 的 AdGuard 不是一般意义上的浏览器扩展。 You can read more about it in a dedicated article. 或者您可以直接从本网页下载安装文件。 "},{"title":"整合模式（旧版）","type":0,"sectionRef":"#","url":"adguard-browser-extension/integration-mode/","content":"","keywords":""},{"title":"什么是整合模式?​","type":1,"pageTitle":"整合模式（旧版）","url":"adguard-browser-extension/integration-mode/#什么是整合模式","content":"In older versions of AdGuard Browser Extension, if you had it installed along with one of the AdGuard desktop apps (AdGuard for Windows or AdGuard for Mac), the extension took upon itself the functions of AdGuard Assistant — a tool that helped manage the filtering right from the web page. 同时，广告拦截本身完全在桌面应用程序的控制之下，扩展及其设置对此没有任何作用。 问题是，在某些情况下，应用程序和扩展程序会彼此妨碍对方的工作。 一些网站将不再受到桌面程序的保护，并且仅由能力较小的扩展程序支持。 因此，从 AdGuard 浏览器扩展 v3.5 版本开始，整合模式被删除。 取而代之的是，新的 AdGuard 浏览器助手已开始使用。 "},{"title":"AdGuard 浏览器助手​","type":1,"pageTitle":"整合模式（旧版）","url":"adguard-browser-extension/integration-mode/#adguard-浏览器助手","content":" AdGuard 浏览器助手是一个新的浏览器扩展，其工作方式和整合模式一样，但更轻，没有冗赘功能，并且不会干扰桌面应用程序。 您可以阅读有关 Windows 浏览器助手 或 Mac 浏览器助手的更多信息，或 从我们的网站下载它。 AdGuard 浏览器助手可在所有主流浏览器中下载。 "},{"title":"Browser-protected pages","type":0,"sectionRef":"#","url":"adguard-browser-extension/protected-pages/","content":"","keywords":""},{"title":"Browser-protected pages​","type":1,"pageTitle":"Browser-protected pages","url":"adguard-browser-extension/protected-pages/#browser-protected-pages","content":"When using a web extension like AdGuard Browser Extension, there are certain restricted domains that prohibit access or permissions. As a result, ad blocking extensions are not allowed to interact with or modify the content of these pages. In other words, they are not allowed to block ads and other annoying elements on these web pages. "},{"title":"Chromium browser restrictions​","type":1,"pageTitle":"Browser-protected pages","url":"adguard-browser-extension/protected-pages/#chromium-browser-restrictions","content":"Chromium-based browsers, such as Google Chrome, maintain a list of restricted domains that extensions are not allowed to access. These domains include: clients.google.comclients[0-9]+.google.comsb-ssl.google.comURLs starting with chrome://, chrome-extension://, or https://chrome.google.com/webstore/PDF filesPages where Javascript is disabledSecurity warning pagesError pages such as 404 errors and network errorsURLs starting with view-source: or data: "},{"title":"Firefox browser restrictions​","type":1,"pageTitle":"Browser-protected pages","url":"adguard-browser-extension/protected-pages/#firefox-browser-restrictions","content":"Similarly, the Firefox browser has its own set of restricted domains where extensions are not permitted to operate. These restricted domains include: accounts-static.cdn.mozilla.netaccounts.firefox.comaddons.cdn.mozilla.net --addons.mozilla.orgapi.accounts.firefox.comcontent.cdn.mozilla.netdiscovery.addons.mozilla.orginstall.mozilla.orgoauth.accounts.firefox.comprofile.accounts.firefox.comsupport.mozilla.orgsync.services.mozilla.com "},{"title":"Modifying restrictions in Firefox​","type":1,"pageTitle":"Browser-protected pages","url":"adguard-browser-extension/protected-pages/#modifying-restrictions-in-firefox","content":"Changing advanced settings can affect the stability and security of Firefox. This is recommended for advanced users only. If you are aware of the associated risk and still wish to enable add-ons disallowed on a protected page, follow the steps below: Click the menu button → Add-ons and themes → Extensions.Click the extension you want to enable on sites with restrictions (In this case, AdGuard).Select Allow in the section Run on sites with restrictions. Alternatively, you can: Open a new tab and type about:config in the address bar.Press Return. You may encounter a warning. In this case, click Accept the Risk and Continue.Search for extensions.webextensions.restrictedDomains. If you can’t find this preference, you can create it. Simply select the Boolean type and click + to add it.Click the toggle button next to this preference and change its value to false.Restart Firefox. For further information on this subject, read the article on Mozilla’s support website. "},{"title":"How to export logs from the background page","type":0,"sectionRef":"#","url":"adguard-browser-extension/solving-problems/logs/","content":"","keywords":""},{"title":"Exporting logs from the background page in the extension​","type":1,"pageTitle":"How to export logs from the background page","url":"adguard-browser-extension/solving-problems/logs/#exporting-logs-from-the-background-page-in-the-extension","content":""},{"title":"Chrome 浏览器​","type":1,"pageTitle":"How to export logs from the background page","url":"adguard-browser-extension/solving-problems/logs/#chrome-浏览器","content":"Open AdGuard Browser Extension and, if possible, repeat the actions that led to the error. Note the exact time when the error occurred. Navigate to chrome://extensions. Enable Developer mode. Click background.html. Open the tab Console. Open the context menu and select Save as…. "},{"title":"Firefox 浏览器​","type":1,"pageTitle":"How to export logs from the background page","url":"adguard-browser-extension/solving-problems/logs/#firefox-浏览器","content":"Open AdGuard Browser Extension and, if possible, repeat the actions that led to the error. Note the exact time when the error occurred. Navigate to about:addons. Click Debug Add-ons. Click Inspect. Go to the tab Console. Click Save all Messages to File. "},{"title":"Sending logs​","type":1,"pageTitle":"How to export logs from the background page","url":"adguard-browser-extension/solving-problems/logs/#sending-logs","content":"Now that you have collected the logs, please follow these steps to submit them to our development team: Report the bug on GitHub.Send your archive with logs and playback time to devteam@adguard.com and add a link to your GitHub issue. You can also upload the archive to Google Drive and add the link to it instead of attaching the file. "},{"title":"安装","type":0,"sectionRef":"#","url":"adguard-content-blocker/installation/","content":"安装 信息 这篇文章是关于 AdGuard 内容拦截器，它只能保护用户的三星浏览器或 Yandex 浏览器。 To protect your entire device, download the AdGuard app 该应用程序可在五个商店购买：Google Play、三星 Galaxy 商店、华为商店、Aptoide 和 F-Droid。 To install AdGuard Content Blocker from Google Play, search AdGuard Content Blocker and tap Install. 注意 AdGuard Content Blocker works in two browsers: Yandex Browser and Samsung Internet Browser. After the installation is completed, tap Open to run the app. 如果用户在设备上已安装适当的浏览器，应用程序将要求您启用 AdGuard。 如果您没有一个适当的浏览器，用户会被提示选择并安装一个。 安装浏览器后，用户可以启动 AdGuard 内容拦截程序，并在浏览器里拦截广告和跟踪器。","keywords":""},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-browser-extension/overview/","content":"","keywords":""},{"title":"Availability​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#br-extension","content":"AdGuard Browser Extension is available for most major browsers. You can easily find it in your browser’s online store or on our official website.  注意 We have a standalone extension for Safari. Since the release of Safari 13, most of the ad-blocking extensions have experienced huge issues and many of them stopped functioning. We had to develop a separate extension for Safari that has some differences in comparison with the extension described in this article. Do not forget that the functionality of each extension is strictly limited by the browser’s capabilities. So if you want to get full-fledged protection, consider installing a standalone program for your computer. There's a reason why. "},{"title":"Ad blocking​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#adblocker","content":"Blocking ads is clearly the key functionality of any ad blocker, and AdGuard is not an exception. The extension will successfully block ads on any page in your browser. Ad blocking is based on so-called filter lists, or simply filters. Filters can be enabled or disabled in your extension's settings. You can customize ad blocking by activating specific filters. "},{"title":"Filters​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#filters","content":"In essence, filter lists are sets of rules written in a special language. Your ad blocker interpretes the rules and implements them. As a result, you stop seeing ads on your webpages.  All filters are grouped according to their role. For example, there are categories for ad-blocking filters, privacy protection filters, social media-related filters, etc. You can enable either individual filters or the entire group at once.  Custom filters​ While the features of other filter groups are more or less predictable, there is a group called Custom that may raise additional questions.  In this tab, you can add filters that are not present in the extension by default. There are plenty of publicly available filters on the Internet. Moreover, you can create and add your own filters. In fact, you can build any set of filters and customize ad blocking the way you like. To add a filter, just click Add custom filter, enter the URL or the file path of the filter you want to be added and click Next.  "},{"title":"User rules​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#user-rules","content":"User rules is another tool that helps you customize the blocking of ads.  There are several ways to add new rules. The most straightforward is to just type a rule in, but it requires some knowledge of the rule syntax. You can import a ready-to-use filter list from a text file as well. Make sure that different rules are separated by line breaks. Note that importing a ready-to-use filter list is better done in the Custom filters tab. Besides, you can export your own filtering rules. This option is good for transferring your list of rules between browsers or devices. When you add a website to the Allowlist (more on that below) or use the Assistant tool for hiding an element on the page, a corresponding rule is also saved in User rules. "},{"title":"Allowlist​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#allowlist","content":"The allowlist is used to exclude certain websites from filtering. Blocking rules are not applied to the websites on the list.  The allowlist can be inverted, too: you can unblock ads everywhere except on the websites added to this list. To do that, activate the Invert allowlist option.  You can also import and export existing allowlists. It is useful, for instance, if you want to apply the same allowing rules in each of your browsers. "},{"title":"Stealth Mode​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#stealth-mode","content":"Stealth Mode aims to ensure the protection of sensitive personal data from online trackers and fraudsters.  In Stealth Mode, you can prevent a website from seeing the search queries from you used to find it on the Internet, automatically delete third-party and website’s own cookies, etc. A separate article is devoted to all these features. 注意 Some of the Stealth Mode options available in full-fledged apps are not present in the browser extensions due to technical restrictions. "},{"title":"Other features and options​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#other","content":"Apart from the large key modules of AdGuard Browser Extension, there are several more specific features that can be configured in the General and Additional settings tabs of the extension settings. "},{"title":"常规​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#general","content":"In the General tab, you can allow search ads and the self-promotion of websites, enable the automatic activation of language-specific filters, indicate the filters update interval, etc.  Besides, here you can enable Phishing and malware protection. You can save your settings configuration by clicking the Export settings button. The settings will be saved as a .json file. To upload the previously saved settings configuration, use the Import settings function. You can even use it to quickly switch between different settings profiles or even to transfer settings configurations between different browsers. "},{"title":"Additional settings​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#misc","content":"The Additional settings section contains a range of various settings that are related to the ad blocking process and application usability.  From this tab, you can activate optimized filters, enable notifications about extension updates, open the Filtering log, or clear the statistics of blocked ads and trackers. Besides, you can opt to help us with the development of filters by sending the statistics on applied rules: which ones are triggered, on which websites, and how often. This option is disabled by default as we do not collect user data without consent. Yet, if you enable it, all data will be strictly anonymized. "},{"title":"关于​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#about","content":"In the About section, you can find infos about the current version, links to the EULA and Privacy policy, and to the repository of the Browser extension on GitHub.  "},{"title":"Extension’s main menu​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#main-menu","content":"The extension's main page can be accessed by clicking on the extension's icon on the toolbar of your browser.  On the main page, you can hide any element on any page manually (a corresponding rule will be added to the User rules), open the Filtering log to view the complete information about your browser's traffic and block requests on the go, or look at a website’s security report. Besides, you can submit a complaint about any website (for example, if there are missed ads on the page, our filter engineers will review the report and fix the problem) and see the statistics on applied blocking rules. All web requests made by the browser are displayed in the Filtering log, along with detailed information about each request. The Filtering log makes it easy, for example, to monitor requests blocked by AdGuard Browser Extension. Besides, it allows you to block any request or add a previously blocked request to Allowlist in two clicks. The Filtering log also offers you a wide variety of options for sorting web requests, which can be helpful when creating your own filtering rules. You can open the Filtering log by selecting the corresponding item in the main menu, or from the settings page (in the &quot;Additional settings&quot; tab). By clicking the icons in the top right corner of the extension's main menu, you can open the extension settings or pause the protection. "},{"title":"AdGuard Browser Extension vs. standalone apps​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#comparison","content":" The main advantage of AdGuard standalone programs over browser extensions is that the programs can block ads in every browser and in almost all apps. You may use different browsers at the same time, the app will filter ads and online threats in all of them equally well. The second difference is that the possibilities of extension-based ad blockers are strictly limited by browser guidelines. The browser extensions have to conform to the policies of the browsers, where ad blocking might be restricted. Thus, some types of filtering rules are not supported by the extensions. The functionality of the desktop apps is not limited, so they have a better filtering quality. Whereas AdGuard Browser Extension is free and easy to install, and has filters to block ads and fight online threats, the full-fledged apps are more powerful and have a list of advanced features. See all the differences in the comparative table below.  1 – within browser restrictions and only in the browser where it is installed; 2 – the extension is unable to detect requests from other extensions. If a malicious or tracking extension sends a request to its server to show you ads or track your activity, AdGuard Browser Extension will not be able to block that request; 3 – not all types of ads and threats can be blocked by browser extensions due to certain browser limitations. Some elements may get to the page and slow down the loading process. Besides, unlike browser-based ad blockers, the AdGuard app blocks ads before they are loaded to the browser. This saves traffic and speeds up page loading. "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-content-blocker/overview/","content":"Features overview 信息 这篇文章是关于 AdGuard 内容拦截器，它只能保护用户的三星浏览器或 Yandex 浏览器。 To protect your entire device, download the AdGuard app AdGuard has two Android apps: AdGuard for Android and AdGuard Content Blocker. AdGuard for Android has a much wider range of functionality: it blocks ads, trackers, and annoyances in browsers and apps, uses filters as well as domain-level ad blocking, and supports user rules. AdGuard Content Blocker has a limited functionality. Full-fledged ad blockers can’t be introduced to Google Play due to the policy of the store. Google Play has banned &quot;apps that block or interfere with another app displaying ads&quot;. Thus, AdGuard for Android can be downloaded on AdGuard's official website only. As an alternative, Google offers to developers the Content blocking API. The API has strict limitations and is currently supported by two browsers: Yandex Browser and Samsung Internet browser. Many complex filtering rules supported in other AdGuard products don't work with this API. AdGuard Content Blocker was designed to fit the Google Play policy framework. Compared to other AdGuard products, AdGuard Content Blocker has less ad blocking capabilities: AdGuard Content Blocker works only in browsers that support the content blocking technology. Currently, there are two: Yandex Browser and Samsung Internet browser.Within the existing technology, the functionality of AdGuard Content Blocker is limited: for example it cannot block ads and trackers in apps or other browsers, has no filtering log and doesn't support filtering at the domain level. However, AdGuard Content Blocker has 35 filters that allow you to block ads, trackers, and annoyances in two supported browsers. You can also customize ad blocking by selecting appropriate language-specific filters or adding user rules. AdGuard Content Blocker is a free open-source software. Its source code is available on GitHub. For a better and more customizable ad blocking experience, try using the full-fledged Android app. AdGuard for Android can be downloaded from our website.","keywords":""},{"title":"Installation","type":0,"sectionRef":"#","url":"adguard-for-android/installation/","content":"","keywords":""},{"title":"系统需求​","type":1,"pageTitle":"Installation","url":"adguard-for-android/installation/#系统需求","content":"OS version: Android 7.0 or higher RAM： 至少 2 GB Free disk space: 500 MB "},{"title":"Installation​","type":1,"pageTitle":"Installation","url":"adguard-for-android/installation/#installation","content":"虽然大部分用于安卓系统的应用程序可以通过谷歌商店分发，但是 AdGuard 不在里面。谷歌禁止通过谷歌商店分发网络层的广告拦截程序，即，在其他应用程序里屏蔽商业广告的应用程序。 You will find more information about Google restrictive policy in our blog. 由于上述原因，您只可以手动安装适用于安卓的 AdGuard。 为了在移动设备上使用该应用程序，您需要执行以下操作。 Download the app on your device. Here are a few ways you can do this: head over to our website and tap the Download buttonstart the browser and type in the following URL: https://adguard.com/apkor scan this QR code: Allow installing apps from unknown sources. Once the file download is complete, tap Open in the notification. A popup will appear. Tap Settings, navigate to Install unknown apps, and grant permission for the browser you've used to download the file. Install the app. Once the browser has obtained the necessary permissions, the system will ask you if you want to install the AdGuard app. Tap Install. You will then be asked to read AdGuard's License Agreement and Privacy Policy. You can also participate in product development. To do this, check the boxes for Send crash reports automatically and Send technical and interaction data. Then tap Continue. Create a local VPN. In order to filter all traffic directly on your device and not route it through a remote server, AdGuard needs to establish a VPN connection. Enable HTTPS filtering. It is not a mandatory option, however, we advice to turn it on for the best ad-blocking quality. If your device is running Android 7–9, you'll be prompted to install a root certificate and configure HTTPS filtering after the local VPN setup. After you tap Install now, a prompt will appear asking you to authenticate the certificate installation with a password or fingerprint. If you have Android 10+ on your device, then after creating a local VPN, you will see the main app screen with a snack bar at the bottom with a suggestion to enable HTTPS filtering: tap Enable and follow the instructions on the next screen or check the article about certificate installation for more information. "},{"title":"卸载/重新安装 AdGuard​","type":1,"pageTitle":"Installation","url":"adguard-for-android/installation/#卸载重新安装-adguard","content":"If you need to uninstall AdGuard on your mobile device, open Settings and choose Apps (Android 7) or Apps &amp; notifications (Android 8+). Find AdGuard in the list of installed apps and press Uninstall.  To reinstall AdGuard, just download the apk file again and follow the steps outlined in the Installation section. Uninstallation is not required beforehand. "},{"title":"使用的流量与电池消耗的问题","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/battery/","content":"","keywords":""},{"title":"电池使用情况​","type":1,"pageTitle":"使用的流量与电池消耗的问题","url":"adguard-for-android/solving-problems/battery/#电池使用情况","content":"You can access it by navigating to Statistics → Battery usage.  Inside you will find a chart that shows the AdGuard battery resource consumption within the last 24 hours, with an option to get more detailed hour-to-hour data by tapping on the chart. 除此之外，还有相关数据的信息以及简短技术说明。 "},{"title":"AdGuard 真实电池消耗是多少？​","type":1,"pageTitle":"使用的流量与电池消耗的问题","url":"adguard-for-android/solving-problems/battery/#adguard-真实电池消耗是多少","content":"First, let us lay down a bit of theory and links with necessary data. Android derives traffic consumption judging on so-called Power Profile, which is given by every manufacturer: https://source.android.com/devices/tech/power/values.html Main part of Power Profile is a set of values in mAh which define battery consumption for every component of the device: https://source.android.com/devices/tech/power/values.html For example, from the table above: wifi.active= 31mA additional consumption in mAh caused by WiFi data exchange. radio.active= 100-300mA additional consumption in mAh caused by data exchange over Mobile network. cpu.active= 100-200mA additional consumption in mAh caused by CPU work. AdGuard by itself almost doesn't consume any traffic, so for the sake of evaluating battery resource consumption let's get rid of 'Mobile/WiFi packets' and stcik to 'CPU'. Formula to calculate the consumption: &quot;CPU TIME (ms)&quot; X &quot;cpu.active&quot; / (60 60 1000) = &quot;POWER USE mAh&quot; Let's put real numbers into this formula. Let's take CPU total from the second screenshot and convert into milliseconds: 506000 A coefficient cpu.active for 2GHz will be roughly equal to 225mAh Final result: 506000 225 / (60 60 * 1000) = 31,625mAh "},{"title":"结论​","type":1,"pageTitle":"使用的流量与电池消耗的问题","url":"adguard-for-android/solving-problems/battery/#结论","content":"Real consumption is several times less than it is shown in Android statistics. Instead of 220mAh it should be somewhere around 31-40mAh. On the other hand, browser's consumption should be not 66mAh, but ~200mAh. "},{"title":"How to install AdGuard for Android TV","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/adguard-for-android-tv/","content":"","keywords":""},{"title":"Installing AdGuard for Android TV via browser​","type":1,"pageTitle":"How to install AdGuard for Android TV","url":"adguard-for-android/solving-problems/adguard-for-android-tv/#installing-adguard-for-android-tv-via-browser","content":"Install the TV Bro browser on your Android TV. Download and install AdGuard for Android TV: Open the installed TV Bro browser on your Android TV.In the address bar of the browser, type https://agrd.io/tvapk and press Enter or follow the link.The browser will start downloading the AdGuard for Android TV installation file automatically.Once the download is complete, select Downloads in the browser control bar, then select the downloaded file.In a warning message, allow installing files from the browser.Return to your browser, open Downloads, and click the downloaded file.In the system window that appears, click Install, then Done or Open. Done, AdGuard for Android TV is installed. Launch AdGuard for Android TV: After the installation is complete, find the AdGuard app in the list of installed apps on your Android TV.Click the AdGuard icon to launch the app.Follow the on-screen instructions to complete the setup. "},{"title":"Installing AdGuard for Android TV via ADB​","type":1,"pageTitle":"How to install AdGuard for Android TV","url":"adguard-for-android/solving-problems/adguard-for-android-tv/#installing-adguard-for-android-tv-via-adb","content":"Make sure that Android Debug Bridge (ADB) is installed on your computer. If not, you can follow the instructions on XDA Developers: ADB Installation Guide. Download AdGuard for Android TV. In your TV settings, go to System → About and press the build number seven times to unlock developer options. Enable USB debugging. Write down the IP address of your Android TV: On your Android TV, navigate to Settings.Select System → About.Find Network and select Wi-Fi or Ethernet, depending on your connection type.Go to the network section and find IP address. Note down this IP address. Connect to Android TV via ADB: Open the terminal or command prompt on your computer.Enter the command adb connect and paste the IP address of your TV.The connection will be established. Install AdGuard for Android TV via ADB: In the terminal, enter the command adb install Downloads/adguard_tv.apk. If necessary, replace Downloads/adguard_tv.apk with your path.Wait for a message in the terminal indicating the successful installation of the app. "},{"title":"Known compatibility issues with Android apps","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/compatibility-issues/","content":"","keywords":""},{"title":"手动将安全证书安装到火狐浏览器中","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/firefox-certificates/","content":"","keywords":""},{"title":"Method 1​","type":1,"pageTitle":"手动将安全证书安装到火狐浏览器中","url":"adguard-for-android/solving-problems/firefox-certificates/#method-1","content":"注意 改方法在安卓版火狐浏览器 90.0 及以上的版本可用。 为了让 AdGuard 证书在火狐浏览器中受信任，请执行以下操作： Run the browser. Go to Settings → About Firefox. Tap the Firefox logo five times. Navigate to Settings → Secret Settings. Toggle Use third party CA certificates. "},{"title":"Method 2​","type":1,"pageTitle":"手动将安全证书安装到火狐浏览器中","url":"adguard-for-android/solving-problems/firefox-certificates/#method-2","content":"注意 This method will only work on rooted devices. Install and configure adb; On the Windows platform, Samsung owners may need to install this utility. Activate the developer mode and enable USB debugging: Open the Settings app on your phone;Go to System section (last item in the settings menu). In this section, find the sub-item About phone;Tap the Build number line 7 times. After that, you will receive a notification that You are now a developer (If necessary, enter an unlock code for the device);Open System Settings → Developer Options → Scroll down and enable USB debugging → Confirm debugging is enabled in the window Allow USB debugging after reading the warning carefully. Install the Firefox browser (release version); Open the AdGuard settings (gear icon in the bottom right corner) → Filtering → Network → HTTPS filtering → Security certificate → Instructions for Firefox → Install for old versions; Open the folder data/data/org.mozilla.firefox/files/mozilla using adb shell su and cd data/data/..., then browse to the folder named xxxxxxx.default and memorize its name; In the specified folder we are interested in two files: cert9.dbkey4.db We need to move these files to a folder of the browser where the security certificate issue occurred: data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyy.default. The full command will look like this: adb shell sucp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxxx.default/cert9.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.defaultcp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxxx.default/key4.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.default In case you received the system notification permission denied, you should first move the specified files to the permission-free directory. And after that you should move them to the necessary folder in your Firefox browser. The full command should look something like this: adb shell sucp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxx.default/cert9.db sdcard/Downloadcp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxx.default/key4.db sdcard/Downloadcp -R sdcard/Download/cert9.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.defaultcp -R sdcard/Download/key4.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.default If adb shell su does not work, you should try adb shell initially, and then su. "},{"title":"VPN apps​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#vpn-apps","content":"If you are using AdGuard in the Local VPN filtering mode, you cannot run other VPN apps at the same time. To solve this problem, we suggest that you: Use AdGuard VPN — its Integrated mode allows two apps to operate simultaneouslyConfigure your VPN app to act as an outbound proxy and set up a local outbound proxy using the parameters from the third-party appSwitch to the Automatic proxy mode. When you do that, AdGuard will no longer use local VPN and will reconfigure iptables insteadSwitch to the Manual proxy mode. To do this, go to Settings → Filtering → Network → Routing mode Compatibility The Automatic proxy mode is only accessible on rooted devices. For Manual proxy, rooting is required on devices running on Android 10 or later. "},{"title":"Private DNS​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#private-dns","content":"The Private DNS feature was introduced in Android Pie. Before version Q, Private DNS didn't break AdGuard DNS filtering logic and the DNS forwarding through AdGuard worked normally. But starting from version Q, the presence of Private DNS forces apps to redirect traffic through the system resolver instead of AdGuard. See Android devs blog for more details. To solve the problem with Private DNS, use the $network rule Some device manufacturers keep Private DNS settings hidden and set 'Automatic' mode as a default one. Thus, disabling Private DNS is impossible but we can make the system think that the upstream is not valid by blocking it with a $network rule. For instance, if the system uses Google DNS by default, we can add rules |8.8.4.4^$network and |8.8.8.8^$network to block Google DNS. "},{"title":"Unsupported browsers​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#unsupported-browsers","content":""},{"title":"UC Browsers: UC Browser, UC Browser for x86, UC Mini, UC Browser HD​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#uc-browsers-uc-browser-uc-browser-for-x86-uc-mini-uc-browser-hd","content":"To be able to filter HTTPS traffic, AdGuard requires the user to add a certificate to the device's trusted user certificates. Unfortunately, UC-family browsers don't trust user certificates, so AdGuard cannot perform HTTPS filtering there. To solve this problem, move the certificate to the system certificate store Compatibility Requires root access. "},{"title":"Dolphin Browser: Dolphin Browser, Dolphin Browser Express​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#dolphin-browser-dolphin-browser-dolphin-browser-express","content":"AdGuard cannot filter its traffic when operating in the Manual proxy mode because this browser ignores system proxy settings. Use the Local VPN filtering mode to solve this problem "},{"title":"Opera mini: Opera mini, Opera mini with Yandex​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#opera-mini-opera-mini-opera-mini-with-yandex","content":"Opera mini drives traffic through a compression proxy by default and AdGuard is not able to decompress and filter it at the same time. There is no solution at this moment "},{"title":"Puffin Browser: Puffin Browser, Puffin Browser Pro​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#puffin-browser-puffin-browser-puffin-browser-pro","content":"Puffin Browser drives traffic through a compression proxy by default and AdGuard is not able to decompress and filter it at the same time. There is no solution at this moment "},{"title":"Moving the CA certificate to the system store on rooted devices","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/","content":"","keywords":""},{"title":"How to install AdGuard's certificate to the system store​","type":1,"pageTitle":"Moving the CA certificate to the system store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#how-to-install-adguards-certificate-to-the-system-store","content":"Open AdGuard → Settings → Filtering → Network → HTTPS filtering → Security certificates. If you don't have any certificate yet, install the AdGuard Personal CA into the user store. This will allow AdGuard to filter HTTPS traffic in browsers. Install the AdGuard Intermediate CA into the user store. You'll need it to run the adguardcert Magisk module that allows you to move certificates to the system store. Install the latest release of the adguardcert Magisk module. Open Magisk → Modules → Install from storage and select the downloaded adguardcert file. This will move the AdGuard Personal CA from the user store to the system store. Tap Reboot. After the transfer, the AdGuard Personal CA in the system store will allow you to filter HTTPS traffic in apps, while the AdGuard Intermediate CA in the user store will allow you to filter HTTPS traffic in Chromium-based browsers (see below why). "},{"title":"Known issues with Chrome and Chromium-based browsers​","type":1,"pageTitle":"Moving the CA certificate to the system store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#known-issues-with-chrome-and-chromium-based-browsers","content":"Chrome and other Chromium-based browsers require Certificate Transparency (CT) logs for certificates located in the system store. CT logs don't contain information about certificates issued by HTTPS-filtering apps. Therefore, AdGuard requires an additional certificate in the user store to filter HTTPS traffic in these browsers. "},{"title":"Bromite browser​","type":1,"pageTitle":"Moving the CA certificate to the system store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#bromite-browser","content":"In addition to the above issue, Bromite doesn't trust certificates in the user store by default. To filter HTTPS traffic there, open Bromite, go to chrome://flags, and set Allow user certificates to Enabled. This applies to both rooted and non-rooted devices. "},{"title":"如何收集 HAR 文件","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/har/","content":"","keywords":""},{"title":"什么是 HAR 文件？​","type":1,"pageTitle":"如何收集 HAR 文件","url":"adguard-for-android/solving-problems/har/#什么是-har-文件","content":"HAR（HTTP ARchive）格式是 JSON 格式的存档文件，用于记录 Web 浏览器与站点的交互。 HAR 格式的规范定义了 HTTP 交易的存档数据，浏览器使用该数据来导出其加载的网页的详细信息。 您可以在 softwareishard.com 网站上找到有关 HAR 文件格式及其使用规范的更详细说明。 "},{"title":"如何收集 HAR 文件​","type":1,"pageTitle":"如何收集 HAR 文件","url":"adguard-for-android/solving-problems/har/#如何收集-har-文件","content":"有时我们需要对文件进行分析以拦截由于某种原因难以再现的特定广告。 要获取 HAR 文件，请执行以下步骤： Open AdGuard and go to Settings (⚙ icon in the lower right corner).Tap General →Advanced → Low-level settings.Scroll down and activate Capture HAR in the Filtering section.Open the app and perform the necessary actions to reproduce the problem.Turn Capture HAR off.Go back to Advanced.Tap Export logs and system info → Allow (if necessary) → Save. 请将导出的日志记录发送给 AdGuard 客服支持。 注意 Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message. "},{"title":"How to analyze HAR files​","type":1,"pageTitle":"如何收集 HAR 文件","url":"adguard-for-android/solving-problems/har/#how-to-analyze-har-files","content":"以下是我们可以推荐用于分析 HAR 文件的一些资源： HTTP Archive Viewer master 是一个 HAR 分析工具，可视化由 HTTP 跟踪工具创建的 HTTP Archive（HAR）日志文件。Fiddler 是一个 Web 调试代理，可让您捕获、检查、监控计算机和 Internet 之间的所有 HTTP(S) 流量、模拟请求和诊断网络问题。 "},{"title":"How to collect debug logs","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/log/","content":"","keywords":""},{"title":"Collecting debug log​","type":1,"pageTitle":"How to collect debug logs","url":"adguard-for-android/solving-problems/log/#collecting-debug-log","content":"为了收集调试日志并将其转发给我们，您要完成以下操作步骤： Go to Settings → General → Advanced.Tap Logging level and set it to Debug.Reproduce the problem and try to remember the exact time it occurred.Wait a while, then return to Settings and choose the Support tab. Tap Report a bug and complete the required fields. Don't forget to check the Send app logs and system info checkbox. Finally tap Send. If you're interested in following the resolution of your issue and engaging in a dialogue with the developers, we recommend that you take the following steps after completing the first three: Wait a while, then return to the Advanced screen and export logs via Export logs and system info. Then report a bug on GitHub by following these instructions.After creating an issue on GitHub, send the log file to devteam@adguard.com. Include the time of the bug and attach a link to your issue or its number (it appears as #number next to the title). Alternatively, you can upload the log file to Google Drive and send it to devteam@adguard.com. Add the file link to your GitHub issue "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-android/overview/","content":"","keywords":""},{"title":"Protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#protection","content":"This screen combines all features of AdGuard’s protection: Ad blockingTracking protectionAnnoyance blockingDNS protectionFirewallBrowsing SecurityIntegration with AdGuard VPN More on each feature below. "},{"title":"Ad blocking​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#ad-blocking","content":"The feature blocks ads by applying ad-blocking and language-specific filters. To learn about the mechanism of ad blocking, you can read a dedicated article. Basic protection effectively blocks ads on most websites. For more customized ad blocking, you can: Enable appropriate language-specific filters — they contain filtering rules for blocking ads on websites in specific languages Add websites to allowlist — these websites won't be filtered by AdGuard Create user rules — AdGuard will apply them on specified websites. Learn how to create your own user rules  "},{"title":"Tracking protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#tracking-protection","content":"Tracking protection (formerly Stealth Mode) prevents websites from gathering information about you, such as your IP addresses, information about your browser and operating system, screen resolution, and the page you came or were redirected from. It can also block cookies that websites use to mark the browser and save your personal settings, user preferences, or recognize you upon your next visit.  There are three pre-configured protection levels. Here’s what features they have enabled: Standard a. Block trackers. This setting protects against online counters and web analytics tools using AdGuard’s Tracking Protection filter b. Ask websites not to track you. This setting sends the Global Privacy Control and Do Not Track signals to the websites you visit, asking web apps to disable tracking of your activity c. Remove X-Client-Data header. This setting prevents Google Chrome from sending its version and modification info to Google domains (including Double Click and Google Analytics) High a. Block trackers b. Remove tracking parameters from URLs. This setting strips tracking parameters like utm_* and fb_ref from page URLs using the AdGuard URL Tracking filter c. Hide your search queries d. Ask websites not to track you e. Self-destruction of third-party cookies. This setting limits the time to live of third-party cookies to 180 min 警告 This setting deletes all third-party cookies, including the information of your logins through social networks or other third-party services. You may have to periodically re-log in to some websites and face other cookie-related issues. To block only tracking cookies, use the Standard protection level. ::: f. *Remove X-Client-Data header*  Ultimate a. Block trackers b. Remove tracking parameters from URLs c. Hide your search queries d. Ask websites not to track you e. Self-destruction of third-party cookies f. Block WebRTC. This setting blocks WebRTC, a technology that allows direct streaming of data between browsers and apps and can let others know your true IP address, even if you use a proxy or VPN g. Block Push API. This setting prevents websites from sending you notifications, regardless of the activity status of your browser h. Block Location API. This setting prevents browsers from detecting your GPS data i. Hide Referer from third parties. This setting hides the HTTP header that contains the URL of the initial page and changes it into the default or the specified one. You can set your custom referer in the respective field j. Hide your User-Agent. This setting removes identifying information from the User-Agent header that usually includes the name and version of the browser, the operating system, and language settings k. Remove X-Client-Data header You can fine-tune Tracking protection by selecting the Custom protection level. Learn more about other Tracking protection settings "},{"title":"Annoyance blocking​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#annoyance-blocking","content":"This feature is based on AdGuard's annoyance filters and allows you to block popups, online assistant windows, cookie notifications, prompts to download mobile apps, and similar annoyances. Learn more about annoyance filters  "},{"title":"DNS protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#dns-protection","content":"DNS protection allows you to filter DNS requests with the help of a selected DNS server, DNS filters, and user rules: Some DNS servers have blocklists that help block DNS requests to potentially harmful domains In addition to DNS servers, AdGuard can filter DNS requests on its own using a special DNS filter. It contains a large list of ad and tracking domains — requests to them are rerouted to a blackhole server You can also block and unblock domains by creating user rules. You might need to consult our article about DNS filtering rule syntax  DNS server​ In this section, you can select a DNS server to resolve DNS requests, block ads and trackers, and encrypt DNS traffic. Tap a server to read its full description and select a protocol. If you didn't find the desired server, you can add it manually: Click Add DNS server and enter the server address (or addresses) Alternatively, you can select a DNS server from the list of known DNS providers and click Add to AdGuard next to it If you're using a private AdGuard DNS server, you can add it to AdGuard from the dashboard By default, Automatic DNS is selected. It sets a DNS server based on your AdGuard and device settings. If you have integration with AdGuard VPN or another SOCKS5 proxy enabled, it connects to AdGuard DNS Non-filtering or any other server you specify. In all other cases, it connects to the DNS server selected in your device settings. DNS filters​ This section allows you to add custom DNS filters and DNS filtering rules. You can find more filters at filterlists.com. "},{"title":"Firewall​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#firewall","content":"This feature helps manage Internet access for specific apps installed on your device and for the device in general.  Global firewall rules​ This section allows you to control Internet access for the entire device.  These rules apply to all apps on your device unless you've set custom rules for them. Custom firewall rules​ In this section, you can control Internet access for specific apps — block the ones you don’t find trustworthy, or, on the contrary, unblock the ones you want to use despite global firewall rules. Open Custom firewall rules. Under Apps with custom rules, tap Add app. Select the app for which you want to set individual rules. In Available custom rules, select the ones you want to configure and tap the &quot;+&quot; icon. The rules will now appear in Applied custom rules. If you need to block a specific type of connection, toggle the switch to the left. If you want to allow it, leave the switch enabled. Custom rules override global ones: any changes you make in Global firewall rules will not affect this app. To delete a rule or app from Custom rules, swipe it to the left. "},{"title":"Quick actions​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#quick-actions","content":"Quick actions are based on the requests from Recent activity (which can be found in Statistics). This section shows which apps have recently connected to the Internet.  If you see an app that shouldn't be using the Internet at all or an app that you haven't used recently, you can block its access on the fly. "},{"title":"Browsing Security​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#browsing-security","content":"Browsing Security protects you from visiting phishing and malicious websites. It also warns you about potential malware.  If you're about to visit a dangerous website, Browsing Security will show you the following warning:  Please note that AdGuard for Android is not an antivirus program. It neither stops viruses from downloading nor deletes already downloaded ones. To fully protect your device, we recommend using AdGuard in conjunction with an antivirus tool. Browsing Security is safe: AdGuard does not know what websites you visit. It uses hash prefixes instead of URLs to check website security. "},{"title":"Integration with AdGuard VPN​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#integration-with-adguard-vpn","content":"AdGuard for Android creates a local VPN to filter traffic. Thus, other VPN apps cannot be used while AdGuard for Android is running. However, both AdGuard and AdGuard VPN apps have Integrated modes that let you use them together. In this mode, AdGuard VPN acts as an outbound proxy server through which AdGuard routes its traffic. This allows AdGuard to create a VPN interface and block ads and trackers locally, while AdGuard VPN routes all traffic through a remote server. If you disable AdGuard VPN, AdGuard will stop using it as an outbound proxy. If you disable AdGuard, AdGuard VPN will route traffic through its own VPN interface. If you have AdGuard Ad Blocker and install AdGuard VPN, the Ad Blocker app will detect it and enable Integration with AdGuard VPN automatically. The same happens in reverse. Note that if you've enabled integration, you won't be able to manage app exclusions and connect to DNS servers from the AdGuard VPN app. You can specify apps to be routed through your VPN tunnel via Settings → Filtering → Network → Proxy → Apps operating through proxy. To select a DNS server, open AdGuard → DNS protection → DNS server. "},{"title":"App management​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#app-management","content":"This section allows you to manage permissions and filtering settings for all apps installed on your device.  By clicking an app you can manage its settings: Route its traffic through AdGuardBlock ads and trackers in this app (Filter app content)Filter its HTTPS traffic (for non-browser apps, it requires installing AdGuard's CA certificate into the system store, available on rooted devices)Route it through your specified proxy server or AdGuard VPN in the Integration mode  From the context menu, you can also access the app's stats.  "},{"title":"Problem-free and problematic apps​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#problem-free-and-problematic-apps","content":"By default, only problem-free apps are routed through AdGuard and filtered. These are the apps that still work properly when filtering is enabled. Problematic apps, such as Download Manager, radio, system apps with UID 1000 and 1001 (for example, Google Play services) may work incorrectly when routed through AdGuard. That's why you may see the following warning when trying to route or filter all apps:  To ensure proper operation of all apps installed on your device, we strongly recommend that you route only problem-free apps through AdGuard. You can see the full list of apps not recommended for filtering in Settings → General → Advanced → Low-level settings → Protection → Excluded apps. "},{"title":"Statistics​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#statistics","content":"This feature gives you a complete picture of what is happening with the traffic on your device: how many requests are being sent and to which companies, how much data is being uploaded and downloaded, what requests are being blocked, and more.  The stats are categorized into different sections. "},{"title":"Requests​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#requests","content":"This section shows the number of blocked ads, trackers, and the total number of requests for the selected time period: 24 hours, 7 days, 30 days, or all time. You can also filter requests by data type: mobile data, Wi-Fi, or all data combined. Recent activity, formerly known as Filtering log, shows the last 10,000 requests processed by AdGuard. Tap Customize to filter requests by status (regular, blocked, modified, or allowlisted) or origin (first-party or third-party). You can tap a request to view its details and add a blocking or unblocking rule. "},{"title":"Data usage​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#data-usage","content":"This section shows the amount of downloaded, uploaded, and saved traffic for the selected time period and data type. Tap saved, uploaded, or downloaded to view the graph of data usage over time. "},{"title":"Apps​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#apps","content":"This section displays stats for all apps installed on your device. You can sort apps by the number of blocked ads or trackers or by the number of sent requests. Tap View all apps to expand the list of your apps, sorted by the number of ads, trackers, or requests.  If you tap an app, you can see its full stats: the requests it sends and the domains and companies it reaches out to. "},{"title":"Companies​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#companies","content":"This section displays companies that your device reaches out to. What does it mean? AdGuard detects the domains your device sends requests to and determines which companies they belong to. A database of companies can be found on GitHub. "},{"title":"DNS statistics​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#dns-statistics","content":"This section shows data about the requests handled by DNS protection. You can see the total number of requests sent and how many were blocked by AdGuard in figures and graphs. You'll also find statistics on the amount of traffic saved, downloaded, and uploaded. "},{"title":"Battery usage​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#battery-usage","content":"This section displays statistics on the device resources used by AdGuard during the last 24 hours. The data may differ from your device settings. This happens because the system attributes the traffic of filtered apps to AdGuard. Thus, the device shows that AdGuard consumes more resources than it actually does. Read more about battery and traffic consumption issues "},{"title":"Settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#settings","content":""},{"title":"常规​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#常规","content":"This section helps you manage the appearance and behavior of the app: you can set the color theme and language, manage notifications, and more. If you want to help the AdGuard team detect app crashes and research usability, you can enable Auto-report crashes and Send technical and interaction data.  Under App and filter updates, you can configure automatic filter updates and select an app update channel. Choose Release for more stability and Beta or Nightly for early access to new features.  Advanced settings​ Automation allows you to manage AdGuard via tasker apps. Watchdog helps protect AdGuard from being disabled by the system (read more about Android's battery save mode). The value you enter will be the interval in seconds between watchdog checks. Logging level defines what data about the app's operation should be logged. By default, the app collects the data about its events. The Debug level logs more events — enable it if asked by the AdGuard team to help them get a better understanding of the problem. Read more about collecting and sending logs  The Low-level settings section is for expert users. Read more about low-level settings  "},{"title":"Filtering​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#filtering","content":"This section allows you to manage HTTPS filtering settings, filters, and userscripts, and set up a proxy server.  Network​ HTTPS 过滤​ To block ads and trackers on most websites and in most apps, AdGuard needs to filter their HTTPS traffic. Read more about HTTPS filtering Security certificates​ To manage encrypted traffic, AdGuard installs its CA certificate on your device. It's safe: the traffic is filtered locally and AdGuard verifies the security of the connection. On older versions of Android, the certificate is installed automatically. On Android 11 and later, you need to install it manually. Installation instructions The CA certificate in the user store is enough to filter HTTPS traffic in browsers and some apps. However, there are apps that only trust certificates from the system store. To filter HTTPS traffic there, you need to install AdGuard's CA certificate into the system store. Instructions HTTPS-filtered apps​ This section contains the list of apps for which AdGuard filters HTTPS traffic. Please note that the setting can be applied for all apps only if you have CA certificates both in the user store and in the system store. HTTPS-filtered websites​ This setting allows you to manage websites for which AdGuard should filter HTTPS traffic. HTTPS filtering allows AdGuard to filter the content of requests and responses, but we never collect or store this data. However, to increase security, we exclude websites that contain potentially sensitive information from HTTPS filtering. You can also add websites that you consider necessary to exclusions by selecting one of the modes: Exclude specific websites from HTTPS filteringFilter HTTPS traffic only on the websites added to exclusions By default, we also do not filter websites with Extended Validation (EV) certificates, such as financial websites. If needed, you can enable the Filter websites with EV certificates option. Proxy​ You can set up AdGuard to route all your device's traffic through your proxy server. How to set up an outbound proxy In this section, you can also set up a third-party VPN to work with AdGuard, if your VPN provider allows it. Under Apps operating through proxy, you can select apps that will route their traffic through your specified proxy. If you have Integration with AdGuard VPN enabled, this setting plays the role of AdGuard VPN's app exclusions: it allows you to specify apps to be routed through the AdGuard VPN tunnel. Routing mode​ This section allows you to select the traffic filtering method. Local VPN filters traffic through a locally created VPN. This is the most reliable mode. Due to Android restrictions, it is also the only system-wide traffic filtering method available on non-rooted devices. 注意 The Local VPN mode doesn't allow AdGuard to be used simultaneously with other VPNs. To use another VPN with AdGuard, you need to reconfigure it to work in proxy mode and set up an outbound proxy in AdGuard. For AdGuard VPN, this is done automatically with the help of the Integrated mode. Automatic proxy is an alternative traffic routing method that does not require the use of a VPN. One significant advantage is that it can be run in parallel with a VPN. This mode requires root access. Manual proxy involves setting up a proxy server on a specific port, which can then be configured in Wi-Fi settings. This mode requires root access for Android 10 and above. Filters​ AdGuard blocks ads, trackers, and annoyances by applying rules from its filters. Most features from the Protection section are powered by AdGuard filters. If you enable Basic protection, it will automatically turn on the AdGuard Base filter and AdGuard Mobile Ads filter. And vice versa: if you turn off both filters, Basic protection will also be disabled.  Filters enabled by default are enough for normal AdGuard operation. However, if you want to customize ad blocking, you can use other AdGuard or third-party filters. To do this, select a category and enable the filters you'd like. To add a custom filter, tap Custom filters → Add custom filter and enter its URL or file path. 注意 If you activate too many filters, some websites may work incorrectly. Read more about filters 用户脚本​ Userscripts are mini-programs written in JavaScript that extend the functionality of one or more websites. To install a userscripts, you need a special userscript manager. AdGuard has such a functionality and allows you to add userscripts by URL or from file.  AdGuard Extra​ AdGuard Extra is a custom userscript that blocks complex ads and mechanisms that reinject ads to websites. "},{"title":"许可证​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#许可证","content":"In this section, you can find information about your license and manage it: Buy an AdGuard license to activate the full version's featuresLog in to your AdGuard account or enter the license key to activate your licenseSign up to activate your 7-day trial period if you haven't used it yetRefresh the license status if you have recently extended its validityOpen the AdGuard account to manage your license thereReset your license – for example, if you've reached device limit for this license and want to apply another one  "},{"title":"支持​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#支持","content":"Use this section if you have any questions or suggestions regarding AdGuard for Android. We recommend consulting FAQ or this knowledge base before contacting support.  If you notice a missed ad, please report it via Report incorrect blocking. For unusual app behavior, select Report a bug. If possible, describe your problem in detail and add app logs. How to describe an issue For your suggestions, use Request a feature. 注意 GitHub is an alternative way to report bugs and suggest new features. Instructions and repository links "},{"title":"Free vs full version​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#free-vs-full-version","content":" AdGuard for Android has a free and a paid version. Paid features extend AdGuard's capabilities: Ad blocking in apps allows you to block ads in non-browser apps. You can specify apps for filtering in App management 注意 AdGuard uses its own ad-free media player to block ads in YouTube videos. To open the media player, open the YouTube app and share a video with AdGuard. This feature is free. Tracking protection increases your privacy by blocking tracking requests, online counters, UTM tags, analytics systems, and more. Back to Tracking protection Browsing Security warns you if you're about to visit a potentially dangerous website. Back to Browsing Security Custom filters and user rules allow you to add your own filtering rules and third-party filters to fine-tune ad blocking. Back to filters Userscripts allow you to extend the functionality of the browser and use AdGuard Extra that prevents ad reinjection. Back to userscripts You can get access to these features by purchasing a license. How to activate the license "},{"title":"Rooted vs non-rooted devices​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#rooted-vs-non-rooted-devices","content":"Due to security measures of the Android OS, some AdGuard features are only available on rooted devices. Here's the list of them: HTTPS filtering in most apps requires installing a CA certificate into the system store, as most apps do not trust certificates in the user store. Installing a certificate into the system store is only possible on rooted devicesThe Automatic proxy routing mode requires root access due to Android's limitations on system-wide traffic filteringThe Manual proxy routing mode requires root access on Android 10 and above as it's no longer possible to determine the name of the app associated with a connection filtered by AdGuard "},{"title":"Assistant​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#assistant","content":"Assistant is a handy tool to quickly change app or website settings and view statistics without launching the AdGuard app. "},{"title":"How to access Assistant​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#how-to-access-assistant","content":"On your Android device, swipe down from the top of the screen to open the notification shade. Find and expand the AdGuard notification. Tap Assistant. "},{"title":"How to use Assistant​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#how-to-use-assistant","content":"When you open Assistant, you will see two tabs: Apps and Websites. Each of them contains a list of the recently used apps and websites respectively.  "},{"title":"Apps tab​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#apps-tab","content":"After you select an app (let's take Chrome as an example), you'll get a few options of what you can do.  Recent activity​ You'll be taken to the AdGuard app, where you'll see detailed info on the last 10K requests made by Chrome.  App statistics​ You'll be taken to the AdGuard app, where you'll see detailed statistics about Chrome: Number of ads and trackers blocked in ChromeData saved by blocking Chrome's ad or tracking requestsCompanies that Chrome sends requests to App management​ You'll be taken to the AdGuard app screen where you can disable AdGuard protection for the app. Firewall settings​ You'll be taken to the AdGuard screen where you can change Firewall settings for the app, meaning you can manage the app's Internet access. "},{"title":"Websites tab​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#websites-tab","content":" Select a website (let's take google.com as an example) and you'll see few options of what you can do.  Add to allowlist​ Tapping this option will instantly add google.com to allowlist, and AdGuard will no longer filter it (meaning ads and trackers won't be blocked for the website). Recent activity​ You'll be taken to the AdGuard app, where you'll see detailed info on the last 10K requests to google.com.  Website statistics​ You'll be taken to the AdGuard app, where you'll see detailed statistics about google.com: Number of blocked ad and tracking requests to google.comData saved by blocking ad and tracking requests to google.comApps that send requests to google.comInformation about google.com's subdomains "},{"title":"How to get system logs","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/logcat/","content":"","keywords":""},{"title":"Capture a bug report from a device​","type":1,"pageTitle":"How to get system logs","url":"adguard-for-android/solving-problems/logcat/#capture-a-bug-report-from-a-device","content":"To get a bug report directly from your device, do the following: Be sure you have Developer options enabled. In Developer options, tap Take bug report. Select the type of bug report you want and tap Report. 注意 After a moment, you will see a notification that the bug report is ready (see Figure 2). ::: ![Bug report *mobile](https://cdn.adtidy.org/public/Adguard/kb/newscreenshots/En/Android3.1/bugreporteen.png)  To share the bug report, tap the notification. Send this log to our support team. 注意 Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message to support. ::: "},{"title":"Capture a bug report via Logcat​","type":1,"pageTitle":"How to get system logs","url":"adguard-for-android/solving-problems/logcat/#capture-a-bug-report-via-logcat","content":"On devices with Android 7 and below, it is not possible to send a bug report automatically. Then you can capture it manually via Logcat — a standard Android command-line tool that dumps a log of system messages. Follow this instruction: Part #1: prepare the device Switch device to the developer mode. To do this: go to Settings → About → tap Build Number 7 times. Go to Developer Options. Enable USB debugging. Increase Logger buffer sizes to 4 MB per log buffer. 4 MB should be enough for storing the logs we need until you're able to do the second part (getting the log from the device); Part #2: reproduce the problem It is important to reproduce the problem after you're done with the first part. Reproduce the problem. Remember/write down the date and time of reproduction and include it in the email to our support later. Part #3: get the log Connect your device to a PC with a USB cable. Download Android SDK Platform Tools. Choose the appropriate download link for your OS from the Downloads section. Once you tap the link, a ZIP file will be downloaded. You can extract the ADB (Android Debug Bridge) files from the ZIP file and store them wherever you want. Test whether ADB is working properly: connect your Android device to your computer using a USB cable, open the Command Prompt, PowerShell or Terminal and run the following command: adb devices An example of a successful result: Then run the following command (insert the relevant path): adb logcat -v threadtime -d &gt; C:\\Program Files\\platform-tools\\logs.txt Email the created txt file as well as the time the problem was reproduced (from part #2) to our support team at support@adguard.com. "},{"title":"Alternative way for ROOT users​","type":1,"pageTitle":"How to get system logs","url":"adguard-for-android/solving-problems/logcat/#alternative-way-for-root-users","content":"Download and run Logcat. Choose Record in the menu. Choose a name for a log file or just press OK. Now you can press Home button, CatLog will continue recording the log in background. Reproduce the issue. Open CatLog and press Stop record in the menu. Send this log to our support team. 注意 Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message to support. "},{"title":"How to protect AdGuard from being disabled by the system","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/background-work/","content":"","keywords":""},{"title":"Asus​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#asus","content":"Information on Asus devices is still far from being exhaustive so there may be more issues than listed here. We're going to update this part of the article when we know more. The main source of potential problems with background work on Asus devices is associated with the optimization app called Power Master. It is pre-installed and has pretty aggressive default settings, e.g. to block apps from starting and to kill background tasks when your screen turns off. To make sure apps background processing works, set up the following: Go to Mobile Manager → PowerMaster → Settings (or Battery-saving options) → Uncheck Clean up in suspend Go to Mobile Manager → PowerMaster → Settings (or Battery-saving options) → Uncheck Auto-deny apps from auto starting Alternatively, instead of unchecking Auto-deny apps from auto starting entirely, you can go to Settings → Battery-saving options → Auto-start manager → AdGuard and uncheck it. "},{"title":"Xiaomi​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#xiaomi","content":"Xiaomi (and especially MIUI) devices are among the most troublesome ones when it comes to background work. They are known to limit background processes and have non-standard permissions with a lack of proper documentation to top it off. Sometimes apps just don't work right on Xiaomi phones and there's little that can be done about that. Below are some actions you might attempt to perform if you run into any trouble regarding AdGuard's background work on various Xiaomi devices. "},{"title":"MIUI 12.0.8+​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-1208","content":"To let your AdGuard app run successfully in the background, do the following: In Settings → Apps → Manage apps → scroll down to locate AdGuard, set Autostart to &quot;On&quot;.  Scroll down to Battery saver, tap it, and set to &quot;No restrictions&quot;.  In Other Permissions, set all possible permissions to &quot;On&quot; Run the Security app. Tap on the Gear icon at the top-right corner of the screen.  Tap Boost speed in Feature Settings.  Tap Lock apps.  In the Lock apps screen, set the toggle switch for the AdGuard app to On.  That’s all! You’ve successfully pinned the AdGuard app. "},{"title":"MIUI 12​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-12","content":"Go to Settings → Apps → Manage apps → AdGuard.  Set Autostart to &quot;On&quot;Set all possible permissions in Other Permissions to &quot;On&quot;Set Battery saver to No restrictions  Now launch the active apps manager by swiping up from the bottom of the screen and look for the AdGuard app.  Tap and hold it until a special menu pops up. Select a lock icon.  The lock icon should appear above the app window.  "},{"title":"MIUI 10-11​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-10-11","content":"To let your app run successfully in the background, configure its settings as follows: Set Autostart to &quot;On&quot;  Settings → Battery &amp; performance → switch-off Battery saver function  Then open App battery saver settings → AdGuard → No restrictions  "},{"title":"All models​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#all-models","content":"The following steps should be performed on any Xiaomi device that keeps killing the AdGuard app: Power management​ Please enable: Settings → Advanced Settings → Battery manager → set Power plan to PerformanceDevice Settings → Advanced Settings → Battery Manager → Protected apps — AdGuard needs to be ProtectedDevice Settings → Apps → AdGuard → Battery → Power-intensive prompt and Keep running after screen offSettings → Additional Settings → Battery &amp; Performance → Manage apps’ battery usage and here: Switch Power Saving Modes to &quot;Off&quot;Choose the following options: Saving Power in The Background → Choose apps → AdGuard → Background Settings → No restrictions App battery saver​ Set Security → Battery → App Battery Saver → AdGuard to No restriction App pinning​ To set up AdGuard's background work for Xiaomi devices you should pay attention to Battery and Permissions. Tap the Recent tasks button and swipe AdGuard down to make options visible (as shown on the screenshot): Tap on the lock icon. This will stop Xiaomi from closing AdGuard automatically. It should look like this: Go to Battery Select the battery saver app Find and select AdGuard Set up the following Background settings: Go to Permissions Select Autostart Make sure that autostart function is enabled for AdGuard: "},{"title":"Samsung​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#samsung","content":"On many Samsung devices, any app that is unused for 3 days will not be able to start from background. You should turn off Adaptive battery and Put apps to sleep options wherever possible to prevent that. Note that after an app or OS update, these settings often revert to their default values and will need to be turned off again. "},{"title":"Android 11+​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-11","content":"On Android 11, Samsung will prevent apps (including AdGuard) from working in background by default unless you exclude them from battery optimizations. To make sure AdGuard will not get killed in the background: Lock AdGuard in Recent Open Recent apps.Find AdGuard.Long-press the icon of the AdGuard app. To keep AdGuard working properly: Go to Settings → Apps → AdGuard → Battery → Optimize battery usage In the drop-down menu, select All. Then find AdGuard on the list and set the state for it to Don’t optimize (on some models, there may be a switch that you need to toggle off). On some devices, the relevant setting may be named differently and be located in other places. Among the possible paths is: Settings → Apps → (⁝) menu → Special Access → Optimize battery usage → Find AdGuard on the list and uncheck it Disable automatic optimization. To do so: Open Battery → (⁝) menu → Choose Automation → Toggle off all of the settings there Again, the exact path may differ, for example on some devices you should go to: Phone Settings → Device care → Tap the (⁝) 3-dot menu → Advanced → Disable Auto optimization and Optimize settings If your phone has it, disable Adaptive battery: Open phone Settings → Battery → More battery settings → Toggle off Adaptive battery Disable Sleeping apps (the exact name of this setting and the path to it may vary depending on the device): Open phone Settings → Battery → Background usage limits → Disable Put unused apps to sleep "},{"title":"Android 9 & 10​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-9--10","content":"Go to Phone settings → Device care → Tap on the Battery item → (⁝) 3-dot menu → Settings and uncheck Put unused apps to sleep and Auto-disable unused apps. Check that Phone settings → Apps → Sleep as Android → Battery → Background restriction is set to App can use battery in background for AdGuard. Remove AdGuard from Sleeping apps. To do that: Go to Phone settings → Device care Tap Battery Tap the 3-dot menu → Settings Tap Sleeping apps Wake up AdGuard using the trashcan icon "},{"title":"Old Samsung devices​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#old-samsung-devices","content":"For early Samsung devices, there is no huge need for setting up the background operation, but if in your case the AdGuard app is getting closed or disappears from the recent tasks after a while, do the following: Tap the Recent tasks button, tap the Additional settings icon. It should look like this: Tap Lock Apps: Tap on the lock icon "},{"title":"Huawei​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei","content":"Huawei and their Android customization EMUI belongs to the most troublesome on the market with respect to non-standard background process limitations. On default settings, virtually all apps that work in background will face problems and ultimately break. "},{"title":"App Launch on some EMUI 8, 9 and 10 devices (Huawei P20, Huawei P20 Lite, Huawei Mate 10…)​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#app-launch-on-some-emui-8-9-and-10-devices-huawei-p20-huawei-p20-lite-huawei-mate-10","content":"This feature may or may not be available for all devices or may be labeled differently. Go to phone Settings → Battery → App launch Turn off Manage all automatically Set AdGuard to Manage manually and enable all toggles. Disable Startup manager that prevents apps from running automatically after the phone starts up. Go to Settings → All → Startup manager → Toggle AdGuard off Also for reliable background processes you may need to uninstall PowerGenie as detailed below. "},{"title":"EMUI 9+ devices and PowerGenie​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#emui-9-devices-and-powergenie","content":"注意 On phones with EMUI 9+ (Android P+) there is a task killer app called PowerGenie which forces to quit all apps not whitelisted by Huawei and does not give users any configuration options. See below how to uninstall it. Huawei is extremely inventive in breaking apps on their devices. In addition to all the non-standard power management measures described below, they introduced a task killer app built right into EMUI 9 on Android Pie. It is called PowerGenie and it kills all apps that are not on its whitelist. You cannot add custom apps on their pre-defined whitelist. This means there is no other way to achieve proper app functionality on Huawei than uninstalling PowerGenie. Unfortunately, this is a system app that can only be fully uninstalled using ADB (Android Debug Bridge). Source XDA forum. You need to: It is not confirmed, but it might be possible to just disable PowerGenie in Phone settings → Apps. If this setting is present in your device's settings, you may skip the following steps. However, it would need to be re-applied every time you reboot your device. If there is no such setting, follow this instruction: Install ADB on your computer; Connect your phone with a data cable; Enable Developer options; Enable USB debugging within Developer options on your phone; Run the following commands on your computer: adb shell pm uninstall --user 0 com.huawei.powergenie adb shell pm uninstall -k --user 0 com.huawei.android.hwaps If AdGuard keeps getting killed, also try running adb shell pm stopservice hwPfwService "},{"title":"EMUI 6+ devices (and some EMUI 5 devices)​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#emui-6-devices-and-some-emui-5-devices","content":"Phone settings → Advanced Settings → Battery manager → Power plan set to Performance;Phone Settings → Advanced Settings → Battery Manager → Protected apps — set AdGuard as Protected;Phone Settings → Apps → Your app → Battery → Power-intensive prompt [uncheck] and Keep running after screen off [check];Phone settings → Apps → Advanced (At the bottom) → Ignore optimizations → Press Allowed → All apps → Find AdGuard on the list and set to Allow. Huawei P9 Plus​ Open device settings → Apps → Settings → Special access → choose Ignore battery optimization → select Allow for AdGuard. "},{"title":"Huawei P20, Huawei Honor 9 Lite and Huawei Mate 9 Pro​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei-p20-huawei-honor-9-lite-and-huawei-mate-9-pro","content":"Open device settings → Battery → App launch → set AdGuard to Manage manually and make sure everything is turned on. "},{"title":"Huawei P20, Huawei P20 Lite, Huawei Mate 10​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei-p20-huawei-p20-lite-huawei-mate-10","content":"Phone settings → Battery → App launch → set AdGuard to Manage manually and make sure everything is turned on. Also for reliable background processes you may need to uninstall PowerGenie as described above. "},{"title":"Early Huawei​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#early-huawei","content":"Old Huawei devices are the easiest to set up, it is enough to perform two simple steps to lock AdGuard in the background so it won't be terminated by battery saving or background killer process. Tap the Recent tasks button: Tap on the lock icon: Besides, to set up the background work of AdGuard more effectively, you should open device settings and do the following: Go to Settings → open Battery Manager → set Power plan to Performance;Then choose Protected apps in the Battery Manager and check if AdGuard is Protected;Go to Apps in the main settings and click AdGuard there → choose Battery → enable Power-intensive prompt and Keep running after screen is off;Then in the Apps section open Settings (at the bottom) → Special access → choose Ignore battery optimization → press Allowed → All apps → find AdGuard on the list and set it to Deny. "},{"title":"Meizu​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#meizu","content":"Meizu has almost the same approach to the background process limitations as Huawei and Xiaomi. So you can avoid disabling the background work of AdGuard and any other app by adjusting the following settings: Go to Advanced Settings → open Battery Manager → set Power plan to Performance;Then choose Protected apps in the Battery Manager and check if AdGuard is Protected;Go to Apps section and click AdGuard there → choose Battery → enable Power-intensive prompt and Keep running after screen is off. "},{"title":"Nokia​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia","content":"Nokia devices running Android 9+ have The Evenwell Power saver disabled, which was the main culprit for killing bacground processes. If AdGuard still gets killed on your Nokia phone, check out the legacy instruction. "},{"title":"Nokia 1 (Android Go)​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia-1-android-go","content":"Install ADB on your computer; Connect your phone with a data cable; Enable Developer options; Enable USB debugging within Developer options on your phone; Uninstall the com.evenwell.emm package via the following adb commands: adb shell pm uninstall --user 0 com.evenwell.emm "},{"title":"Nokia 3.1 and 5.1​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia-31-and-51","content":"On these devices there is a task killer called DuraSpeed that terminates all background apps. It can't be uninstalled or disabled by regular means. These actions require ADB, and even then, when disabled, DuraSpeed will re-enable itself on reboot. You need a tasker app like MacroDroid for automatic DuraSpeed's disabling. Install ADB on your computer; Connect your phone with a data cable; Enable Developer options; Enable USB debugging within Developer options on your phone; Grant MacroDroid (or your choice of automation app) the ability to write to the global settings store by entering this command: adb shell pm grant com.arlosoft.macrodroid android.permission.WRITE_SECURE_SETTINGS Create a task triggered at Device Boot that performs the following: System Setting: type Global, name setting.duraspeed.enabled, value -1System Setting: type System, name setting.duraspeed.enabled, value -1System Setting: type Global, name setting.duraspeed.enabled, value 0System Setting: type System, name setting.duraspeed.enabled, value 0 注意 You need both Global and System type settings. The screenshot shows only Global as an example. ::: "},{"title":"Other Nokia models​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#other-nokia-models","content":"Go to phone Settings → Apps → See all apps. Tap on the right top corner menu → Show system. Find Power saver app on the list, select it and tap Force close. It will remain stopped for a while but will restart at some point. From now on, AdGuard should work normally and use the standard Android battery optimizations until Power Saver restarts. An alternative, more permanent solution for more tech-savvy users: Install ADB on your computer; Connect your phone with a data cable; Enable Developer options; Enable USB debugging within Developer options on your phone; Uninstall the com.evenwell.powersaving.g3 package via the following adb commands: adb shell pm uninstall --user 0 com.evenwell.powersaving.g3 "},{"title":"Oppo​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#oppo","content":"Sometimes background services are being killed (including accessibility services, which then need re-enabling) when you turn the screen off. So far, a workaround for this is: Go to Security Centre → tap Privacy Permissions → Startup manager and allow AdGuard app to run in background. Other solutions: Pin AdGuard to the recent apps screenEnable AdGuard in the app list inside the security app’s &quot;startup manager&quot; and &quot;floating app list&quot; (com.coloros.safecenter / com.coloros.safecenter.permission.Permission)Turn off battery optimizations "},{"title":"OnePlus​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#oneplus","content":"Devices with OxygenOS on board are the most problematic, with its OS-specific cache cleaning and free RAM, including OS optimization. In addition, OxygenOS can interrupt the AdGuard's work if you do not use it for a while. To avoid these unwanted consequences, follow these steps. "},{"title":"Locking the app​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#locking-the-app","content":"Go to Settings Battery → Battery optimization Find AdGuard Tap on it and select Don't optimize option Tap Done to save Open recent apps menu (as showed on this screenshot): Lock AdGuard app: 警告 On some OnePlus phones there is also a thing called App Auto-Launch and Deep Optimization which essentially prevents apps from working in the background. Please disable it for AdGuard. "},{"title":"Battery optimization​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#battery-optimization","content":"Open device settings → Battery → Battery optimization → switch to the All apps list (top menu) → choose AdGuard → activate Don’t optimize Open device settings → Battery → Battery Optimization → (⁝) three-dot menu → Advanced Optimization → Disable Deep Optimization "},{"title":"App Auto-Launch​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#app-auto-launch","content":"App Auto-Launch (on some OnePlus phones) essentially prevents apps from working in the background. Please disable it for AdGuard. "},{"title":"Enhanced / Advanced optimization​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#enhanced--advanced-optimization","content":"For OnePlus 6 and above: Open System settings → Battery → Battery optimization → (⁝) three-dot menu → Advanced optimizationDisable Deep optimization / Adaptive BatteryDisble Sleep standby optimization. OnePlus tries to learn when you are usually asleep, and in those times it will then disable the phone’s network connections. This setting will prevent push notifications from being delivered. For OnePlus below 6: Turn off System settings → Battery → Battery optimization → (⁝) three-dot menu → Enhanced optimization. "},{"title":"Recent apps clearing behaviour​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#recent-apps-clearing-behaviour","content":"Normally when you swipe an app away, it won’t close. On OnePlus this may however work in a different way. Recent app clear behaviour manager might be set up in a way that swiping the app to close will kill it. To return it to the &quot;normal&quot; mode: Go to Settings → Advanced → Recent app management → Switch to Normal clear "},{"title":"Sony​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#sony","content":"Sony was the first mobile OS developer to introduce non-standard background process optimization. It is called Stamina mode and it instantly breaks all background processes if enabled. To solve this: Go to Settings → Battery → Disable STAMINA mode  On Android 11+, on the same screen with STAMINA mode, there is a setting called Adaptive battery, you should disable it too. You also need to be set AdGuard as Excepted from Power-saving feature: System settings ​→ Apps &amp; Notifications ​→ Advanced ​→ Special app access ​→ Power saving feature → Switch AdGuard to Excepted "},{"title":"Wiko​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#wiko","content":"Wiko devices are problematic in terms of non-standard background process optimizations. To let AdGuard work in background, do the following: Go to Phone Assistant → Battery → turn off Eco ModeGo back and go to Manual modeTap on the Gear icon on top right → Background apps whitelist → Select AdGuard "},{"title":"Android stock devices Pixel/Nexus/Essential​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-stock-devices-pixelnexusessential","content":"Android stock OS normally does not conflict with apps working in the background, but if you are facing any issues you will need to switch on the Always-on VPN mode. Go to Settings → Network and Internet Tap VPN and choose AdGuard Set up Always-on VPN mode "},{"title":"Low-level settings guide","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"How to reach Low-level settings​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#how-to-reach-low-level-settings","content":"警告 Changing Low-level settings can cause problems with the performance of AdGuard, may break the Internet connection or compromise your security and privacy. You should only open this section if you are sure of what you are doing or our support-team has asked you about it. To go to Low-level settings, open the AdGuard app and tap the gear icon in the lower right corner of the screen. Then choose General → Advanced → Low-level settings. "},{"title":"Low-level settings​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#low-level-settings","content":"For AdGuard v4.0 for Android we've completely redesigned the low-level settings: divided them into thematic blocks, made them clearer, added validation of entered values and other safety valves, got rid of some settings, and added others. "},{"title":"DNS protection​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#dns-protection","content":"Fallback upstreams​ Here you can specify the fallback DNS resolver(s) to be used if the configured server is unavailable. There are three options: Automatic DNS, None, and Custom DNS. If no fallback server is specified, the Automatic DNS — the system DNS or AdGuard DNS — will be used. None means no fallback at all. Selecting Custom DNS allows you to list IPv4 and IPv6 server addresses to use as upstreams. Fallback domains​ Here you can list domains that will be forwarded directly to fallback upstreams if they exist. Detect search domains​ If this setting is enabled, AdGuard will detect search domains and automatically forward them to fallback upstreams. Bootstrap upstreams​ Bootstrap DNS for DoH, DoT, and DoQ servers. The Automatic DNS - the system DNS or AdGuard DNS - is used by default. By selecting Custom DNS, you can list IPv4 and IPv6 server addresses to use as bootstrap upstreams. adblock 规则的拦截模式​ Here you can specify the response type for domains blocked by DNS rules based on adblock rule syntax (for instance, ||example.org^). Respond with REFUSEDRespond with NXDOMAINRespond with Custom IP address (IPv4 and IPv6 addresses can be specified here) host 规则的拦截模式​ Here you can specify the response type for domains blocked by DNS rules based on hosts rule syntax (for instance, &lt;ip&gt; &lt;domain&gt; 0.0.0.0 example.com). Respond with REFUSEDRespond with NXDOMAINRespond with Custom IP address (IPv4 and IPv6 addresses can be specified here) DNS request timeout​ 用户可以指定 AdGuard 在使用后备服务器之前，等待选定 DNS 服务器响应的时间（以毫秒为单位）。 如果数值无效或为空，要使用的数值为 5000。 Blocked response TTL​ Here you can specify the TTL (time to live) value that will be returned in response to a blocked request. DNS cache size​ Here you can specify the maximum number of cached responses. Default value is 1000. ECH blocking​ If enabled, AdGuard strips Encrypted Client Hello parameters from DNS responses. Ignore unavailable outbound proxy​ If this setting is enabled, AdGuard will send DNS requests directly when the outbound proxy is unavailable. Try HTTP/3 for DNS-over-HTTPS upstreams​ If this setting is enabled, AdGuard will use HTTP/3 to speed up DNS query resolution for DoH upstreams. Otherwise, AdGuard will revert to its default behavior and use HTTP/2 to send all DNS requests for DNS-over-HTTPS. SERVFAIL failure response​ If this setting is enabled and all upstreams, including fallback ones, fail to respond, AdGuard will send a SERVFAIL response to the client. Use fallback for non-fallback domains​ If this setting is enabled, AdGuard will use fallback upstreams for all domains. Otherwise, fallback upstreams will only be used for fallback domains and search domains if the corresponding option is enabled. Validate DNS upstreams​ If this setting is enabled, AdGuard will test DNS upstreams before adding or updating custom DNS servers. "},{"title":"Filtering​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#filtering","content":"Capture HAR​ If this setting is enabled, AdGuard will capture HAR files. It will create a directory named &quot;har&quot; inside the app cache directory and add there information about all filtered HTTP requests in HAR 1.2 format that can be analyzed with the Fiddler program. Use it only for debugging purposes! "},{"title":"HTTPS 过滤​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#https-过滤","content":"Encrypted Client Hello​ 每一个加密的互联网连接都有一个未加密的部分， 就是发送的第一个数据包，包含用户要连接的服务器名称。 Encrypted ClientHello（ECH）的技术能够解决该问题，成功加密最后一位未加密的信息。 To benefit from it, enable the Encrypted Client Hello option. It uses a local DNS proxy to look for the ECH configuration for the domain. 如果找到，将对 ClientHello 数据包进行加密。 OCSP checking​ If this setting is enabled, AdGuard will perform asynchronous OCSP checks to get the revocation status of a website's SSL certificate. If an OCSP check is completed within the required timeout, AdGuard will immediately block the connection if the certificate is revoked or establish the connection if the certificate is valid. If the verification takes too long, AdGuard will allow the connection while continuing to check the certificate status in the background. 如果证书被撤销，当前和将来该域名的连接将被阻止。 Redirect DNS-over-HTTPS requests​ If this setting is enabled, AdGuard will redirect DNS-over-HTTPS requests to the local DNS proxy in addition to plain DNS requests. We recommend disabling fallback upstreams and using only encrypted DNS servers to maintain privacy. Filter HTTP/3​ If this setting is enabled, AdGuard will filter requests sent over HTTP/3 in addition to other request types. "},{"title":"Outbound proxy​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#outbound-proxy","content":"Show the Filter DNS requests setting​ If this is enabled, the Filter DNS requests switch will be displayed in the Add proxy server dialog. Use it to enable filtering of DNS requests passing through the specified proxy. "},{"title":"Protection​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#protection","content":"Port ranges​ Here you can specify port ranges that should be filtered. Log removed HTML events​ If this setting is enabled, AdGuard will record blocked HTML elements in Recent activity. Scriplet debugging​ If this setting is enabled, debugging in scriptlets will be activated, and the browser log will record when scriptlet rules are applied. Excluded apps​ Here you can list package names and UIDs that you want to exclude from AdGuard protection. QUIC bypass packages​ Here you can specify package names for which AdGuard should bypass QUIC traffic. Reconfigure Automatic proxy when network changes​ If this setting is enabled, the AdGuard protection will restart to reconfigure the automatic proxy settings when your device connects to another network. This setting only applies if Routing mode is set to Automatic proxy. IPv6 filtering​ If this setting is enabled, AdGuard will filter IPv6 networks if an IPv6 network interface is available. IPv4 ranges excluded from filtering​ Filtering for the IPv4 ranges listed in this section is disabled. IPv6 ranges excluded from filtering​ Filtering for the IPv6 ranges listed in this section is disabled. TCP keepalive for outgoing sockets​ If this setting is enabled, AdGuard will send a keepalive probe after the specified time period to ensure that the TCP connection is alive. Here, you can specify the idle time before starting keepalive probes and the time between keepalive probes for an unresponsive peer. After a system-defined number of unsuccessful attempts to get a response from the server, the system automatically closes the TCP connection. "},{"title":"Local VPN settings​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#local-vpn-settings","content":"Recovery delay for revoked VPN​ Here you can set the time of a delay in milliseconds before AdGuard tries to restore VPN protection after it has been revoked by a third-party VPN app or by deleting the VPN profile. The default value is 5000 ms. Reschedule delay for revoked VPN recovery​ Here you can set the time of a delay in milliseconds before AdGuard reschedules the restoration of VPN protection after it has been revoked by a third-party VPN app or by deleting the VPN profile. The default value is 5000 ms. MTU​ Here you can set the maximum transmission unit (MTU) of the VPN interface. The recommended range is 1500-1900 bytes. Restore VPN automatically​ If this setting is enabled, AdGuard’s local VPN will be automatically re-enabled after being turned off due to network absence, tethering, or low-power mode. Packet capture (PCAP)​ If this setting is enabled, AdGuard will create a file timestamp.pcap (for instance, 1682599851461.pcap) in the app cache directory. This file lists all network packets transferred through the VPN and can be analyzed with the Wireshark program. Include Wi-Fi gateway in VPN routes​ If this setting is enabled, the gateway IP addresses will be added to to VPN routes when on Wi-Fi. IPv4 address​ Here you can enter the IP address that will be used to create a TUN interface. By default, it is 172.18.11.218. Forcibly route LAN IPv4​ If this setting is enabled, AdGuard will filter all LAN connections, including local IPv4 network traffic, even if the Route all LAN IPv4 connections option is enabled. Route all LAN IPv4 connections​ If this setting is enabled, AdGuard will exclude LAN connections from filtering for simple networks. This may not work for complex networks. This setting only applies if Forcibly route LAN IPv4 is disabled. IPv6 address​ Here you can enter the IP address that will be used to create a TUN interface. By default, it is 2001:db8:ad:0:ff::. "},{"title":"其它​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#其它","content":"Detect Samsung Pay​ If this setting is enabled, AdGuard protection will be paused while Samsung Pay is in use. Korean users require this feature as they experience issues with Samsung Pay when AdGuard is enabled. "},{"title":"Problems caused by multiple user profiles","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/multiple-user-profiles/","content":"","keywords":""},{"title":"Problems caused by multiple user profiles​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#problems-caused-by-multiple-user-profiles","content":"On Android 9 and later, if AdGuard is installed for more than one user profile on your device, you may encounter problems when uninstalling the app. When you uninstall AdGuard from one user profile, the app will still appear on the app list, but you won't be able to uninstall or reinstall it. This happens because AdGuard is installed for a different user profile on the device. If you try to reinstall AdGuard after an unsuccessful removal attempt, you will see the error message &quot;You can't install the app on your device&quot;. To solve this problem, you need to uninstall the application for all users: go to Settings → All apps → AdGuard. Tap the three-dot menu in the top right corner and select Uninstall for all users.  "},{"title":"受限模式导致的一些问题​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#受限模式导致的一些问题","content":"拥有安卓7+操作系统的手机、笔记本或电视的用户可能会遇到使用受限模式（Restricted Mode）的配置文件导致的问题。 如您有遇到这种情况，AdGuard 与其他使用 VPN 的应用程序一样进行选择性过滤 VPN 流量时，受其限制。 因此，AdGuard 无法使用本地 VPN 模式开启保护。 除此之外，如您在设备上使用双开应用/应用分身帐户也会导致相似的问题。 以下是您可以规避该问题的操作。 "},{"title":"解决方法​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#解决方法","content":"解决该问题有三种方法： "},{"title":"方案 1：允许 AdGuard 使用 ADB​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#方案-1允许-adguard-使用-adb","content":"注意 This approach is available starting from AdGuard v3.5 nightly 6. 如您仍在使用旧版本，您可以在此处下载 nightly 版本。 Activate the developer mode and enable USB debugging: Open the Settings app phone;Go to System section (last item in the settings menu). In this section, find the sub-item About phone;Tap the Build number line 7 times. After that, you will receive a notification that You are now a developer (If necessary, enter an unlock code for the device);Open System Settings → Developer Options → Scroll down and enable USB debugging → Confirm debugging is enabled in the window Allow USB debugging after reading the warning carefully. 注意 如您遇到任何困难或其他问题，在此处可查看完整说明。 ::: Install and configure adb; On the Windows platform, Samsung owners may need to install this utility. 使用 USB 电缆将您的设备连接至您已安装 ADB 的电脑或笔记本等设备上; 在您的 PC 上打开命令行： 如您使用的是 Windows，打开 Cmd.exe；如您使用的是 macOS，打开 Terminal ； 输入 adb shell pm grant com.adguard.android android.permission.INTERACT_ACROSS_USERS 的命令并点击回车键。 "},{"title":"方案 2：移除受限用户帐户​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#方案-2移除受限用户帐户","content":"在此可以查看如何在安卓设备上管理用户帐户的相关信息。 注意 In some cases restricted user accounts are created implicitly and cannot be removed. 例如，您在安卓或 LG 设备上使用应用分身或双开应用功能时，将会自动创建受限用户帐户。 您可以阅读以下内容以查看，在上面描述的情况下该如何解决问题。 "},{"title":"方案 3：使用 AdGuard 的本地 HTTP 代理模式（需要 root 权限）​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#方案-3使用-adguard-的本地-http-代理模式需要-root-权限","content":"To enable this mode, open AdGuard Settings → Network → Filtering method → Local HTTP proxy "},{"title":"LG 和三星设备​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#lg-和三星设备","content":"LG 或三星手机的用户也可能会遇到相同的问题。 这可能是由双开应用/双 Messenger 账户功能（其本质是隐式创建了受限账户）引起的。 为了解决该问题，您需要禁用该功能。 "},{"title":"Samsung​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#samsung","content":"前往设置；点击高级功能；向下移动，点击双 Messenger 账户；禁用所有应用使用应用分身；锁定您的设备5分钟；解锁屏幕并重新试图创建 VPN 账号。 "},{"title":"LG​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#lg","content":"前往设置；选择常规标签钮；向下移动，点击双开应用；移除应用分身列表中所有的应用；重启您的设备。 "},{"title":"Certificate installation on devices with Android 11+","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/manual-certificate/","content":"Certificate installation on devices with Android 11+ 信息 本文适用于安卓版的 AdGuard，它是一种多功能广告拦截器，可在系统级别保护用户的设备。 To see how it works, download the AdGuard app To be able to filter HTTPS traffic (which is extremely important as most ads use HTTPS), AdGuard needs to install a certificate into your device's user storage. On older versions of Android OS this was done automatically, but on Android 11 and later users have to install it manually. Follow these steps to install AdGuard certificate: When you see the HTTPS filtering is off notification, tap Enable. Then you'll be presented with three screens that explain: Why filter HTTPS trafficThe safety of this filtering processThe necessity of AdGuard certificate Consecutively tap Next → Next → Save certificate. Tap Save at the bottom of the opened Download folder. After saving, tap Open Settings. Tap More security settings → Encryption &amp; credentials → Install a certificate → CA certificate. You might see a warning. If so, tap Install anyway and enter your PIN if necessary. Select the AdGuard certificate file. Its name should look like adguard_1342_020322.crt. You're all set! Once the certificate is installed successfully, you've enabled HTTPS filtering. Please note that the steps provided are based on the Google Pixel 7 smartphone. If you're using a different Android device, the exact menu names or options might vary. For easier navigation consider searching for a certificate by entering &quot;certificate&quot; or &quot;credentials&quot; in the settings search bar. If you experience issues during the manual certificate installation (for example, you installed the certificate, but the application keeps ignoring it), you can follow one of the solutions below. Restart AdGuard.Try to install the correct certificate (AdGuard Personal CA) one more time. If you still encounter a problem and can't install the certificate, please contact our support team at support@adguard.com.","keywords":""},{"title":"How to use Samsung Pay with AdGuard in South Korea","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/samsungpay-with-adguard-in-south-korea/","content":"How to use Samsung Pay with AdGuard in South Korea 信息 本文适用于安卓版的 AdGuard，它是一种多功能广告拦截器，可在系统级别保护用户的设备。 To see how it works, download the AdGuard app A number of users have encountered an issue where Samsung Pay does not work while AdGuard is running. This issue occurs almost exclusively on devices registered in South Korea. What is causing this issue? Sometimes Samsung Pay does not work on devices with VPN services running, and AdGuard is one of these apps. By default, AdGuard uses a local VPN to filter traffic, which can cause problems when using Samsung Pay. As a consequence, users had to disable AdGuard when making payments with Samsung Pay. This can be avoided with the Detect Samsung Pay feature. When this option is enabled, the AdGuard app is paused whenever the user opens the Samsung Pay app and resumes when the app is closed. 注意 This feature will work only if the Local VPN filtering mode is chosen in AdGuard settings. If another mode is being used, Samsung Pay will function without any interruptions. To enable Detect Samsung Pay, follow these steps: Go to Settings → General → Advanced→ Low-level settings. Scroll to Detect Samsung Pay and move the slider to the right. Tap Allow permissions and give AdGuard access to information about the use of other apps. We need it to collect statistics about the operation of Samsung Pay in order for the Detect Samsung Pay feature to work. After enabling this feature, when you switch from Samsung Pay to AdGuard, the following message will appear as shown in the screenshot. Alternatively, you can disable filtering for Samsung Pay in App management. Simply go to the App management screen (third tab from the bottom), find Samsung Pay in the list, and turn off the switch at Route traffic through AdGuard.","keywords":""},{"title":"Certificate installation in a Secure folder","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/secure-folder/","content":"Certificate installation in a Secure folder 信息 本文适用于安卓版的 AdGuard，它是一种多功能广告拦截器，可在系统级别保护用户的设备。 To see how it works, download the AdGuard app If you install AdGuard to the Secure folder on your Android (this applies mainly to Samsung devices), you may face some difficulties when installing the HTTPS certificate. The thing is, the Secure folder has its own space where the certificates are stored. However, if you do everything according to the regular certificate installation instructions (described here), the certificate will be installed into the main memory and will play no role for your ad blocker in the Secure folder. To solve this problem and install the certificate for your AdGuard for Android into the Secure folder's storage, please follow these instructions instead: After installing the app and connecting the local VPN, tap ENABLE next to the HTTPS filtering is off message.Tap Next → Next → Save it now → Save certificate.Save the certificate (at this stage, you can rename it to make it easier to locate it later, which you will need to do).After the Installation instructions popup appears, DO NOT tap Open Settings.Minimize the app and go to the Secure folder.Tap the three-dot menu and go to Settings → Other security settings.Tap Security certificates → Install from device storage → CA certificate → Install anywayConfirm installation with your graphic key/password/fingerprint.Find and select the previously saved certificate, then tap Done.Return to the AdGuard app and navigate back to the main screen. You may have to swipe and restart the app to get rid of the HTTPS filtering is off message.Done! The certificate has been installed.","keywords":""},{"title":"How to block ads in the YouTube app","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/youtube-ads/","content":"","keywords":""},{"title":"Watch YouTube in the AdGuard app​","type":1,"pageTitle":"How to block ads in the YouTube app","url":"adguard-for-android/solving-problems/youtube-ads/#watch-youtube-in-the-adguard-app","content":" Open the YouTube app and start the video you want to watch. Tap the Share button. Select AdGuard from the list of apps. That's it! A new window with the video will open where you'll be able to watch it without being interrupted by ads. "},{"title":"Watch YouTube in a browser​","type":1,"pageTitle":"How to block ads in the YouTube app","url":"adguard-for-android/solving-problems/youtube-ads/#watch-youtube-in-a-browser","content":"Alternatively, you can also watch YouTube in a browser and there will be no ads if you have AdGuard installed and enabled. "},{"title":"How to set up outbound proxy","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/outbound-proxy/","content":"","keywords":""},{"title":"Proxy configuration examples​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#proxy-configuration-examples","content":"In this article we give examples of how to set up some of the most popular proxies to work with AdGuard. "},{"title":"如何同时使用 AdGuard 和 Tor​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#如何同时使用-adguard-和-tor","content":"Open AdGuard and go to Settings → Filtering → Network → Proxy. Download &quot;Orbot: Proxy with Tor&quot; directly from Google Play or by tapping Integrate with Tor and then Install. 打开 Orbot 并在应用程序的首页点击「开启」按钮。 Go back to the Proxy screen of AdGuard. 点击「配置 Tor® 整合」按钮。 All the required fields will be pre-filled: 字符串\t数值代理分类\tSOCKS4 或 SOCKS5 代理主机\t127.0.0.1 代理端口\t9050 Or you can tap Proxy server → Add proxy server, enter these values manually, and set Orbot as a default proxy. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. Now AdGuard will forward all traffic through Orbot. If you disable Orbot, Internet connection will be unavailable until you disable outbound proxy settings in AdGuard. "},{"title":"如何同时使用 AdGuard 和 PIA（Private Internet Access）​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#如何同时使用-adguard-和-piaprivate-internet-access","content":"Here we presume that you are already a PIA VPN client and have it installed on your device. Open AdGuard and go to Settings → Filtering → Network → Proxy → Proxy server. 点击「添加代理」按钮并输入以下的数据： 字符串\t数值代理分类\tSOCKS5 代理主机\tproxy-nl.privateinternetaccess.com 代理端口\t1080 You also need to fill out the Username/Password fields. To do so, log in to the Client Control Panel on the PIA website. Click the Generate Password button under the Generate PPTP/L2TP/SOCKS Password section. A username starting with &quot;x&quot; and a random password will be shown. Use them to fill out the Proxy username and Proxy password fields in AdGuard. Tap Save and select. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. "},{"title":"如何同时使用 AdGuard 和 TorGuard​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#如何同时使用-adguard-和-torguard","content":"Here we presume that you are already a TorGuard client and have it installed on your device. Open AdGuard and go to Settings → Filtering → Network → Proxy → Proxy server. 点击「添加代理」按钮并输入以下的数据： 字符串\t数值代理分类\tSOCKS5 代理主机\tproxy.torguard.org or proxy.torguard.io 代理端口\t1080 or 1085 or 1090 For Username and Password fields, enter your proxy username and proxy password you have chosen at TorGuard signup. Tap Save and select. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. "},{"title":"如何同时使用 AdGuard 和 NordVPN​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#如何同时使用-adguard-和-nordvpn","content":"Open AdGuard and go to Settings → Filtering → Network → Proxy → Proxy server. 点击「添加代理」按钮并输入以下的数据： 字符串\t数值代理分类\tSOCKS5 代理主机\tany server from this list 代理端口\t1080 For Username and Password fields, enter your NordVPN Username and Password. Tap Save and select. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. "},{"title":"如何同时使用 Adguard 和 Shadowsocks​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#如何同时使用-adguard-和-shadowsocks","content":"Here we presume that you have already configured a Shadowsocks server and a client on your device. 注意 You should remove Shadowsocks app from filtering before setting up the process (App management → Shadowsocks → Route traffic through AdGuard) to avoid infinite loops and drops. Open AdGuard and go to Settings → Filtering → Network → Proxy → Proxy server. Tap the Add proxy server and fill in the fields: 字符串\t数值代理分类\tSOCKS5 代理主机\t127.0.0.1 代理端口\t1080 Tap Save and select. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. "},{"title":"How to use AdGuard with Clash​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#how-to-use-adguard-with-clash","content":"Here we presume that you are already a Clash client and have it installed on your device. Open Clash and go to Settings → Network → Route System Traffic and toggle the switch. This will set Clash to proxy mode. Open AdGuard and go to App management. Choose Clash For Android and disable Route traffic through AdGuard. This will eliminate traffic looping. Then go to Settings → Filtering → Network → Proxy → Proxy server. Tap Add proxy server and fill in the fields: 字符串\t数值代理分类\tSOCKS5 代理主机\t127.0.0.1 代理端口\t7891 "},{"title":"限制​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#限制","content":"There is a factor that can prevent certain traffic from being routed through the outgoing proxy even after you configure AdGuard proxy settings. It can happen if you don't set up the app itself to send the traffic through AdGuard. To do it, you need to proceed to App management, choose the app, and turn on Route traffic through AdGuard. "},{"title":"Installation","type":0,"sectionRef":"#","url":"adguard-for-ios/installation/","content":"","keywords":""},{"title":"系统要求​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#系统要求","content":""},{"title":"iPhone​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#iphone","content":"要求 iOS 11.2 或更高版本。 "},{"title":"iPad​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#ipad","content":"要求 iPadOS 11.2 或更高版本。 "},{"title":"iPod touch​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#ipod-touch","content":"要求 iOS 11.2 或更高版本。 "},{"title":"AdGuard iOS版的安装过程​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#adguard-ios版的安装过程","content":"AdGuard iOS版是 App Store 中的一款应用程序。 To install it on your device, open the App Store and tap the Search icon on the bottom of the screen.  Type adguard in the search bar and tap the string adGuard which will be among search results.  On the opened page of the App Store tap GET under the string AdGuard - adblock&amp;privacy and then tap INSTALL. 为了完成安装过程，您可能会看到要求输入您的苹果 ID 和密码的弹窗。 输入您的 ID 和密码后，请等待安装成功完成。  "},{"title":"AdGuard Pro iOS版的安装过程​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#adguard-pro-ios版的安装过程","content":"AdGuard Pro 是 AdGuard iOS版的付费版本。AdGuard Pro 为用户提供更多功能（与启用高级版的 AdGuard 应用程序相同）。 To install it on your device run the App Store application and tap the Search icon on the bottom of the screen.  Type adguard in the search form, and then tap the string adGuard pro - adblock which will be shown among search results.  On the opened page of the App Store tap the button with the cost of the license under the string AdGuard Pro - adblock, and then tap BUY. 为了完成安装过程，您可能会看到要求输入您的苹果 ID 和密码的弹窗。 输入您的 ID 和密码后，请等待安装成功完成。  您要输入 AdGuard 个人账号的用户身份信息以激活许可。 为执行此操作，用户至少要有一个许可。 "},{"title":"How to block YouTube ads","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/block-youtube-ads/","content":"","keywords":""},{"title":"How to block ads in the YouTube app​","type":1,"pageTitle":"How to block YouTube ads","url":"adguard-for-ios/solving-problems/block-youtube-ads/#how-to-block-ads-in-the-youtube-app","content":"Open the YouTube app.Choose a video and tap Share.Tap More, then select Block YouTube Ads (by AdGuard). AdGuard will open its ad-free video player. "},{"title":"如何在 Safari 中拦截 YouTube 广告​","type":1,"pageTitle":"How to block YouTube ads","url":"adguard-for-ios/solving-problems/block-youtube-ads/#如何在-safari-中拦截-youtube-广告","content":"提示 Make sure you've given AdGuard access to all websites. You can check it in Safari → Extensions → AdGuard. Then open AdGuard and enable Advanced protection. 在 Safari 中打开 youtube.comChoose a video and tap Share.Tap Block YouTube Ads (by AdGuard). AdGuard will open its ad-free video player. "},{"title":"How to automate AdGuard for Android","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/tasker/","content":"","keywords":""},{"title":"AdGuard interface​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#adguard-interface","content":"There are a lot of tasker apps out there, for example Tasker, AutomateIt etc. AdGuard provides an interface that allows these apps to setup various automation rules.  Thanks to this interface, any app can send a special message (called &quot;intent&quot;) that contains the name of the action and some additional data, if needed. AdGuard will look at this intent and perform the required actions. "},{"title":"Security concerns​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#security-concerns","content":"Isn't it dangerous to let some random apps manage what AdGuard does? It is, and that's why a password is sent along with the intent. This password will be generated by AdGuard automatically, but you can, of course, change it at any time. "},{"title":"Available actions​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#available-actions","content":"Here are actions that, when included in the intent, will be understood by AdGuard: start starts the protection, no extra data is needed; stop stops the protection, no extra data required; pause pauses the protection. The difference between this and stop is that a notification will appear that restarts the protection when you tap it. No extra data required; update checks for available filter and app updates, no additional data is needed;  dns_filtering turns DNS filtering on and off. Requires an extra flag: enable:true or enable:false enables or disables DNS filtering, accordingly.  dns_server switches between DNS servers, you need to include additional data: server:adguard dns switches to AdGuard DNS server; 注意 The full list of supported provider names can be found in our known DNS providers list. server:custom switches to the previously added server named custom; server:tls://dns.adguard.com creates a new server and switches to it if the previously added servers and providers don't contain a server with the same address. Otherwise, it switches to the respective server. You can add server addresses as IP ( regular DNS), sdns://… (DNSCrypt or DNS-over-HTTPS), https://… (DNS-over-HTTPS) or tls://... (DNS-over-TLS); server:1.1.1.1, tls://1.1.1.1 creates a server with comma separated addresses and switches to it. When adding a server via server:1.1.1.1, tls://1.1.1.1, the previously added server is removed. server:system resets DNS settings to default system DNS servers.  proxy_state enables/disables the outbound proxy. Requires an extra flag: enable:true or enable:false activates or deactivates the outbound proxy, accordingly.  proxy_default sets the proxy from the list of previously added ones as default or creates a new one if server has not been added before. You need to specify additional data: server:[name] where [name] is the name of the outbound proxy from the list. Or you can configure server parameters manually: server:[type=…&amp;host=…&amp;port=…&amp;username=…&amp;password=…&amp;udp=…&amp;trust=…]. proxy_remove removes the proxy server from the list of previously added ones. server:[name] where [name] is the name of the outbound proxy from the list. Or you can configure remove parameters manually: server:[type=…&amp;host=…&amp;port=…&amp;username=…&amp;password=…&amp;udp=…&amp;trust=…]. Compulsory parameters: [type] — proxy server type: HTTPSOCKS4SOCKS5HTTPS_CONNECT [host] — outbound proxy domain or IP address; [port] — outbound proxy port (integer number from 1 to 65535); Optional parameters: [login and password] — only if proxy requires it. This data is ignored when setting up SOCKS4; [udp] applied only on SOCKS5 server type and include option UDP through SOCKS5. It is necessary to set true or false value; [trust] applies for HTTPS_CONNECT server type only and include option Trust any certificates. It is necessary to set true or false value. Example setting by name: server:MyServer manually settings: server:host=1.2.3.4&amp;port=80&amp;type=SOCKS5&amp;username=foo&amp;password=bar&amp;udp=true Don't forget to include the password as an extra and mention package name and class. You need to do so for every intent. Extra: password:******* Package name: com.adguard.android Class: com.adguard.android.receiver.AutomationReceiver 注意 Before v4.0 the class was called com.adguard.android.receivers.AutomationReceiver but then we changed its name to com.adguard.android.receiver.AutomationReceiver. If you used this feature, please pay attention and use the new name. "},{"title":"Execution without notification​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#execution-without-notification","content":"To perform a task without showing a toast, add an additional EXTRA quiet: true "},{"title":"Example​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#example","content":" "},{"title":"How to avoid compatibility problem with FaceTime","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/facetime-compatibility-issues/","content":"How to avoid compatibility problem with FaceTime 信息 本文适用于 iOS 版的 AdGuard，它是一种多功能广告拦截器，可在系统级别保护用户的设备。 To see how it works, download the AdGuard app It turned out that Full-Tunnel mode might interfere not only with compatibility with other VPN applications, but also with FaceTime. Some users have encountered the problem that FaceTime does not work on the device when the AdGuard app for iOS is in Full-Tunnel mode. It is likely but not guaranteed that FaceTime will work when AdGuard is in Full-Tunnel mode without VPN icon because it is also incompatible with other VPN apps and unstable. If you want to use FaceTime and make sure that video/audio calls don't stop working, use Split-Tunnel mode. To enable it, follow the instructions: Go to AdGuard for iOS Settings → General settings.Enable Advanced mode and go to the Advanced settings section that appears right after.Open Tunnel mode and select Split-Tunnel. Done! Now there should be no problems with FaceTime compatibility.","keywords":""},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-ios/overview/","content":"","keywords":""},{"title":"Features​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#features","content":"AdGuard and AdGuard Pro for iOS offer lots of features for blocking ads, trackers and creating user rules, both in Safari and on network level. "},{"title":"Content blockers​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#content-blockers","content":"Content blockers serve as 'containers' for filtering rules that do the actual job of blocking ads and tracking. AdGuard for iOS contains six content blockers: General, Privacy, Social, Security, Custom, and Other. Previously Apple only allowed each content blocker to contain a maximum of 50K filtering rules, but with iOS 15 release the upper limit has moved to 150K rules. All content blockers, their statuses, which thematic filters they currently include, and a total number of used filtering rules can be found on the respective screen in Advanced settings (tap the gear icon at the bottom right → General → Advanced settings → Content blockers).  提示 Keep all content blockers enabled for the best filtering quality. "},{"title":"Filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#filters","content":"Content blockers' work is based on filters, also sometimes referred to as filter lists. Each filter is a list of filtering rules. If you have an enabled ad blocker when browsing, it constantly checks the visited pages and elements on them against these filtering rules, and blocks anything that matches. Rules are developed to block ads, trackers, and more. All filters are grouped into thematic categories. To see the full list of these categories (not to be confused with content blockers), open the Protection section by tapping the shield icon, then go to Safari protection → Filters.  There are eight of them, each category unites several filters that serve and share a common purpose, i.e. blocking ads, social media widgets, cookie notices, protecting the user from online scams. To decide which filters suit your needs, read their descriptions and navigate by the labels (ads, privacy, recommended, etc.). 注意 More enabled filters does not guarantee that there will be less ads. A large number of various filters enabled simultaneously reduces the quality of ad blocking. Custom filters category is empty by default for users to add there their filters by URL. You can find filters on the Internet or even try to create one by yourself. "},{"title":"User rules​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#user-rules","content":"Here you can add new rules — either by entering them manually, or by using the AdGuard manual blocking tool in Safari. Use this tool to customize Safari filtering without adding an entire filter list. Learn how to create your own ad filters. But please note that many of them won't work in Safari on iOS.  "},{"title":"Allowlist​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#allowlist","content":"The third section of the Safari protection screen. If you want to disable ad blocking on a certain website, Allowlist will be of help. It allows you to add domains and subdomains to exlcusions. AdGuard for iOS has an Import/Export feature, so the allowlist from one device can be easily transferred to another. "},{"title":"DNS protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#dns-protection","content":"DNS protection module enhances your privacy by encrypting your DNS traffic. Unlike with Safari content blocking, DNS protection works system-wide, i.e. beyond Safari, in apps and other browsers. You have to enable this module before you're able to use it. You can do this on the home screen by tapping the shield icon at the top of the screen, or by going to the Protection → DNS protection tab. 注意 To be able to manage DNS settings, AdGuard apps require establishing a local VPN. It will not route your traffic through any remote servers. Nevertheless, the system will ask you to confirm access permission. "},{"title":"DNS implementation​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#dns-implementation","content":" This section has two options: AdGuard and Native implementation. Basically, these are two methods of setting up DNS. In Native implementation, the DNS is handled by the system and not the app. This means that AdGuard doesn't have to create a local VPN. Sadly, this will not help you circumvent system restrictions and use AdGuard alongside other VPN-based applications — if any VPN is enabled, native DNS is ignored. Consequently, you won't be able to filter traffic locally or to use our brand new DNS-over-QUIC protocol (DoQ). "},{"title":"DNS servers​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#dns-servers","content":"The first section you'll see on the DNS Protection screen is DNS server. It shows the currently selected DNS server and encryption type. To change either, tap the button to enter the DNS server screen.  Servers differ by their speed, employed protocol, trustworthiness, logging policy, etc. By default, AdGuard will suggest several DNS servers from among the most popular ones (including AdGuard DNS). Tap any to change the encryption type (if such option is provided by the server's owner) or to view the server's homepage. We added labels such as No logging policy, Ad blocking, Security to help you make a choice. In addition, at the bottom of the screen there is an option to add a custom DNS server. It supports regular, DNSCrypt, DNS-over-HTTPS, DNS-over-TLS, and DNS-over-QUIC servers. "},{"title":"Network settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#network-settings","content":" Users can also handle their DNS security on the Network settings screen. Filter mobile data and Filter Wi-Fi enable or disable DNS protection for the respective network types. Further down, at Wi-Fi exceptions, you can exclude particular Wi-Fi networks from DNS protection (for example, you might want to exclude your home network if you use AdGuard Home). "},{"title":"DNS filtering​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#dns-filtering","content":"DNS filtering allows you to customize your DNS traffic by enabling AdGuard DNS filter, adding custom DNS filters, and using the DNS blocklist/allowlist. How to access: Protection icon (the shield icon in the bottom menu bar) → DNS protection → DNS filtering  DNS filters​ Similar to filters that work in Safari, DNS filters are sets of rules written according to special syntax. AdGuard will monitor your DNS traffic and block requests that match one or more rules. You can use filters such as AdGuard DNS filter or add hosts files as filters. Multiple filters can be added simultaneously. To know how to do it, get acquainted with this exhaustive manual. Allowlist and Blocklist​ On top of DNS filters, you can have targeted impact on DNS filtering by adding single domains to Blocklist or to Allowlist. Blocklist even supports the same DNS syntax, and both of them can be imported and exported, just like Allowlist in Safari content blocking. "},{"title":"Advanced protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#advanced-protection","content":"In iOS 15 Apple has added the support for Safari Web Extensions, and we in turn added a new Advanced protection module to AdGuard for iOS. It allows AdGuard to apply advanced filtering rules, such as CSS rules, CSS selectors, and scriptlets, and therefore to deal even with the complex ads, such as YouTube ads.  To enable Advanced protection, open the Protection tab by tapping the second left icon at the bottom of the screen, select the Advanced protection module, activate the feature by toggling the switch slider, and follow the instructions below. 注意 The Advanced protection only works on iOS 15 and later versions. If you are using earlier versions of iOS, you will see the YouTube ad blocking module in the app instead of the Advanced protection.  "},{"title":"Compatibility with AdGuard VPN​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#compatibility","content":"In most cases, the ad blocker and the VPN application cannot work together, simply because there are certain system limitations. Nevertheless we've managed to find a solution to befriend AdGuard VPN and AdGuard Ad Blocker. For your convenience we've added the AdGuard VPN block to the Protection section, so you can easily switch between two apps. "},{"title":"Assistant​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#assistant","content":" Assistant is a tool that helps you manage filtering in Safari right from the browser without switching back to the app. To see it, do the following: open Safari and tap the arrow-in-a-box symbol. Then scroll down to AdGuard/AdGuard Pro (depending on the app you use) and tap it to fetch a window with several options: Enable on this page. Turn the switch off to add the current domain to the Allowlist.Block an element on this page. Tap it to enter the 'Element blocking' mode: choose any element on the page, adjust the size by tapping 'plus' or 'minus', preview if necessary and then tap the checkmark icon to confirm. The selected element will be hidden from the page and a corresponding rule will be added to User rules. Remove or disable it there to revert the change.Report an issue on this page. Opens a web reporting tool that will help you send a report to our support team in just a few taps. Use it if you noticed a missed ad or an incorrect blocking on the page. 提示 On iOS 15 devices, the Assistant features are available through AdGuard Safari Web Extension, which enhances the capabilities of AdGuard for iOS and allows you to take advantage of iOS 15. With this web extension, AdGuard can apply advanced filter rules and, as a result, block more ads. "},{"title":"Activity​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#activity","content":"This is the 'information hub' of AdGuard's DNS protection suite. You can quickswitch to it by tapping the third icon in the row at the screen bottom. N.b. this screen is only seen when DNS protection is enabled.  This is where AdGuard displays statistics about the device's DNS requests, such as total number, number of blocked requests and data saved by blocking them. AdGuard can display the statistics for a day, a week, a month or in total. Below is the Recent activity feed. AdGuard stores the last 1500 DNS requests that have originated on your device and shows their attributes such as protocol type and target domain. 注意 AdGuard does not send this information anywhere. It is 100% local and does not leave your device. Tap any request to view more details. There will also be buttons to add the request to Blocklist/Allowlist in one tap.  Above the activity feed, there are Most active and Most blocked companies. Tap each to see data based on the last 1500 requests. "},{"title":"Statistics​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#statistics","content":"Aside from the Activity screen, you can find global statistics on the home screen and on widgets. "},{"title":"Low-level settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#low-level-settings","content":" To open the Low-level settings, go to Settings → General → (Enable Advanced mode if it's off) → Advanced settings → Low-level settings. For the most part, the settings in this section are best left untouched: only use them if you're sure about what you're doing, or if the support team has asked for them. But some settings could be changed without any risk. "},{"title":"Block IPv6​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#blockipv6","content":"For any DNS query sent to get an IPv6 address, our app returns an empty response (as if this IPv6 address does not exist). Now there is an option not to return IPv6 addresses. At this point the description of this function becomes too technical: configuring or disabling IPv6 is the exclusive domain of advanced users. Presumably, if you are one of them, it will be good to know that we now have this feature, if not — there is no need to dive into it. "},{"title":"Bootstrap and Fallback servers​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#bootstrap-fallback","content":"Fallback is a backup DNS server. If you chose a DNS server and something happened to it, a fallback is needed to set the backup DNS server until the main server responds. With Bootstrap, it’s a little more complicated. For AdGuard for iOS to use a custom secure DNS server, our app needs to get its IP address first. For this purpose, the system DNS is used by default, but sometimes this is not possible for various reasons. In such cases, Bootstrap could be used to get the IP address of the selected secure DNS server. Here are two examples to illustrate when a custom Bootstrap server might help: When a system default DNS server does not return the IP address of a secure DNS server and it is not possible to use a secure one.When our app and third-party VPN are used simultaneously and it is not possible to use System DNS as a Bootstrap. "},{"title":"Other features​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#other-features","content":"While Safari content blocking and DNS protection are indisputably two major modules of AdGuard/AdGuard Pro, there are some other minor features that don't fall into either of them directly but still can be useful and are worth knowing about. Dark theme   Residing right at the top of Settings → General screen, this setting allows you to switch between dark and light themes. Widgets  AdGuard supports widgets that provide quick access to Safari content blocking and DNS protection switches, and also show global requests stats. Auto-update over Wi-Fi only If this setting is enabled, AdGuard will use only Wi-Fi for background filter updates. Invert the Allowlist An alternative mode for Safari filtering, it unblocks ads everywhere except for the specified websites from the list. Disabled by default. Advanced mode Advanced mode unlocks Advanced settings. We don't recommend messing with those, unless you know what you're doing or you have consulted with technical support first. Reset statistics Clears all statistical data, such as number of requests, etc. Reset settings This option will reset all your settings. 支持 Use this option to contact support, report a missed ad (although we advise to use the Assistant or AdGuard's Safari Web extension for your own convenience), export logs or to make a feature request. 关于 Contains the current version of the app and an assortment of rarely needed options and links. "},{"title":"Low-level Settings guide","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"How to reach the Low-level settings​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#how-to-reach-the-low-level-settings","content":"警告 Changing Low-level settings can cause problems with the performance of AdGuard, may break the Internet connection or compromise your security and privacy. You should only open this section if you are sure of what you are doing or our support-team has asked you about it. To go to Low-level settings, tap the gear icon at the bottom right of the screen to open Settings. Select the General section and then toggle on the Advanced mode switch, after that the Advanced settings section will appear below. Tap Advanced settings to reach the Low-level settings section. "},{"title":"Low-level settings​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#low-level-settings","content":""},{"title":"Tunnel mode​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#tunnel-mode","content":"There are two main tunnel modes: Split and Full. Split-Tunnel mode provides compatibility of AdGuard and so-called &quot;Personal VPN&quot; apps. In Full-Tunnel mode no other VPN can work simultaneously with AdGuard. There is a specific feature of Split-Tunnel mode: if DNS proxy does not perform well, for example, if the response from the AdGuard DNS server was not returned in time, iOS will &quot;amerce&quot; it and reroute traffic through DNS server, specified in iOS settings. No ads are blocked at this time and DNS traffic is not encrypted. In Full-Tunnel mode only the DNS server specified in AdGuard settings is used. If it does not respond, the Internet will simply not work. Enabled Full-Tunnel mode may cause the incorrect performance of some programs (for instance, Facetime), and lead to problems with app updates. By default, AdGuard uses Split-Tunnel mode as the most stable option. There is also an additional mode called Full-Tunnel (without VPN icon). This is exactly the same as Full-Tunnel mode, but it is set up so that the VPN icon is not displayed in the system line. "},{"title":"Blocking mode​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#blocking-mode","content":"In this module you can select the way AdGuard will respond to DNS queries that should be blocked: Default — respond with zero IP address when blocked by adblock-style rules; respond with the IP address specified in the rule when blocked by /etc/hosts-style rulesREFUSED — respond with REFUSED codeNXDOMAIN — respond with NXDOMAIN codeUnspecified IP — respond with zero IP addressCustom IP — respond with a manually set IP address "},{"title":"Block IPv6​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#block-ipv6","content":"By moving the toggle to the right, you activate the blocking of IPv6 queries (AAAA requests). AAAA-type DNS requests will not be resolved, hence only IPv4 queries can be processed. "},{"title":"Blocked response TTL​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#blocked-response-ttl","content":"Here you can set the period for a device to cache the response to a DNS request. During the specified time to live (in seconds) the request can be read from the cache without re-requesting the DNS server. "},{"title":"Bootstrap servers​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#bootstrap-servers","content":"For DNS-over-HTTPS, DNS-over-TLS, and DNS-over-QUIC a bootstrap server is required for getting the IP address of the main DNS server. If not specified, the DNS server from iOS settings is used as the bootstrap server. "},{"title":"Fallback servers​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#fallback-servers","content":"Here you can specify an alternate server to which a request will be rerouted if the main server fails to respond. If not specified, the system DNS server will be used as the fallback. It is also possible to specify none, in this case, there will be no fallback server set and only the main DNS server will be used. "},{"title":"Background app refresh time​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#background-app-refresh-time","content":"Here you can select the frequency at which the application will check for filter updates while in the background. Note that update checks will not be performed more often than the specified period, but the exact intervals may not be respected. "},{"title":"How to activate premium features","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/premium-activation/","content":"How to activate premium features 信息 本文适用于 iOS 版的 AdGuard，它是一种多功能广告拦截器，可在系统级别保护用户的设备。 To see how it works, download the AdGuard app There are two options to activate premium features on AdGuard for iOS app: Purchase a subscription. Just tap the Get Premium plaque anywhere in the app and follow the on-screen instructions. All you'll need to do is enter your Apple ID password and confirm the purchase. You can choose between a monthly, yearly and lifetime subscriptions. Use an AdGuard license (you can purchase it at the AdGuard website). Log into your AdGuard personal account via the app: go to AdGuard app → Settings → License screen and tap the Login button there. You'll be asked to enter your AdGuard Personal account credentials*. After you do, if you have any valid license key in your account, it will be automatically picked up to activate Premium in your AdGuard for iOS app. As an alternative, you can just enter a valid license key in the e-mail field leaving password field blank to activate Premium features. 注意 AdGuard Pro for iOS (our other iOS app) can only be purchased from App Store.","keywords":""},{"title":"Safari Web extension","type":0,"sectionRef":"#","url":"adguard-for-ios/web-extension/","content":"","keywords":""},{"title":"What it does​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#what-it-does","content":"By default, Safari provides only basic tools to content blockers. These tools don't allow the level of performance that can be found in content blockers on other operating systems (Windows, Mac, Android). For example, AdGuard apps on other platforms can use such effective weapons against ads as CSS rules, CSS selectors, and scriptlets. Unfortunately, these instruments are absolutely irreplaceable when dealing with more complex cases such as pre-roll ads on YouTube, for example. AdGuard's Safari Web extension compliments AdGuard by giving it the ability to employ these types of filtering rules. Besides that, AdGuard's Safari Web extension can be used to quickly manage AdGuard for iOS right from the browser. Tap the Extensions button — it's the one with a jigsaw icon, depending on your device type it may be located to the left or to the right of the address bar. Find AdGuard in the list and tap it.  On iPads AdGuard's Safari Web extension is accessible directly by tapping the AdGuard icon in the browser's address bar. You will see the following list of options: Enabling/disabling protection on the website. Turning the switch off will disable AdGuard completely for the current website and add a respective exclusion rule. Turning the switch back on will resume protection for the website and delete the rule. Any such change will require some time to take effect. Blocking elements on the page manually. Tap the Block elements on this page button to prompt a pop-up for element blocking. Select any element on the page you want to hide, adjust the selection zone, then preview changes and confirm the removal. A corresponding filtering rule will be added to AdGuard (that you can later disable or delete to revert the change). Report an issue. Swipe up to bring out the Report an issue button. Use it to report a missed ad or any other problem that you encountered on the current page. "},{"title":"How to enable AdGuard's Safari Web extension​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#how-to-enable-adguards-safari-web-extension","content":""},{"title":"In the iOS settings​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#in-the-ios-settings","content":"The Web extension is not a standalone tool and requires AdGuard for iOS. If you don't have AdGuard for iOS installed on your device, please install it first and complete the onboarding process to prepare it for work. Once done, open Settings → Safari → Extensions.   Find ALLOW THESE EXTENSIONS section and then find AdGuard among the available extensions.  Tap it, then turn on the switch. On the same screen make sure that the AdGuard extension has required permissions: All Websites should have the Allow status.  注意 AdGuard's Safari Web extension requires access to the web pages' content to operate, but doesn't use it for any purpose other than blocking ads. "},{"title":"In Safari​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#in-safari","content":"Alternitavely, you can also turn AdGuard extension on from the Safari browser. Tap the Extensions button (if you don't see it next to the address bar, tap the aA icon).  Then find the Manage Extensions option in the list and tap it. In the opened window turn on the switch next to AdGuard.   If you use this method, you may have to go to Safari settings to grant AdGuard extension the necessary permissions anyway. You should now be able to see AdGuard among the available extensions. Tap it and then the yellow i icon. Enable Advanced protection by tapping the Turn on button and confirming the action. 注意 If you use AdGuard for iOS without Premium subscription, you won't be able to enable Advanced protection. Alternatively, you can enable Advanced protection directly from the app, in the Protection tab (second from the left in the bottom icon row). AdGuard's Safari Web extension only works on iOS versions 15 and later. "},{"title":"How to enable system-wide filtering in AdGuard for iOS","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/system-wide-filtering/","content":"","keywords":""},{"title":"关于系统层面上的过滤​","type":1,"pageTitle":"How to enable system-wide filtering in AdGuard for iOS","url":"adguard-for-ios/solving-problems/system-wide-filtering/#关于系统层面上的过滤","content":"系统层面上的过滤是指不仅在 Safari 浏览器里，而且在其它应用程序和浏览器里屏蔽广告及跟踪器。 This article will tell you how to enable it on your iOS device. On iOS, the only way to block ads and trackers system-wide is to use DNS filtering. First, you have to enable DNS protection. To do so: Open AdGuard for iOS.Tap Protection icon (the second icon in the bottom menu bar).Turn DNS protection switch on.  Now, if your purpose is to block ads and trackers system-wide, you have three options: Use AdGuard DNS filter (Protection (the shield icon in the bottom menu) → DNS protection → DNS filtering → DNS filters → AdGuard DNS filter).Use AdGuard DNS server (Protection (the shield icon in the bottom menu) → DNS protection → DNS server → AdGuard DNS) or another blocking DNS server to your liking.Add a custom DNS filter/hosts file to your liking. The first and third option have several advantages: You can use any DNS server at your discretion and you are not tied up to a specific blocking server, because the filter does the blocking.You can add multiple DNS filters and/or hosts files (although using too many might slow down AdGuard).  "},{"title":"How to add custom DNS filter/hosts file​","type":1,"pageTitle":"How to enable system-wide filtering in AdGuard for iOS","url":"adguard-for-ios/solving-problems/system-wide-filtering/#how-to-add-custom-dns-filterhosts-file","content":"You can add any DNS filter or hosts file you like. For the sake of the example, let's add OISD Blocklist Big. Copy this link: https://big.oisd.nl (it's a link for OISD Blocklist Big filter)Open Protection (the shield icon in the bottom menu) → DNS protection → DNS filtering → DNS filters.Tap Add a filter.Paste the link into the filter URL field.Tap Next → Add.  Add any number of other DNS filters the same way by pasting a different URL at step 4. 在这里您可以找到各种过滤器以及它们的链接。 "},{"title":"Browser Assistant","type":0,"sectionRef":"#","url":"adguard-for-mac/browser-assistant/","content":"","keywords":""},{"title":"Benefits​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#benefits","content":""},{"title":"Independence​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#independence","content":"AdGuard Browser Assistant is an extension installed in a browser, so there is no need to wait for the userscript to be injected into the filtered web page, as it was with the preceding one. In other words, it is more autonomous from the main AdGuard app. Still, Browser Assistant needs the installed AdGuard for Mac, because there is no point in using the extension without the app. "},{"title":"Compatibility with the main app​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#compatibility-with-the-main-app","content":"If you got into the habit of using our previous AdGuard ad blocker extension in Integration mode, you may like the solution that we have developed for the new Browser Assistant. Background information In previous versions of the AdGuard Browser Extension (before v3.5), if you had it installed along with a desktop AdGuard for Mac, the extension took over the functions of Assistant, stopped filtering itself and relied on the app to do this. The extension and the app worked in conjunction but sometimes the integration would fail. Some websites would stop being protected by the desktop program and be backed up only by the less powerful extension. When using the Browser Assistant, all these problems don’t matter as there can be no conflicts in essence. The role of the Browser Assistant is well defined and it can’t hinder the functioning of the main app, so there is no need to worry. "},{"title":"Smart onboarding​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#smart-onboarding","content":"When AdGuard for Mac is installed for the first time, the thing a user encounters in the first place is the onboarding. During this process the user quickly learns about AdGuard's settings and can customize filtering to their liking. At one stage AdGuard will determine the user's default browser and provide them with a download link for the new Assistant.  注意 On rare occasions, a browser may prove incompatible with the Browser Assistant, and the user will be offered to install the legacy version instead. "},{"title":"Separate tab in Settings​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#separate-tab-in-settings","content":"The new Browser Assistant has its own tab in the AdGuard for Mac settings, together with Stealth Mode, Browsing Security, Parental Control and others. Don’t worry if you missed the opportunity to install Browser Assistant during the onboarding, you'll find this option in the app's settings. Besides, there is a checkbox to enable the legacy Assistant.  "},{"title":"Legacy Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#legacy-assistant","content":"Legacy Assistant is the previous version of Assistant, which is a mere userscript, not a browser extension. Basically, there are two cases when you might want to pick it instead of the new Browser Assistant: The new Assistant is not available for your browser.You are used to the green shield icon and want to leave things as they were. "},{"title":"How to install AdGuard Browser Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#how-to-install-adguard-browser-assistant","content":"Technically, you won’t need to do it on your own: during the onboarding process AdGuard app will determine your default browser and offer to install Browser Assistant for it. Yet, if you missed that step, you can download it yourself. AdGuard Browser Assistant is available for all popular browsers: Chrome, Firefox, Safari, Edge, Opera, and Yandex. To install the Browser Assistant for your default browser, you can do it directly from the app settings, but you also have an opportunity to install it for other browsers. To install the one you need (or many, it is not prohibited but even encouraged), go to our website, click the browser icon and then the Install button. That’s it! "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-mac/overview/","content":"","keywords":""},{"title":"Home panel​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#home-panel","content":" The first thing you see upon startup will be a screen with a big On/Off toggle. Below are shown various stats (ads blocked, trackers blocked, data saved) since the installation or since the last stats reset. To start configuring AdGuard for Mac, you need to click the gear in the upper right corner of the window and select &quot;Preferences&quot;. "},{"title":"General Preferences​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#general-preferences","content":" Descriptions under option titles seem self-explanatory, but still: Activate language-specific filters automatically Enabling this option, you won't have to manually choose all the filters when visiting a foreign website, saving you some time. Launch AdGuard at login A simple and convenient feature with which you don't have to worry whether or not you have your ad blocker turned on, and just be sure that ads are always blocked. Do not block search ads and websites' self-promotion This option might be useful to online shoppers: instead of adding all your favorite e-shops and sites to the Allowlist, you can simply exclude self-promos and search ads from filtering. AdGuard will automatically detect those and let them be, while removing everything else ad-like. Hide menu bar icon If you don't want to see the menu bar icon, there is an option to hide it. But don't worry: even if you remove it from the menu bar, AdGuard will continue to run in the background. From this same window you can access the above-mentioned Allowlist, to which you can add websites you do not wish AdGuard to filter. Just click the corresponding button located at the bottom of the window. "},{"title":"Filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#filters","content":" Filters are the main driving force behind the Ad blocker module. To understand how filtering works, get acquainted with our comprehensive article. But in essence, filter lists are sets of rules written in a special language, and your ad blocker is an interpreter of these rules who then implements them. As a result, you stop seeing ads on your web pages and life gets lots better. Some filter lists (AdGuard’s Base filter, Annoyances filter, EasyList, etc.) are pre-installed, while other specific ones, adapted to your preferences, can be downloaded additionally and added to your program. Aside from the more general and universally applicable filters (like Base filter), AdGuard provides an extensive quantity of filters for every occasion: filters aimed at tracking prevention (like Tracking Protection filter),language-specific ad filters that block content in a selected language,Social media filter that removes &quot;Like&quot; and &quot;Share&quot; buttons,Annoyances filter for cookie warnings, in-page pop-ups and others of the same ilk,and even a filter that unblocks some ads instead of blocking them — Filter for search ads and self-promotions. AdGuard filters are automatically updated. Our developers create them all based on user feedback received. You can always help other AdGuard users (and yourself, in perspective) by sending us reports right from the app's Assistant (it's really handy, we'll tell you more about the Assistant further on), or from the website. If you wish to know more about AdGuard filters, here is some info. "},{"title":"User rules​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#user-rules","content":" Another vital part of the Ad Blocker module are its User rules. If you have some coding experience and would like to create your own rules that would be a better custom fit than the standard filters already available, then you can try your hand at this. The syntax AdGuard uses for its filtering rules is based on that of any other ad blocking extension, but with considerable additions, extending its possibilities. The whole process of rule-writing in all its nuances is described in these comprehensive instructions, so if you want to write some custom rules and check how much of a coder you are, just follow the steps we described in this article. "},{"title":"DNS​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#dns","content":" DNS filtering is one of the most useful features, thanks to which all your DNS traffic is encrypted. But if you're using the default DNS server provided by your ISP, your DNS traffic is likely not encrypted and vulnerable to snooping and hijacking. In the DNS panel you can select the DNS servers from known DNS providers or even add custom DNS servers. Also you can add domains to DNS blocklist or allowlist and add complicated rules using DNS rule syntax. Finally, you can add DNS filters of your choice. "},{"title":"Stealth Mode​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#stealth-mode","content":" This module is a very useful tool that will help you maintain your privacy from websites that try to retain such info about you as your IP address, computer parameters, browser settings and even the initial page from which you were redirected, not to mention cart contents if we speak of web stores. If this list of info potentially to be shared with shady third parties doesn't make you think twice, then might we add that in most cases they will also get such personal data as your age, yearly income, medical history, physical address and your kids' names. Eliminating such things as unwanted cookies or clandestine insertion of tracking parameters into your browser is what Stealth Mode does best. Stealth Mode contains a wide range of options, which ensure its flexible configuration. They are divided into several categories, and for an unprepared user many of them will seem confusing and maybe even complicated. We provided each option with a hint to make up for the deficiency — hints appear when you hover over the icon with a question mark. If you still wish to know more about the whole concept, we encourage you to proceed to this article. "},{"title":"Browsing Security​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#browsing-security","content":" Next we have the Security panel, where a module also known as Browsing Security is located. What it does is protection from malicious and phishing websites. 注意 AdGuard is not an antivirus, but an entirely different program. It will show you a warning if you are about to go onto an infected domain, but it cannot stop you from downloading anything suspicious or help you deal with already existing viruses. Phishing is a very common web fraud aimed at stealing personal data (passwords, bank account details, etc.). It is carried out using fake web pages mimicking popular websites or real services, such as web stores or social networks. Many phishing websites have URLs that only differ from the real ones in just a few symbols to put you off your guard. If a user enters their details on such a website, they’ll definitely end up in the wrong hands. Browsing Security gives strong protection against such incidents. At the same time, the user’s personal information is not transferred anywhere, and AdGuard servers do not know which websites the user is visiting, because the security check is not performed via open web address (URL) but through hash prefixes (hash is a certain data structure that renders each address added to the base unambiguous). Some web pages are not malicious themselves, but they may contain elements built into their structure by other websites. Unlike browser plug-ins, Browsing Security module checks each object built into any web page, ensuring maximum protection. If you wish to help us in perfecting this module, you can check the lower box on the panel near the &quot;Help us with Browsing Security filters development&quot; phrase. This will enable your computer to send us pertinent info on fraudulent websites you might stumble upon while surfing the web — and our developers will make sure they end up locked at the bottom of your ban list. "},{"title":"Browser Assistant​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#browser-assistant","content":" AdGuard Browser Assistant’s primary function is to manage filtering directly from the browser. It used to be a mere userscript incorporated into AdGuard for Mac app that then became a full-fledged browser extension. Know more about the benefits it yields.  You will be prompted to install the Browser Assistant for your default browser when you first install AdGuard (during the onboarding process). If you missed it, you can download it for any browser at any time. "},{"title":"Extensions​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#extensions","content":" Extensions are small programs that do exactly what their name implies — they extend functionality. And AdGuard uses several extensions of its own, also called userscripts, to broaden its functions range: 1. AdGuard Assistant (legacy version) This extension assists the user in changing basic AdGuard settings within the browser, without the need to open the app itself. Like Browser Assistant, legacy Assistant works with all macOS compatible browsers. Thanks to this little tool you can do several things without having to leave the browser: add a certain webpage to the &quot;do not block&quot; list, choose and block an especially annoying element on the page, report the website if it still manages to get ads through to you. 注意 This version of Assistant is legacy and there is no point in using it on new systems, since it has been replaced with the full-fledged Browser Assistant. But legacy Assistant might be of help if there is no Browser Assistant extension for your browser. 2. AdGuard Extra This extension is used to solve the more complicated ad blocking cases you might encounter. We would recommend you to always keep it switched on, unless you have a serious reason not to. 3. AdGuard Popup Blocker Prevents all these annoying popup windows from opening when you view webpages. Blocks popup ads on web pages. One of the important features of AdGuard for Mac is that the application can work as a cross-browser userscript manager. You can easily add any scripts you like and manage existing ones without having to switch browsers every time. "},{"title":"Advanced Settings guide","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/advanced-settings/","content":"","keywords":""},{"title":"如何转到高级设置​","type":1,"pageTitle":"Advanced Settings guide","url":"adguard-for-mac/solving-problems/advanced-settings/#如何转到高级设置","content":"警告 Changing Advanced Settings may cause problems with AdGuard's performance, break the Internet connection, or compromise your security and privacy. Make changes to this section only if you are sure of what you are doing or our support team has asked you to do it. To find Advanced Settings, open AdGuard, click the gear icon, select Advanced, then select Advanced Settings. "},{"title":"高级设置​","type":1,"pageTitle":"Advanced Settings guide","url":"adguard-for-mac/solving-problems/advanced-settings/#高级设置","content":"network.extension.exclude.domains The listed domains will be excluded from filtering in the Network Extension mode. Use a comma or line break to separate values. network.extension.exclude.ports The listed ports will be excluded from filtering in the Network Extension mode. Use a comma or line break to separate values. network.extension.route.exclude The listed routes will be excluded from filtering in the Network Extension mode. Set routes using an IP address or destination CIDR. Separate values with commas or line breaks. network.extension.http.downgrade.bundleids Here you can specify a list of applications for which the HTTP/2 protocol will be downgraded to HTTP/1.1 in the Network Extension filtering mode. The bundle ID should be separated by a comma or a line break. network.extension.monterey.force.split.tunnel Here you can prohibit AdGuard from using the &quot;default route&quot; which is enabled by default in the Network Extension mode on macOS Monterey. AdGuard uses &quot;default route&quot; to disable iCloud Private Relay and Protect Mail Activity, as it cannot operate in unison with them. You will find more information about the problem in this article. network.extension.dns.redirect.exclude.bundleids Here you can specify a list of applications that make DNS queries directly not via system DNS resolver (for example, some VPN clients or DNS filtering applications). DNS filtering will be disabled for them in the Network Extension mode. The bundle IDs should be separated by a comma or line break. network.dns.filter.secure.request Redirects secure DNS requests to a local DNS proxy, if there is one available. network.https.ocsp.check By setting true, you enable HTTPS certificate revocation checking. network.tcp.keepalive.enabled Periodically sends TCP packets over an idle connection to ensure that it remains active and to renew NAT timeouts. network.tcp.keepalive.interval.seconds Idle time, in seconds, before sending a keepalive probe. If 0 is specified, the system will use the default value. network.tcp.keepalive.timeout.seconds Time, in seconds, before sending another keepalive probe to an unresponsive peer. If 0 is specified, the value selected by the system will be used. network.https.ech.enabled Uses a local DNS proxy to look for configs in the ECH Config Lists. If found, encrypts ClientHellos. network.https.enforce.certificate.transparency Verifies the authenticity of all certificates for the domain based on Chrome Certificate Transparency Policy. network.https.filter.http3.enabled By setting true, you allow AdGuard to filter traffic sent over HTTP/3, the latest version of the HTTP protocol based on QUIC. network.filtering.localnetwork By setting true, you enable local network filtering. network.filtering.localhost By setting true, you enable LoopBack filtering. dns.proxy.bootstrap.ips Here you can enter the IP addresses of the DNS servers that will be used to determine the address of the encrypted DNS server. dns.proxy.fallback.ips Here you can specify a list of IP addresses of DNS servers that will be used as backups in case the encrypted DNS server fails to respond. dns.proxy.fallback.on.upstreams.failure.enabled Normal queries will be redirected to a fallback upstream if all normal upstreams fail. dns.proxy.detect.search.domains This option enables automatic detection of the local network domain, which will be automatically redirected to the fallback DNS server instead of the main DNS server. dns.proxy.fallback.domains Here you can list domains for which the fallback DNS server will be used instead of the main DNS server. dns.proxy.adblockrules.blocking.mode Here you can specify the type of DNS server response to blocked requests, corresponding to ad-blocker-style rules. 0 — respond with REFUSED1 — respond with NXDOMAIN2 — respond with 0.0.0.0 or the addresses specified in dns.proxy.blocking.response.IPv4.address and/or dns.proxy.blocking.response.IPv6.address dns.proxy.hostrules.blocking.mode Here you can specify the type of DNS server response to blocked requests, corresponding to hosts rules: 0 — respond with REFUSED1 — respond with NXDOMAIN2 — respond with 0.0.0.0 or the addresses specified in dns.proxy.blocking.response.IPv4.address and/or dns.proxy.blocking.response.IPv6.address dns.proxy.blocking.response.IPv4.address Here you can specify the IPv4 address that will be returned in response to blocked &quot;A&quot; requests when dns.proxy.adblockrules.blocking.mode or dns.proxy.hostrules.blocking.mode is set to the response type &quot;ADDRESS&quot;. dns.proxy.blocking.response.IPv6.address Here you can specify the IPv6 address that will be returned in response to blocked &quot;AAAA&quot; requests when dns.proxy.adblockrules.blocking.mode or dns.proxy.hostrules.blocking.mode is set to the response type &quot;ADDRESS&quot;. dns.proxy.block.AAAA.requests Here you can enable IPv6 DNS query blocking. dns.proxy.blocked.response.TTL.in.seconds Here you can specify the TTL (time to live) value that will be returned in response to a blocked request. dns.proxy.parallel.upstream.queries.enabled All upstreams are queried simultaneously. The first response is returned. dns.proxy.servfail.on.upstreams.failure.enabled Responds to upstream failure with a SERVFAIL packet. dns.proxy.http3.enabled Enables HTTP/3 for DNS-over-HTTPS upstreams to accelerate connection. dns.proxy.block.encrypted.client.hello.response Removes the Encrypted Client Hello parameters from responses. stealth.antidpi.http.split.fragment.size Adjusts the size of the HTTP request fragmentation. Accepted values: 1–1500. If an invalid size is specified, the system will use the default value. stealth.antidpi.clienthello.split.fragment.size This option specifies the size of TCP packet fragmentation, which helps avoid deep packet inspection. Accepted values: 1–1500. If an invalid size is specified, the system will use the default value. stealth.antidpi.http.space.juggling Adds extra space between the HTTP method and the URL and removes space after the &quot;Host:&quot; field. stealth.antidpi.split.delay.millisecond Here you can specify the delay, in milliseconds, after sending the first fragment, if fragmentation is performed. subscription.link.interception.userscript Activate this feature if you want AdGuard to automatically intercept the URLs of userscripts and open the installation window. subscription.link.interception.filter Activate this feature if you want AdGuard to automatically intercept subscription URLs (for example, abp:subscribe, etc.) and open the custom filter setup window. "},{"title":"Network​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#network","content":" This last panel is dedicated to Network filtering, and you will find extra functionalities here. We do recommend to enable the first two ones: &quot;Automatically filter applications&quot; and &quot;Filter HTTPS protocol&quot;. Those are an important added precaution to better filter your web space. HTTP is the primary protocol for transmitting information over the Internet. Most data including ads is transferred via it, but it has one disadvantage — the connection is unencrypted. Thanks to the HTTPS filtering feature AdGuard has, not only HTTP traffic is filtered, but also HTTPS traffic (S stands for ‘secure’). There are also the options of &quot;Do not filter websites with EV certificates&quot; and &quot;Use AdGuard as an HTTP Proxy&quot;. Extended Validation (EV) SSL Certificates offer a stronger safety guarantee; owners of such websites have to pass a thorough and globally standardized identity verification process defined by EV guidelines. Which is the reason why some users trust websites with such certificates and prefer not to filter them. As for the second option — well, yes, in fact you can use AdGuard as a regular HTTP proxy server. All traffic coming through it will be filtered. This proxy will also be available on your local network, so you may use it for traffic filtering on other devices that are able to reach the proxy directly. To filter traffic on another device connected to proxy you will need to install an AdGuard root certificate there. After you configure proxy, open your browser and go to this page. "},{"title":"Others​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#others","content":"There are other useful AdGuard options that shouldn't go unnoticed in this article, since they add much to user experience. "},{"title":"许可证​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#许可证","content":"First, there's the License tab that you can open from the dropdown main menu (the one that opens once you click the gear icon on the upper right of the main window). From this tab you can see which license type you are using, check its status and validity period.  In this same tab you can refresh your license status, renew your license or reset the license key using the corresponding buttons. "},{"title":"支持​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#支持","content":"Click the gear icon in the upper right corner, select &quot;Support&quot;, and you will be able to send a bug report or a feature request to our support team. Be sure to add your real actual email though, because without it the message won't be sent.  To report a missed ad or a broken website, please follow the link above the message window, we use a separate reporting tool for those types of issues. It is possible to attach a diagnostic report to your message, you only need to check the box in the lower part of the tab. "},{"title":"Updates check​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#updates-check","content":"Last but not least. You can check for filter and program updates by clicking the corresponding menu options in the dropdown menu (click the gear icon and you'll see it). "},{"title":"安装/卸载","type":0,"sectionRef":"#","url":"adguard-for-mac/installation/","content":"","keywords":""},{"title":"系统需求​","type":1,"pageTitle":"安装/卸载","url":"adguard-for-mac/installation/#系统需求","content":"Operating system version: macOS 10.15 (64 bit) or higher RAM： 至少 2 GB 浏览器： Safari、Google Chrome、Opera、Yandex.Browser 和其他在 macOS 上可用的浏览器 可用磁盘空间： 120 MB "},{"title":"安装过程​","type":1,"pageTitle":"安装/卸载","url":"adguard-for-mac/installation/#安装过程","content":"To install AdGuard for Mac on your computer, launch your browser, type adguard.com in the address bar, and press Download on the page that opens.  Wait for AdguardInstaller.dmg to download and double-click its icon in the list of downloaded files on the Dock panel.  AdGuard 图标将出现在您的桌面上。 单击它打开安装应用程序，然后在打开的窗口中双击 AdGuard 图标。  当您第一次启用 AdGuard 时，您的操作系统将会提示您：该应用程序是从互联网下载的 App。 点击打开。  在下一步，请点击安装。  请等待安装程序完成安装所需要的文件。  以使用应用程序，需要输入 macOS 账号的用户名和密码。 Enter the password when prompted in the dialogue box and press OK.  现在，您将看到一个快速安装向导，您可以在其中根据需要配置保护。 您可以马上开始设置（来试试吧！） 或暂时无设置需求（先保持这样）。  完成啦！AdGuard 已成功安装到您的 Mac！ "},{"title":"卸载​","type":1,"pageTitle":"安装/卸载","url":"adguard-for-mac/installation/#卸载","content":""},{"title":"一般卸载方式​","type":1,"pageTitle":"安装/卸载","url":"adguard-for-mac/installation/#一般卸载方式","content":"首先，请您点击相应的图标以打开 'Finder'：  前往应用程序。 在列表中找到 AdGuard，右键它并选择移到废纸篓。  "},{"title":"进阶卸载方式​","type":1,"pageTitle":"安装/卸载","url":"adguard-for-mac/installation/#进阶卸载方式","content":"除非您知道如何操作或有我们技术支持专门为您推荐使用进阶方式卸载应用程序，我们不推荐您使用该方式。 另外，先执行「标准卸载」的所有步骤。 之后，删除以下 AdGuard 文件： /Library/Application Support/AdGuard Software/com.adguard.mac.adguard（文件夹）~/Library/Preferences/com.adguard.mac.adguard.plist（文件）~/Library/Group\\Containers/TC3Q7MAJXF.com.adguard.mac（文件夹）/Library/LaunchDaemons/com.adguard.mac.adguard.adguard-pac.daemon.plist（文件）/Library/LaunchDaemons/com.adguard.mac.adguard.adguard-tun-helper.daemon.plist（文件）/Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard-pac.daemon.log（文件）。/Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-tun-helper.daemon.log（文件） To do so, open the Terminal app, then enter and execute the following commands: sudo rm -R &quot;/Library/Application Support/AdGuard Software/com.adguard.mac.adguard&quot; rm -R &quot;$HOME/Library/Application Support/com.adguard.mac.adguard&quot; rm $HOME/Library/Preferences/com.adguard.mac.adguard.plist rm -R &quot;$HOME/Library/Group Containers/TC3Q7MAJXF.com.adguard.mac&quot; find &quot;$HOME/Library/Application Support&quot; -name &quot;com.adguard.browser_extension_host.nm.json&quot; -delete sudo rm /Library/LaunchDaemons/com.adguard.mac.adguard.adguard-pac.daemon.plist sudo rm /Library/LaunchDaemons/com.adguard.mac.adguard.adguard-tun-helper.daemon.plist sudo rm /Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-pac.daemon.log sudo rm /Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-tun-helper.daemon.log 运行活动监控器应用程序。 通过搜索查找 cfprefsd 进程。 退出在用户态下运行的进程（不是在 root 权限运行的）。 为了退出，请点击进程，然后在左上角点击 X。 在对话窗确认要退出。 AdGuard 卸载完成。 "},{"title":"How to install AdGuard on macOS High Sierra and above","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/high-sierra-compatibility/","content":"How to install AdGuard on macOS High Sierra and above 信息 本文适用于 Mac 版的 AdGuard，它是一种多功能广告拦截器，可在系统级别保护用户的设备。 To see how it works, download the AdGuard app During the Installation of AdGuard on macOS High Sierra (or later versions) you may see a message: &quot;System Extension Blocked&quot;. This is a new security mechanism that appeared in High Sierra, it requires you to explicitly allow the installation of a third-party system extension. To complete the installation of AdGuard you have to manually allow loading the extension in System Preferences → Security &amp; Privacy → General. Click the &quot;Allow&quot; button, and after that you will be able to proceed with the installation as normal.","keywords":""},{"title":"iCloud Private Relay and AdGuard","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/icloud-private-relay/","content":"","keywords":""},{"title":"Problem description in a nutshell​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#problem-description-in-a-nutshell","content":"By default, AdGuard uses the &quot;default route&quot; which disables iCloud Private Relay. Currently, AdGuard and iCloud Private Relay cannot work at the same time. AdGuard cannot block ads because iCloud Private Relay encrypts traffic before AdGuard can filter network connections. When iCloud Private Relay is active, any filtering (including local filtering) becomes impossible. Thus, AdGuard can't filter traffic or perform DNS filtering in Safari. Yet, AdGuard still filters traffic in other browsers. To keep using iCloud Private Relay, consider installing AdGuard for Safari. The same applies to using any VPN apps on Mac: you have to choose between using iCloud Private Relay or a VPN service. "},{"title":"In detail​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#in-detail","content":"AdGuard for Mac now uses macOS built-in socket filtering based on the network extensions API. This new and rather buggy mechanism replaced good old Kernel extensions. Over the last 1.5 years, we've reported more than 20(!) bugs to Apple regarding their new filtering method. The network extensions API has a VPN-like configuration with a list of route-like entries. On Big Sur, AdGuard developed &quot;split-tunnel&quot; rules to avoid creating the &quot;default route&quot; rule because it causes problems on early Big Sur releases. On Monterey, iCloud Private Relay got introduced. Privacy features of the Mail app also use Private Relay servers. As a result, AdGuard can't work together with iCloud Private Relay and the Mail app privacy features: iCloud Private Relay is applied to connections at the library level — before they reach the socket level, where AdGuard operates.iCloud Private Relay uses QUIC, which AdGuard can't filter in filtered apps because HTTP/3 filtering is not yet available.As AdGuard blocks QUIC, including iCloud Private Relay traffic — otherwise, ad blocking is impossible.When you use iCloud Private Relay and switch AdGuard into the &quot;split-tunnel&quot; mode, you can't open websites in Safari.To work around this issue for Monterey, we apply the &quot;default route&quot; rule. When Private Relay sees that rule, it disables itself automatically. So, AdGuard works seamlessly on Monterey, but iCloud Private Relay gets disabled. network.extension.monterey.force.split.tunnel restores the &quot;Big Sur&quot; behavior, but this option may break access to websites due to (3) and (4). We keep searching for a solution to this issue. One of the options is implementing HTTP/3 filtering. "},{"title":"Recommended solution​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#recommended-solution","content":"We recommend using AdGuard together with a more traditional VPN service such as AdGuard VPN. "},{"title":"Alternative solution​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#alternative-solution","content":"You can prevent AdGuard from using the &quot;default route&quot; by disabling the &quot;default route&quot;. It can be done via Advanced Settings → network.extension.monterey.force.split.tunnel.  Bear in mind that, in this case, you'll face the issues described above. "},{"title":"Launch issues on macOS","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/launch-issues/","content":"","keywords":""},{"title":"Launch issues on macOS 11 and higher​","type":1,"pageTitle":"Launch issues on macOS","url":"adguard-for-mac/solving-problems/launch-issues/#launch-issues-on-macos-11-and-higher","content":"If you have problems launching AdGuard for Mac on Big Sur and Monterey operating systems, please use this instruction: Reboot Mac and enter recovery mode.Disable SIP (Launch Terminal from the Utilities menu and type csrutil disable).Reboot Mac.Close the AdGuard app, open Terminal and type systemextensionsctl reset.Reboot Mac and enter recovery mode.Enable SIP (Launch Terminal from the Utilities menu and type csrutil enable).Launch the AdGuard app and enable protection. "},{"title":"Launch issues on macOS 10​","type":1,"pageTitle":"Launch issues on macOS","url":"adguard-for-mac/solving-problems/launch-issues/#launch-issues-on-macos-10","content":"If you have problems launching AdGuard for Mac on Sierra, Mojave and Catalina operating systems, please use this instruction: Open Terminal and enter command ls -@lOae /private/var/db/KernelExtensionManagement.Check that the restricted flag is not present (like on the screenshot). Reboot your Mac in recovery mode.Open Utilities → Terminal.Enter csrutil disable.Enter administrator password.Reboot your Mac.Open Terminal and enter the following command: sudo chflags restricted /private/var/db/KernelExtensionManagement.Reboot your Mac in recovery mode.Open Utilities → Terminal → Enter csrutil enable → Enter administrator password → Reboot your Mac.Enable AdGuard protection. "},{"title":"Installation problems solving","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/installation-issues/","content":"","keywords":""},{"title":"\"Installation failed\" error in macOS Catalina​","type":1,"pageTitle":"Installation problems solving","url":"adguard-for-mac/solving-problems/installation-issues/#installation-failed-error-in-macos-catalina","content":"During the installation you can face an error like this:  Follow this instruction to solve the problem: Restart your MacAs your Mac restarts, press and hold down the Command(⌘) + R keys immediately upon hearing the startup chime. Hold the keys until the Apple logo appears to get the computer into Recovery mode.From the top bar select Utilities → Terminal, and execute this command: csrutil disableRestart the Mac and log into Administrator's profileOpen the Finder window and select from the top bar Go → Go to Folder and type ~/private/Create a folder named tmp and type in your passwordLaunch AdGuard installation As the installation is completed, restart your Mac in Recovery mode using the instruction above and execute csrutil enable command in Terminal to enable system protection. "},{"title":"Manual certificate installation","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/manual-certificate-installation/","content":"Manual certificate installation 信息 本文适用于 Mac 版的 AdGuard，它是一种多功能广告拦截器，可在系统级别保护用户的设备。 To see how it works, download the AdGuard app AdGuard for Mac needs to install the root certificate into certificate storage to be able to filter HTTPS traffic. This action is performed automatically in most cases as you run the app for the first time, but users of Gecko-based browsers (Firefox, Waterfox etc.) who have a master password set up for their browser may be required to take additional steps (because these browsers use their own certificate storage instead of the system one). They need to either enter the master password when prompted (to grant AdGuard access to the certificate storage) or manually install the certificate. To manually install the certificate into Firefox-like browser: Open &quot;Preferences&quot; Go to &quot;Privacy &amp; Security&quot; — &quot;Certificates&quot; Click on &quot;View Certificates&quot; Navigate to the &quot;Authorities&quot; tab and click the &quot;Import...&quot; button Select file /Library/Application Support/AdGuard Software/com.adguard.mac.adguard/AdguardCore/Adguard Personal CA.cer or just download it from http://local.adguard.org/cert using a Chromium-based browser (e.g Google Chrome or new Edge) and with a HTTPS-filtering running in AdGuard Exact actions required for different Gecko-based browsers may vary, but the general sequence and the path to AdGuard Personal CA.cer file will be the same. PS: For Setapp application version the file path is the following: /Library/Application Support/com.adguard.mac.adguard-setapp/AdguardCore/Adguard Personal CA.cer","keywords":""},{"title":"Compatibility issues with different macOS versions","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/big-sur-issues/","content":"","keywords":""},{"title":"Currently existing problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#currently-existing-problems","content":"Every year Apple releases a new version of macOS, introducing innovative solutions and adding new useful features. But some of them, such as Network Extensions API (Big Sur) or iCloud Private Relay (Monterey), cause some problems to many applications, AdGuard not being an exception. In this article we go over the known issues specific to each macOS version and possible ways to solve them. "},{"title":"Monterey 12: currently existing problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#monterey-12-currently-existing-problems","content":"These problems aren't fixed by Apple yet, or fixed only partially. Compatibility with iCloud Private Relay​ Currently, AdGuard and iCloud Private Relay cannot work at the same time. AdGuard has no ability to block ads because iCloud Private Relay encrypts traffic before AdGuard can filter network connections. When iCloud Private Relay is active, any filtering (including local filtering) becomes impossible. Thus, AdGuard can't filter traffic or perform DNS filtering in Safari. That's why by default, AdGuard uses the &quot;default route&quot; which disables iCloud Private Relay. For a deeper understanding of this problem, read this article. Recommended solution We recommend using AdGuard together with a more traditional VPN service such as AdGuard VPN. Alternative solution You can prevent AdGuard from using the &quot;default route&quot; by disabling it. It can be done via Advanced Settings → network.extension.monterey.force.split.tunnel. Note that enabling this setting will cause the problems described above.  Compatibility with Protect Mail Activity​ Apple's Mail app now uses a proxy to hide a user's IP address when downloading images from emails. However, it won't work if there's an active VPN connection. As it treats AdGuard as a VPN, it won't preload images automatically. For a deeper understanding of this problem, read this article. Recommended solution At this point, we recommend using a more traditional VPN service, such as AdGuard VPN, instead of the new Apple's privacy features. "},{"title":"Monterey 12, Big Sur 11.6 and later: currently existing problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#monterey-12-big-sur-116-and-later-currently-existing-problems","content":"These problems aren't fixed by Apple yet, or fixed only partially. Compatibility with Cisco AnyConnect​ AdGuard will not work together with Cisco AnyConnect while in the Network Extension mode. You have to switch AdGuard to Automatic Proxy mode. To do so, follow this instruction. Compatibility with Flutter​ This problem is solved in Flutter 2.2, released in June 2021. But to fix it for applications developed in Flutter, you need to wait for updates. If you use Flutter alongside AdGuard in &quot;Network Extension&quot; mode (or any other &quot;Transparent Proxy&quot;-type app) in Monterey or Big Sur, you will run into problems: projects won't open and Flutter will be effectively broken. We have already reported this bug to Apple. Meanwhile, you can use these temporary solutions: Use AdGuard in Automatic Proxy mode. Disable SIP and switch AdGuard to Kernel Extension mode as explained here. VPN apps with legacy API​ Despite AdGuard is displayed as a VPN in system settings, it shouldn't cause any conflicts when working alongside other VPN-based apps. However, if you're using a VPN-based app that was downloaded from outside App Store, there's a chance it uses the old VPN API and you have to exclude it from filtering: Open AdGuard's menu.Select Preferences....Switch to the Network tab.Click the Applications... button.Find the app you want to exclude and uncheck the checkbox next to it.  "},{"title":"Already fixed problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#already-fixed-problems","content":"These problems have been fixed by Apple by now but can be encountered in the older versions of macOS Big Sur. "},{"title":"Compatibility with Little Snitch 5​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#compatibility-with-little-snitch-5","content":"At this moment, Network Extension mode in AdGuard isn't compatible with Little Snitch 5. When both are running, there's a chance to encounter issues with various apps' behavior, even if they aren't filtered by AdGuard. This problem is directly caused by a bug in Big Sur, and we've already informed Apple about it. This leaves us to believe that this issue will get resolved in one of the next updates. It needs to be said that this problem can't be solved by disabling connections monitoring in Little Snitch, because this action doesn't unload Little Snitch's extension from the system. We recommend to switch to Automatic Proxy filtering mode when running AdGuard alongside with Little Snitch on Big Sur, at least until Apple fixes the bug. "},{"title":"Compatibility with local proxies​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#compatibility-with-local-proxies","content":"注意 Now AdGuard can filter local proxies (mostly) without any problems. If you encounter any issues in OS versions 11.1+, or if you're using Big Sur 11.0, remove the local proxy from System settings and configure an upstream proxy in AdGuard by following the instruction below. To configure an upstream proxy in AdGuard for Mac in Big Sur: Open AdGuard's settings Preferences → Network → Outbound proxy.Choose HTTP, HTTPS, SOCKS4 or SOCKS5, depending on your proxy type.Fill in the fields: host is the IP address of your proxy server,port is the desired port number to be used by the proxy server,user and password are corresponding username and password of your proxy (if needed). Ignore either or both when not applicable. If you run into any problems, please contact our tech support at support@adguard.com. Example 1: Configuring an upstream Shadowsocks proxy​ Here's an example of how to configure an upstream proxy for Shadowsocks. First of all, you need a working server side for your proxy. Most likely, to set it up, you would use a JSON file like this (server and password values were chosen randomly here): { &quot;server&quot;:&quot;111.222.333.444&quot;, &quot;server_port&quot;:8388, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;barfoo!&quot;, &quot;timeout&quot;:600, &quot;method&quot;:&quot;chacha20-ietf-poly1305&quot; }  提示 You can find more information about how to get started on Shadowsocks website. Then you'd have to install Shadowsocks client on your Mac. Make sure that you select 'Manual Mode' or 'Auto Mode' in its settings! The configuration won't work if you select 'Global Mode' (or 'Auto Mode' in Big Sur versions prior to 11.1).  Now go to AdGuard menu → Advanced → Advanced Settings... and set the Value area of the upstream.proxy setting to socks5://localhost:1080. Notice that you need to use &quot;local_port&quot; value from the JSON file here. Because Shadowsocks uses SOCKS5, you also need to set the value of the upstream.proxy.socks5udp setting in AdGuard Advanced Settings to true to make AdGuard route UDP traffic to the proxy server. Example 2: Configuring an upstream Surge proxy​ In Big Sur v11.1+, there are no known conflicts between AdGuard and Surge proxy. If you are using an older version of Big Sur (prior to 11.1), check that System Proxy in the bottom right corner is disabled. Otherwise, Surge won't work with AdGuard. On the other hand, Enhanced Mode can be enabled without causing a conflict in any Big Sur version.  Now go to Preferences → Network → Outbound proxy and fill in the fields. For SOCKS5 proxy type: host: localhostport: 6153 For HTTP proxy type:host: localhostport: 6152 "},{"title":"Alternatives to using a Network Extension​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#alternatives-to-using-a-network-extension","content":"It's impossible to foresee each and every possible problem that can pop up in Big Sur or Monterey, there are countless various hardware/software and settings configurations. If you face any compatibility issues, please contact our support team, but feel free to try one of these workarounds first. "},{"title":"Using \"Automatic proxy\" filtering mode​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#automatic-proxy","content":"If you face problems in Big Sur or Monterey which can't be resolved by any of the methods above, you can try switching AdGuard to Automatic proxy mode. Open AdGuard's menu.Select Preferences....Switch to the Network tab.Click the Select Mode... button.Select Automatic Proxy.  Now AdGuard has automatically added a .pac file to your Mac's network settings, so that the system will consider AdGuard a proxy and try to send all traffic through AdGuard. 注意 Some apps may ignore this system setting and their traffic will not be filtered. "},{"title":"Enabling Kernel Extension in Big Sur and Monterey​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#kernel-extension","content":"By default AdGuard uses Network Extension framework in Big Sur and Monterey as the old Kernel Extension framework is disabled there. This can cause some compatibility problems, but to enable Kernel Extension back, you need to disable System Integrity Protection (SIP) first. To disable SIP, follow this instruction: Click the Apple symbol in the Menu bar.Click Restart…Hold down Command-R to reboot into Recovery Mode.Click Utilities.Select Terminal.Type csrutil disable.Press Return or Enter on your keyboard.Click the Apple symbol in the Menu bar.Click Restart… Now that SIP is disabled, this is how you enable Kernel Extension:  Open AdGuard's menu.Select Preferences....Switch to the Network tab.Click the Select Mode... button.Select Kernel Extension.Confirm that you want to switch to Kernel Extension. 警告 However, we only recommend using this method if everything else fails, as this may lead to unexpected issues. "},{"title":"在 Tor 浏览器设置过滤","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/tor-filtering/","content":"在 Tor 浏览器设置过滤 信息 本文适用于 Mac 版的 AdGuard，它是一种多功能广告拦截器，可在系统级别保护用户的设备。 To see how it works, download the AdGuard app Tor 浏览器默认添加到「过滤应用程序」的 AdGuard 列表内。 不过，为了进行过滤，AdGuard 需要更改 Tor 浏览器的安全设置。 这样，Tor 将信任 AdGuard CA 证书。 如您想要在 Tor 浏览器进行过滤，并在「首选项」→「网络」→「应用程序」开启 AdGuard 过滤，那么 AdGuard 将为您显示以下内容的窗口 ： 为了更新 Tor 浏览器设置，AdGuard 将设置： security.enterprise_roots.enabled: true 此设置将允许 Tor 信任根证书。 了解更多 security.cert_pinning.enforcement_level: 1 Public Key Pinning（公钥固定）是一种安全措施，允许网站确保网站和用户之间的连接是真实的。 这涉及到网站发布一个它所信任的公钥列表。 在执行级别设置（enforcement level）为「1」的情况下，锁定（pinning）对自定义 CA 证书来说是不执行的。 了解更多 为了应用更改，请重新开启 Tor 浏览器。 If you manually change these settings, Tor filtering will be stopped.","keywords":""},{"title":"Protection cannot be enabled","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/protection-cannot-be-enabled/","content":"Protection cannot be enabled 信息 本文适用于 Mac 版的 AdGuard，它是一种多功能广告拦截器，可在系统级别保护用户的设备。 To see how it works, download the AdGuard app If AdGuard Protection cannot be enabled for some reason, perform the following steps: Click the AdGuard icon at the Menu Bar → go to Advanced → Reset settings... → Quit AdGuard... In the Spotlight Search, type Terminal, enter sudo rm -R /Library/Application\\ Support/com.adguard.adguard and execute. Restart your computer. Open the Terminal again, type ls -al /Library/StagedExtensions/Library/Application\\ Support/com.adguard.adguard/ and execute. You should receive the following: No such file or directory. Start AdGuard, type in login and password when prompted.","keywords":""},{"title":"Protect Mail Activity and AdGuard","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/protect-mail-activity/","content":"","keywords":""},{"title":"In a nutshell​","type":1,"pageTitle":"Protect Mail Activity and AdGuard","url":"adguard-for-mac/solving-problems/protect-mail-activity/#in-a-nutshell","content":"Apple's Mail app now uses a proxy to hide a user's IP address when downloading images from emails.  However, it won't work if there's an active VPN connection. As it treats AdGuard as a VPN, it won't preload images automatically. Apple explains this issue here. "},{"title":"In detail​","type":1,"pageTitle":"Protect Mail Activity and AdGuard","url":"adguard-for-mac/solving-problems/protect-mail-activity/#in-detail","content":"AdGuard for Mac now uses macOS built-in socket filtering based on the network extensions API. This new and rather buggy mechanism replaced good old Kernel extensions. Over the last 1.5 years, we've reported more than 20(!) bugs to Apple regarding their new filtering method. The network extensions API has a VPN-like configuration with a list of route-like entries. On Big Sur, AdGuard used &quot;split-tunnel&quot; rules to avoid creating the &quot;default route&quot; rule because it causes problems on early Big Sur releases. These problems were solved in Monterey so nothing prevents us from using the &quot;default route&quot; rule. On Monterey, iCloud Private Relay got introduced. Privacy features of Mail.app also use Private Relay servers. As a result, AdGuard can't work together with iCloud Private Relay and Mail.app privacy features: iCloud Private Relay is applied to connections at the library level - before they reach the socket level, where AdGuard operates.iCloud Private Relay uses QUIC, which AdGuard can't filter because HTTP/3 filtering is not yet available.As AdGuard blocks QUIC, including iCloud Private Relay traffic - otherwise, ad blocking is impossible.When you use iCloud Private Relay and switch AdGuard into the &quot;split-tunnel&quot; mode, you can't open websites in Safari.To work around this issue for Monterey, we apply the &quot;default route&quot; rule. When Private Relay sees that rule, it disables itself automatically. So, AdGuard works seamlessly on Monterey, but iCloud Private Relay gets disabled. network.extension.monterey.force.split.tunnel restores the &quot;Big Sur&quot; behavior, but this option may break access to websites due to (3) and (4). We keep searching for a solution to this issue. One of the options is implementing HTTP/3 filtering. "},{"title":"Recommended solution​","type":1,"pageTitle":"Protect Mail Activity and AdGuard","url":"adguard-for-mac/solving-problems/protect-mail-activity/#recommended-solution","content":"At this point, we recommend using a more traditional VPN service, such as AdGuard VPN, instead of the new Apple's privacy features. "},{"title":"Documentation for admins","type":0,"sectionRef":"#","url":"adguard-for-windows/admins-documentation/","content":"","keywords":""},{"title":"1. Download the MSI​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#msi-download","content":"Download the AdGuard MSI. "},{"title":"2. Configure the settings for your network​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#settings-configuring","content":"On machines that are joined to an Active Directory domain, policy settings may also be stored in the registry under HKEY_LOCAL_MACHINE in the following path: Software\\Policies\\AdGuard\\. The only supported policy is LicenseKey. If this policy is set, AdGuard will prefer it over what user can enter in the interface. This license key will be used for checking license status. "},{"title":"3. Make sure that AdGuard servers are available​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#servers-available","content":"AdGuard connects to two hosts: api.adguard.org and filters.adtidy.org. Make sure that both servers are available. "},{"title":"4. Push the MSI out to your network​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#msi-push","content":"If you usually use SMS or other tools, use them to push out the AdGuard MSI just as you would normally do with any other installation bundle. Otherwise, you can run the MSI on the target machine directly (and silently) with this command: Msiexec /q /i AdGuard.msi If you need to roll out an update, use this command: Msiexec /q /i AdGuard.msi REINSTALL=ALL REINSTALLMODE=vomus 注意 You must run these commands with admin privileges. If you want to install AdGuard on a Windows 7 computer, make sure that it has .NET 4 Client Profile installed: https://www.microsoft.com/en-us/download/details.aspx?id=24872 信息 Automatic updates are disabled when you install AdGuard for Windows from MSI. If you want to allow updates for a user (which is not recommended because centralized updates will become impossible), set the value of the AllowCheckUpdates parameter for the HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Adguard key to YES (case insensitive). In this case automatic updates will be allowed, any other value or no value for this parameter disables automatic updates. "},{"title":"5. Test your installation​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#installation-test","content":"On a target machine, launch AdGuard. Open the license screen to check that it uses the one you've set. You might need to click &quot;Refresh status&quot; to make AdGuard validate the license key. "},{"title":"Safari extensions","type":0,"sectionRef":"#","url":"adguard-for-safari/extensions/","content":"","keywords":""},{"title":"What Safari extensions are​","type":1,"pageTitle":"Safari extensions","url":"adguard-for-safari/extensions/#what-safari-extensions-are","content":"Safari extensions are small software programs that add functionality to the Safari web browser. They allow users to customize and enhance their browsing experience by adding features that are not natively built into the browser. AdGuard for Safari uses extensions primarily to apply filtering rules on websites opened in Safari. "},{"title":"How it works​","type":1,"pageTitle":"Safari extensions","url":"adguard-for-safari/extensions/#how-it-works","content":"To block ads, trackers, and annoyances on websites, AdGuard uses filtering rules. The rules from AdGuard's and your custom filters are converted into ones comprehensible by Safari and are integrated into 6 Safari extensions: AdGuard GeneralAdGuard PrivacyAdGuard SocialAdGuard SecurityAdGuard Other Each content-blocking extension can include up to 150,000 active filtering rules. The number of rules within most filter groups does not surpass 150,000. However, if you activate too many language-specific or custom filters, you might exceed the limit. In such cases, random rules that are over the limit will be automatically disabled, which may lead to incorrect blocking. We strongly recommend activating only the filters you need. There is also one more extension responsible for other features: AdGuard for Safari, which adds the AdGuard icon next to the search bar in Safari and allows using advanced rules to block complex ads.  More on each extension below. "},{"title":"Content-blocking extensions​","type":1,"pageTitle":"Safari extensions","url":"adguard-for-safari/extensions/#content-blocking-extensions","content":"AdGuard General applies rules from filters that you can find in Filters → Ad blocking and Filters → Language-specific. This extension focuses on comprehensive ad blocking and includes filters for ads in specific languages. AdGuard Privacy applies rules from filters located in Filters → Privacy. It blocks tracking mechanisms and ensures that your browsing activity remains private. AdGuard Social applies rules from filters that can be found in Filters → Social Widgets and Filters → Annoyances. It blocks popups, social media buttons, online assistant windows, and other elements on web pages that you might find annoying. AdGuard Security applies rules from filters under Filters → Security. This extension identifies and blocks potentially harmful elements, safeguarding users from malicious content. AdGuard Other applies rules from filters that that don't fall under the above-mentioned categories and that are located in Filters → Other: Filter unblocking search ads and self-promotion, AdGuard DNS filter, and AdGuard Experimental filter. AdGuard Custom applies rules from filters that you add on your own to Custom filters. User rules and allowlist rules are included into every extension. "},{"title":"AdGuard Safari版​","type":1,"pageTitle":"Safari extensions","url":"adguard-for-safari/extensions/#adguard-safari版","content":"AdGuard for Safari enables the AdGuard icon next to the search bar. It's useful if you want to quickly set up protection on a particular website or block ads manually. It also contains advanced rules that aren't converted into the format supported by Safari. This includes CSS rules, CSS selectors, and scriptlets that allow AdGuard to block complex ads — for example, on YouTube. "},{"title":"How to manage Safari extensions​","type":1,"pageTitle":"Safari extensions","url":"adguard-for-safari/extensions/#how-to-manage-safari-extensions","content":"Open Safari and click Safari in the upper left corner of the screen to expand the menu. Click Settings...Select Extensions.  "},{"title":"Why AdGuard for Safari requires permission​","type":1,"pageTitle":"Safari extensions","url":"adguard-for-safari/extensions/#why-adguard-for-safari-requires-permission","content":"When enabling the AdGuard for Safari extension, you might notice that it requires access to web page content and access to browsing history. Here's why it needs these permissions: Access to web page content is required for manual ad blocking and advanced blocking rules to work correctlyAccess to browsing history is required to check the protection status on websites and determine which advanced rules should be applied We do not use this data for any other purpose or share it with anyone. For more info, you can consult our Privacy policy. "},{"title":"Installation","type":0,"sectionRef":"#","url":"adguard-for-safari/installation/","content":"","keywords":""},{"title":"How to install AdGuard for Safari​","type":1,"pageTitle":"Installation","url":"adguard-for-safari/installation/#install","content":"AdGuard for Safari is a free app presented on the App Store. To install it on your device, do the following. Open the App Store and find the needed extension there. Press Get → Install → Open. To set up AdGuard for Safari, enable the AdGuard extensions in the Safari settings. In a notification, click Fix it. In an opened window, check the boxes next to AdGuard extensions. 注意 Not all extensions are required for AdGuard for Safari to function correctly. For instance, checking the Icon extension enables the icon next to the search bar. However, we recommend enabling all of them. ::: ![Extensions checked](https://cdn.adtidy.org/content/Kb/ad_blocker/safari/adguard-for-safari-extensions-checked.png)  To make AdGuard take effects on websites, the Content Blockers setting must be enabled. You can either enable for all websites or select the ones you want. 注意 This step is needed for iOS 9.0 and later, macOS 10.11 with Safari 10, and macOS 10.12 and later. ::: On macOS, click Preference → Websites → Content Blockers. If you want to enable AdGuard on every website, turn When visiting other websites to On. ![Mac Safari Content Blocker Setting](https://i0.imgs.ovh/2023/10/26/Fmc9U.png) &lt;!-- adguard-for-safari-content-blocker-setting-macos.png --&gt;  On iOS, go Settings → Safari → Content Blockers, and set the option to Yes. ![iOS Safari Content Blocker Setting](https://i0.imgs.ovh/2023/10/26/FmgM0.jpeg) &lt;!-- adguard-for-safari-content-blocker-setting-ios.jpg --&gt;  After you complete steps 1-4, AdGuard for Safari will start functioning. You can now configure its settings. "},{"title":"How to uninstall AdGuard for Safari​","type":1,"pageTitle":"Installation","url":"adguard-for-safari/installation/#uninstall","content":"To uninstall AdGuard for Safari, do the following: Quit the app. Open Safari preferences. Choose the Extensions tab. You will see a list of extensions, AdGuard has eight. Uncheck all checkboxes and press Uninstall below any of them. At this point, you will see a notification: Press Show in Finder and move the application to the bin. AdGuard for Safari will be removed from your device. "},{"title":"Browser Assistant","type":0,"sectionRef":"#","url":"adguard-for-windows/browser-assistant/","content":"","keywords":""},{"title":"Benefits​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#benefits","content":""},{"title":"Independence​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#independence","content":"AdGuard Browser Assistant is a browser extension, it is installed in a browser, so there is no need to wait for the userscript to be injected into the filtered web page, as it was with the preceding one. In other words, it is more autonomous from the main AdGuard app. Still, Browser Assistant needs the installed AdGuard for Windows, because there is no point in using the extension without the app. "},{"title":"Compatibility with the main app​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#compatibility-with-the-main-app","content":"If you got into the habit of using our previous AdGuard Ad Blocker extension in Integration mode, you may like the solution that we have developed for the new Browser Assistant. Background information: In previous versions of the AdGuard Browser Extension (before v3.5), if you had it installed along with the AdGuard for Windows app, the extension took over the functions of Assistant, stopped filtering itself and relied on the app to do this. The extension and the app worked in conjunction but sometimes the integration would fail. Some websites would stop being protected by the desktop program and be backed up only by the less powerful extension. When using the Browser Assistant, all these problems don’t matter as there can be no conflicts in essence. The role of the Browser Assistant is well-defined and it can’t hinder the functioning of the main app, so there is no need to worry. "},{"title":"Separate tab in Settings​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#separate-tab-in-settings","content":"The new Browser Assistant has its own tab in AdGuard for Windows settings, along with Stealth Mode, Browsing Security, Parental Control and others. There you will find a link to download the extension for your default browser. Besides, there is a checkbox to enable the legacy Assistant.  "},{"title":"Legacy Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#legacy-assistant","content":"Legacy Assistant is the previous version of Assistant, which is a mere userscript, not a browser extension. Basically, there are two cases when you might want to pick it instead of the new Browser Assistant: The new Assistant is not available for your browser.You are used to the green shield icon and want to leave things as they were. "},{"title":"How to install AdGuard Browser Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#how-to-install-adguard-browser-assistant","content":"If you want to install the Browser Assistant for your default browser, you can do it directly from the app settings, but you also have an opportunity to install it for other browsers. AdGuard Browser Assistant is available for all popular browsers: Chrome, Firefox, Edge, Opera, and Yandex. To install the one you need (or many, it is not prohibited but even encouraged), go to our website, click the browser icon and tap the Install button. That’s it! "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-safari/overview/","content":"","keywords":""},{"title":"常规​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#general","content":" The first tab is the General screen where you can set up basic things like notifications, update intervals, and launching AdGuard at system startup. You can also choose to display the AdGuard icon in the menu bar. There you can also turn on content blockers to block ads, trackers, annoyances, etc. "},{"title":"Filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#filters","content":" A filter is a list of rules written in a special syntax. Following these rules, content blockers can filter web traffic: block ads or requests to malicious websites. Filters are combined into eight thematic categories: Ad Blocking, Privacy, Social widgets, Annoyances, Security, Language-specific filters, Custom, and Other filters. Read more about AdGuard filters or ad filtering in general. In the Filters tab, you can enable the whole category or separate filters. Changes in the Filters tab are reflected in the Content Blockers section (located in the General tab). "},{"title":"Content blockers​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#contentblockers","content":" A content blocker is a thematic cluster of filters. Privacy-related filters are included in the content blocker with the corresponding name — AdGuard Privacy. Content Blockers were designed for two reasons: to structure filters and to conform to Apple’s restrictions. In 2019, Apple put limitations on ad blockers for Safari, allowing them to use only 50,000 filtering rules simultaneously. As this number was not enough for an ad blocker to provide a good filtering quality (AdGuard Base Filter alone has 30,000 filtering rules), we divided AdGuard for Safari into six content blockers each containing up to 50,000 rules. In 2022, Apple increased the filtering rule limit for each content blocker to 150,000 rules applied simultaneously. Regarding AdGuard for Safari, up to 900,000 rules can be enabled for all six content blockers. Whereas the limit has been increased, the structure of content blockers has remained the same. In the Content blockers tab, you can see which content blockers are enabled, how many rules each of them is using, and which filters are functioning. 提示 You can manage enabled filters in the Filters tab. In the Content blockers section, you can only see the list of already enabled filters. "},{"title":"AdGuard General​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_general","content":"AdGuard General is a content blocker that combines the most essential filters for blocking ads. We recommend keeping the AdGuard Base Filter always enabled. "},{"title":"AdGuard Privacy​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_privacy","content":"This content blocker is the main tool against counters and other web analytics tools. The AdGuard Tracking Protection filter is enabled by default. "},{"title":"AdGuard Social​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_social","content":"AdGuard Social contains filters against social media buttons, widgets, scripts, and icons. Other annoyance filters can also be found in this section: filters against pop-ups, mobile app banners, cookie notices, and more. To enable them, find Social Widgets in the Filters tab. "},{"title":"AdGuard Security​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_security","content":"This content blocker unites several security-related filters. Malware Domains Blocklist blocks domains that are notorious for spreading malware and spyware. Spam404 protects you from Internet fraudsters. NoCoin Filter List disrupts browser-based cryptominers, such as Coinhive. "},{"title":"AdGuard Other​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_other","content":"AdGuard Other contains filters with various functions. For example, it has a filter that unblocks search ads and self-promo ads. In some cases, it helps find exactly what you are looking for, because these kinds of ads are more relevant and less intrusive than others. Disclaimer We don’t have any ‘acceptable ads’ paid by advertisers. Instead, we provide users with an option to see search ads and websites' self-promotion. "},{"title":"AdGuard Custom​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_custom","content":" If you need more filters, you can add them to AdGuard Custom. To add a custom filter, enter a URL or a local file path in the relevant field. You can find new filters at filterlists.com. "},{"title":"User rules​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#userrules","content":"User rules can be used to customize ad blocking. They can be added manually, imported, or created automatically when you block an element on the page. To add your own filering rules, use a special syntax. "},{"title":"关于​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#about","content":" In the About tab, you can see info about the current version of your product and links to legal documents. There is also a link to our repository on GitHub. You can monitor the product development, create feature requests and report bugs there. Reminder AdGuard for Safari can be downloaded for free from the App Store. A detailed setup instruction is available in the Knowledge base. "},{"title":"Installation","type":0,"sectionRef":"#","url":"adguard-for-windows/installation/","content":"","keywords":""},{"title":"系统需求​","type":1,"pageTitle":"Installation","url":"adguard-for-windows/installation/#系统需求","content":"操作系统： Microsoft Windows 11、10、8.1、8、7、Vista RAM： 至少 512 MB 可用磁盘空间： 150 MB 浏览器： 百度、Microsoft Edge、Microsoft Internet Explorer（所有版本）、Opera、Google Chrome、Yandex.Browser、Mozilla Firefox 和其他浏览器。 "},{"title":"AdGuard installation​","type":1,"pageTitle":"Installation","url":"adguard-for-windows/installation/#adguard-installation","content":"如您想要在 Microsoft Windows 操作系统的电脑或笔记本上使用 AdGuard ，您要下载安装包并启用安装程序。 请执行以下步骤： 在地址栏输入 AdGuard 官网，在打开的页面中点击「下载」。 When the download is finished, press the Open button shown in the Downloads bar or click the file name adguardInstaller.exe. You’ll see the User Account Control dialogue box requesting to allow the app to make changes to your PC. Click Yes. Next, choose the folder on your PC for the app to be installed to. If you do not agree with the default installation path, press Browse, select the folder for AdGuard installation in the Browse For Folder window, and confirm your choice by clicking OK. You can also install AdGuard to a new folder by clicking Make New Folder and entering its name. To create a desktop shortcut for AdGuard, check the Create a desktop shortcut box. Press Install to proceed with installation. Wait for the installation to complete and click Finish. Congratulations! You have successfully installed AdGuard on your computer. On the screen you will see the main window where you can change the app’s settings. "},{"title":"如何卸载 AdGuard Windows版​","type":1,"pageTitle":"Installation","url":"adguard-for-windows/installation/#uninstall","content":""},{"title":"常规方式​","type":1,"pageTitle":"Installation","url":"adguard-for-windows/installation/#常规方式","content":"If you need to uninstall or reinstall AdGuard, do the following: Microsoft Windows 10&amp;11：点击「开始菜单」并选择「设置」。 在弹出的视窗里点击「应用」。 在「应用程序」窗口中，从左边的列表中选择「应用和功能」。 在已安装的应用程序列表中选择「AdGuard」，并点击「卸载」。 在弹出的对话框确认「卸载」。  For Microsoft Windows 8: Right-click the empty space in the lower left corner of the task bar and select Control Panel. 单击「程序」部分中的「卸载程序」，然后从已安装应用程序列表中选择「AdGuard」，然后按位于列表正上方的「卸载」按钮。 在打开的窗口中单击「卸载 AdGuard」。  For Microsoft Windows 8.1: Right-click the Start button and select Control Panel. 单击「程序」部分中的「卸载程序」，然后从已安装应用程序列表中选择「AdGuard」，然后按位于列表正上方的「卸载」按钮。 在打开的窗口中单击「卸载 AdGuard」。 Microsoft Windows 7：打开开始菜单。 在搜索框键入「控制面板」。 单击「程序」部分中的「卸载程序」，然后从已安装应用程序列表中选择「AdGuard」，然后按位于列表正上方的「卸载」按钮。 在打开的窗口中单击「卸载 AdGuard」。  "},{"title":"卸载的进阶方法​","type":1,"pageTitle":"Installation","url":"adguard-for-windows/installation/#advanced","content":"In case regular uninstall doesn't work for any reason, you can try to use an advanced method. First of all, you need to download the uninstaller tool created by our developers. Extract the archive to any folder on your PC and run the Adguard.UninstallUtility.exe file, and allow the app to make changes to your device. Then follow the instruction below: 选择一般卸载（Standard uninstall），删除 AdGuard，并点击卸载（Uninstall）。  请等待卸载完成。卸载成功完成后，在视窗里您将会看到： &quot;[OK] Uninstall finished&quot;（[好的] 卸载完成）  警告 请注意！ 下述的第三四步，只在由于某些原因上述两个步骤无法卸载 AdGuard 的情况下，才可以执行。 即当您执行「一般卸载」后，还是无法重新安装 AdGuard 时。我们强烈推荐执行下述进阶卸载的第三四步前，请您先于技术支持联系。 选择进阶卸载（Advanced uninstall）并点击卸载（Uninstall ）。  请等待卸载完成。卸载成功完成后，在视窗里您将会看到： &quot;[OK] Uninstall finished&quot;（[好的] 卸载完成）  AdGuard is successfully uninstalled! "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-windows/overview/","content":"","keywords":""},{"title":"Home screen​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#home-screen","content":" Once you start AdGuard for Windows, you will see the main screen of the app. Its most noticeable detail is the enable/disable protection button. Also, on this screen you can monitor blocked ads, trackers and threats statistics, find out the current version of the app or update it. Furthermore, there are four tabs in the upper right corner: Settings, Support, License, and About. Each of these is worth talking about separately. "},{"title":"Settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#settings","content":" Settings is the section that requires the most attention. This is where you can configure the app so that it fully meets your requirements: blocks only what bothers you, uses the DNS server of the trusted provider, removes third-party cookies, and so on. "},{"title":"General settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#general-settings","content":"Here you can set the language and theme (Dark or Light), enable AdGuard launching at system start-up and silent automatic updates, choose the update channel and filter update check interval. Also Settings is the place to go if AdGuard for Windows is not working properly and the support team asked you to collect Debug logs.  At the very bottom of the screen you will find Advanced Settings. Changing some of them mindlessly may potentially cause problems with AdGuard's performance, break the Internet connection or compromise your security and privacy. That's why we suggest you open this section only if you are sure of what you are doing or our support team has asked you about it. If you want to know what can be set up in Advanced Setting read the dedicated article. "},{"title":"Ad Blocker​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#ad-blocker","content":"This is the main module of AdGuard for Windows that removes ads from the websites you visit and from the apps installed on your device. To filter out advertising and privacy-threatening content such as banners, pop-ups, or trackers AdGuard uses different filters: groups of rules with a similar purpose written with a special syntax. To understand what filters are and how they work read this article.  In the Ad Blocker module you can: enable automatic activation of language-specific filters,disable search ads and self-promotion blocking,activate pre-installed filters such as AdGuard Base filter,install filters from the list or add a custom filter by clicking the Add a filter button,make changes to existing rule groups using the Filter editor button,see all the requests sent by browsers and apps installed on your computer by clicking the Filtering log button. From there you can also block or unblock any request by creating a custom rule,compose a filter from your own rules written manually, imported or created with the AdGuard Assistant extension. Before you start manually writing your own rules read our detailed syntax guide. "},{"title":"Stealth Mode​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#stealth-mode","content":"Many websites gather information about their visitors, such as their IP addresses, information about the browser and operating system installed, screen resolution, and even what page the user came or was redirected from. Some web pages use cookies to mark the browser and save your personal settings, user preferences, or &quot;recognize&quot; you upon your next visit. Stealth Mode safeguards your personal information from such data and statistics gathering systems.  You can flexibly adjust the work of Stealth Mode: for instance, you can prohibit the website to receive the search request you used to find it on the Internet, automatically delete both third-party and website’s own cookies, and disable location sharing in your browser that can be used to track your whereabouts. To learn everything about Stealth Mode and its many options, read this article. "},{"title":"Browsing Security​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#browsing-security","content":"Browsing Security gives strong protection against malicious and fishing websites. No, AdGuard for Windows is not an antivirus. It will neither stop the download of a virus when it's already started, nor delete the already existing ones. But it will warn you if you're about to proceed to a website whose domain has been added to our &quot;untrusted sites&quot; database, or to download a file from such website. You can find more information about how this module works in the dedicated article. In this module you can enable notifications to block requests to malicious and phishing sites,activate sound notifications,agree to submit anonymous security-related info to the AdGuard server to help us keep the malicious and fishing websites database up to date.  In case you want to learn more about Browsing Security, read this article. "},{"title":"DNS Protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#dns-protection","content":"There are three significant reasons why you might want to explore the DNS protection settings. First, to avoid being tracked by your ISP. Every time you open a website, for example google.com, your browser sends a request to a DNS server to get the IP address of the website in return. Usually, the DNS server belongs to your ISP, which allows them to track your online activity. Second, to encrypt you DNS traffic. And the third one is to block content on DNS level.  In the DNS protection module of AdGuard for Windows you can select the DNS servers from known DNS providers, including AdGuard DNS that blocks ads and trackers, AdGuard DNS Family Protection that in addition blocks adult content, or AdGuard DNS Non-filtering that provides a secure and reliable connection, but doesn't filter anything. You can even add custom DNS servers. Also there is an option to add custom rules using DNS rule syntax. And if necessary, you can add DNS filters of your choice. "},{"title":"Parental Control​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#parental-control","content":"There are numerous websites access to which should be restricted if the PC is used by children. This task is accomplished by Parental Control.  The module checks the contents of web pages opened in the browser and filters those with content undesirable for children: images and texts for adults, crude language, violence, drug propaganda, etc. Parental Control settings are password-protected so that the child is not able to go round the restrictions. This module not only blocks directions to undesirable sites but can also delete the links that are inappropriate for children from the search results. In the Parental Control module you can enable the Safe search and manage the blocklist and the allowlist to customize how this option works. You can also check the Block executable files download box to prevent your child from downloading and installing software on the computer. There are two more options in the Parental Control module: you can select a specific Windows user to be protected by Parental Control and set a password to protect AdGuard settings from change.  "},{"title":"Browser Assistant​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#browser-assistant","content":" From this tab you can easily proceed to install AdGuard Browser Assistant, which primary function is to manage filtering directly from the browser. We explained more about how to work with it and what to do if there is no Browser Assistant for your browser in the separate article. "},{"title":"Extensions​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#extensions","content":"AdGuard can significantly broaden website functionality working as a user script manager. AdGuard Users can add their own scripts, as well as manage existing ones.  Automatically detect userscripts With this option enabled, AdGuard will automatically define browser queries to userscripts and suggest their installation. Otherwise, extensions can be downloaded and installed manually. The following extensions are installed with AdGuard:  AdGuard Assistant AdGuard Assistant is Legacy Assistant that you may use if the new Assistant is not available for your browser. The name of this extension is quite deliberate: it actually assists the user in changing basic AdGuard settings right in the browser, without the need to open the app itself. AdGuard Assistant works with all Microsoft Windows compatible browsers. In addition, the AdGuard Assistant icon will not be displayed on websites listed as exceptions by the user and on certain web pages where there is a risk of incorrect content display. AdGuard Extra This is a custom extension designed to fight the technique of re-inserting blocked ads — the so-called ad blocker circumvention/ad reinjection. Both are advanced anti-ad blocker methods that continue to rise in popularity among advertisers. AdGuard Extra is essentially a mini-program that changes the way pages work,and it does so in such a way that it becomes much more difficult for sites to use the above-mentioned functions to bypass blockers. AdGuard Popup Blocker This extension prevents popup windows from opening when you view web pages. Some pop-ups are considered useful — they may contain settings for site administering or additional reference information demonstrated upon clicking a link. That is why you can turn off the Blocker if needed. This extension doesn’t work on websites added to the AdGuard exceptions list either. It is turned off by default, but you can turn it on in the application settings. You will find more detailed information about this extension in our Knowledge base. Web of Trust Web of Trust lets you see the reputation of each website based on its users’ opinions. The site is rated by a number of specific criteria: trust, security, etc. This extension is turned off by default, but you can turn it on in the application settings. Please, note that AdGuard is not the developer of this extension. "},{"title":"Network​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#network","content":"The penultimate module is dedicated to network filtering, and here you will find additional network-related options. Two of them are enabled by default: Enable traffic filtering and Filter HTTPS protocol. These are important extra precautions to better filter your web space. Most websites are now using HTTPS, and the same applies to advertising. From many sites, like youtube.com, facebook.com and twitter.com, it is impossible to remove ads without HTTPS filtering. So keep the Filter HTTPS protocol feature enabled unless you have a strong reason not to.  In this module you can check the checkbox &quot;Use AdGuard as an HTTP proxy&quot; to use AdGuard as a regular HTTP proxy which will filter all traffic passing through it. You can also enable the Filter websites with EV certificates feature. Extended Validation (EV) SSL Certificates offer a stronger safety guarantee; owners of such websites have to pass a thorough and globally standardized identity verification process defined by EV guidelines. Which is the reason why some users trust websites with such certificates and prefer not to filter them. At last, there is a section with proxy settings. There you can specify which proxy server AdGuard should use to update filters, get new versions and so on. "},{"title":"AdGuard VPN​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#adguard-vpn","content":"The last section is dedicated to AdGuard VPN — an ideal tool that provides security and anonymity each time you browse the Internet. You can download it by clicking the Download button or go to the AdGuard VPN website by clicking the Homepage button. How does AdGuard VPN work? Without going into technical details, we can say that VPN creates a secure encrypted tunnel between the user's computer or mobile device and a remote VPN server. In this way, data confidentiality is preserved, as well as the anonymity of the user, because a third-party observer sees the IP address of the VPN server and not the actual user's IP. What AdGuard VPN does: hides your real whereabouts and helps you stay anonymouschanges your IP address to protect your data from trackingencrypts your traffic to make it unreachable to scammerslets you configure where to use VPN and where not to (exclusions feature) To get more information about AdGuard VPN dive into the AdGuard VPN Knowledge Base. "},{"title":"Others​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#others","content":"There are other useful AdGuard options that shouldn't go unnoticed in this article, since they add much to user experience. "},{"title":"支持​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#支持","content":" By clicking the Support tab you will open a dialog box through which you can report a bug, submit a feature request, or simply share your opinion of the product. "},{"title":"许可证​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#许可证","content":" This tab contains information about your license. Here you can: find out the license type (nightly build, beta or release), the number of devices available for simultaneous connection to AdGuard, the license expiration date;click the button to go to the license purchase page, and activate, reset or recover a license. "},{"title":"关于​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#关于","content":" In addition to information about the current version of the program, this tab provides some useful links to Licese Agreement, Privacy Policy, Acknowledgements, Discussions, and Version history pages. "},{"title":"Check for updates​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#check-for-updates","content":" To check for filters and userscripts updates, click the rotating arrows icon in the upper right corner of the app's main screen. "},{"title":"Tray menu​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#tray-menu","content":"To save you time navigating around AdGuard menus, many of the frequently used options and settings are available from the tray menu. To call the menu, right-click the AdGuard icon in the tray. It will offer you the following options: enable protectiondisable protection: completely or for 30 secondsgo to Settingsopen the Tools and Advanced menuscheck for filter updatescheck for app updatesto recall the last pop-up messagereach the Support and About sectionsclose AdGuard, but continue filteringexit AdGuard "},{"title":"Common installer errors","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/common-installer-errors/","content":"","keywords":""},{"title":"Error 5: Access Denied​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-5","content":"This error occurs when there's something wrong with permissions. There may be several different reasons why AdGuard installer doesn't have the permissions it requires to properly finish the installation process. You can try the following steps: Temporarily disable your antiviruses. Some of them may interfere with the installation, depending on the severity of their settings. Choose a different installation folder. It is possible that the current installation folder has some access restrictions. Also make sure you don't select an external drive, a virtual drive, etc. Reboot your computer. Sometimes the permission issues are temporary and can be solved by restarting the PC. "},{"title":"Error 112: Disk is full, Error 1632: Temporary folder full or inaccessible​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-112","content":"These are two different errors with very similar solutions. As their names suggest, AdGuard installer didn't find enough disk space to complete the installation. There are several things you can attempt to fix the problem: Uninstall some programs or delete unnecessary files from the drive you were trying to install AdGuard to. Download, install, and run AdwCleaner, a free piece of software by Malwarebytes. It will, among other things, clean your system from all kinds of extra &quot;leftover&quot; files that remain after incorrectly uninstall programs and such. It will help clean up some disk space. Reboot your computer. Sometimes temporary files can take up a considerable amount of disk space, and restarting your PC is the most reliable way to get rid of them. "},{"title":"Error 1601: Windows Installer is not accessible​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1601","content":"You could say this is a particular sub-case of Error 1603. The possible solutions are similar: Start and re-register Microsoft Installer service. It requires some work. 1) Press Win + R and enter services.msc. 2) Find in the list and double click Windows Installer. 3) Hit Start button under Service status and hit OK. If the service status is running, you should click Stop first and then hit Start. 4) Press Win + R, type and enter msiexec /unregister and hit Enter. 5) Press Win + R again, type and enter msiexec /regserver and hit Enter Reboot the PC and start the installation all over again. Sometimes that's enough to fix the problem. "},{"title":"Error 1602: Canceled by user​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1602","content":"If you got this error code, chances are you have interrupted the installation process manually in one way or another. What you can do is: Don't close the installer window. When the installation is complete, it will close automatically. If a dialogue window pops up during the installation, hit &quot;Yes&quot; to grant the installer the required permissions. Clicking &quot;No&quot; will cancel the installation. Don't start other processes while the installation process is going on. "},{"title":"Error 1603: Fatal error during installation​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1603","content":"The error sounds scarier than it actually is. In reality, this is a rather generic error that can have many different causes, and some of them are easily fixed. Try the following solutions: Press the Win key, search for Command Prompt and run it. There, type in sfc /scannow and press Enter. Choose a different installation folder. It is possible that the current installation folder has some access restrictions. Also make sure you don't select an external drive, a virtual drive, etc. Uninstall AdGuard using our special uninstall tool and then repeat the installation. Start and re-register Microsoft Installer service. It requires some work. 1) Press Win + R and enter services.msc. 2) Find in the list and double click Windows Installer. 3) Hit Start button under Service status and hit OK. If the service status is running, you should click Stop first and then hit Start. 4) Press Win + R, type and enter msiexec /unregister and hit Enter. 5) Press Win + R again, type and enter msiexec /regserver and hit Enter Acquire full permissions on the drive for installation. It is possible that the error 1603 occurs because you don’t have full permissions on the file location. It's also not as easy as some of the other solutions: 1) Open File Explorer, right-click the drive containing the installation location and select Properties. 2) Go to Security tab and click Edit. 3) Single-click SYSTEM and ensure that the Allow box of every item in Permissions for SYSTEM is checked (if it is checkable). Do the same check for Administrators. 4) Click OK to go back to Properties dialog. Then click Advanced. 5) Click Change Permissions. 6) On Permissions tab, double-click Administrators. 7) Select This folder, subfolders and files for Applies to field and tick all the available Basic permissions. After that hit OK. 8) Do the same operation above (from item 7) for SYSTEM. 9) Click OK all the way out. Try installing AdGuard again. "},{"title":"Error 1618: Another installation is already in progress​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1618","content":"This error occurs when there are several instances of AdGuard installer launched at the same time. What to do if you get this error: Reboot your PC and start the installer again. When you restart the computer, all ongoing processes will stop, including all copies of the installer. Don't make multiple clicks on the installer even if doesn't start right away. Sometimes it may take a few seconds to display the installer UI. "},{"title":"Error 1638: Another version of this product is already installed​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1638","content":"It's very likely that you've already installed AdGuard before. Check if AdGuard is already installed on your computer. You can do it by pressing the Win key and typing in AdGuard. Maybe there's some leftover files from a previous AdGuard installation. Uninstall AdGuard using our special uninstall tool and then repeat the installation. "},{"title":"Other errors​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#other","content":"If you've encountered an error that's not listed above, it is possible that we can solve it by ourselves. But in order to do that, we need log files from you. Please perform the following steps: Find and archive AdGuard installation logs as it is described in this article. Find and save to disk Event Viewer logs. This article explains how to do that. Please email all these files from two previous steps to the support team at support@adguard.com and describe the problem in the message body. Our tech support agents will reply to you as soon as possible. "},{"title":"How to collect AdGuard logs","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/adguard-logs/","content":"","keywords":""},{"title":"Trace logs​","type":1,"pageTitle":"How to collect AdGuard logs","url":"adguard-for-windows/solving-problems/adguard-logs/#trace-logs","content":"Sometimes support team members may ask you to send trace logs. Then you will need to do the following: Stop AdGuard by right-clicking the AdGuard icon in the tray menu and choosing Exit AdGuard: Please don't leave the service running: Open the console (type cmd in the start panel). Run the app with the command C:\\&quot;Program Files (x86)&quot;\\Adguard\\Adguard.exe /trace if you are using 64-bit Windows, and C:\\&quot;Program Files&quot;\\Adguard\\Adguard.exe /trace in case if you use 32-bit one. Reproduce the issue. We strongly advise to take note of the exact time when you reproduced the issue: it will help our support team to find relevant log entries and solve the problem faster. Export the recorded logs using the Export Logs button. Don't worry if the log file is large. We need to know as much detail as possible to fix your problem. "},{"title":"Possible DNS leaks","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/dns-leaks/","content":"","keywords":""},{"title":"Bootstrap DNS address​","type":1,"pageTitle":"Possible DNS leaks","url":"adguard-for-windows/solving-problems/dns-leaks/#bootstrap-dns-address","content":"The DNS server addresses could be written as IPs or as domain names. In the case of IP addresses there are no difficulties: AdGuard forwards the DNS request directly to the server specified in the DNS protection module. However, encrypted DNS server addresses, like DoT or DoH, are most often written as domain names. In this case, to first resolve the encrypted DNS server address, AdGuard sends a DNS query to the bootstrap address, which is by default a system DNS server. This connection is what check services perceive as a leak. To eliminate this leak: go to the Advanced settingsscroll down to the List of custom bootstrap addresses sectionenter the custom bootstrap address in IP address format (you may use the list of known DNS providers)click Save "},{"title":"Fallback DNS server​","type":1,"pageTitle":"Possible DNS leaks","url":"adguard-for-windows/solving-problems/dns-leaks/#fallback-dns-server","content":"It could happen that AdGuard cannot reach the specified server because of a weak internet connection, an expiration of timeout set by default or some server related issues. In this case, it will connect to the fallback server, which is by default a system DNS server. This connection will also be considered by the check service as a leak. To eliminate this leak: go to the Advanced settingsscroll down to the Fallback servers sectioncheck the Use custom servers optionthen find the List of custom fallback servers section and enter custom fallback servers one per line or go to the Advanced settingsscroll down to the Fallback servers sectioncheck the Don’t use fallback servers option or go to the Advanced settingsscroll down to the DNS server timeout period sectionenter an arbitrary large number "},{"title":"How to create a dump file","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/dump-file/","content":"How to create a dump file 信息 本文适用于 Windows 版的 AdGuard，它是一种多功能广告拦截器，可在系统级别保护用户的设备。 To see how it works, download the AdGuard app To diagnose the reasons for potential problems that users might encounter while using AdGuard, the support team might need the process dump file. The dump file helps developers to see the processes that were executed in the application over a given period of time. Below you can check on the instructions of how to collect the dump file on your PC. Press Ctrl + Shift + Esc and click Task Manager In the upper menu bar select Details Right-click the process that you want to create the dump file for (for example, the support team may ask you to create a dump for Adguard.exe) In the drop-down menu click Create dump file The file was created successfully! After you’ve created the dump file, please navigate to the file location. You should be prompted to open the folder containing the dump file right after its creation. Otherwise, you will be able to find it inside the %tmp% folder. The created dump file (.DMP) has the same name as the name of the process you chose in the previous steps. The file is quite large, so please compress it into an archive before sending to support. 注意 AdGuard for Windows has two running processes (Adguard.exe and AdguardSvc.exe). So you need to create the dump file separately for each process. When you send the dump files to the support team, please also attach the AdGuard application logs so we have a better chance at solving the problem. Here you can check the instructions on how to collect the log file.","keywords":""},{"title":"How to collect AdGuard installation logs","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/installation-logs/","content":"How to collect AdGuard installation logs 信息 本文适用于 Windows 版的 AdGuard，它是一种多功能广告拦截器，可在系统级别保护用户的设备。 To see how it works, download the AdGuard app If any problems occur during the installation of AdGuard, the support team might ask you to collect and send them AdGuard installation logs. In this case you need to: Select Run command in Start menu or press Win + R on the keyboard. Type in %tmp% and click OK. In the opened folder select all files starting with Adguard and add them to archive (using WinRAR or any other archiving software). Send this archive to AdGuard tech support at support@adguard.com.","keywords":""},{"title":"Known issues of AdGuard for Windows","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/known-issues/","content":"","keywords":""},{"title":"AdGuard for Windows and AdGuard VPN for Windows compatibility issues​","type":1,"pageTitle":"Known issues of AdGuard for Windows","url":"adguard-for-windows/solving-problems/known-issues/#adguard-for-windows-and-adguard-vpn-for-windows-compatibility-issues","content":"Once you install AdGuard for Windows and AdGuard VPN for Windows, they just start working together without any effort on your part. However, changing some of their default settings may cause the apps to work incorrectly when they run at the same time. There are two specific settings in AdGuard for Windows: Use redirect driver mode and Filter localhost. By default, the first is disabled, and the second is enabled. Changing any of these settings will inevitably disrupt AdGuard's filtering if both AdGuard Ad Blocker and AdGuard VPN are enabled on your device. Changing these settings is only necessary to resolve issues related to the simultaneous operation of AdGuard Ad Blocker and network-level apps such as antiviruses, VPNs, and network filters. If you come across a situation where you need to change the default state of the above settings and still want AdGuard Ad Blocker and AdGuard VPN to work simultaneously and correctly — create an issue on GitHub so we can help you personally. We are currently working on overcoming the above-listed limitations of the simultaneous work of our apps. "},{"title":"Certificate-related issues","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/connection-not-trusted/","content":"","keywords":""},{"title":"Potential Security Risk error in Firefox-based browsers​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#potential-security-risk-error-in-firefox-based-browsers","content":" Old FireFox versions, as well as browsers based on them, do not trust certificates from the system storage, but only those from their local storage. Since v68, FireFox trusts the system certificates, but you still can face the &quot;Connection is untrusted&quot; error. If something like this happens, first try to click the Reinstall Certificate button — you will find it in the Network tab.  If that doesn't help, follow the instructions for manually adding the AdGuard certificate to the FireFox storage. This instruction is for Firefox browser. Names of buttons and menu items may differ in other Firefox-based browsers. Run AdGuard. Go to http://local.adguard.org/cert and click the Download button. The browser should start downloading cert.cer file. You can also open the download page by clicking on the link via the AdGuard app at Settings → Network → HTTPS filtering.  Open your browser and then open Settings. Go to Privacy &amp; Security tab. Scroll down to Certificates and click the View Certificates button.  Select Authorities tab. Click Import....  Browse the downloaded cert.cer file and click Open. Check the Trust this CA to identify websites box and then lick OK.  You've successfully installed AdGuard certificate. Restart the browser and the error should go away. "},{"title":"Yandex.Browser certificate warning​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#yandexbrowser-certificate-warning","content":"If you are a user of both AdGuard for Windows and Yandex.Browser you may have come across this warning:  "},{"title":"Why is this happening​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#why-is-this-happening","content":"Both AdGuard and Yandex take users' security on the Internet very seriously. Current Yandex policy is to warn their users about any certificate that is not recognized by the browser. This is not unsubstantiated, because sometimes malicious apps can inject their own certificates and use this to harm the system and steal private data. However, AdGuard also adds its certificate to the trusted ones. This leads to the warning message you have encountered. "},{"title":"How to solve the problem​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#how-to-solve-the-problem","content":"The easiest way is to click the Go to site button. This will tell Yandex.Browser to remember AdGuard certificate as a trusted one, at least for a while. Normally, you won't have to see this message anymore, but it is not beyond the realm of possibility for it to appear occasionally, for whatever reasons. In such cases, simply press the same button again (make sure it is AdGuard's certificate!). Disabling the HTTPS filtering in AdGuard will also prevent Yandex.Browser from showing this message again, but it comes with a big price: all ads that are loaded by HTTPS (including Yandex's own ads) will show up — on such websites as YouTube, Facebook, Instagram, and many more. We strongly advise against it if you want to keep the quality of ad blocking high. "},{"title":"How to collect Windows system logs","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/system-logs/","content":"How to collect Windows system logs 信息 本文适用于 Windows 版的 AdGuard，它是一种多功能广告拦截器，可在系统级别保护用户的设备。 To see how it works, download the AdGuard app To analyze and diagnose different problems that may potentially arise, the AdGuard support service might need Windows system log files. Windows event logs contain records about all errors that occurr with the installed software, including AdGuard. Below is the brief instruction describing the way to get the log files and to send them to our support service if necessary. Press Win + R In the window that appears type in eventvwr and click OK: Event Viewer window appears as shown in the picture. To save files that we need, do the following: Open Application: Event Viewer (Local) → Windows Logs → Application. Right-click Application and in the drop-down menu select Save All Events As... Select a name and where to save, click Save. Select Display information for the following languages. You need to tick the box next to English. Click OK. Open System: Event Viewer (Local) → Windows Logs → System. Right-click System and in the drop-down menu select Save All Events As... Choose a destination folder, enter the name, click Save. Select Display information for the following languages. You need to tick the box next to English. Click OK. Please send the two files that you've recently saved to support@adguard.com.","keywords":""},{"title":"WFP driver","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/wfp-driver/","content":"WFP driver 信息 本文适用于 Windows 版的 AdGuard，它是一种多功能广告拦截器，可在系统级别保护用户的设备。 To see how it works, download the AdGuard app To filter netwrok traffic, AdGuard uses a network driver. There are two options: TDI driver and WFP driver. While WFP driver is generally preferrable and is enabled by default for all newer Windows OS versions (Windows 8 and newer), it can potentially cause compatibility problems, especially with some antiviruses. These problems and subsequent errors can be very different in each case. If you encounter a problem that you suspect might be caused by this, you can always switch to the older but more stable TDI network driver. To do so: Go to Settings → Network. Disable WFP driver as it’s done in this picture:","keywords":""},{"title":"高级（低级）设置指南","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"如何转到高级设置​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#如何转到高级设置","content":"要进入「高级设置」，请在主窗口单击「设置」→「常规设置」，然后向下滚动到「高级设置」。 或者在托盘菜单中选择「高级」→「高级设置…」。 "},{"title":"高级设置​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#高级设置","content":"一旦用户打开高级设置，会看到以下选项: "},{"title":"拦截 TCP 快速打开​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#拦截-tcp-快速打开","content":"如果启用，AdGuard 将阻止 Edge 浏览器中的 TCP 快速打开。 要应用设置，请重新启动浏览器。 "},{"title":"使用 Encrypted ClientHello​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#使用-encrypted-clienthello","content":"每一个加密的互联网连接都有一个未加密的部分， 就是发送的第一个数据包，包含用户要连接的服务器名称。 Encrypted ClientHello（ECH）的技术能够解决该问题，成功加密最后一位未加密的信息。 要使用该功能，请启用「使用 Encrypted ClientHello」选项。 It uses a local DNS proxy to look for the ECH configuration for the domain. 如果找到，将对 ClientHello 数据包进行加密。 "},{"title":"检查网站的证书透明度​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#检查网站的证书透明度","content":"基于 Chrome 证书透明度（英文：Chrome Certificate Transparency，简称：Chrome CT）政策验证域名内所有证书的真实性。 If the certificate does not comply with the Chrome Certificate Transparency Policy, AdGuard will not filter the website. 而 Chrome 则会屏蔽它。 "},{"title":"启用 SSL/TLS 证书撤销检查​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#启用-ssltls-证书撤销检查","content":"启用后，此选项将运行异步 OCSP 检查，以检查网站的 SSL/TLS 证书是否被撤销。 如果在最短超时时间内完成 OCSP 检查，AdGuard 会立即应用检查结果；如果证书被撤销，则阻断连接，如果证书有效，则重新建立连接。 如果验证时间过长，AdGuard 将建立连接并在后台继续检查。 如果证书被撤销，当前和将来该域名的连接将被阻止。 "},{"title":"在设置中显示 AdGuard VPN​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#在设置中显示-adguard-vpn","content":"启用此选项可让用户在设置中显示 AdGuard VPN 选项卡，以便轻松打开应用程序和产品的网站。 "},{"title":"过滤时按完整路径排除应用​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#过滤时按完整路径排除应用","content":"如果用户不想 AdGuard 过滤某款特定的应用程序流量，请指定应用程序的完整路径。这些应用程序将被排除在过滤之外。 请用分号分隔不同的路径。 "},{"title":"启用 AdGuard 弹窗通知​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#启用-adguard-弹窗通知","content":"启用此功能查看 AdGuard 弹出式通知。 通知不经常出现，只包含重要的信息。 用户还可以使用托盘菜单来召回最后的弹出通知。 "},{"title":"自动截取过滤器订阅 URL​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#自动截取过滤器订阅-url","content":"如果用户想让 AdGuard 自动拦截过滤器订阅 URL（如 abp:subscribe 等）并打开自定义过滤器安装对话框，请启用此功能。 "},{"title":"Filter HTTP/3​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#filter-http3","content":"If this option is enabled, AdGuard will filter requests sent over HTTP/3 in addition to other request types. "},{"title":"使用重定向驱动模式​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#使用重定向驱动模式","content":"如果启用该选项，AdGuard 将拦截所有流量，并将其重定向到本地代理服务器进行进一步过滤。 否则，AdGuard 将对所有流量进行实时过滤，而不进行重定向。 在这种情况下，系统将认为 AdGuard 是连接到互联网的唯一一款应用程序（其他应用程序的流量通过 AdGuard 路由）。 缺点是本功能会降低系统防火墙的有效性。 好处是这种方法工作起来快了一点。 "},{"title":"随系统启动时显示主窗口​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#随系统启动时显示主窗口","content":"启用此选项可在加载系统后打开 AdGuard 主窗口。 请注意，本功能不影响实际过滤服务是否启动，此设置位于「设置」→「常规设置」中。 "},{"title":"在系统启动时启用过滤​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#在系统启动时启用过滤","content":"从 v7.12 版本开始，默认情况下，如果「AdGuard 随系统启动」选项被禁用，AdGuard 服务不会在操作系统启动后开始过滤流量。 这意味着，AdGuard 服务是以“待机”模式启动的。 启用此选项，使 AdGuard 过滤流量，即使应用程序没有启动。 注意 Before v7.12, the AdGuard service started in filtering mode by default (even if the Launch AdGuard at system start-up was disabled). If you were satisfied with the old behavior, enable this option. "},{"title":"过滤 localhost 连接​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#过滤-localhost-连接","content":"如果用户希望 AdGuard 过滤环回（Loopback）连接，请选中复选框。 如果用户已安装 AdGuard VPN，此选项将始终处于开启状态，否则 AdGuard VPN 将无法工作。 "},{"title":"从过滤中排除特定 IP 范围​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#从过滤中排除特定-ip-范围","content":"如果用户不希望 AdGuard 过滤特定的子网，请启用此功能，并在下面「无需进行过滤的 IP 范围」指定 CIDR 表记中的 IP 范围（例如 98.51.100.14/24）。 "},{"title":"启用 HAR 写入​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#启用-har-写入","content":"此选项仅用于调试目的。 如果勾选复选标记，AdGuard 将创建一个文件，其中包含 HAR 1.2 格式的所有已过滤 HTTP 请求的信息。 这个文件可以用 Fiddler 应用程序分析。 注意，这可能会显著降低网页加载速度。 "},{"title":"在普通的 HTTP 请求中添加额外的空间​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#在普通的-http-请求中添加额外的空间","content":"在 HTTP 方法和 URL 之间添加额外的空格，并在“主机”（Host）字段后删除空格以避免深度包检测。 例如，请求 GET /foo/bar/ HTTP/1.1 Host: example.org 将转换为 GET /foo/bar/ HTTP/1.1 Host: example.org 此选项仅在启用隐身模式的「保护免受 DPI 影响」选项时被应用。 "},{"title":"调整初始 TLS 数据包的碎片大小​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#调整初始-tls-数据包的碎片大小","content":"指定 TCP 数据包碎片的大小，避免深度包检测。 This option only affects secured (HTTPS) traffic. 如果开启该选项，AdGuard 将初始 TLS 数据包（ClientHello 数据包）分成两部分：第一部分包含指定的长度，第二部分包含剩余的长度，直到整个初始 TLS 数据包的长度。 Valid values: 1–1500. 如果指定无效大小，将使用系统选择的数值。 此选项仅在启用隐身模式的「保护免受 DPI 影响」选项时被应用。 "},{"title":"普通 HTTP 请求片段大小​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#普通-http-请求片段大小","content":"调整 HTTP 请求片段大小。 此选项仅影响普通 HTTP 流量。 开启该选项后，AdGuard 会将初始数据包分成两部分：第一部分是指定的长度，第二部分是指定的长度，直到原始数据包的长度。 Valid values: 1–1500. 如果指定无效大小，将使用系统选择的数值。 此选项仅在启用隐身模式的「保护免受 DPI 影响」选项时被应用。 "},{"title":"显示 QUIC​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#显示-quic","content":"允许在过滤日志中显示 QUIC 协议记录。 仅适用于被阻止的请求。 "},{"title":"启用 TCP 保活（keepalive）​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#启用-tcp-保活keepalive","content":"定期在 IDLE 连接上发送 TCP 数据包，以确保它是保活的，并更新 NAT 超时。 此选项可用于绕过某些 ISP（互联网服务提供商）使用的严格的网络地址转换（NAT）设置。 "},{"title":"TCP 保活间隔​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#tcp-保活间隔","content":"用户可以指定在发送 keepalive 探测之前的空闲时间段（以秒为单位）。 If 0 is specified, the value selected by the system will be used. 注意 This setting only works when the Enable TCP keepalive option is enabled. "},{"title":"TCP 保活超时​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#tcp-保活超时","content":"Here you can specify time in seconds before sending another keepalive probe to an unresponsive peer. 如果指定 0，使用系统选择的数值。 注意 This setting only works when the Enable TCP keepalive option is enabled. "},{"title":"拦截 Java​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#拦截-java","content":"一些网站和 Web 服务仍然支持 Java 插件。 作为 Java 插件基础的 API 存在严重的安全漏洞。 出于安全考虑，可以禁用此类插件。 然而，即使用户决定使用「拦截 Java」选项，JavaScript 仍然会被启用。 "},{"title":"DNS 服务器的超时期限​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#dns-服务器的超时期限","content":"用户可以指定 AdGuard 在使用后备服务器之前，等待选定 DNS 服务器响应的时间（以毫秒为单位）。 如果数值无效或为空，要使用的数值为 5000。 "},{"title":"将 HTTP/3 用于 DNS-over-HTTPS​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#将-http3-用于-dns-over-https","content":"如果所选上游支持此协议，为 DNS-over-HTTPS 上游启用 HTTP/3 以加速连接。 这意味着，启用该选项并不能保证所有 DNS 请求都将通过 HTTP/3 发送。 "},{"title":"使用备用 DNS 上游​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#使用备用-dns-上游","content":"Normal queries will be redirected to the fallback upstream if all DNS requests to the selected upstreams fail. "},{"title":"并行查询 DNS 上游​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#并行查询-dns-上游","content":"All upstreams will be queried in parallel and the first response is returned. 由于 DNS 查询以并行方式处理，因此启用此功能可以提高上网速度。 "},{"title":"始终响应故障的 DNS 查询​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#始终响应故障的-dns-查询","content":"如果地址解析在每个转发的上游以及后备域名上失败，对 DNS 请求的响应将是 SERVFAIL。 "},{"title":"启用安全 DNS 请求的过滤​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#启用安全-dns-请求的过滤","content":"AdGuard will redirect secure DNS requests to the local DNS proxy, in addition to plain DNS requests. "},{"title":"host 规则的拦截模式​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#host-规则的拦截模式","content":"用户可以选择 AdGuard 将根据 hosts 规则的语法对被 DNS 规则阻止的域名作出反应的方式。 将「REFUSED」的错误作出回应将「NxDomain」的错误作出回应使用自定义 IP 地址作出回应 "},{"title":"adblock 规则的拦截模式​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#adblock-规则的拦截模式","content":"用户可以选择 AdGuard 将根据 adblock 规则的语法对被 DNS 规则阻止的域名作出反应的方式。 将「REFUSED」的错误作出回应将「NxDomain」的错误作出回应使用自定义 IP 地址作出回应 "},{"title":"自定义 IPv4 地址​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#自定义-ipv4-地址","content":"如果在 host 规则的「拦截模式」或 adblock 规则的「拦截模式」中选择「自定义 IP 地址」，所有被阻止的「A」请求将返回该 IP 地址. 如果没有指定，AdGuard 将回复默认的「REFUSED」错误。 "},{"title":"自定义 IPv6 地址​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#自定义-ipv6-地址","content":"如果在 host 规则的「拦截模式」或 adblock 规则的「拦截模式」中选择「自定义 IP 地址」，所有被阻止的「AAAA」请求将返回该 IP 地址. 如果没有指定，AdGuard 将回复默认的「REFUSED」错误。 "},{"title":"后备（Fallback）服务器​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#后备fallback服务器","content":"用户可以指定一个后备 DNS 服务器，如果主服务器未能在下一节指定的超时期限内做出响应，DNS 请求将被重新路由到后备服务器。 有三个选项可供选择： 不要使用后备服务器；使用系统默认的服务器；使用自定义服务器。 "},{"title":"拦截 ECH​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#拦截-ech","content":"如果启用，AdGuard 将从响应中去除 Encrypted Client Hello 参数。 "},{"title":"自定义后备服务器的列表​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#自定义后备服务器的列表","content":"如果用户希望 AdGuard 使用自定义后备服务器，请在此部分列出它们，每行一个。 "},{"title":"自定义 bootstrap 地址的列表​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#自定义-bootstrap-地址的列表","content":"Bootstrap 是一个中间 DNS 服务器，用于获取用户在「DNS 保护」中选择的安全 DNS 服务器的 IP 地址。 当使用用字母表示服务器地址的协议（例如 DNS-over-TLS）时，需要这样的“中间立场”。 在这种情况下，bootstrap 充当翻译器，将字母转换为系统可以理解的数字。 默认情况下，使用系统 DNS 解析器，初始 bootstrap 请求通过端口53发出。 如果该方式不适合，请按从上到下的顺序列出将用于确定加密 DNS 服务器地址的 DNS 服务器的 IP 地址。 指定的 IP 地址将按列出的顺序应用。 如果用户指定的地址无效，或者没有指定地址，系统 IP 将被使用。 "},{"title":"DNS 排除项​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#dns-排除项","content":"所有对这里列出的域名的 DNS 请求将被重定向到系统默认的 DNS 服务器，而不是在应用程序设置中指定的 DNS 服务器。 此外，DNS 拦截规则将不会应用于此类请求。 "},{"title":"从 DNS 过滤中排除指定的 Wi-Fi 网络名称（SSID）​","type":1,"pageTitle":"高级（低级）设置指南","url":"adguard-for-windows/solving-problems/low-level-settings/#从-dns-过滤中排除指定的-wi-fi-网络名称ssid","content":"DNS protection will not include Wi-Fi networks listed in this section. 每行指定一个 Wi-Fi 网络名称（SSID）。 如果一个特定的 Wi-Fi 网络已经被 AdGuard Home 或其他 DNS 保护系统保护，此功能很实用。 在这种情况下，再次过滤 DNS 请求是多余的。 "},{"title":"两步验证","type":0,"sectionRef":"#","url":"general/account/2fa/","content":"","keywords":""},{"title":"如何设置 2FA​","type":1,"pageTitle":"两步验证","url":"general/account/2fa/#如何设置-2fa","content":"登录 AdGuard 账号并转到「设置」选项卡：  向下滚动到「密码和两步验证」并单击「启用」：  按照屏幕上的指示，安装一个认证器应用程序，并扫描 QR 码：  重要信息 请您保存第二个备用密码。该密码是在您的手机丢失或被偷窃的情况下用于恢复您的帐号的必要信息。 如果每个步骤都完成，下次登录个人账号时，将看到：  使用手机的认证软件扫码并输入验证码。 登录成功了！ 请注意：如果看到验证错误通知，请您查看手机上的时间设置。 如果需要，请更改时间设置。错误的时钟会导致验证错误。 "},{"title":"注册方式","type":0,"sectionRef":"#","url":"general/account/register/","content":"","keywords":""},{"title":"什么是 AdGuard 账号​","type":1,"pageTitle":"注册方式","url":"general/account/register/#什么是-adguard-账号","content":"AdGuard 账号是一种可存储您的 AdGuard 许可证/订阅，活动的设备，购买历史，首选语言及其它首选项的用户账号。 许多 AdGuard 产品具有通过输入 AdGuard 账号凭证激活软件的选项，但前提是其须包含有效许可证。 "},{"title":"账号创建方式​","type":1,"pageTitle":"注册方式","url":"general/account/register/#账号创建方式","content":"要创建账号，请转到 AdGuard 官方网站并点击屏幕右上角的「我的账号」按钮。 输入您的电子邮件地址和所需密码，这将自动注册您的账号。 提示 如您在购买许可证时输入了电子邮件地址或作为礼物接收了与您电子邮件地址关联的许可证，则账号是自动创建的。 要设置密码，用户可打开交易或礼物邮件内的链接。 您也可按上述方式注册。 账号也可在 AdGuard 应用内直接创建。 点击「登录」或「激活」按钮（可在「许可证」部分或单独的界面上找到）并输入您的电子邮件地址和所需密码。 账号创建后，点击激活电子邮件内的链接以激活它。 "},{"title":"通过社交网络创建账号​","type":1,"pageTitle":"注册方式","url":"general/account/register/#通过社交网络创建账号","content":"要通过社交网络创建账号，请点击链接并登录账号即可。 注册后，请查看收件箱，您将会收到一封确认电子邮件。 设置密码即可！ 现在您可以使用 AdGuard 账号的所有功能。 "},{"title":"AdGuard 账号的功能","type":0,"sectionRef":"#","url":"general/account/features/","content":"","keywords":""},{"title":"管理账号设置​","type":1,"pageTitle":"AdGuard 账号的功能","url":"general/account/features/#管理账号设置","content":"在 AdGuard 账号的「设置」部分，用户可更改或重置密码，更改电子邮件地址，开启双因素身份验证，查看 AdGuard 所存储的关于您的数据以及选择个人账号和通知的语言。 在此部分，用户也可管理电子邮件首选项： 接收交易电子邮件，接收 AdGuard 每月时事通讯，接收 AdGuard 特价和促销电子邮件,在 AdGuard 中打开电子邮件时发送通知。 "},{"title":"管理许可证​","type":1,"pageTitle":"AdGuard 账号的功能","url":"general/account/features/#管理许可证","content":"在「许可证」部分，用户可管理许可以及与之绑定的设备。 AdGuard 许可证： 绑定和取消绑定，续订，升级，取消。 您也可更新付款详细信息。 与 AdGuard 广告拦截程序许可证绑定的设备可取消绑定或重命名。 用户可点击紧邻未使用设备的十字叉以取消绑定它们。 "},{"title":"查看购买​","type":1,"pageTitle":"AdGuard 账号的功能","url":"general/account/features/#查看购买","content":"「购买历史」部分显示有用户曾经用注册 AdGuard 账号时的电子邮件地址购买的所有许可证。 在这里还可找到关于购买日期，订单号，支付方式，购买费用的相关信息。 "},{"title":"联系支持​","type":1,"pageTitle":"AdGuard 账号的功能","url":"general/account/features/#联系支持","content":"支持标签包含有帮助用户解决问题，查找 AdGuard 产品相关问题答案的有用链接。 它们分为六个部分：常见问题解答，发送错误报告/功能请求，报告拦截错误，联系支持，知识库和讨论。 "},{"title":"How ad blocking works","type":0,"sectionRef":"#","url":"general/ad-filtering/how-ad-blocking-works/","content":"","keywords":""},{"title":"General principle​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#general-principle","content":"Filter lists, also called filters, lie at the core of any ad blocker. Filters are literally lists of rules written in a special syntax. Ad blockers can understand this complex syntax. They interpret filtering rules and perform actions on web traffic based on what the rules tell them to do: block specific elements, alter web pages in certain ways, etc.  "},{"title":"Filter lists​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#filter-lists","content":"To better understand ad blocking, it's important to know the underlying principles of how filters work. Filtering rules that make up filters are not created automatically. They are developed by filter maintainers, including professionals and volunteers, who use browser developer consoles and other tools (such as the AdGuard's filtering log) to determine which rules will block a particular ad or tracker. This description of the process is very simplistic — some ads are particularly hard to block and require multiple rules, multiple iterations, and the use of complex syntax. And even when a rule finally gets added to a filter, it doesn't mean that it stays there forever. Ads change, ways to serve the same ads on the same websites change, and the filter rules have to change, too. Sometimes rules become obsolete, a new ad appears, or a new filtering rule is needed to block the same ad. Filters are often maintained by one person, but even for a team of maintainers, it's impossible to constantly monitor the entire web. That's why many ad blockers have tools to help users easily report any filter-related issues they encounter.  AdGuard users have access to a special web reporting tool. Thanks to user complaints, filter developers can focus on correcting their filter lists and not on scouring the Internet for new and old unblocked ads. Filters can do more than just block ads. There are filters that block tracking, social media widgets, and annoyances such as cookie notices. Different users may choose different combinations of filters to match their personal preferences. There are websites like filterlists.com that are dedicated to filter lists and have huge databases. We develop and maintain our own set of filter lists that can be used with AdGuard or other ad blockers. "},{"title":"Types of filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#types-of-filtering-rules","content":"There are many types of filtering rules that serve different purposes. Depending on the ad blocker you use, and especially on your OS, some types of rules may not be supported. "},{"title":"Basic filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#basic-filtering-rules","content":"To be displayed on a web page or in an app, the ad has to be loaded from a server first. To do so, the browser or the app needs to send a web request. The most basic way of preventing an ad from appearing on your screen is to block this request so it never reaches the server, and thus there's no reply. Basically, all AdGuard Ad Blocker products can block web requests according to the active filter rules. This method is very effective at stopping the ad, but it has some drawbacks. The most obvious one is: whatever place an ad was taking up will be left empty or occupied by an ad leftover. "},{"title":"Cosmetic filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#cosmetic-filtering-rules","content":"Every web page has a Document Object Model (DOM), an HTML document containing the structure and elements of this page. As ads are also page elements, they get recorded in the DOM. Ad blockers can remove parts of the DOM, while filtering rules help them understand which parts are ads and should be removed, and which parts should be left intact. This method allows you to avoid above-mentioned blank spaces and ad leftovers, as well as perform other more complicated tasks. "},{"title":"HTML filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#html-filtering-rules","content":"In most cases, it's enough to use the above-mentioned basic and cosmetic rules to filter ads. But when it is necessary to change the HTML code of the page itself before it is loaded, you need filtering rules for HTML content. These rules allow you to specify the HTML elements to be cut out before the browser even loads the page. These rules are quite complicated and require the ad blocker to be granted certain access rights, so not all platforms support them. Currently, these rules work only in the AdGuard Firefox add-on and in the AdGuard apps for Windows, Mac, and Android. 信息 There are other types of filtering rules, but they require more advanced technical knowledge to understand how they work. If you are interested, check out our comprehensive guide on filtering rules in the linked article. "},{"title":"AdGuard 过滤器","type":0,"sectionRef":"#","url":"general/ad-filtering/adguard-filters/","content":"","keywords":""},{"title":"AdGuard 过滤器​","type":1,"pageTitle":"AdGuard 过滤器","url":"general/ad-filtering/adguard-filters/#adguard-过滤器","content":"基础过滤器删除英文内容网站的广告。 最初是基于 EasyList 并由我们修改。 查看规则 防跟踪保护过滤器 — 各种在线计数器和网络分析工具的综合列表。 用它来隐藏用户在网上的活动，避免跟踪。 查看规则 URL 跟踪过滤器从网址中移除跟踪参数加强隐私保护。 当用户选择在隐身模式下拦截跟踪参数时，此过滤器将自动启用。 查看规则 社交媒体过滤器此过滤器移除社交媒体小工具「点赞」和「分享」按钮及类似的元素。 查看规则 恼人广告过滤器屏蔽网页上的恼人元素。 View rules. Includes the following AdGuard filters (all of them can be enabled separately from the Annoyances filter): Cookie 通知在网页上拦截 Cookie 通知。 查看规则弹出窗口拦截各种对网站运行没有必要的弹窗。 查看规则移动拦截程序横幅广告阻止宣传网站移动应用的横幅。 查看规则小工具阻止第三方小工具：在线助手、实时客服支持聊天等 查看规则其他烦恼阻止不属于流行的烦恼类别的元素。 查看规则 解除搜索广告和自我推销过滤器解除可能对用户有用的广告。 在此页上了解更多关于此过滤器的信息。 查看规则 俄语过滤器删除俄语网站上的广告。 查看规则 德语过滤器删除德语网站上的广告。 最初是基于 EasyList Germany 过滤器，随后我们根据用户的反馈进行修改。 查看规则 法语过滤器删除法语网站上的广告。 最初是基于 Liste FR 过滤器，随后我们根据用户的反馈进行修改。 查看规则 日语过滤器删除日语网站上的广告。 最初是基于 Fanboy’s Japanese 过滤器，随后我们根据用户的反馈进行修改。 查看规则 荷兰语过滤器删除荷兰语网站上的广告。 最初是基于 EasyList Dutch 过滤器，随后我们根据用户的反馈进行修改。 查看规则 西班牙语/葡萄牙语过滤器删除西班牙语和葡萄牙语网站上的广告。 最初是基于 Fanboy’s Spanish/Portuguese 过滤器，随后我们根据用户的反馈进行修改。 查看规则 土耳其语过滤器删除土耳其语网站上的广告。 由我们根据用户的反馈创建。 查看规则 中文过滤器删除中文网站上的广告。 Originally based on the EasyList China filter and subsequently modified by us according to the complaints from users. 查看规则 Ukrainian filter removes ads from websites in Ukrainian. Learn more about this filter on this page. View rules 实验性过滤器，此过滤器设计用于在将某些有风险的过滤规则添加到基本过滤器之前对其进行测试。 如果这些规则执行没有任何问题，它们会被添加到主过滤器中。 查看规则 移动广告过滤器拦截移动设备上的广告。 包含所有已知的移动广告网络。 查看规则 DNS 过滤器 — 此过滤器由其他几个过滤器 (AdGuard 基础过滤器、社交媒体过滤器、防跟踪保护过滤器、移动广告过滤器、EasyList 和 EasyPrivacy) 组成，并经过简化，以便更好地与 DNS 级别的广告拦截兼容。 AdGuard DNS 服务器使用此过滤器来拦截广告和跟踪器。 查看规则 "},{"title":"AdGuard 过滤器政策​","type":1,"pageTitle":"AdGuard 过滤器","url":"general/ad-filtering/adguard-filters/#adguard-过滤器政策","content":"我们的过滤器政策定义在过滤器中添加和删除的规则，以及 AdGuard 过滤器应该拦截和不应该拦截的内容的规则。 阅读全文 AdGuard 过滤政策了解详细信息。 "},{"title":"为 AdGuard 过滤器做贡献​","type":1,"pageTitle":"AdGuard 过滤器","url":"general/ad-filtering/adguard-filters/#为-adguard-过滤器做贡献","content":"我们非常幸运的是，拥有一个不仅热爱 AdGuard，还能回馈社会的社区。 很多人以各种方式做志愿者，让其他用户使用 AdGuard 的体验更好。 您也可以加入他们的行列。 我们也乐于奖励最活跃的社区成员。 那么，您能做什么呢？ "},{"title":"报告问题​","type":1,"pageTitle":"AdGuard 过滤器","url":"general/ad-filtering/adguard-filters/#报告问题","content":"我们依靠社区让我们知道过滤器的问题。 这样我们才能最有效地利用我们的时间，并保持过滤器的不断更新。 要提交报告，请使用网络报告工具。 "},{"title":"建议过滤规则​","type":1,"pageTitle":"AdGuard 过滤器","url":"general/ad-filtering/adguard-filters/#建议过滤规则","content":"您会在 GitHub 过滤器仓库中发现大量未解决的问题。 每个问题都涉及到某个网站的问题 — 遗漏的广告、误报等。 请选择其中一个问题并在评论中提供您自己的规则。 AdGuard 过滤器工程师将审查您的建议，如果证明是正确的，您的规则将被添加到 AdGuard 过滤器中。 这里是 AdGuard 过滤规则语法的官方文档。 在您创建自己的过滤规则之前，请您阅读它。 "},{"title":"其他贡献方式​","type":1,"pageTitle":"AdGuard 过滤器","url":"general/ad-filtering/adguard-filters/#其他贡献方式","content":"我们有专门的页面您可以在其中详细了解如何参与 AdGuard 开发。 "},{"title":"AdGuard filter policy","type":0,"sectionRef":"#","url":"general/ad-filtering/filter-policy/","content":"","keywords":""},{"title":"Terminology​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#terminology","content":"Throughout this text, we use the terms first party and third party. A &quot;first party&quot; is a website that a user visits intentionally and knowingly, plus a set of resources on the web operated by the same organization. In practice, we consider resources to belong to the same party if they are part of the same registrable domain: a public suffix plus one additional label. Example: site.example, www.site.example, and s.u.b.site.example belong to the same party because site.example is their common registrable domain. A &quot;third party&quot; is any party that does not fall within the definition of the first party above. Interactions with other parties are considered third-party, even if the user is transiently informed in context (for example, in the form of a redirect). Merely hovering over, muting, pausing, or closing a given piece of content does not constitute an intention to interact. "},{"title":"Common criteria​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#common-criteria","content":"These equally apply to rules in all filters. Rules that often cause problems with the work of some websites will be deleted.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"Ad filters​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#ad-filters","content":"This part describes the AdGuard Base filter, the Mobile Ads filter, and the following language-specific filters: Russian, German, Dutch, Spanish/Portuguese, Japanese, Turkish, Chinese, and French. What shall these filters block? These filters will block ads wherever possible.Ads should be blocked regardless of their reasons and goals.We will block ads caused by malicious apps or extensions that inject ads. Please note that we do it only on the condition that you specify how to install such an app or extension. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to the main filters. Websites’ own ads should not be removed on purpose. On the other hand, they should not be unblocked if it may cause third-party ads to reappear.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer.Anti-adblock scripts will be blocked only if they limit or affect the functionality of a website.Anti-adblock scripts will not be blocked in cases when it is prohibited by law.Rules that often cause problems with the work of some websites will be deleted. "},{"title":"Tracking Protection filter​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#tracking-protection-filter","content":"What will be blocked with this filter? This filter will block all trackers that collect user personal data. We define tracking as collecting data regarding an individual’s identity or activity across one or more websites. Even if such data is considered to be personally unidentifiable, it’s still tracking. Tracker is an online script that has tracking as its only purpose, or as one of its purposes. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to this filter. Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"AdGuard URL Tracking filter​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#adguard-url-tracking-filter","content":"What will be blocked with this filter? This filter will strip all tracking parameters from URLs. We define tracking as collecting data regarding an individual’s identity or activity across one or more websites. Even if such data is considered to be personally unidentifiable, it’s still tracking. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to this filter. Rules that would reduce user security levels will be removed.Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"Social Media filter​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#social-media-filter","content":"What will be blocked with this filter? This filter will block social media widgets (on third-party websites) such as &quot;Like&quot; and &quot;Share&quot; buttons, recommendation widgets, and more. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to this filter. Rules that block widgets that are a part of a website’s functionality, such as &quot;Comments,&quot; &quot;Embedded Post,&quot; &quot;Surveys,&quot; or widgets that require authorization via social networks.Rules that block links to a website’s communities in social networks.Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"Annoyances filter​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#annoyances-filter","content":"What will be blocked with this filter? This filter will block obstructions on the page. These elements are not ads, but they obstruct the view and make it difficult to see the actual content of the website. Such elements include cookie notices, third-party widgets, in-page pop-ups, email subscription forms, banners with special offers, and aggressively placed social media widgets. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to this filter. Rules that block elements that are essential for the website functioning (e.g. authorization forms) will not be blocked even if they satisfy other requirements.Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"Filter unblocking search ads and self-promotion​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#filter-unblocking-search-ads-and-self-promotion","content":"Unlike other filters, this one unblocks certain ads. Read more about it in the article on search ads and self-promotion. What will be unblocked with this filter? Search ads (ads that you see among the results when using an online search engine).Website self-promotion (when an ad on a website is promoting this very website or other websites/social media/etc closely related to it). Limitations and Exceptions Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"Quality requirements for filtering rules​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#quality-requirements-for-filtering-rules","content":"The rules should be as efficient as possible in terms of performance.Exception rules should be as specific as possible in order to avoid unnecessary unblocking.CSS and JS injection rules should be used as rarely as possible and only when it is impossible to block ads without them. "},{"title":"Tracking filter rules statistics","type":0,"sectionRef":"#","url":"general/ad-filtering/tracking-filter-statistics/","content":"","keywords":""},{"title":"Why do we need ad filters?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#why-do-we-need-ad-filters","content":"Let's start by defining what ad filters are. Thanks to these filters, AdGuard removes ads from websites. They are manually compiled based on your complaints about ads on websites. Ad filters are an essential element of AdGuard — their quality determines the overall quality of AdGuard ad blocking. However, there is a downside. Over the years, more and more ad filters have been appearing. And the more ad filters are there, the more memory AdGuard consumes, thus slowing down the rendering of web pages. At the same time, some of the filters start to expire, gradually becoming a dead weight that has no use, only consumes memory, and slows down the program. "},{"title":"Why do we need statistics?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#why-do-we-need-statistics","content":"We want to solve the problem of outdated filtering rules once and for all. But we need your help to do so. By gathering statistics on used filtering rules, we detect and remove the rules that are no longer used. As a result, it will help all those who use AdGuard. If your computer is powerful enough, it won’t really affect you. But the difference will be very noticeable for users of low-power netbooks or tablets. "},{"title":"What kind of statistics will be sent?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#what-kind-of-statistics-will-be-sent","content":"If you enable the Send statistics for ad filters usage option, the following information is sent periodically: Extension versionBrowser type (Chrome/Firefox/Opera/Yandex.Browser/Safari).List of enabled ad filters.The list that consists of the following elements: The domain name of the websiteThe number of recent page viewsThe list of filtering rules and Filter ID which were activated on this websiteThe domain name of blocked requests is sent for URL rules The list is created based on the website's visit statistics since the last time statistical data was sent. The collected statistics will be sent periodically to our server for analysis and filter optimization. It's important to note that all the statistics we get are averaged and anonymized. We don't use these statistics for any purpose other than optimizing the filters, and we do not sell this data to third parties. You can read about our Privacy Policy here. "},{"title":"What does tracking filter rules statistics fraught with?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#what-does-tracking-filter-rules-statistics-fraught-with","content":"For the vast majority of users, the change in computer speed will not be really noticeable. However, netbook and tablet users may notice a slight slowdown. Periodically, we will send the gathered statistics to the server. The size of the transmitted data is not very large and is comparable to the size of an average web page. "},{"title":"Search ads and self-promotion","type":0,"sectionRef":"#","url":"general/ad-filtering/search-ads/","content":"","keywords":""},{"title":"Search ads​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#search-ads","content":"Search ads are ads that you see among search query results when using online search engines, such as Google, Bing, DuckDuckGo, etc.  These ads are always contextual: they are targeted to match the keywords you used in the query. This helps you find exactly what you are searching for. Moreover, search ads (because they go through manual moderation) are often more relevant and helpful than the rest of the search results. Another argument in defense of search ads is that they are much less intrusive than many other ad formats. "},{"title":"What is websites' self-promotion?​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#what-is-websites-self-promotion","content":"In principle, when an ad on a website promotes this particular website or closely related websites, social media, and so on, such an ad is considered a self-promoting one.  Our general stance here is very similar to the EasyList policy regarding self-promotion ads. According to our filter policy, we should not block these ads; however, we should not make an exception if such an ad gets blocked by some rule 'alongside' a regular ad. Partly, this is due to ethical reasons, but mostly because such ads are rarely too intrusive and are often useful for the visitor of the website (who is supposedly interested in this website's content). By enabling 'Search ads and self-promotion', AdGuard users can unblock some of these self-promotion ads. "},{"title":"What ads are on the list?​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#what-ads-are-on-the-list","content":"When you enable 'Search ads and self-promotion', search ads from the following search engines are shown: GoogleYahooBingAskYandexDuckDuckGoStartPage As well as all self-promotional ads that satisfy our filter policy. "},{"title":"Summary​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#summary","content":"Allowing 'Search ads and self-promotion' is a 100% optional feature that may be helpful in some cases. If you don't like it, you can turn it off at any time. It does not, and never will, include any ad types or individual ads that do not fall into one of the two categories described above. "},{"title":"如何安装 AdGuard","type":0,"sectionRef":"#","url":"general/how-to-install/","content":"如何安装 AdGuard 根据您想安装的 AdGuard 应用程序或浏览器扩展，请按照以下不同的链接找到相关文章： AdGuard Android版 AdGuard iOS版 AdGuard Windows版 AdGuard Mac版 AdGuard 浏览器扩展 AdGuard Safari版 AdGuard 内容拦截器","keywords":""},{"title":"Browsing Security","type":0,"sectionRef":"#","url":"general/browsing-security/","content":"","keywords":""},{"title":"How does a check work?​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#how-does-a-check-work","content":"The scope and methods of checks depend on the product you use. In our browser extensions, AdGuard inspects only the pages you visit. In AdGuard for Windows, Mac, or Android, we offer you the best possible protection by checking both the pages and all objects loaded on them. "},{"title":"AdGuard for Windows, Mac, and Android​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#adguard-for-windows-mac-and-android","content":"We use the protocol Safe Browsing API version 2.2 for our work with filters. This protocol allows us to keep your personal data absolutely safe. Our server knows nothing about the websites that you visit. We use hash prefixes for checks, not the opened URLs. The figure below provides a general understanding of how the Browsing Security module works, using AdGuard for Windows as an example.  "},{"title":"AdGuard 浏览器扩展​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#adguard-浏览器扩展","content":"Browser extensions work differently, using the so-called Lookup API to check the pages you visit. Every time you visit any website, your local client exchanges information with our backend server in the form of hashes and hash prefixes. For those interested in the process at a deeper level, the link above will be helpful. As a result of that exchange, the local client determines if the website belongs to the database of potentially dangerous websites or not. We bring to your attention that we never get any information that could allow us to determine which websites you visit and use that data in any way. An approximate algorithm of the functioning of the Browsing Security module is shown in the picture below.  "},{"title":"AdGuard 过滤器​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#adguard-过滤器","content":"We currently maintain two AdGuard filters. One protects against phishing and fraudulent websites. The other protects against malicious websites, visiting which may lead to a virus infection. "},{"title":"Phishing sites filter​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#phishing-sites-filter","content":"Phishing is a type of online fraud aimed at gaining access to confidential data of users — username and password. If you are interested in this topic, we suggest that you read this article at Wikipedia. Apart from phishing sites, this filter also covers different fraudulent sites, including all kinds of scams, sales of nonexistent content, and such. "},{"title":"Malicious sites filter​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#malicious-sites-filter","content":"This filter contains links to pages that lead to the execution of malicious code. It can initiate leakage or loss of data or harm the device of a user. It can be authorized (for example, when downloading and running the executable file) or unauthorized (for example, when being attacked with spyware). "},{"title":"How do we fill up our filters?​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#how-do-we-fill-up-our-filters","content":"Our filters are constantly filled with new addresses. Since most of the work is automated, you can be sure that new malware and phishing addresses fall into our database as quickly as possible. "},{"title":"AdGuard Browsing Security Community​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#adguard-browsing-security-community","content":"An important tool for maintaining the highest level of filtering is AdGuard Browsing Security Community. Any user of our products — be it AdGuard for Windows or our browser extension — can become a member of the community and help us in the making of AdGuard filters. In the picture below we described an algorithm of Browsing Security Community work:  "},{"title":"Want to help?​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#want-to-help","content":"We will gladly accept any help! If you want to send us a complaint about a phishing or malware site, you can do it via technical support at support@adguard.com. "},{"title":"False-positive responses​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#false-positive-responses","content":"Occasionally, some non-malicious websites get added to AdGuard's filters. We do our best to reduce the percentage of false positives, but they still occur. If you come across this behavior from AdGuard, please send us a complaint about the false-positive alarm. You can submit such complaints via our technical support at support@adguard.com. "},{"title":"Known issues","type":0,"sectionRef":"#","url":"general/https-filtering/known-issues/","content":"","keywords":""},{"title":"Known issues​","type":1,"pageTitle":"Known issues","url":"general/https-filtering/known-issues/#known-issues","content":"HTTPS filtering in AdGuard has its drawbacks. Almost all of them are scheduled to be eliminated in the next few AdGuard versions. All the issues known to us and the ETAs on their fixes are listed below. "},{"title":"Inspecting the original certificate​","type":1,"pageTitle":"Known issues","url":"general/https-filtering/known-issues/#inspecting-the-original-certificate","content":"The most important drawback of the HTTPS filtering mechanism is that it hides the real certificate of a website. You cannot simply check its original certificate because you can only see the one issued by AdGuard. This problem is solved in Browser Assistant. This browser extension helps you manage filtering directly from the browser and allows you to inspect the original certificate of any website. "},{"title":"Certificate Transparency​","type":1,"pageTitle":"Known issues","url":"general/https-filtering/known-issues/#certificate-transparency","content":"Thanks to modern cryptography, browsers can usually detect malicious websites that are provisioned with forged or fake SSL certificates. However, current cryptographic mechanisms aren’t so good at detecting malicious websites if they’re provisioned with mistakenly issued certificates or certificates that have been issued by a certificate authority (CA) that’s been compromised or gone rogue. Certificate Transparency aims to remedy these certificate-based threats by making the issuance and existence of SSL certificates open to scrutiny by domain owners, CAs, and domain users. AdGuard products which use CoreLibs starting with version 1.11 will implement a policy based on Chrome Certificate Transparency Policy. "},{"title":"Have remarks or suggestions?​","type":1,"pageTitle":"Known issues","url":"general/https-filtering/known-issues/#have-remarks-or-suggestions","content":"If you’d like to add something, report any errors, or ask a question, please contact us at: devteam@adguard.com. "},{"title":"Local.adguard.org 域名","type":0,"sectionRef":"#","url":"general/https-filtering/local-adguard-com-domain/","content":"","keywords":""},{"title":"技术说明​","type":1,"pageTitle":"Local.adguard.org 域名","url":"general/https-filtering/local-adguard-com-domain/#技术说明","content":"但是，这是怎么回事，为什么要这样做？ 请阅读以下技术说明。 AdGuard is a network-level content blocker so it cannot simply add custom JavaScript and CSS to webpages like what browser extensions do. 但是，这样做对于高质量的内容拦截至关重要。为了做到这一点，AdGuard 注入了一个“内容脚本”：&lt;script src=&quot;https://local.adguard.org/.../content-script.js&quot;&gt;。 这个“内容脚本”会处理修饰符过滤，隐藏或删除网页中的广告内容。AdGuard 在网络级别拦截 local.adguard.org 域名地址的连接并在本地进行处理。 这就是为什么该域名具有多年不变的“静态” IP 地址。 为什么我们需要使用真实的 IP 地址呢？ 我们不能使用 127.0.0.1，因为浏览器不接受它。可以使用私有子网中的一些 IP 地址，但是该解决方案具有两个弊端。 首先，很有可能与现有的内部网络服务冲突并破坏对其的访问。其次，一些 DNS 服务器可能会认为这是 DNS 重新绑定的攻击，并拒绝回应 local.adguard.org。 "},{"title":"验证​","type":1,"pageTitle":"Local.adguard.org 域名","url":"general/https-filtering/local-adguard-com-domain/#验证","content":"这很容易验证。 如果您禁用 AdGuard，您会发现根本无法建立到 local.adguard.org 的连接，因为没有具有该地址的服务器。 只需在 AdGuard 被禁用时尝试在浏览器中打开它。 "},{"title":"What is HTTPS filtering","type":0,"sectionRef":"#","url":"general/https-filtering/what-is-https-filtering/","content":"","keywords":""},{"title":"What is HTTPS?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#what-is-https","content":"HTTPS (HyperText Transfer Protocol Secure) is an extension of the HTTP protocol that supports encryption to increase security. This protocol is used to securely transmit valuable information like personal data, credit card details, etc. Using HTTPS is highly advantageous because encrypted traffic is protected against eavesdropping by a third party, and we can only welcome this. HTTPS acceptance has been growing in recent years, mainly because it is encouraged by Google and also due to the emergence of a free certificate authority Let’s Encrypt. The diagram below describes the difference between plain HTTP protocol and secure HTTPS protocol.  "},{"title":"What is a security certificate?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#what-is-a-security-certificate","content":"Simply put, HTTPS means data encryption. But there’s still a problem: how can you be sure that you’ve established an encrypted connection with the right website? That’s where security certificates come into play. A certificate serves as proof that the website is really what it tells you it is. If a website doesn’t have such a certificate, or if the certificate contains incorrect information, the browser will not allow you to establish a secure connection. It is important that the certificate a website uses is issued by a certificate authority (CA) trusted by your browser. Such a CA guarantees that the SSL certificate is, indeed, issued to the website’s owner. "},{"title":"Why does AdGuard need to be able to filter HTTPS?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#why-does-adguard-need-to-be-able-to-filter-https","content":"Most websites are now using HTTPS, and the same applies to advertising. Here are a few popular websites where you can’t remove ads without HTTPS filtering: youtube.com, facebook.com, and twitter.com. "},{"title":"How does HTTPS filtering work?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#how-does-https-filtering-work","content":"If it were easy, HTTPS wouldn’t be that secure. When a browser attempts to connect to a server, AdGuard establishes two secure connections: one with the browser (or another app) and the other with the server. The browser must trust AdGuard and the connections it creates. For this purpose, AdGuard generates a special (and unique) root certificate and installs it into the system and, when it is required, into some browsers (e.g., Firefox). Thus, AdGuard can see what is happening inside the secure connection and do its job — block ads and trackers. For better understanding we depicted this process:  "},{"title":"Does my traffic remain encrypted and secure?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#does-my-traffic-remain-encrypted-and-secure","content":"Of course! Your connection with a remote server remains encrypted and secure. AdGuard, just like your browser, checks the server’s certificate before deciding whether to filter it or not. However, HTTPS filtering has its drawbacks. The most important one is that it hides from the browser the actual certificate of the website. Instead, the browser sees the certificate issued by AdGuard. Because of this, we have taken additional measures to improve connection security. "},{"title":"Financial websites and websites with sensitive personal data​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#financial-websites-and-websites-with-sensitive-personal-data","content":"By default, AdGuard doesn’t filter any information on websites of banks, payment systems, or websites with valuable personal data. We maintain a list of thousands of exclusions. If you believe some website should be added to this list, please let us know. "},{"title":"Extended Validation (EV) certificates​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#extended-validation-ev-certificates","content":"AdGuard allows you to disable filtering for all websites that use extended validation certificates. An EV certificate offers a higher level of security and provides more guarantees than a regular certificate, proving that the website is not fraudulent or fake. "},{"title":"Problems related to HTTPS filtering​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#problems-related-to-https-filtering","content":"A 2017 study shows that 5 to 10% of HTTPS connections are established by HTTPS-filtering applications. It is usually done by various kinds of antivirus software. The bad news is that 24 out of 26 tested antiviruses reduced, in various ways, the connection security level, while two-thirds created connections prone to hacking. The researchers came to a simple conclusion: the Internet security community should pay close attention to applications that filter secure connections. And the developers of such software must pay serious attention to the quality of filtering implementations. We would like to note that AdGuard was not tested in the above study. We ran estimates according to their set of tests, and at the time of testing, we could have received the maximum score — A*. However, this score is not perfect. During the study, the researchers identified some issues that were omitted in the final evaluation. Here at AdGuard, we fully agree with those conclusions. Moreover, we would like to be as open with users as possible and talk about the problems we are currently experiencing and the steps we are taking to improve the quality and security of the filtering mechanism. The list of these problems is sorted by priority. Most of the problems discovered in the above study are related to certificate validation mechanisms. This is what we want to focus on first. We are working on a separate certificate validation library. Moreover, we want to make it open source. A separate article lists all the known drawbacks of HTTPS filtering in AdGuard and our plans to fix them. HTTPS filtering issues on Android 7+​ Starting from Android 7, developers have to explicitly indicate that their apps trust user-installed certificates. Not everyone wants to, or bothers with it. What does it mean for AdGuard? AdGuard installs a user certificate to be able to filter HTTPS traffic. If an app doesn't trust this certificate, its HTTPS traffic will not be filtered. What to do? The first thing worth mentioning is that many apps (even modern ones) still trust user certificates. Nothing has changed in this regard. Almost all browsers also trust such certificates. There may be some exotic browsers that do not, but they are a rare exception to common practice. Finally, if your device is rooted, you can move the AdGuard certificate to the system storage. This way, you don't have to worry about any permissions a particular app may or may not have — HTTPS traffic will be filtered for modern apps just as well as for older ones. Please keep in mind that in this case, some additional security restrictions (e.g., HPKP or Expect-CT) apply to AdGuard. "},{"title":"How to manually check HTTPS quality?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#how-to-manually-check-https-quality","content":"There are several dedicated websites where you can check the quality of your HTTPS connection. These websites check if your browser (or, in our case, your browser plus AdGuard) is susceptible to common vulnerabilities. If you plan to use any program that filters HTTPS, not necessarily AdGuard (e.g., an antivirus), we advise that you check the connection quality on these websites. https://www.ssllabs.com/ssltest/viewMyClient.htmlhttps://www.howsmyssl.com/https://badssl.com/ "},{"title":"取消订阅或退款","type":0,"sectionRef":"#","url":"general/license/cancel-refund/","content":"","keywords":""},{"title":"取消订阅的方式​","type":1,"pageTitle":"取消订阅或退款","url":"general/license/cancel-refund/#取消订阅的方式","content":"用户可以在 AdGuard 账号中取消订阅。 使用以下方式取消订阅： 前往 AdGuard 账号 选择「许可证」 在不再需要的订阅下方点击「取消订阅」 被取消的订阅将在其到期日之前有效。 注意 通过应用商店购买的订阅可在应用商店账号或设备设置内管理。 "},{"title":"如何退款​","type":1,"pageTitle":"取消订阅或退款","url":"general/license/cancel-refund/#如何退款","content":"依据我们的销售条款，用户在 https://adguard.com 官网上购买的 AdGuard 许可证密钥后可 100% 退款。 要申请退款，请联系我们的支持团队 support@adguard.com 并说明您购买时所用的付款方式。 在以下情况下，退款可能会受到拒绝： 许可证是在 60 多天前购买的许可证是通过经销商购买的许可证是从 App Store 购买的用户为许可证密钥的升级或续订申请部分退款 "},{"title":"激活许可证的方式","type":0,"sectionRef":"#","url":"general/license/activation/","content":"","keywords":""},{"title":"如何激活许可证​","type":1,"pageTitle":"激活许可证的方式","url":"general/license/activation/#如何激活许可证","content":"要激活许可证，请打开 AdGuard 软件的「许可证」部分，前往「登录」或「激活」按钮。 使用 AdGuard 账号的电子邮件和密码登录。 如果用户还没有一个账号，将被提示创建一个。 注意 要用 AdGuard 账号激活许可证，用户需要一个许可证至少还有一台可连接的设备。 如果许可证可连接的设备数量已达上限，可以升级 ，或者将许可证从一台设备连接到另一台。 您还可以使用许可证密钥激活许可证。 您可以在下方查看每个操作系统的激活说明。 "},{"title":"在 Windows 版的 AdGuard 激活许可证​","type":1,"pageTitle":"激活许可证的方式","url":"general/license/activation/#在-windows-版的-adguard-激活许可证","content":"在过期许可证页面上，单击「激活」。 或者，在主屏幕右上角选择「许可证」，然后单击「激活」。 以便捷的方式激活许可证。 如果许可证与电子邮件地址绑定，请单击「AdGuard 账号」或选择与此电子邮件地址关联的社交网络。 或者，请输入您的许可证密钥。 "},{"title":"在 Mac 版的 AdGuard 激活许可证​","type":1,"pageTitle":"激活许可证的方式","url":"general/license/activation/#在-mac-版的-adguard-激活许可证","content":"在过期许可证页面上，单击「激活」。 或者，单击 AdGuard 菜单中的齿轮图标，然后单击「许可证」。 在打开的窗口中，点击「激活」。 以便捷的方式激活许可证。 如果许可证与电子邮件地址绑定，请单击「AdGuard 账号」或选择与此电子邮件地址关联的社交网络。 或者，请输入您的许可证密钥。 "},{"title":"在 Android 版的 AdGuard 激活许可证​","type":1,"pageTitle":"激活许可证的方式","url":"general/license/activation/#在-android-版的-adguard-激活许可证","content":"点击「设置」，然后点选「许可证」。 点击「激活许可证」。 以便捷的方式激活许可证。 如果许可证与电子邮件地址绑定，请点击「用电子邮件继续」或选择与此电子邮件地址相关联的社交网络。 或者，请输入您的许可证密钥。 "},{"title":"在 iOS 版的 AdGuard 激活许可证​","type":1,"pageTitle":"激活许可证的方式","url":"general/license/activation/#在-ios-版的-adguard-激活许可证","content":"点击「设置」，然后点选「许可证」。 然后点击屏幕右上角的「登录」 使用电子邮件地址或社交媒体账户激活许可证。 "},{"title":"关于旧版许可证的常见问题","type":0,"sectionRef":"#","url":"general/license/legacy/","content":"","keywords":""},{"title":"关于旧版的许可证​","type":1,"pageTitle":"关于旧版许可证的常见问题","url":"general/license/legacy/#关于旧版的许可证","content":"最开始，我们有以下的许可证用来激活 AdGuard 软件： 标准版 —— 用于 Windows/Mac 的 AdGuard 桌面端应用程序 移动版 —— 用于 Android/iOS 的 AdGuard 移动端应用程序 高级版 —— 同时用于桌面端和移动端的许可证 标准版和移动版可以支付用于1到9台设备。 标准版限制用于桌面端，而移动版只能用于手机和平板电脑。 高级版的许可证可以同时在2-18台设备上使用。 取决于用户购买时选择的所需要的设备数量。用户可以在同等数量的桌面端和移动端设备上激活许可证：2+2、3+3 等等。 比如说，您可能有可用于2+2的高级版许可证，该许可证可以安装在两台电脑和两台手机/平板电脑。 或者，比方说，您购买力9+9（总共18 台设备），那么您可以在9个电脑和9个手机/平板电脑安装该许可证。 所有许可证的类型（标准版、移动版、高级版）有一年和终身的效期。 2019年10月 AdGuard 有新版许可证。用户仍然可以选择两个效期，即一年和终身，但是许可证的类型改变了。现在我们有个人版（可以用于3台设备）和家庭版（可以用于9台设备）。 请注意：新版的许可证密钥可以用于所有设备上，无论是哪一种桌面端或移动端组合。 比如说，个人版的许可证可以安装在3台设备，即 Android、Mac 和 iOS，或是两个 Windows 电脑和一个 Apple iPad 上等等。 "},{"title":"旧版许可证现在怎么用？​","type":1,"pageTitle":"关于旧版许可证的常见问题","url":"general/license/legacy/#旧版许可证现在怎么用","content":"标准版的许可证自动换成“通用版”，即可以用于所有设备，无论是桌面端还是移动端。 移动版的许可证未受改变（设备数量保持不变，依然只能用于手机或平板电脑上）。 高级版的许可证也没改变，依然收到设备数量的限制。 虽然高级版的许可证显示在用户的个人账号里（包括总计设备数量）。该许可证现在也可以激活在桌面端+移动端的设备组合。 比如说，以下是1+1许可证密钥的例子：  无论设备的总数（2）许可证密钥仅仅可以在1个桌面端和1个移动端激活。 所有旧版的许可证在 AdGuard 账号里带有「旧版」标记。 当用户续订获省级许可证时，它们自动转换成新版的许可证。 不过，也有一些细微的差别。 让我们看看哪些许可证可以转换成新版，以及如何做到这一点。 "},{"title":"我有旧版许可证密钥。 我有什么续订/升级选择？​","type":1,"pageTitle":"关于旧版许可证的常见问题","url":"general/license/legacy/#我有旧版许可证密钥-我有什么续订升级选择","content":"用户可以在续订网页或 AdGuard 账号里查看该消息：  请前往「我的许可证」选项卡，检查每个特定密钥有哪些操作可供执行。 下面我们将用具体的例子给您解释。 "},{"title":"1/2/3台设备的许可证​","type":1,"pageTitle":"关于旧版许可证的常见问题","url":"general/license/legacy/#123台设备的许可证","content":"用于1、2、3台设备的一年许可证可以转换成个人或家庭：  根据您需要保护的设备数量进行选择。 除了续订，您可以转为终身版：  由于技术限制终身版的许可证只能转换成家庭版（9台设备）：  "},{"title":"4+台设备的许可证（最多可连接到9台设备）​","type":1,"pageTitle":"关于旧版许可证的常见问题","url":"general/license/legacy/#4台设备的许可证最多可连接到9台设备","content":"一年的许可证密钥配置仅能转换成家庭版的许可证：  由于技术限制用于4太或更多设备上的终身版许可证无法升级：  "},{"title":"9台设备的许可证​","type":1,"pageTitle":"关于旧版许可证的常见问题","url":"general/license/legacy/#9台设备的许可证","content":"高级版的许可证密钥（5+5 和更多）和您在我们帮助下单独购买的10多个设备的定制密钥。 这些都是比较特殊的情况，所以如果您想把自己的许可证升级为终身制，请联系我们：partners@adguard.com。 我们将根据您的许可证的具体配置，并提供一个不同的价格。 "},{"title":"转移许可证的方式","type":0,"sectionRef":"#","url":"general/license/transfer/","content":"","keywords":""},{"title":"将许可证转移到另一台设备​","type":1,"pageTitle":"转移许可证的方式","url":"general/license/transfer/#transfer","content":"许可证密钥可以在有限数量的设备上激活。 如果许可证密钥已经在最大数量的设备上被使用，用户需要通过账号解除设备绑定。 "},{"title":"如何解绑设备绑定​","type":1,"pageTitle":"转移许可证的方式","url":"general/license/transfer/#如何解绑设备绑定","content":"在 AdGuard 应用程序中单击「重置许可证」或「退出」。 从 AdGuard 账号中删除设备： 在 AdGuard 账号点击「AdGuard 广告拦截程序」。 单击要解除绑定的设备。 单击「删除」。 在解绑所需要的设备数量后，用户可以在新设备上登录 AdGuard 账号。 许可证就会绑定到用户登录的新设备。 "},{"title":"如何将许可证转移到另一个 AdGuard 账号​","type":1,"pageTitle":"转移许可证的方式","url":"general/license/transfer/#transferaccount","content":"转到包含想要转移许可证的 AdGuard 账号。 转到「许可证」部分。 在列表中找到要转移的许可证，点击「从账号中解绑」。 点击「取消绑定」(重要：请记下许可证密钥以免忘记)。 前往想转移许可证的 AdGuard 账号。 转到「许可证」部分。 在右上角点击「绑定许可证」 输入许可证密钥（步骤 3） 如果有用户无法登录初始账号，请联系我们的支持团队：support@adguard.com "},{"title":"购买/升级订阅的方式","type":0,"sectionRef":"#","url":"general/license/payment-options/","content":"","keywords":""},{"title":"如何购买许可证​","type":1,"pageTitle":"购买/升级订阅的方式","url":"general/license/payment-options/#purchase","content":"用户可以在 adguard.com 上购买 AdGuard 许可证。 平台支持 Visa、Mastercard、Apple Pay、Google Pay、PayPal、支付宝和银联支付。 我们还接受以下加密货币：Bitcoin、Ethereum、Litecoin 和 Tether。 iOS 版 的 AdGuard Pro 可以在 App Store 上购买。 此外，用户也可以通过经销商购买广告拦截程序的许可证。 AdGuard 软件在应用商店和分销商店的购买情况取决于用户的位置。 "},{"title":"如何升级许可证​","type":1,"pageTitle":"购买/升级订阅的方式","url":"general/license/payment-options/#upgrade","content":"为了更好地利用 AdGuard 产品，用户可升级许可证以获得以下好处。 要扩展设备数量，用户可以将 AdGuard 广告拦截程序的个人许可证升级到家庭版或者也可以，将许可证升级到终身许可证 用户可以在 AdGuard 账号中升级许可证。 请单击「升级成终身版」或「增加设备数量」。  "},{"title":"什么是 AdGuard 许可证","type":0,"sectionRef":"#","url":"general/license/what-is/","content":"","keywords":""},{"title":"什么是 AdGuard 许可证​","type":1,"pageTitle":"什么是 AdGuard 许可证","url":"general/license/what-is/#什么是-adguard-许可证","content":"许可证是使用 AdGuard 产品的许可，根据最终用户许可协议提供的。 如果与电子邮件地址绑定，AdGuard 许可证可在用户的 AdGuard 账号中找到。 "},{"title":"AdGuard 许可证的类型​","type":1,"pageTitle":"什么是 AdGuard 许可证","url":"general/license/what-is/#adguard-许可证的类型","content":"在购买页面上，用户可以查看以下许可证类型： 一年订阅：许可证每年自动更新，也可手动续订。 个人（最多支持 3 台设备）家庭（最多支持 9 台设备） 终身：许可证没有时间限制。 个人（最多支持 3 台设备）家庭（最多支持 9 台设备） 用户还可以从其他渠道购买或免费获得许可证： 试用许可证是有时间限制的免费许可证，允许用户测试软件的全部功能。 AdGuard Windows版：14 天试用期AdGuard Mac版：14 天试用期AdGuard Android版：7 天试用期 经销商许可证和赠送的许可证可以是有时间限制的，也可以是无时间限制的。 有过期日期的许可证只能手动更新。 个人（最多支持 3 台设备）家庭（最多支持 9 台设备） AdGuard Pro iOS版 许可证可以通过 App Store 购买和管理，只能在具有相同 Apple ID 的 iOS 和 iPadOS 设备上使用。 提示 要扩展许可证的设备数量，用户可以升级许可证。 "},{"title":"如何使用 AdGuard 许可证​","type":1,"pageTitle":"什么是 AdGuard 许可证","url":"general/license/what-is/#如何使用-adguard-许可证","content":"要在设备上使用许可证，请使用与许可证关联的电子邮件地址登录 AdGuard 应用程序。 如果许可证尚未绑定到电子邮件地址，用户可以在 AdGuard 账号中进行绑定。 请打开「许可证」选项卡，然后单击「绑定许可证」即可。 或者，用户也可以在 AdGuard 应用程序中输入许可证密钥。 "},{"title":"许可证密钥​","type":1,"pageTitle":"什么是 AdGuard 许可证","url":"general/license/what-is/#许可证密钥","content":"许可证密匙是一种独特的字符序列以代表 AdGuard 广告拦截程序许可证。 许可证密钥将自动绑定到用户购买许可证时使用的电子邮件地址上。如果有用户从经销商处购买许可证，密钥会单独提供给用户。 有了许可证密钥，用户可以： 在软件里激活许可证（如果没有 AdGuard 账号）将许可证绑定到 AdGuard 账号并解除绑定 解除许可证绑定时，请务必先保存许可证密钥。 用户需要密钥来重新绑定许可证或将其转移到另一个账号。 "},{"title":"如何恢复许可证密钥​","type":1,"pageTitle":"什么是 AdGuard 许可证","url":"general/license/what-is/#如何恢复许可证密钥","content":"如果用户不记得许可证密钥，请查看 AdGuard 账号。在账号里可以查看与电子邮件地址绑定的所有许可证。 如果有用户丢失了从经销商处购买的许可证密钥，请通过 support@adguard.com 联系我们。 联系前，请准备好收据或其他购物凭证。 "},{"title":"Stealth Mode","type":0,"sectionRef":"#","url":"general/stealth-mode/","content":"","keywords":""},{"title":"常规​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#general","content":""},{"title":"Hide your search queries​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#searchqueries","content":"When you get directed to a website from Google, Yahoo, or any other search engine, this option hides the search query that you used to find that website. "},{"title":"Ask websites not to track you​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#donottrack","content":"Sends the Global Privacy Control and Do Not Track signals to the websites you visit. "},{"title":"Strip tracking parameters from URLs​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#strip-tracking-parameters-from-urls","content":"If you enable this option, AdGuard will strip tracking parameters like utm_* and fb_ref from pages’ URLs. "},{"title":"Tracking methods​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#tracking-methods","content":""},{"title":"Self-destruction of third-party cookies​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#3p-cookie","content":"Websites use cookies to store your information and preferences, such as the language you selected, your location, or the list of items in your shopping cart. When you return to a website, your browser sends back the cookies belonging to that website, which allows it to &quot;remember&quot; your data. Third-party cookies are those implemented by a website that is different from the one you are currently browsing. For example, cnn.com may have a Facebook &quot;Like&quot; widget on its homepage. This widget will implement a cookie that may be read later by Facebook. Some advertisers use such cookies to track what other sites you visit where their ads are placed. Set a time period (in minutes) at the end of which all third-party cookies will be destroyed. Set the timer to 0 to block them completely. 警告 This setting deletes all third-party cookies, including the information of your logins through social networks or other third-party services. You may have to periodically re-log in to some websites and face other cookie-related issues. To block only tracking cookies, use AdGuard Tracking Protection filter. "},{"title":"Self-destruction of first-party cookies​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#1p-cookie","content":"Set a time period (in minutes) at the end of which all cookies will be destroyed. Set the timer to 0 to block them completely. 警告 We do not recommend enabling this option as it may severely interfere with the work of certain websites. "},{"title":"Disable cache for third-party requests​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#3p-cache","content":"When a browser addresses a page, the server assigns an ETag to that page. This ETag is used by the browser to cache the page's contents. Upon subsequent requests, the browser sends the ETag to the corresponding server, thus letting the server learn the visitor’s identity. As long as the site's files are cached, the ETag is sent every time your browser addresses this site. If the site has embedded content from another server (such as an image or iframe), that server can track your activities without your knowledge. "},{"title":"Block third-party Authorization header​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#3p-auth","content":"&quot;Authorization&quot; header value is cached by the browser, and then is sent alongside every request to that domain. It means that it can be used for tracking purposes just like cookies. "},{"title":"Browser API​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#browser-api","content":""},{"title":"Block WebRTC​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#webrtc","content":"WebRTC (Web Real-Time Communication) is a technology that allows direct streaming of data between browsers and apps. It can let others know your true IP address, even if you use a proxy or VPN. Enabling this option can disrupt the work of certain browser applications, such as messengers, chats, cinemas, or games. "},{"title":"Block Push API​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#push","content":"The Push API enables servers to send messages to web applications regardless of the activity status of your browser. Thus, you may see notifications from various websites even if your browser is hidden in the tray or not launched. Enable this option to block the browser's Push API completely. "},{"title":"Block Location API​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#location","content":"Enabling this option will prevent the browser from sending GPS data that could be used to determine your location, modify your search results, or otherwise influence your web experience. "},{"title":"Block Flash​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#flash","content":"The Flash Player plugin has become increasingly vulnerable to such online threats as viruses and hackers; it may also significantly affect website loading time. Turning this setting on makes AdGuard block browsers' ability to detect components (such as plugins and ActiveXObject objects) that allow Flash to display content. This effectively means that browsers are unable to support Flash. "},{"title":"Block Java​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#java","content":"Some websites and web services still use the old technology to support Java plugins. The Java plugin API, which is the basis of Java plugins, has serious security flaws. For security purposes, you can disable such plugins. Nevertheless, even if you decide to use the &quot;Block Java&quot; option, JavaScript will still be enabled. "},{"title":"其它​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#miscellaneous","content":""},{"title":"Hide Referer from third parties​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#referer","content":"Referer is an HTTP header used in browser-to-server requests. It contains the URL of the request source. When you navigate from one page to another, Referer saves the URL of the initial page. The server that hosts the destination web page often has software that parses Referer and extracts various pieces of information from it. Enabling the Hide Referer from third-parties option hides the current website from third-party sites by altering the HTTP header. You can also set an arbitrary value for Referer by entering it into the Custom Referer field. To use default Referer, leave the field blank. Note that to be able to filter traffic, AdGuard applications 'intercept' browser-to-server requests. Requests to ad, tracking, and phishing servers may be altered before sending them to the server or blocked completely. Same goes for the Hide Referer from third parties option: AdGuard intercepts HTTP(S) requests, in particular to remove or change the Referer header if this option is enabled. However, it happens only after these requests “leave” the browser. This means that if you monitor Referer inside the browser (for example, with the help of Chrome's Developer Tools), you will see the original Referer because the request hasn't reached AdGuard yet. You can use software like Fiddler to make sure that Referer gets altered correctly. On the opposite, due to the nature of all browser extensions, AdGuard Browser Extension works 'inside' the browser. It will alter the Referer right then and there, so Developer Tools will show the desired Referer for your requests. "},{"title":"Hide your User-Agent​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#useragent","content":"When you visit a website, your browser sends its information to the server. It looks like a text line that is part of an HTTP request that begins with &quot;User-Agent:&quot;. It usually includes the name and version of the browser, the operating system, and language settings. We cut User-Agent from identifying information so that advertisers cannot obtain it. You can also set an arbitrary value for User-Agent by entering it into the Custom User-Agent field. To use default User-Agent, leave the field blank. "},{"title":"Hide your IP address​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#ip","content":"Stealth Mode cannot hide your IP address. However, we can conceal it so that websites you visit will think you are a proxy. Sometimes this helps, and websites ignore your true IP address. You can set an arbitrary IP address, which you would like others to perceive as yours, by simply entering it into the corresponding field. To use the default IP address, leave the field blank. "},{"title":"Remove X-Client-Data header from HTTP requests​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#xclientdata","content":"It forbids Google Chrome from sending its version and modification information with requests to Google domains (including Double Click and Google Analytics). "},{"title":"Protect from DPI​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#dpi","content":"The Deep Packet Inspection is a system of deep analysis and filtering of traffic by packet content, as well as the accumulation of statistical data. Using this technology, ISPs have the ability to control the passing traffic and limit access to content for their clients. AdGuard can modify outgoing packet data so that the client does not fall under the DPI blocking criteria. This means that by enabling this option, users can get access to the content they want. Not all DPI systems can be bypassed at this time, but we are constantly working to improve this. The &quot;Protect from DPI&quot; feature is already implemented in AdGuard for Windows, AdGuard for Mac, and AdGuard for Android. "},{"title":"用户脚本","type":0,"sectionRef":"#","url":"general/userscripts/","content":"","keywords":""},{"title":"Recommended AdGuard scripts​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#recommended-adguard-scripts","content":"These userscripts come directly from the AdGuard developers, and we can guarantee that they are effective and safe. Remember: whenever you download a userscript from an unknown source, you expose yourself to risk, as some scripts may be harmful to your computer. Get new scripts only from the sources you trust 100%. Furthermore, here are some examples of popular sites with scripts. "},{"title":"AdGuard Extra​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#adguard-extra","content":"An extension that blocks ads in difficult cases when the usual filter-based approach is not enough. AdGuard Extra comes pre-installed with all premium AdGuard versions, so you don't need to do anything to enable it. However, if you want to use it alongside AdGuard Browser Extension or any other ad blocker, you'll need to use an additional extension. Learn more about this userscript and how to install it on GitHub.  "},{"title":"AdGuard Popup Blocker​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#adguard-popup-blocker","content":"The name speaks for itself: it blocks pop-ups — one of the most annoying types of ads on web pages. Learn more about this userscript, its key features, and how to install it on GitHub.  "},{"title":"AdGuard Assistant (legacy version)​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#adguard-assistant-legacy-version","content":"This custom extension is designed to control filtering directly from the browser page (manual blocking, exclusion of the site, etc.). 注意 This version of Assistant is legacy and there is no point in using it on new systems, since it has been replaced with the full-fledged Browser Assistant. But the legacy Assistant might be of help if there is no Browser Assistant for your browser. If this is your case, your can learn how to install AdGuard Assistant on GitHub. "},{"title":"Disable AMP​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#disable-amp","content":"A script that is only pre-installed in AdGuard for Android. It disables AMP (Accelerated Mobile Pages) on the Google search results page. Learn more about this userscript and how to install it on GitHub.  "},{"title":"microShield​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#microshield","content":"A userscript for people who visit Korean websites and some international websites. The microShield userscript blocks Ad-Shield advertisement and anti-adblock. Its original source code is available at asdefuser and AdShield Defuser. This userscript can be installed in AdGuard CoreLibs-based apps, Violentmonkey, Tampermonkey, and quoid/userscripts. Learn more about microShield and how to install it on GitHub. "},{"title":"Where can you get more userscripts?​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#more-userscripts","content":"As userscripts are created mainly by enthusiasts, you should be cautious when installing them. Yet, there is a great variety of interesting scripts that can really make using some websites more convenient. Here we will describe some of the most popular userscript catalogs. "},{"title":"Stylish (userstyles.org)​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#stylish-userstylesorg","content":"Userstyles.org is a catalog of user styles, but it allows you to load them as userscripts. Thus, any user style can be installed via AdGuard. Be careful if you decide to install an unpopular script — there's a risk it might be harmful. "},{"title":"Greasy Fork​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#greasy-fork","content":"Greasy Fork is a userscript catalog by Stylish creators. Unlike the above-mentioned userstyles.org, the scripts in this catalog undergo moderation, so their credibility is much higher. "},{"title":"OpenUserJS.org​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#openuserjsorg","content":"OpenUserJS.org is an open source userscript catalog written in nodeJS. It doesn't have moderation so stay alert to any suspicious scripts. "},{"title":"Community​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#community","content":"If you like the idea of personifying your browser with the help of userscripts, and you have any questions, you can ask them on one of these websites: StackoverflowFreeNodeReddit "},{"title":"Development​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#development","content":""},{"title":"Request license​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#request-license","content":"If you are developing your own custom script and want to test how it works with AdGuard, request a beta license key for the app. To get it, please send an email to devteam@adguard.com with the following information: Subject: Userscript author license request Body: Please tell us about the userscripts you are working on. Here is a mailto link. "},{"title":"Compatibility​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#compatibility","content":"Metadata block​ Supported properties​ @name @namespace @description @version @match @include @exclude @grant @connect @require @resource @downloadURL @updateURL @supportURL @homepageURL @homepage @website @source @run-at @noframes @icon @iconURL @defaulticon @icon64 @icon64URL  Unsupported properties​ These properties will be simply ignored by Adguard. @unwrap  Supported GM functions​ AdGuard supports both old GM_ functions and new GM4 API that use GM object. Values​ 注意 All listed old Greasemonkey functions are deprecated but still supported. GM.info / GM_info GM.setValue / GM_setValue GM.getValue / GM_getValue GM.listValues / GM_listValues GM.deleteValue / GM_deleteValue GM.getResourceUrl / GM_getResourceURL GM.setClipboard / GM_setClipboard GM.xmlHttpRequest / GM_xmlhttpRequest GM.openInTab / GM_openInTab GM.notification unsafeWindow GM_getResourceText GM_addStyle GM_log  Here you can find more information about Greasemonkey API. "},{"title":"Example​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#example","content":"// ==UserScript== // @name Name as shown to the user when locale is english or unknown // @name:ru Name as shown to the user when locale is russian // @description Description as shown to the user when locale is english or unknown // @description:ru Description as shown to the user when locale is russian // @icon https://myhomepage.com/myuserscript.png // @version 1.0.0.0 // @downloadURL https://dl.myhomepage.org/myuserscript.user.js // @updateURL https://dl.myhomepage.org/myuserscript.meta.js // @homepageURL https://myhomepage.com/myuserscript // @include * // @exclude *://website.com/* // @resource https://myhomepage.com/myuserscript.css // @require https://myhomepage.com/mylibrary.js // @grant property:settings // @grant GM_getValue // @grant GM_setValue // @grant GM_deleteValue // @grant GM_listValues // @grant GM_getResourceText // @grant GM_getResourceURL // @grant GM_addStyle // @grant GM_log // @grant GM_setClipboard // @grant GM_xmlhttpRequest // @grant unsafeWindow // @grant GM_info // @grant GM_openInTab // @grant GM_registerMenuCommand // @run-at document-start // ==/UserScript== !function(){( console.log(&quot;I am loaded!&quot;); )}();  "},{"title":"恶意广告软件和病毒","type":0,"sectionRef":"#","url":"guides/adware/","content":"","keywords":""},{"title":"免费的防病毒软件​","type":1,"pageTitle":"恶意广告软件和病毒","url":"guides/adware/#free-antivirus","content":"There are many of them and you can use any one you prefer. 如果防病毒实用程序的检查没有发现任何问题，但计算机仍然运行可疑。请您尝试对设备进行广告软件检测，查看计算机上是否有恶意广告软件。 "},{"title":"如何清除在系统上的恶意广告软件​","type":1,"pageTitle":"恶意广告软件和病毒","url":"guides/adware/#adware","content":"在互联网上可以找到许多用于解决此问题的应用程序。 您可以使用任何自己喜欢的实用程序。 但我们强烈建议使用 Malwarebytes 的 AdwareCleaner、Avast 的 Avast One，或 Adaware。 这些广告软件扫描器非常易于使用，自行处理也一般不会遇到任何问题。 让我们以 AdwareCleaner 为例。 结束下载应用程序并成功安装后，请执行以下步骤： Start the application and click Scan now.  Once the scan has been completed, you will need to send suspicious objects to Quarantine.  When the items are moved to Quarantine, you will be able to Clear the system of unnecessary ballast. In some cases, you may need to Reboot the system after cleaning is complete.  Once the system has been rebooted, cleaning will be completed. If necessary, you can always read the Report on the work done.  If it didn’t help, temporary disable all extensions and some other settings in the browser according to these instructions. If disabling of settings and extensions does not help, try to recreate shortcuts of your browsers. Further on this page we describe the instructions on how to remove some of the most commonly encountered ad extensions. "},{"title":"如何在浏览器中禁用设置和扩展​","type":1,"pageTitle":"恶意广告软件和病毒","url":"guides/adware/#instructions","content":"Below are the instructions on how to disable settings and extensions for the most popular browsers: Google Chrome 浏览器 火狐浏览器 Opera 浏览器 "},{"title":"如何为浏览器重新创建快捷键​","type":1,"pageTitle":"恶意广告软件和病毒","url":"guides/adware/#shortcuts","content":"Very often, malware and adware programs install their homepage in a very simple way — they substitute your browser's desktop shortcut, taskbar and Start menu items. The simplest solution in this case is to manually delete all the shortcuts and recreate them by yourself. "},{"title":"收集 HAR 文件的方式","type":0,"sectionRef":"#","url":"guides/collect-har-file/","content":"","keywords":""},{"title":"Chrome 浏览器​","type":1,"pageTitle":"收集 HAR 文件的方式","url":"guides/collect-har-file/#chrome","content":"如要在 Chrome 中创建 HAR 文件请执行以下操作： 前往出现问题的 URL。 暂时不要重复导致问题的操作。 Open Developer Tools: From menu: Menu → More Tools → Developer Tools.Keyboard: Ctrl+Shift+C, or Ctrl+Alt+I, or ⌥+⌘+I for Mac. Click on the Network tab. 找到 Network 标签中的左上角的圆形按钮，并确认它处于红色录音模式。 如果是灰色的，请您单击使其变为红色的，并开始录音。 Use the Clear button (the circle button with a line through it next to the record button) to clear all previous activity. Select the Preserve log check box on the Network tab. Check the Disable cache check box. Reproduce the steps that create the issue. Save session as a .har file by right-clicking the grid and selecting Save as HAR with content. Forward to AdGuard support (support@adguard.com) with detailed explanation of issue. Supporting screenshots can be helpful, as well. "},{"title":"Edge 浏览器​","type":1,"pageTitle":"收集 HAR 文件的方式","url":"guides/collect-har-file/#edge","content":"前往出现问题的 URL。 暂时不要重复导致问题的操作。 Open Developer Tools: From menu: Menu → More Tools → Developer Tools.Keyboard: Ctrl+Shift+C, or Ctrl+Alt+I, or ⌥+⌘+I for Mac. Click on the Network tab. 找到 Network 标签中的左上角的圆形按钮，并确认它处于红色录音模式。 如果是灰色的，请您单击使其变为红色的，并开始录音。 Use the Clear button (the circle button with a line through it next to the record button) to clear all previous activity. Select the Preserve log check box on the Network tab. Check the Disable cache check box. Reproduce the steps that create the issue. Save session as a .har file by right-clicking the grid and selecting Save as HAR with content. Forward to AdGuard support (support@adguard.com) with detailed explanation of issue. Supporting screenshots can be helpful, as well. "},{"title":"Firefox 浏览器​","type":1,"pageTitle":"收集 HAR 文件的方式","url":"guides/collect-har-file/#firefox","content":"To create a HAR file in Firefox: 前往出现问题的 URL。 暂时不要重复导致问题的操作。 Open Developer Tools in Network mode: From menu: Menu → Web Developer → Network.Keyboard: Ctrl+Shift+C, or ⌥+⌘+E (Mac). Note the Play/Pause button at the top left of the Network tab. 按钮应处于继续记录模式。 If any information is currently displayed in the grid, clear by clicking the Delete trash can button next to the play/pause button. Select the Persist Logs check box on the Network tab. Check the Disable cache check box. Reproduce the steps that create the issue. Save session as a .har file by right-clicking the grid and selecting Save all as HAR. Forward to AdGuard support (support@adguard.com) with detailed explanation of issue. Supporting screenshots can be helpful, as well. "},{"title":"Internet Explorer11 浏览器​","type":1,"pageTitle":"收集 HAR 文件的方式","url":"guides/collect-har-file/#ie11","content":"To create a HAR file in Internet Explorer 11: 前往出现问题的 URL。 暂时不要重复导致问题的操作。 Open Developer Tools in Network mode: From Tools cog wheel menu: Developer Tools → Network tab.Keyboard: F12 → Network tab. Note the start profiling session Play button and stop profiling Stop button at top left of Network tab. 录音时继续按钮将变为灰色，停止按钮为红色。 Put in Play mode. Clear any session info appearing in the lower grid using the Clear session button on Network tab. Hover over icons to see names. Clear session button is a three line icon with an x on it. Check the Disable cache check box. Reproduce the steps that create the issue. Save session as a .har file by clicking on the Save disk button (Export as HAR) on Network tab. Forward to AdGuard support (support@adguard.com) with detailed explanation of issue. Supporting screenshots can be helpful, as well. "},{"title":"Safari 浏览器​","type":1,"pageTitle":"收集 HAR 文件的方式","url":"guides/collect-har-file/#safari","content":"To create a HAR file in Safari: Check the Safari menu bar at the top of the screen for a Develop menu. If not visible, turn it on by going to Safari → Settings → Advanced.Check the checkbox at the bottom next to Show Develop menu in menu bar. 前往出现问题的 URL。 暂时不要重复导致问题的操作。 Open Network tab in Web Inspector: From menu: Develop → Show Web Inspector → Network.Keyboard: ⌥+⌘+I→Network Check Preserve Log checkbox on left side of the Network tabs, within the Other filter options... menu. Clear current Network items by clicking the Delete Trash icon at the far right of Network tabs. Keyboard: ⌘+K Check the Disable caches check box. Reproduce the steps that create the issue. Save session as a .har file by clicking the Export icon next to the Delete Trash icon. Forward to AdGuard support (support@adguard.com) with detailed explanation of issue. Supporting screenshots can be helpful, too. "},{"title":"安卓系统​","type":1,"pageTitle":"收集 HAR 文件的方式","url":"guides/collect-har-file/#android","content":"To create HAR files, follow these steps: Open AdGuard and go to Settings. Choose Advanced in the menu. Choose Low Level Settings Activate pref.har.capture (you will have to restart the protection). Now reproduce the problem — open the app, perform the necessary actions to make the ad appear. Now turn pref.har.capture off again. Go back and tap Export logs and system info → Save. "},{"title":"Windows 系统​","type":1,"pageTitle":"收集 HAR 文件的方式","url":"guides/collect-har-file/#windows","content":"Open Settings* → General settings → Advanced settings and scroll down. Check the Enable HAR writing box. Reproduce the problem. Go to General settings → Click Export logs → Save. Disable HAR writing by unchecking the corresponding box. "},{"title":"How to enable HTTPS filtering for Google Family Link","type":0,"sectionRef":"#","url":"guides/family-link-certificate/","content":"How to enable HTTPS filtering for Google Family Link To enable HTTPS filtering on a device that uses Google Family Link, install the AdGuard certificate by following these instructions: Make a backup, just in case Remove the child’s account from your device: On the child’s device, go to Settings → Accounts → GoogleTap your child’s account and see if you have an option to remove it. If you don’t have such an option, proceed to the next stepTap the three dots on the upper right corner of the screen and see if you have an option to remove the accountFollow the instructions removing the child’s account from the device Launch AdGuard and install the CA file Restore the child’s account on the device: On the child’s device, go to Settings → Accounts → Google → Add AccountSign in to your child’s accountFollow the instructions on the screen to set up your child’s account","keywords":""},{"title":"代理证书安装","type":0,"sectionRef":"#","url":"guides/proxy-certificate/","content":"","keywords":""},{"title":"如何下载并安装证书​","type":1,"pageTitle":"代理证书安装","url":"guides/proxy-certificate/#如何下载并安装证书","content":"根据您设备的类型 (Windows/Mac/Android/iOS)，请遵守以下说明中的一条： "},{"title":"Windows 系统​","type":1,"pageTitle":"代理证书安装","url":"guides/proxy-certificate/#windows","content":"记下装有 AdGuard 的台式计算机的 IP 地址。 Make sure the AdGuard protection is enabled. 然后在设置的「网络」中勾选「将 AdGuard 用作 HTTP 代理」。 在装有 AdGuard 的同一台设备上，通过浏览器打开此链接： http://local.adguard.org/cert 单击下载按钮。 将下载的 cert.cer 文件传输到您想通过 AdGuard 路由流量的设备 在该设备上，按 Win 按钮，输入 管理计算机证书 ，按 Enter。 在「证书」-「本地计算机」页面，找到「受信任根证书」→「证书」文件夹。 右键单击「证书」文件夹，并单击「所有任务」→「导入」。 在「证书导入向导」页面，单击「下一步」。 点击「浏览」，导入证书。 导航到 cert.cer 证书文件，选择它，然后点击「打开」。 单击「下一步」。 选择「将所有证书放置在以下存储区中」复选框。 确保「证书存储」字段显示「受信任的根证书颁发机构」，然后点击「下一步」。 单击「完成」。 按 Win 键，然后打开「设置」。 选择「网络&amp;Internet 」→「代理」。 关闭「自动检测设置」。 在「使用代理服务器」中，点击「设置」。 打开开关。 对于「代理 IP 地址」，输入在第一步记下的台式计算机的 IP 地址。 对于端口，输入在桌面 AdGuard 应用程序的网络设置中选择的端口。 单击「保存」。 "},{"title":"Mac 系统​","type":1,"pageTitle":"代理证书安装","url":"guides/proxy-certificate/#mac","content":"记下装有 AdGuard 的台式计算机的 IP 地址。 Make sure the AdGuard protection is enabled. 然后转到 「设置」→「网络」→「HTTP 代理」并选中「AdGuard 用作 HTTP 代理」复选框。 From the computer with AdGuard, follow this link using a web browser: http://local.adguard.org/cert. 单击下载按钮。 将下载的 cert.cer 文件传输到您想通过 AdGuard 路由流量的设备 双击下载的证书文件。 输入管理员密码，然后点击「修改钥匙串」。 转到「Spotlight」（右上角的搜索图标），输入“Keychain Access”（钥匙串访问），然后从搜索结果中选择「Keychain Access」（钥匙串访问）。 在「系统」中，突出显示您添加的证书。 右键单击证书并从上下文菜单中选择「查看信息」。 展开「信任」以显示该证书的信任政策。 在「安全套接层（SSL）」，选择「始终信任」。 打开「系统偏好」→「网络」，选择上层活动连接。 点击「更多信息... ，并转到「代理」。 勾选两个复选框。「网络代理（HTTP）」和「安全网络代理（HTTPS）」。 在「代理」，请输入在第一步记下的您的计算机的 IP 地址。 在「端口」，输入在桌面 AdGuard 应用程序的网络设置中选择的端口。 "},{"title":"安卓系统​","type":1,"pageTitle":"代理证书安装","url":"guides/proxy-certificate/#android","content":"记下装有 AdGuard 的台式计算机的 IP 地址。 Make sure the AdGuard protection is enabled. 然后在设置的「网络」中勾选「将 AdGuard 用作 HTTP 代理」。 From the computer with AdGuard, follow this link using a web browser: http://local.adguard.org/cert. 单击下载按钮。 将下载的 cert.cer 文件传输到您想通过 AdGuard 路由流量的设备 找到并点击先前下载的 cert.cer 证书以打开文件。 在某些手机上，可能会要求您输入设备密码。 然后再按确定。 证书安装成功。 打开连接的 Wi-Fi 网络的高级设置。 将代理类型切换为手动。 对于「代理主机名」，请输入在第一步记下的 IP 地址。 对于「代理端口」，输入在桌面 AdGuard 应用程序的网络设置中选择的端口。 "},{"title":"iOS 系统​","type":1,"pageTitle":"代理证书安装","url":"guides/proxy-certificate/#ios","content":"记下装有 AdGuard 的台式计算机的 IP 地址。 Make sure the AdGuard protection is enabled. 然后在设置的「网络」中勾选「将 AdGuard 用作 HTTP 代理」。 From the computer with AdGuard, follow this link using a web browser: http://local.adguard.org/cert. 单击下载按钮。 将下载的 cert.cer 文件传输到您想通过 AdGuard 路由流量的设备 打开「设置」→「安全」→「加密&amp;凭证」→「安装证书」。 安卓设备默认不信任证书，所以当您选择「CA证书」，您会收到警告。 点击「继续安装」。 打开「设置」→「配置文件下载」，然后点击右上角的「安装」。 输入密码并确认安装。 点击完成。 转到「设置」→ 「常规」→ 「关于」→ 「证书信任设置」。 启用「Adguard Personal CA」旁边的开关。 证书安装成功。 在该设备上，打开连接的 Wi-Fi 网络的高级设置。 将代理类型切换为手动。 对于「代理主机名」，请输入在第一步记下的您的计算机的 IP 地址。 对于「代理端口」，输入在桌面 AdGuard 应用程序的网络设置中选择的端口。 "},{"title":"How to create a minidump file to fix the BSoD error","type":0,"sectionRef":"#","url":"guides/minidump/","content":"","keywords":""},{"title":"What is Minidump file​","type":1,"pageTitle":"How to create a minidump file to fix the BSoD error","url":"guides/minidump/#what-is-minidump-file","content":"A minidump file is a file that contains the information about the nature of the system crash. It is created just before the blue screen appears and it has the minimum amount of useful information that can be used to solve the problem. The minidump file usually has a .dmp extension. 注意 On Windows 10, the blue screen shows a stop code and a QR code. The user can use this information and search the Web for the specific problem. The option to create the minidump file is disabled by default, so before we go into more detail on how to use the file, let’s take a closer look at how to enable it. "},{"title":"Set up Windows to create the Minidump file​","type":1,"pageTitle":"How to create a minidump file to fix the BSoD error","url":"guides/minidump/#set-up-windows-to-create-the-minidump-file","content":"Even if you don’t experience any BSoD crash errors, you can still set this option — this is a general recommendation, not necessarily related to AdGuard products. Please follow the instructions below to automatically create the minidump file. Type sysdm.cpl in the Windows search bar and click Open. The System Properties Control Panel Menu window will appear on the screen. 提示 Alternatively, click Settings → System → About → Advanced system settings. ::: ![System Properties *mobile_border](https://cdn.adtidy.org/blog/new/c2huSystem_Properties.jpeg)  Go to the Advanced tab. In the Startup and Recovery section, click Settings. Enable the following three options: Write an event to the system logAutomatically restartWriting debugging information → Small memory dump (256 kb) Click OK to apply the settings. Restart the computer. You've successfully enabled the minidump file. Now it will be created automatically when the system crashes. 注意 By default the minidump file is stored in the %SystemRoot%\\Minidump folder. You can change the directory location to whatever you like, but please remember that a lot of programs are set to look for this location by default, so we recommend that you do not change the location. "},{"title":"如何报告错误","type":0,"sectionRef":"#","url":"guides/report-bugs/","content":"","keywords":""},{"title":"开始前​","type":1,"pageTitle":"如何报告错误","url":"guides/report-bugs/#开始前","content":""},{"title":"什么时候需要报告错误​","type":1,"pageTitle":"如何报告错误","url":"guides/report-bugs/#什么时候需要报告错误","content":"检查您是否已有最新的版本，如果还没，我们建议您请先试试升级：该错误可能已经在新版本中得到了解决。 还有请留意这个错误是否还没有被其他用户上报过。 我们建议大家留意处理中和已解决的问题。  "},{"title":"如何描述错误​","type":1,"pageTitle":"如何报告错误","url":"guides/report-bugs/#如何描述错误","content":"请您提供尽量多的细节，这将使我们更容易重现该错误，然后着手修复它。 因此，请大家在上报错误时参考以下模版： 应用程序版本操作系统版本发现问题的时间在您发现问题前，您进行什么操作或应用程序执行什么操作。 请重现操作步骤问题是否重复发生，发生频率如何您是否开启 VPN 或防病毒软件 "},{"title":"如何收集日志记录​","type":1,"pageTitle":"如何报告错误","url":"guides/report-bugs/#如何收集日志记录","content":"请在描述相应操作系统的文章上了解如何收集日志记录。 "},{"title":"为错误报告或功能请求投票​","type":1,"pageTitle":"如何报告错误","url":"guides/report-bugs/#为错误报告或功能请求投票","content":"如您想添加新功能或尽快修复某一个错误，用户可以在 GitHub 上投票。 要留下您的反馈，发送某一个表情即可。   您可以在问题的右上角或底部找到表情反应。 "},{"title":"用于不同操作系统的说明​","type":1,"pageTitle":"如何报告错误","url":"guides/report-bugs/#用于不同操作系统的说明","content":""},{"title":"AdGuard Windows版​","type":1,"pageTitle":"如何报告错误","url":"guides/report-bugs/#adguard-windows版","content":"请查看 Windows 存储库以确保尚未报告该问题。 打开创建新问题的页面并选择「错误报告」。 填写表格。 如果可以，请插入屏幕截图或屏幕视频。  "},{"title":"AdGuard Mac版​","type":1,"pageTitle":"如何报告错误","url":"guides/report-bugs/#adguard-mac版","content":"请查看 Mac 存储库以确保尚未报告该问题。 打开创建新问题的页面。 填写表格。 如果可以，请插入屏幕截图或屏幕视频。 "},{"title":"AdGuard Android版​","type":1,"pageTitle":"如何报告错误","url":"guides/report-bugs/#adguard-android版","content":"请查看 Android 存储库以确保尚未报告该问题。 打开创建新问题的页面并选择「错误报告」。 填写表格。 如果可以，请插入屏幕截图或屏幕视频。 "},{"title":"AdGuard iOS版​","type":1,"pageTitle":"如何报告错误","url":"guides/report-bugs/#adguard-ios版","content":"请查看 iOS 存储库以确保尚未报告该问题。 打开创建新问题的页面并选择「错误报告」。 填写表格。 如果可以，请插入屏幕截图或屏幕视频。 "},{"title":"AdGuard 浏览器扩展​","type":1,"pageTitle":"如何报告错误","url":"guides/report-bugs/#adguard-浏览器扩展","content":"请查看浏览器扩展存储库以确保尚未报告该问题。 打开创建新问题的页面并选择「错误报告」。 填写表格。 如果可以，请插入屏幕截图或屏幕视频。 "},{"title":"AdGuard Safari版​","type":1,"pageTitle":"如何报告错误","url":"guides/report-bugs/#adguard-safari版","content":"请查看 Safari 存储库以确保尚未报告该问题。 打开创建新问题的页面并选择「错误报告」。 填写表格。 如果可以，请插入屏幕截图或屏幕视频。 "},{"title":"报告网站","type":0,"sectionRef":"#","url":"guides/report-website/","content":"","keywords":""},{"title":"报告网站​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#report","content":":::注意 在您通过本应用或 AdGuard 浏览器助手发送投诉时，所有信息是自动预先填写的。 除了屏幕截图，您还必须自己制作并附加它们。 如果您使用的是此链接，则需要手动输入数据。 ::: 要报告广告已重新插入或网站显示不正确，您需要： "},{"title":"浏览器扩展​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#extension","content":"点击相应图标打开浏览器扩展设置；点击报告问题：  填写举报表格后，将自动在 GitHub 上创建一个问题。 也将有一个链接让用户监视解决问题的进度。 "},{"title":"Windows 系统​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#windows","content":"打开 AdGuard 浏览器助手，点击「报告问题」：  填写举报表格；完成后，将自动在 GitHub 上创建一个问题。 也将有一个链接让用户监视解决问题的进度。 "},{"title":"安卓系统​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#android","content":"打开 AdGuard 设置；选择支持，然后点击报告错误拦截：  填写举报表格后，将自动在 GitHub 上创建一个问题。 也将有一个链接让用户监视解决问题的进度。 "},{"title":"Mac 系统​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#mac","content":"打开 AdGuard 浏览器助手，点击「报告问题」：  填写举报表格；完成后，将自动在 GitHub 上创建一个问题。 也将有一个链接让用户监视解决问题的进度。 "},{"title":"iOS 系统​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#ios","content":"打开 AdGuard 设置；选择支持，然后点击报告错误拦截：  填写举报表格；完成后，将自动在 GitHub 上创建一个问题。 也将有一个链接让用户监视解决问题的进度。 "},{"title":"填写表格​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#form","content":":::注意 在用户通过本应用或 AdGuard 助手发送投诉时，所有信息都是自动预填写的。 除了屏幕截图，您还必须自己制作并附加它们。 如果您使用的是此链接，则需要手动输入数据。 ::: 在表单内填写产品的详细类型和版本； 指定问题类型以及使用的第三方软件之附加信息（反病毒软件，VPN）； 输入您遇到问题的页面地址和浏览器（或如是应用，则提供下载链接）； 须指定应用程序配置： 您使用的过滤器；如隐身模式已开启，则指定其设置。 提供捕获问题的屏幕截图； 重要：请隐藏个人信息（电子邮件地址，电话号码等），因为屏幕截图将公开显示。 提供额外信息以帮助过滤器开发人员了解情况； 如可用，您也可输入 GitHub 账号（这对于开发人员联系您以了解额外详细信息是必需的）； 发送表单前检查每个步骤； 您将获得一个链接以查看任务进度。 "},{"title":"问题诊断​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#issue","content":"此选项适用于那些不怕困难并且不介意自行寻找问题的人。 这不需要任何特殊技能或对 HTML 和 CSS 深入了解。 例如，您面临着您喜爱的网站无法打开、授权中断或某些页面元素显示不正确的情况。 原因可能是使用特定的过滤器/扩展/隐身模式设置。 要诊断这些问题，您需要执行以下操作： "},{"title":"过滤器​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#过滤器","content":"禁用广告拦截程序；如果解决了问题，请重新开启模块并逐个禁用过滤器。 这样做是为了识别“破坏”页面的过滤器。如果您设法找出“破坏”页面的过滤器，则应在填写表单时通知开发人员（请参见上文）。 在此种情况下，最好返回到初始设置；如果关闭所有过滤器均未产生任何结果，则应用规则 @@||example.com^$document,extension； 其中 example.com 是示例网站名称，需要用您自己的选项替换；在失败的情况下（问题未能解决），请转到隐身模式部分。 "},{"title":"隐身模式​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#隐身模式","content":"禁用隐身模式；如果问题解决，请打开此模块并逐个关闭隐身模式内的各选项。 这样做是为了检测出“破坏”页面的过滤器；如果您设法找出“破坏”页面的过滤器，则应在填写表单时通知开发人员（请参见上文）。 在此种情况下，最好返回到初始设置；如果失败（问题未解决），请参阅扩展部分。 "},{"title":"浏览器扩展​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#浏览器扩展","content":"禁用扩展；如果问题解决，则请打开此模块并逐个关闭扩展内的各设置。 这样做是为了找出“破坏”页面的设置；如果您设法找出“破坏”页面的设置，则应在填写表单时通知开发人员（请参见上文）。 在此种情况下，最好返回到初始设置。 "},{"title":"第三方拦截器​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#第三方拦截器","content":"某些浏览器和防病毒程序（例如 Yandex 浏览器，卡巴斯基等）具有内置的广告拦截器。 它们可能会影响并引起网站运行发生问题。 如果您使用此类程序，请确保问题是出现在 AdGuard 一侧：禁用 AdGuard 过滤，然后尝试重复问题。 如果问题仍存在，则表示问题是由其他应用程序或浏览器引起的。 如问题是由 AdGuard 引起的，则请按照前面段落中描述的步骤进行操作。 "},{"title":"How to take a screenshot","type":0,"sectionRef":"#","url":"guides/take-screenshot/","content":"","keywords":""},{"title":"安卓系统​","type":1,"pageTitle":"How to take a screenshot","url":"guides/take-screenshot/#android","content":"有多种方式可以在安卓设备上截屏，具体取决于设备型号及其制造商。 一般来说，您应该在安卓系统使用以下按钮组合： 同时按住音量和电源键按钮 1-2 秒 您的安卓设备将捕获整个屏幕并将其保存为照片。 您可以在「相册」的「截屏」文件夹中找到该屏幕快照。 但是，正如上述所言，在一些特定的设备上可能会存在差异。 让我们来看看其他可能的组合： 同时按住主页和电源键 1-2 秒；同时按住返回和主页按钮 在安卓 8 及更高级版本上，也可以通过将手沿手机的左侧或右侧垂直放置。然后用手触摸屏幕从该边缘向内滑动来拍摄屏幕截图（三星设备），或者您也可以用三个手指向下滑动（OnePlus 设备）等等。 在设备的设置中了解其他的截图方式。 此外，您可以使用任何特殊的应用程序在设备上拍摄屏幕截图，例如，轻松截屏、终极截图、Screenshot Snap 等。 "},{"title":"iOS 系统​","type":1,"pageTitle":"How to take a screenshot","url":"guides/take-screenshot/#ios","content":"任何 iOS 设备（旧的设备除外）都可让您使用标准工具截屏。 要在 iOS 设备上截图，请使用以下组合： 同时按下睡眠/唤醒（侧）按钮和主页按钮，然后快速松开它们 而下面的方法适用于 iPhone X 或更高版本： 同时按下睡眠/唤醒按钮和增大音量按钮，然后迅速松开它们 您的 iOS 设备将捕获整个屏幕，并将其另存为照片。 您可以在照片应用中找到它。 "},{"title":"Windows 系统​","type":1,"pageTitle":"How to take a screenshot","url":"guides/take-screenshot/#windows","content":"要在 Windows 上截图，请按 PrtScn 按钮 在某些笔记本电脑上，您要按住 Fn，然后再按 PrtScn。 请注意，各种键盘上的 PrtScn（打印屏幕）存在不同的缩写方式，比如 PrntScrn，PrtScn，PrtScr 或 PrtSc 等。 Windows 捕获整个屏幕并将其复制到剪贴板。 要获取活动窗口的屏幕截图，请使用以下组合： 同时按住 Alt 和 PrtScn (或在某些笔记本电脑上按 Fn + Alt + PrtScn ) 要截取特定区域的屏幕快照，应使用以下组合： 按住 Win（Windows 按钮）和 Shift，然后按 S** 截屏后，它将保存在剪贴板中。 在大多数情况下，您可以使用 Ctrl + V 按钮组合将其粘贴到当前正在编辑的文档中。 另外，如果您需要将屏幕截图保存到文件中，则应打开标准的 Paint 程序（或任何其他可以处理图像的应用程序）。 使用相同的按钮组合或单击「粘贴」按钮（通常在屏幕的左上角）将您的屏幕截图粘贴到那里，然后将其保存。 Windows 8 和 10 使您可以通过 Win + PrtScn 组合快速捕获屏幕截图。 按下这些按钮后，屏幕快照将自动作为文件保存到图片 → 屏幕截图文件夹中。 还有一个专用的屏幕截图程序，称为 Snipping Tool (自带截图工具) ，可通过开始菜单在计算机的标准程序中找到。 该截图工具使您可以捕获桌面的任何区域或整个屏幕。 使用此程序拍摄屏幕快照后，您可以编辑图片并将其保存到计算机上的任何文件夹中。 此外，您还可以尝试使用其他应用在计算机上截图，例如 PicPick、Nimbus Screenshot、Screenshot Captor、Snipaste、Monosnap 等。 "},{"title":"macOS 系统​","type":1,"pageTitle":"How to take a screenshot","url":"guides/take-screenshot/#mac","content":"要在 Mac 上截图，请使用以下按钮组合： 同时按住 ⌘Cmd + Shift + 3** Mac 会捕获整个屏幕，并将其另存为在桌面上的文件。 要获取活动窗口的屏幕截图，请使用以下组合： 同时按住 ⌘Cmd + Shift + 4 + 空格键。 指针将变为相机图标。 单击窗口以捕获它。 按 Esc 按钮取消截屏 要截取特定区域的屏幕快照，应使用以下组合： 同时按住 ⌘Cmd + Shift + 4**。 拖动十字准线以选择所需的区域。 释放鼠标或触控板以截取屏幕截图。然后按 Esc 按钮将其取消。 要获取 Touch Bar（MacBook Pro）的截图，请使用以下组合： 按住 ⌘Cmd + Shift + 6** 您的 Mac 会捕获整个 Touch Bar，并在桌面上另存为文件。 若您想将屏幕截图复制到剪贴板而不是保存到剪贴板，请同时按住 Ctrl 和上面的任意组合。 然后，您可以使用 Cmd + V 组合将屏幕截图（来自剪贴板）粘贴到当前正在编辑的文档或图像中。 您还可以通过使用预览并选择截图（获取所选区域，窗口或整个屏幕的）来截屏。 使用预览时，您可以将屏幕截图保存为 JPG、TIFF、PDF 等文件格式。 "},{"title":"对 AdGuard 过滤器做出贡献","type":0,"sectionRef":"#","url":"miscellaneous/contribute/filters/","content":"","keywords":""},{"title":"过滤规则​","type":1,"pageTitle":"对 AdGuard 过滤器做出贡献","url":"miscellaneous/contribute/filters/#filtering-rules","content":"可能众所周知，AdGuard 使用过滤规则拦截广告。这些规则被组合成不同主题的拦截过滤器，例如，AdGuard 基础过滤器，移动广告过滤器等等。本知识库的文章内容包括更多关于，如何拦截广告的信息。 许多网站会不断更改插入广告的方式。为了过滤器保持有效，我们要持续更新过滤器以及添加新规则。 过滤器工程师一直都在努力创建新规则，但是我们也非常愿意接受一些外界的帮助。 "},{"title":"如何开始​","type":1,"pageTitle":"对 AdGuard 过滤器做出贡献","url":"miscellaneous/contribute/filters/#how-to-start","content":"当然，改进并创建拦截过滤器需要有特定的技能。 如果您已经了解如何创建规则，请直接访问我们在 GitHub 上的 AdGuard 过滤器存储库。 在那里，您可发现很多待解决的问题。每个问题都涉及某个网站上的问题，包括广告漏洞，错误报告等等。 选择任何一个问题并在注释中建议您个人的规则， AdGuard 过滤器工程师将审核您的建议。 如果正确，则您的规则会被添加到 AdGuard 过滤器中。 If you are not yet familiar with our filtering rule syntax, or maybe need a refresher, you'll find the basics about the syntax in our Knowledge base. "},{"title":"奖励​","type":1,"pageTitle":"对 AdGuard 过滤器做出贡献","url":"miscellaneous/contribute/filters/#rewards","content":"假设您已经提出了一些过滤规则，且其中一些还被批准通过了，您可以获取奖励了。 使用您的 GitHub 账号向 st@adguard.com 上给我们发送消息，即可获取免费的 AdGuard 许可密钥。 我们并没有硬性规定，至少需要获得多少个规则批准才能获得免费许可。 不过考虑到这个任务的难度系数，大约五个被批准的规则就足够了。 "},{"title":"AdGuard Beta 测试版测试","type":0,"sectionRef":"#","url":"miscellaneous/contribute/beta-testing/","content":"","keywords":""},{"title":"如何成为 Beta 版测试者​","type":1,"pageTitle":"AdGuard Beta 测试版测试","url":"miscellaneous/contribute/beta-testing/#intro","content":"我们对 Beta 测试者的要求很简单：使用 AdGuard，随时升级到 Beta 测试版，并报告您发现的错误。 However, you will need a GitHub account to become our beta tester, so you may want to get that out of the way first. In any case, every single thing you need to know is gathered on a dedicated page. 如果您想跳过描述部分，直接进入行动阶段，您可以在这里申请。 你的申请将在1-3个工作日内得到审查，我们将电子邮件回复。 "},{"title":"如何报告错误​","type":1,"pageTitle":"AdGuard Beta 测试版测试","url":"miscellaneous/contribute/beta-testing/#report-a-bug","content":"If you spotted a bug or just want to share your suggestion, let us know: go to GitHub, find a suitable repository, create a new issue there, and describe the bug/feature request in detail. The above method is the most preferred, but you can use others if necessary: 在各种社交媒体平台上找到我们，例如 Facebook、Reddit 等等。 然而，这并不是讨论技术问题的最有效方式。 从应用程序中的「支持」选项以向我们的支持团队发送电子邮件，或通过 support@adguard.com 电子邮件联系我们。 "},{"title":"如何在 iOS 版的应用程序上激活 Beta 测试版密钥​","type":1,"pageTitle":"AdGuard Beta 测试版测试","url":"miscellaneous/contribute/beta-testing/#ios","content":"如果您已经收到测试版的密钥，并且有许可证密钥列出在 adguard.com 账号中，请进入应用程序并打开许可证部分（「获取高级版」）。 在相应的部分，请输入您的 AdGuard 账号的登录信息。 然后，高级版本的功能将自动可用。 "},{"title":"还有什么？​","type":1,"pageTitle":"AdGuard Beta 测试版测试","url":"miscellaneous/contribute/beta-testing/#还有什么","content":"基本上，我们没有什么要补充的。 您不要勉强自己去找错误。 像往常一样，您可以继续享受 AdGuard 使用体验。 然而，如果您遇到一个错误，请向我们发送报告。 Of course, we appreciate any additional effort. 有时，您会收到我们的新闻简报，让您了解测试版的最新改进（以防您错过）和其他重要消息。 您可以随时取消订阅。 "},{"title":"致谢","type":0,"sectionRef":"#","url":"miscellaneous/acknowledgements/","content":"","keywords":""},{"title":"第三方软件​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#software","content":"帮我们开发 AdGuard 软件的文库、开源软件和其他资源的列表： "},{"title":"AdGuard Windows版​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#win","content":"SQLLite database engine: sqlite.orgADO.NET provider for SQLite: system.data.sqlite.org/index.html/doc/trunk/www/index.wikiJson.NET — high-performance JSON framework for .NET: www.newtonsoft.com/jsonAvalonEdit — WPF-based text editor component: avalonedit.net "},{"title":"AdGuard Mac版​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#mac","content":"用于 RSVerticallyCenteredTextFieldCell 组件的 Red Sweater Software, LLC： http://www.red-sweater.com/blog/148/what-a-difference-a-cell-makesIlija Tovilo for ITProgressIndicator component: github.com/iluuu1994/ITProgressIndicatorSparkle.framework 组件的 Sparkle 项目： http://sparkle-project.orgRobbie Hanson for GCDAsyncSocket component: github.com/robbiehanson/CocoaAsyncSocketTony Million for Reachability component: github.com/tonymillion/ReachabilityAugust «Gus» Mueller for Fmdb component: github.com/ccgus/fmdbStephen F. Booth for SFBCrashReporter project: github.com/sbooth/SFBCrashReporterBartosz Janda for Acextract component: github.com/bartoszj/acextractFLOPageViewController: github.com/floschliep/FLOPageViewController "},{"title":"AdGuard 安卓版​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#android","content":"Logback-android by Tony19: tony19.github.io/logback-androidOtto by Square: http://square.github.io/ottoRootTools Library by Stericson: github.com/Stericson/RootToolsMaterialDateRangePicker by Supratim Chakraborty: github.com/borax12/MaterialDateRangePickerHelloCharts by Leszek Wach: github.com/lecho/hellocharts-android "},{"title":"AdGuard iOS版​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#ios","content":"Reachability component by Tony Million: github.com/tonymillion/ReachabilityFmdb component by August «Gus» Mueller: github.com/ccgus/fmdbNSStringPunycodeAdditions component by Nate Weaver: github.com/Wevah/Punycode-CocoaMinizip-ng library by Nathan Moinvaziri: github.com/zlib-ng/minizip-ngLottie for iOS library by Brandon Withrow: github.com/airbnb/lottie-ios "},{"title":"AdGuard 浏览器扩展​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#extension","content":"SHA256: github.com/AndersLindman/SHA256D3: github.com/d3/d3c3: github.com/c3js/c3nanobar: github.com/jacoborus/nanobarcrypto-js: github.com/brix/crypto-jsace: github.com/ajaxorg/acelodash: github.com/lodash/lodashmobx: github.com/mobxjs/mobxxstate: github.com/statelyai/xstatepunycode: github.com/mathiasbynens/punycode.jsjs-lru: github.com/rsms/js-lrutldts: github.com/remusao/tldtszod: github.com/colinhacks/zodswc: github.com/swc-project/swc "},{"title":"适用于 Safari 的 AdGuard 应用​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#safari","content":"ace: github.com/ajaxorg/aceadm-zip: github.com/cthackers/adm-zipconfig: github.com/lorenwest/node-configelectron-debug: github.com/sindresorhus/electron-debugelectron-log: github.com/megahertz/electron-logelectron-remote: github.com/electron-userland/electron-remoteelectron-simple-updater: github.com/megahertz/electron-simple-updaterelectron-store: github.com/sindresorhus/electron-storeelectron-updater: github.com/electron-userland/electron-builderi18n: github.com/mashpie/i18n-noderequest-promise: github.com/request/request-promisexmlhttprequest: github.com/driverdan/node-XMLHttpRequestaxios: github.com/axios/axiosdevtron: github.com/electron-userland/devtronelectron: github.com/electron/electronelectron-osx-sign: github.com/electron/electron-osx-signelectron-rebuild: github.com/electron/electron-rebuildfind-in-files: github.com/kaesetoast/find-in-filesgulp: github.com/gulpjs/gulpgulp-hash-creator: github.com/wahaha2012/gulp-hash-creatorrequest: github.com/request/requestrequire-dir: github.com/aseemk/requireDir "},{"title":"AdGuard 浏览器助手​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#assistant","content":"React: github.com/facebook/reactwebextension-polyfill: github.com/mozilla/webextension-polyfillreact-intl: github.com/formatjs/formatjs/tree/main/packages/react-intlmobx: github.com/mobxjs/mobxmobx-react: github.com/mobxjs/mobx-reactlodash: github.com/lodash/lodashnanoid: github.com/ai/nanoidreact-modal: github.com/reactjs/react-modalclassnames: github.com/JedWatson/classnamesbabel: github.com/babel/babelaxios: github.com/axios/axioscrx: github.com/oncletom/crxeslint: github.com/eslint/eslintjest: github.com/facebook/jestpostcss: github.com/postcss/postcssweb-ext: github.com/mozilla/web-extwebpack: github.com/webpack/webpack "},{"title":"CoreLibs​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#corelibs","content":"BoringSSL: github.com/google/boringssl/blob/master/LICENSEbrotli: github.com/google/brotli/blob/master/LICENSEChromium: github.com/chromium/chromium/blob/master/LICENSEDetours: github.com/microsoft/Detours/blob/main/LICENSE.mdeDistantObject: github.com/google/eDistantObject/blob/master/LICENSEFF/FFOS libs by Simon Zolin: github.com/stsaz/ffbase/blob/master/README.mdGoogle test: github.com/google/googletest/blob/master/LICENSEhttp-parser: github.com/nodejs/http-parser/blob/master/LICENSE-MITjsmn: github.com/zserge/jsmn/blob/master/LICENSEklib: github.com/attractivechaos/klib/blob/master/khash.hlibevent: github.com/libevent/libevent/blob/master/LICENSELibreSSL: github.com/libressl-portable/openbsd/blob/master/src/lib/libssl/LICENSElwIP: lwip.wikia.com/wiki/Licenseminiz: github.com/richgel999/miniz/blob/master/LICENSEnghttp2: github.com/nghttp2/nghttp2/blob/master/COPYINGPCRE2: www.pcre.org/licence.txtSQLite: www.sqlite.org/copyright.htmlzlib: zlib.net/zlib_license.html "},{"title":"特别感谢​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#testers","content":"热烈感谢所有 beta 测试人员和其他参与的用户，TA 们在查找/解决所有错误、翻译 AdGuard 和管理我们的社区方面的帮助是无价的。 特别感谢： ag_bug_finder — Windows版 AdGuard 的测试者Aikatsui — AdGuard Home 的积极贡献者Andy Kleinert (AndyKl) — Crowdin 的德语翻译和 ProofreaderBigDargon — 将 hostsVN 项目作为一个来源贡献给了 AdGuard DNS 列表Blaz — 最初是过滤器贡献者，现在在 AdGuard 工作Boo Berry — Telegram group moderatorbuuuuuuu190 — beta testerclarke — beta testerdartrax — beta testerdja2k — beta testerEduardo Addad de Oliveira (eduardoaddad) — 在 Crowdin 上葡萄牙语和巴西葡萄牙语的翻译和审核员fabjazz — beta testerGörkem Emrah Güler (gork7777) — Crowdin 的土耳其语翻译和审核员hanschke — beta testeriDjay — AdGuard iOS版的优秀 beta 测试人员Imre Kristoffer Eilertsen (DandelionSprout) — 包含在所有 AdGuard 工具中的 &quot;Dandelion Sprout’s Nordic Filters&quot; 的创造者IONIL — Crowdin 上的希伯来语翻译和审核员itabmedia — beta testerkirasam — beta testerkrystian3w — 非常活跃的过滤器贡献者lancelot.moon — Crowdin 繁体中文的翻译和审核员，beta 测试员Lord Ami — beta testerLukas Novotny (novas78) — 在 Crowdin 上捷克语的翻译和审核员malware1 — beta testermilder — beta testerNicos18 — beta testerOizaro — Crowdin 的意大利语翻译和审核员Oleg Chashko — AdGuard Safari版的非常活跃 beta 测试人员Oskari Lavinto (olavinto) — Crowdin 的芬兰语翻译和审核员ouzbed — beta testerPentagramTr — 过滤器贡献者，即他为土耳其过滤器带来了很多改进Peter Hubinsky (hubak) — Crowdin 的斯洛伐克语翻译和审核员PiQuark6046 — 过滤器贡献者rickyoh — beta testerRonin427 — beta testerSanjay Nand — beta testersaturnotaku — beta testersteve1209 — beta testerstreetwolf — beta testersuperlex — 帮助我们测试 Safari 的小脚本、过滤器和 AdGuardTayTayTheKiller — beta testerTPS — 错误测试者、过滤器贡献者Yuki2718 — 积极为 AdGuard 过滤器做出贡献zznosar — 活跃的 beta 测试人员，专注于 iOS 的 AdGuardSergey Zozulya (sviperz) — 我们 Telegram 群的活跃成员，beta 测试员  除此之外，我们想感谢 xda-developers 的用户。 非常感谢您向我们发送反馈意见！ 我们总是很感谢收到用户的反馈意见，特别是建设性的。 大家能随时随地与我们联系，请求改善 AdGuard、新增功能，以及提交错误报告。 Join the AdGuard Subreddit, Xda-developers Forum or visit our page on GitHub. "},{"title":"指导与建议","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/guidelines/","content":"指导与建议 在您开始翻译前，我们想要让您了解一些内容。 这样您不仅可以节省您的时间与精力，而且也能保证您翻译的句子与我们的本意更相近。 一旦您在 Crowdin 上打开我们的页面，选择您需要的任何项目并选择您的语言。 即使在打开某一个软件文件夹后，您也能切换语言。 选择任何可用的软件文件夹并选择一个文件，现在您可以开始翻译了。 注意 You can also change the Crowdin interface language by clicking the Settings icon in the top right corner of the page. 在打开的窗口中向下滚动到「UI language」标签。 打开它，选择一种语言，然后点击「Change」。 以下指南将帮助您多了解翻译的过程。 You can filter translations by clicking this button and selecting any offered option. Easily move between the files of the project. Pay attention to the glossary terms highlighted with a dotted line in a source phrase. Usually, they are special words (like brand names) that should not be translated. You can suggest your translation for translatable terms in the AdGuard Glossary project. In Crowdin, strings can have notes that make it easier to understand and translate phrases. Look for them in the &quot;Context&quot; field of the source string. Pay attention to screenshots that often go alongside source phrases in the &quot;Context&quot; field as well. They help to understand the context and convey the exact meaning. 提示 You can request context by clicking the &quot;REQUEST&quot; button. ::: ![crowdin *border](https://cdn.adtidy.org/public/Adguard/kb/en/ag-translations/request.png) In addition to suggesting new translations, you can also leave comments on strings. Use comments to let us know about mistakes in the existing translations, make notes, or ask questions. If you see a comment left on your translation — try to respond to it. There's also a Discussions tab on the main project page that conveniently allows you to see all the comments for the specific language in this project. Crowdin provides a very useful and convenient tool called Translation Memory. With its help, you can find the previously made translations of the same words and phrases and reuse them in your translations. Once you join a project by clicking the &quot;Join&quot; button, you will see the Tasks tab on the project page, where the tasks for specific project files get created. Please pay attention to them: they usually have a higher priority. Sometimes you can find phrases with plural forms. Please be especially attentive when translating such phrases. You can read how to translate plural forms here. Using proper plural forms is extremely important: please ask us in the comments if anything is unclear. Please do not write directly to the project managers and proofreaders listed in the Project info. If you have questions about translations, you can always ask our proofreaders or admins through comments. Also, you can send an email to translate@adguard.com or ask a question in the Telegram chat. The Admins will answer you as soon as possible.","keywords":""},{"title":"如何成为翻译员/审核员","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/become-translator/","content":"","keywords":""},{"title":"如何成为审核员​","type":1,"pageTitle":"如何成为翻译员/审核员","url":"miscellaneous/contribute/translate/become-translator/#proofreaders","content":"每一个语言都有审核员（Proofreaders），之前叫版主（Moderator）。 每个活跃的翻译人员都可以成为一名审核员。 TA 们负责什么？ 审核员： 审核并留下高质量的翻译，拒绝不好的翻译； 注意翻译的关联性； 参加注释中的讨论。 Every year, the best proofreaders receive gifts from AdGuard. 积极的翻译者也不会没有回报。 阅读更多关于我们的奖励机制。 "},{"title":"复数形式","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/plural-forms/","content":"","keywords":""},{"title":"复数形式是什么意思？​","type":1,"pageTitle":"复数形式","url":"miscellaneous/contribute/translate/plural-forms/#plurals","content":"不同语言的名词可以有几种复数形式。 它们的用法取决于单词前面的特定数字，以指示该单词表示的数目。 For instance, English words have two word forms when speaking about something in the singular, like 'one star', and in the plural — 'two stars'. It doesn’t matter if you say five, twenty six or even five hundred thirty two stars — the ending 's' will remain the same. 但是有些语言只有一种形式，反之，有些语言也可以有更多种复数形式。 与英语相比，波兰语里的名词具有三种复数形式。 One of them is used when speaking about something in the singular, another form is used in the plural but with numbers ending in 2-4, excluding 12-14, and the third form — for words with other numbers in front of them. Let’s take a look at this picture. 在这里，可以看到一组数字。按这些数字要选择数字后面的单词形式。  我们来在英语和波兰语之间做个小比较，以便更好理解：  英文版： 波兰语等效： 1. 形式 - It takes one hour. 1. 形式 - Zajmuje to godzinę. 2. 形式 - It takes two hours. 2. 形式 - Zajmuje to dwie godziny. 3. 形式 - It takes five hours. 3. 形式 - Zajmuje to pięć godzin.  现在很明显的是，波兰语 'godzinę'（小时）具有三种不同的形式，而英语单词仅更改两次单词形式。 除波兰语之外，世界上还有许多其他具有三种复数形式的语言，包括俄语，塞尔维亚语，斯洛伐克语，捷克语等语言。 但并非所有语言都遵循相同语法规则。 这就是了解您的语言包含多少种复数形式以及如何应用它们如此重要的原因。 "},{"title":"在哪里可以了解复数形式的变体数量？​","type":1,"pageTitle":"复数形式","url":"miscellaneous/contribute/translate/plural-forms/#where-to-learn","content":"当您需要使用复数形式的翻译时，您很可能无法立即意识到某些语言的单词形式的数量。 以下是您可以使用的一些信息来源。 本地化指南 包含广泛的语言列表。 不同语言复数形式的数量以这种方式显示： 'nplurals=2', 'nplurals=4' ，依此类推。 '=' 等号后的数字表示相应语言的形式数量。 此外，您还可以在 Unicode 通用语言环境数据存储库（CLDR）中获取有关复数形式的相关信息。 CLDR 复数规则，即指十进制数字（1.5; 2.3; 100.1…）的其他词形式。但在 AdGuard 翻译中我们不使用它们。 "},{"title":"AdGuard 翻译中的复数形式​","type":1,"pageTitle":"复数形式","url":"miscellaneous/contribute/translate/plural-forms/#translations","content":"首先，您得明白并非每个 AdGuard 译文都需要使用复数形式。 当前，我们在 Crowdin 上有四种使用复数形式字符串的类型。 我们来仔细看看它们。 "},{"title":"1. 带有 .singular、.dual、.plural 作为结尾的字符串键的短语​","type":1,"pageTitle":"复数形式","url":"miscellaneous/contribute/translate/plural-forms/#1type","content":" 其中大多数属于 AdGuard for Windows 项目中，仅包含一两个单词： days；extensions；hours 请注意字符串键，在 &quot;Context&quot; 字段中您会看到一些关于复数形式的重要注解。 字符串键可能包含 Singular、 Dual、 Plural 单词（例如FormatDayDeclensionDual）。 在这种情况下，您应该保留键中指定的适当复数形式。 "},{"title":"2. 单数和复数名词字符串以逗号分隔​","type":1,"pageTitle":"复数形式","url":"miscellaneous/contribute/translate/plural-forms/#2type","content":"这种字符串主要在 AdGuard for Android 项目中。 请看示例：  如果您的语言名词具有三种复数形式（正如波兰语)，请用逗号分隔每一个复数形式。 hour, hours — godzinę, godziny, godzin 如果一个名词只有两种形式，则无需重复写同一形式（通常仅适用于这种带有复数形式的字符串！）。 但是，如果您把同一个形式重写两次也不会出错。 "},{"title":"3. 使用 Crowdin 发展模式的字符串​","type":1,"pageTitle":"复数形式","url":"miscellaneous/contribute/translate/plural-forms/#3type","content":"这是进行复数字符串翻译的最佳用户友好的方案。 Crowdin 为用户提供翻译一定数量具有不同复数形式的短语的功能。 如果您的语言仅有一种复数形式，则您只会看到一个要翻译的短语。 如果语言具有三种形式，Crowdin 将为您提供被分出另外两到三部分的字符串进行翻译。 例如：  在翻译和批准这些字符串时，请注意一下， 如果您不知道 “Other” 字段的含义，则只需粘贴与 “ Many” 字段中相同的表单即可。 “Many” 和 “Other” 字段的内容可以相同。 "},{"title":"4. 带有用竖线分隔模板的字符串​","type":1,"pageTitle":"复数形式","url":"miscellaneous/contribute/translate/plural-forms/#4type","content":"这是最复杂的 AdGuard 字符串类型，通常在 AdGuard Websites 项目中使用。 Pay close attention to a vertical bar sign between the sentences and %count% placeholders in original phrases — this will help you identify phrases where translations require the use of plural forms.  现在，我们来想象一下。您将面临这样的短语：&quot;Standard license for %count% computer | Standard license for %count% computers&quot;。 您应该知道哪些信息才能正确翻译它？ 这些用竖线符号的句子称为“ templates”，因为它们被用作具有不同数字的短语的模板。 回到示例，由于英语仅包含两种复数形式，因此应分别有两个模板： Standard license for *%count%* computer | Standard license for *%count%* computers where template 1 is Standard license for %count% computer, and template 2 is Standard license for %count% computers 您应注意的另一重要事项是 ％count％ 占位符，通常在其定义的单词前出现。 根据选择的模板，此处将显示不同的数字，而不是 ％count％ 。 在另一种语言具有三种复数形式的情况下，应该有三个模板，即两个竖线符号。 例如，当我们将上面提到的短语翻译成斯洛伐克语时，根据 Localization Guide 的规则，它具有三种词形，正确的翻译应该是这样的： **Štandartná licencia pre *%count%* počítač | Štandartná licencia pre *%count%* počítače | Štandartná licencia pre *%count%* počítačov**  在这种情况下，我们看到三个模板，其中包含斯洛伐克语中单词 &quot;počítač&quot; （计算机）的三种形式。 如果我们忽略其中一种形式，而只为斯洛伐克语使用两个，而不是三个模板，则系统将无法为某些数字采用适当的模板。结果是，句子中将出现语法错误，例如英语：Standard license for 5 computer（正确应是：Standard license for 5 computers）。 Always use as many forms as there are in your language, even when the word itself has fewer word forms. 例如，塞尔维亚单词 'računar'（计算机（computer））只有两种形式。 但是塞尔维亚语有 3 种复数形式。  因此，英语翻译成塞尔维亚语是： **Standardna licenca za *%count%* računar | Standardna licenca za *%count%* računara | Standardna licenca za *%count%* računara** 尽管很明显，最后两个模板没有区别，但保持规则非常重要：模板的数量应反映相应语言的复数形式 (通常针对这种带复数的字符串)。 "},{"title":"简短的摘要​","type":1,"pageTitle":"复数形式","url":"miscellaneous/contribute/translate/plural-forms/#summury","content":"在翻译 AdGuard 项目时，请密切注意需要使用复数形式的短语。 尽管前三种类型的字符串或多或少容易执行，但第四类要求更高的警惕性。 重申一次：如果您遇到包含两个重要元素的原始词组：竖线符号和 ％count％ 占位符，请执行以下操作： 指翻译成一种语言的复数规则； The number of your templates should be consistent with the number of plural forms your language includes, even in cases some words have fewer forms themselves. Two plural forms — two templates in translations; five plural forms — five templates, etc. 不要忘记在模板之间使用竖线符号； 请勿翻译，填写或删除 ％count％ 占位符。 By following these simple rules you will help AdGuard developers avoid a lot of unnecessary complications during the localization process. "},{"title":"AdGuard 翻译","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/program/","content":"AdGuard 翻译 免责声明：欢迎您通过给我们发邮件的方式：translate@adguard.com 询问任何与 AdGuard 翻译相关的问题，或您也可以加入我们的 Telegram 群。 说到翻译，我们 AdGuard 非常依赖志愿者们的无私奉献。 现在我们使用 Crowdin 平台来管理我们产品的翻译。 所以，所有想通过翻译任何喜欢的产品对 AdGuard 做贡献的志愿者们请移步 Crowdin 平台。 如您想加入 AdGuard 的翻译员大家族，请阅读信息以了解更多关于如何成为 AdGuard 翻译员，以及我们双方合作方式的详情。","keywords":""},{"title":"奖励系统","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/rewards/","content":"","keywords":""},{"title":"Here’s how our reward system works​","type":1,"pageTitle":"奖励系统","url":"miscellaneous/contribute/translate/rewards/#heres-how-our-reward-system-works","content":"翻译 500 个字后，可以获取 AdGuard 一年许可证； 翻译 1,000 字（总共 1,500 字）后，可以获取第二个许可证； 往后，每个许可证都对应1500 字的翻译。 翻译 2,500 个字后，可以得到 AdGuard VPN 一年许可证； 所有后续的订阅或续订也都为 2500 字。  Just send us a request to translate@adguard.com and you’ll get the license as a token of our gratitude. Besides, the most active translators may receive proofreader status in the future, should they express such an intention, and that promises even more good stuff. Every year we present gifts with the AdGuard logo to our active proofreaders. If you want to become one of them, please write to translate@adguard.com. "},{"title":"更新知识库","type":0,"sectionRef":"#","url":"miscellaneous/contribute/updating-knowledge-base/","content":"","keywords":""},{"title":"如何建议更改或写新文章​","type":1,"pageTitle":"更新知识库","url":"miscellaneous/contribute/updating-knowledge-base/#suggest-change","content":"您可以使用上述 GitHub 的功能建议对当前文章进行更改并将新文章添加到知识库。 如果您不熟悉该平台的使用方法，请先阅读 GitHub 的文档。 准备就绪后，在知识库处理。 我们知识库中的所有文本都是用 Markdown 标记语言编写的。 在编辑或撰写文章时，请牢记这一点。 点击链接了解关于 Markdown 语法的更多信息。 知识库网站是用 Docusaurus 2 建立的，这是一个现代静态网站生成器。 在提出修改或补充建议时，要考虑到所有文件必须符合平台的规则。 用户可以在 Docusaurus 指南了解它们。 您可以把这个知识库部署在您的电脑上，以概述您建议的变化。 有关执行此操作的详细说明，可以在此知识库的 GitHub 页面上的 README 文件中找到。 "},{"title":"翻译文章​","type":1,"pageTitle":"更新知识库","url":"miscellaneous/contribute/updating-knowledge-base/#translate-adguard","content":"知识库现有文章的翻译是在 Crowdin 平台上进行的。 有关翻译和使用 Crowdin 的所有详细信息，都可以在 AdGuard 广告拦截程序知识库的专用文章中找到。 在撰写 AdGuard 知识库文章时，您可能会遇到包含复数形式的字符串，您应该格外注意翻译。 在另一篇文章中，我们详细描述了翻译具有复数形式的字符串时可能出现的困难，并就如何在 Crowdin 平台上处理这些问题给出了大量说明。 "},{"title":"处理未解决的问题​","type":1,"pageTitle":"更新知识库","url":"miscellaneous/contribute/updating-knowledge-base/#处理未解决的问题","content":"有时存在与更新知识库相关的未完成任务。 您可以帮助我们以加速完成就像您对这个知识库提出任何其他修改建议一样。 选择您认为有吸引力的任何问题并开始处理它。 如果您有任何问题，您可以在对该问题的评论中直接提问。 "},{"title":"AdGuard Crowdin：先翻译什么文件","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/translation-priority/","content":"AdGuard Crowdin：先翻译什么文件 Crowdin上有五个主要的 AdGuard 项目，包括 AdGuard 应用程序（AdGuard Applications）、AdGuard 网站（AdGuard Websites）、AdGuard 广告拦截程序的知识库（AdGuard Ad Blocker Knowledge base）、AdGuard VPN 知识库（AdGuard VPN Knowledge Base）和 AdGuard DNS 知识库（AdGuard DNS Knowledge Base）。 我们没有明确的用户该从哪一个文件或软件开始翻译 AdGuard Applications 项目的要求。 用户可以选择最喜欢的文件或软件即可。 我们只想强调几个要点： 用户在 Crowdin 上完成软件的所有翻译后，我们才能在相应的应用程序里添加新翻译。我们建议译员在翻译软件内容后才翻译应用商店上的描述，因为没有软件的翻译，应用商店上的说明就没有必要了。 在 AdGuard Websites 项目里情况有所不同。 即使没有 100% 的翻译，我们也可以添加网站的新语言版本。 但是，这取决于已经翻译的文件。 这就是我们建议您从最重要的文件开始翻译。下面是文件排序（重要的文件排在前面，次要的文件排在后面）： AdGuard 广告拦截程序的网站 critical.resxauth.resxwelcome.resx AdGuard VPN 网站 critical.resxauth.resx AdGuard DNS 网站 critical.resxauth.resx Adding new strings as well as updating existing ones in these files requires special attention from the project translators and proofreaders. In addition to websites, there is a file for translating transactional emails in the AdGuard Websites project. Newly added strings in this file also have a high translation priority.","keywords":""},{"title":"撰写 AdGuard 相关文章","type":0,"sectionRef":"#","url":"miscellaneous/contribute/writing-about-adguard/","content":"撰写 AdGuard 相关文章 如果您喜欢 AdGuard，并希望通过互联网在社交媒体、博客和/或网站上，分享您对该产品的评价及反馈，那么我们建议您阅览这篇文章。 在线分享您的使用体验后，请将链接发送至 pr@adguard.com ，为了感谢用户的帮助，我们免费赠送许可证密钥。 无论您的网站的关注人数为10个人还是1000个人，每一个努力的人都值得被尊重。 唯一要注意的就是，您的评论应该在300到500字左右。 如果您想拍视频或以其它方式写评语，请提前告诉我们，以避免将来出现误解。 如果您的计划包括使用 AdGuard 徽标、横幅或其他视觉元素，请您也提前联系我们。 要联系的电子邮件保持不变，即 pr@adguard.com。","keywords":""},{"title":"How to create your own ad filters","type":0,"sectionRef":"#","url":"general/ad-filtering/create-own-filters/","content":"","keywords":""},{"title":"Comments​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#comments","content":"Any line that starts with an exclamation mark is a comment. In the list of rules it is displayed in gray color. AdGuard will ignore this line, so you can write anything you want. Comments are usually placed above the rules and used to describe what a rule does. For example: ! This is the comment. Below this line, there is an actual filtering rule. ||example.org^  "},{"title":"Examples​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#examples","content":""},{"title":"Blocking by domain name​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#blocking-by-domain-name","content":" This rule blocks: http://example.org/ad1.gifhttp://subdomain.example.org/ad1.gifhttps://ads.example.org:8000/ This rule does not block: http://ads.example.org.us/ad1.gifhttp://example.com/redirect/http://ads.example.org/ "},{"title":"Blocking exact address​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#blocking-exact-address","content":" This rule blocks: http://example.org/ This rule does not block: https://example.org/banner/img "},{"title":"Basic rule modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rule-modifiers","content":"Filtering rules support numerous modifiers that allow you to fine-tune the rule behavior. Here is an example of a rule with some simple modifiers.  This rule blocks: http://example.org/script.js if this script is loaded from example.com. This rule does not block: https://example.org/script.js if this script is loaded from example.org.https://example.org/banner.png because it is not a script. "},{"title":"Unblocking an address​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#unblocking-an-address","content":" This rule unblocks: http://example.org/banner.png even if there is a blocking rule for this address. Blocking rules with $important modifier can override exceptions. "},{"title":"Unblocking an entire website​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#unblocking-an-entire-website","content":" This rule unblocks It disables all cosmetic rules on example.com.It unblocks all requests sent from this website even if there is are blocking rules matching these requests. "},{"title":"Cosmetic rule​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-rule","content":" Cosmetic rules are based on using a special language named CSS, which every browser understands. Basically, it adds a new CSS style to the website which purpose is to hide particular elements. You can learn more about CSS in general here. AdGuard extends CSS and lets filters developers handle much more complicated cases. However, to use these extended rules, you need to be fluent in regular CSS. Popular CSS selectors Name\tCSS selector\tDescriptionID selector\t#banners\tMatches all elements with id attribute equal to banners. Class selector\t.banners\tMatches all elements with class attribute containing banners. Attribute selector\tdiv[class=&quot;banners&quot;]\tMatches all div elements with class attribute exactly equal to banners. Attribute substring selector\tdiv[class^=&quot;advert1&quot;]\tMatches all div elements which class attribute starts with the advert1 string. Attribute substring selector\tdiv[class$=&quot;banners_ads&quot;]\tMatches all div elements which class attribute ends with the banners_ads string. Attribute substring selector\ta[href^=&quot;http://example.com/&quot;]\tMatches all links that are loaded from http://example.com/ domain. Attribute selector\ta[href=&quot;http://example.com/&quot;]\tMatches all links to exactly the http://example.com/ address.  "},{"title":"Restrictions and limitations​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#restrictions-and-limitations","content":""},{"title":"Trusted filters​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#trusted-filters","content":"Some rules can be used only in trusted filters. This category includes: filter lists created by the AdGuard team,custom filter lists installed as trusted,user rules. "},{"title":"AdGuard 内容拦截器​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#adguard-内容拦截器","content":"AdGuard Content Blocker is an extension for Samsung and Yandex browsers that can be installed from Google Play. It is not to be confused with the fully functional AdGuard for Android that can only be downloaded from our website. Unfortunately, AdGuard Content Blocker capabilities are limited by what the browsers allow and they only support an old Adblock Plus filters syntax: Basic blocking rules with the following modifiers: $domain, $third-party, content-type modifiers.Basic exception rules with the following modifiers: $document, $elemhide.Basic element hiding rules with no extended CSS support. Because of the limitations above AdGuard Content Blocker will not be mentioned in the compatibility notes. "},{"title":"Basic rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules","content":"The most simple rules are so-called Basic rules. They are used to block requests to specific URLs. Or to unblock it, if there is a special marker &quot;@@&quot; at the beginning of the rule. The basic principle for this type of rules is quite simple: you have to specify the address and additional parameters that limit or expand the rule scope. Sub-requests Basic rules for blocking requests are applied only to sub-requests. That means they will not block the loading of the page unless it is explicitly specified with a $document modifier. Response status Browser detects a blocked request as completed with an error. Rule length Rules shorter than 4 characters are considered incorrect and will be ignored. "},{"title":"Basic rule syntax​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-syntax","content":" rule = [&quot;@@&quot;] pattern [ &quot;$&quot; modifiers ] modifiers = [modifier0, modifier1[, ...[, modifierN]]]  pattern — an address mask. Every request URL is collated to this mask. You can also use special characters in the template, their description is below. Note that AdGuard trims URLs to a length of 4096 characters in order to speed up matching and avoid issues with ridiculously long URLs.@@ — a marker that is used in rules of exception. To turn off filtering for a request, start your rule with this marker.modifiers — parameters that &quot;clarify&quot; the basic rule. Some of them limit the rule scope and some can completely change they way it works. "},{"title":"Special characters​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-special-characters","content":"* — a wildcard character. It is used to represent any set of characters. This can also be an empty string or a string of any length.|| — an indication to apply the rule to the specified domain and its subdomains. With this character, you do not have to specify a particular protocol and subdomain in address mask. It means that || stands for http://*., https://*., ws://*., wss://*. at once.^ — a separator character mark. Separator character is any character, but a letter, a digit, or one of the following: _ - . %. In this example separator characters are shown in bold: http://example.com/?t=1&amp;t2=t3. The end of the address is also accepted as separator.| — a pointer to the beginning or the end of address. The value depends on the character placement in the mask. For example, a rule swf| corresponds to http://example.com/annoyingflash.swf , but not to http://example.com/swf/index.html. |http://example.org corresponds to http://example.org, but not to http://domain.com?url=http://example.org. Visual representation We also recommend to get acquainted with the Adblock Plus filter cheatsheet, for better understanding of how such rules should be made. "},{"title":"Regular expressions support​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#regexp-support","content":"If you want even more flexibility in making rules, you can use Regular expressions instead of a default simplified mask with special characters. Performance Rules with regular expressions work more slowly, therefore it is recommended to avoid them or to limit their scope to specific domains. If you want a blocker to determine a regular expression, the pattern has to look like this: pattern = &quot;/&quot; regexp &quot;/&quot;  For example, /banner\\d+/$third-party this rule will apply the regular expression banner\\d+ to all third-party requests. Exclusion rule with regular expression looks like this: @@/banner\\d+/. Compatibility AdGuard Safari and AdGuard for iOS do not fully support regular expressions because of Content Blocking API restrictions (look for &quot;The Regular expression format&quot; section). "},{"title":"Wildcard support for TLD (top-level domains)​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#wildcard-for-tld","content":"Wildcard characters are supported for TLDs of the domains in patterns of cosmetic, HTML filtering and JavaScript rules. For cosmetic rules, e.g. example.*##.banner, multiple domains are matched due to the part .*, i.e. example.com, sub.example.net, example.co.uk, etc. For basic rules the described logic is applicable only for the domains specified in $domain modifier, e.g. ||*/banners/*$image,domain=example.*. Compatibility In AdGuard for Windows, Mac, Android, and AdGuard Browser Extension rules with wildcard .* match any public suffix (or eTLD). But for AdGuard for Safari and iOS the supported list of top-level domains is limited due to Safari limitations. Rules with wildcard for TLD are not supported by AdGuard Content Blocker. "},{"title":"Basic rule examples​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rule-examples","content":"||example.com/ads/* — a simple rule, which corresponds to addresses like http://example.com/ads/banner.jpg and even http://subdomain.example.com/ads/otherbanner.jpg. ||example.org^$third-party — this rule blocks third-party requests to example.org and its subdomains. @@||example.com$document — general exception rule. It completely disables filtering for example.com and all subdomains. There is a number of modifiers which can be used in exception rules. For more details, please follow the link below. "},{"title":"Basic rule modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rule-modifiers","content":"Basic modifiersContent-type modifiersException modifiers 注意 The features described in this section are intended for experienced users. They extend capabilities of &quot;Basic rules&quot;, but in order to use them you need to have a basic understanding of the way your browser works. You can change the behavior of a &quot;basic rule&quot; by using additional modifiers. Modifiers should be located in the end of the rule after a $ sign and be separated by commas. Example: ||domain.com^$popup,third-party  "},{"title":"Basic modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-basic-modifiers","content":"The following modifiers are the most simple and frequently used. Basically, they just limit the scope of rule application. Modifier \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tAdGuard iOS版\tAdGuard Safari版\tAdGuard 内容拦截器$app\t✅\t❌\t❌\t❌\t❌\t❌ $denyallow\t✅\t✅\t✅\t✅\t✅\t❌ $domain\t✅\t✅\t✅\t✅ *\t✅ *\t✅ $header\t✅\t⏳\t⏳\t❌\t❌\t❌ $important\t✅\t✅\t✅\t✅\t✅\t❌ $match-case\t✅\t✅\t✅\t⏳\t⏳\t✅ $method\t⏳\t✅\t✅\t❌\t❌\t❌ $popup\t✅ *\t✅\t✅\t✅ *\t✅ *\t❌ $third-party\t✅\t✅\t✅\t✅\t✅\t✅ $to\t⏳\t✅\t✅\t❌\t❌\t❌ 注意 ✅ — fully supported✅ * — supported, but reliability may vary or limitations may occur; check the modifier description for more details⏳ — feature that has been implemented or is planned to be implemented but is not yet available in any product❌ — not supported $app​ This modifier lets you narrow the rule coverage down to a specific application (or a list of applications). This might be not too important on Windows and Mac, but this is very important on mobile devices where some of the filtering rules must be app-specific. Android — use the app package name, e.g. org.example.app.Windows — use the process name, e.g. chrome.exe.Mac — use the bundle ID or the process name, e.g. com.google.Chrome. For Mac, you can find out the bundle ID or the process name of the app by viewing the respective request details in the Filtering log. Examples ||baddomain.com^$app=org.example.app — a rule to block requests that match the specified mask and are sent from the org.example.app Android app.||baddomain.com^$app=org.example.app1|org.example.app2 — the same rule but it works for both org.example.app1 and org.example.app2 apps. If you want the rule not to be applied to certain apps, start the app name with the ~ sign. ||baddomain.com^$app=~org.example.app — a rule to block requests that match the specified mask and are sent from any app except for the org.example.app.||baddomain.com^$app=~org.example.app1|~org.example.app2 — same as above, but now two apps are excluded: org.example.app1 and org.example.app2. Restrictions Apps in the modifier value cannot have a wildcard, e.g. $app=com.*.music. Rules with such modifier are considered invalid. Compatibility Only AdGuard for Windows, Mac, Android are technically capable of using rules with $app modifier.On Windows the process name is case-insensitive starting with AdGuard for Windows versions that have CoreLibs v1.12 under the hood. $denyallow​ $denyallow modifier allows to avoid creating additional rules when it is needed to disable a certain rule for specific domains. $denyallow matches only target domains and not referrer domains. Adding this modifier to a rule is equivalent to excluding the domains by the rule's matching pattern or to adding the corresponding exclusion rules. To add multiple domains to one rule, use the | character as a separator. Examples This rule: *$script,domain=a.com|b.com,denyallow=x.com|y.com  is equivalent to this one: /^(?!.*(x.com|y.com)).*$/$script,domain=a.com|b.com  or to the combination of these three: *$script,domain=a.com|b.com @@||x.com$script,domain=a.com|b.com @@||y.com$script,domain=a.com|b.com  Restrictions The rule's matching pattern cannot target any specific domains, e.g. it cannot start with ||.Domains in the modifier value cannot be negated, e.g. $denyallow=~x.com, or have a wildcard TLD, e.g. $denyallow=x.*. The rules which violate these restrictions are considered invalid. Compatibility Rules with $denyallow modifier are not supported by AdGuard for iOS, Safari, and AdGuard Content Blocker. $domain​ $domain limits the rule scope to requests made from the specified domains and their subdomains (as indicated by the Referer HTTP header). Syntax The modifier is a list of one or more expressions separated by the | symbol, each of which is matched against a domain in a particular way depending on its type (see below). domains = [&quot;~&quot;] entry_0 [&quot;|&quot; [&quot;~&quot;] entry_1 [&quot;|&quot; [&quot;~&quot;]entry_2 [&quot;|&quot; ... [&quot;|&quot; [&quot;~&quot;]entry_N]]]] entry_i = ( regular_domain / any_tld_domain / regexp )  regular_domain — a regular domain name (domain.com). Corresponds the specified domain and its subdomains. It is matched lexicographically.any_tld_domain — a domain name ending with a wildcard character as a public suffix, e.g. for example.* it is co.uk in example.co.uk. Corresponds to the specified domain and its subdomains with any public suffix. It is matched lexicographically.regexp — a regular expression, starts and ends with /. The pattern works the same way as in the basic URL rules, but the characters /, $, and | must be escaped with \\. 信息 Rules with $domain modifier as regular_domain or any_tld_domain are supported by all AdGuard products. Examples Just $domain: ||baddomain.com^$domain=example.org blocks requests that match the specified mask, and are sent from domain example.org or its subdomains.||baddomain.com^$domain=example.org|example.com — the same rule, but it works for both example.org and example.com. If you want the rule not to be applied to certain domains, start a domain name with ~ sign. $domain and negation ~: ||baddomain.com^$domain=example.org blocks requests that match the specified mask and are sent from the example.org domain or its subdomains.||baddomain.com^$domain=example.org|example.com — the same rule, but it works for both example.org and example.com.||baddomain.com^$domain=~example.org blocks requests matching the pattern sent from any domain except example.org and its subdomains.||baddomain.com^$domain=example.org|~foo.example.org blocks requests sent from example.org and its subdomains, except the subdomain foo.example.org.||baddomain.com^$domain=/(^\\|.+\\.)example\\.(com\\|org)\\$/ blocks requests sent from example.org and example.com domains and all their subdomains.||baddomain.com^$domain=~a.com|~b.*|~/(^\\|.+\\.)c\\.(com\\|org)\\$/ blocks requests sent from any domains, except a.com, b with any public suffix (b.com, b.co.uk, etc.), c.com, c.org, and their subdomains. $domain modifier matching target domain: In some cases the $domain modifier can match not only the referrer domain, but also the target domain. This happens when all of the following is true: The request has document content typeThe rule pattern does not match any particular domainsThe rule pattern does not contain regular expressionsThe $domain modifier contains only excluded domains, e.g. $domain=~example.org|~example.com The following predicate should be satisfied to perform a target domain matching: 1 AND ((2 AND 3) OR 4)  That is, if the modifier $domain contains only excluded domains, then the rule does not need to meet the second and third conditions to match the target domain against the modifier $domain. If some of the conditions above are not met but the rule contains $cookie or $csp modifier, the target domain will still be matched. If the referrer matches a rule with $domain that explicitly excludes the referrer domain, then the rule will not be applied even if the target domain also matches the rule. This affects rules with $cookie and $csp modifiers, too. Examples *$cookie,domain=example.org|example.com will block cookies for all requests to and from example.org and example.com.*$document,domain=example.org|example.com will block all requests to and from example.org and example.com. In the following examples it is implied that requests are sent from http://example.org/page (the referrer) and the target URL is http://targetdomain.com/page. page$domain=example.org will be matched, as it matches the referrer domain.page$domain=targetdomain.com will be matched, as it matches the target domain and satisfies all requirements mentioned above.||*page$domain=targetdomain.com will not be matched, as the pattern ||*page may match specific domains, e.g. example.page.||*page$domain=targetdomain.com,cookie will be matched because the rule contains $cookie modifier despite the pattern ||*page may match specific domains./banner\\d+/$domain=targetdomain.com will not be matched as it contains a regular expression.page$domain=targetdomain.com|~example.org will not be matched because the referrer domain is explicitly excluded. $domain modifier limitations​ Restrictions Safari does not support the simultaneous use of allowed and disallowed domains, so rules like ||baddomain.com^$domain=example.org|~foo.example.org will not work in AdGuard for iOS and AdGuard for Safari. Compatibility Rules with regular expressions in the $domain modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs v1.11 or later. In AdGuard for Windows, Mac and Android running CoreLibs v1.12 or later the $domain modifier can be alternatively spelled as $from. $header​ The $header modifier allows matching the HTTP response having a specific header with (optionally) a specific value. Syntax $header &quot;=&quot; h_name [&quot;:&quot; h_value] h_value = string / regexp  where: h_name — required, an HTTP header name. It is matched case-insesitively.h_value — optional, an HTTP header value matching expression, it may be one of the following: string — a sequence of characters. It is matched against the header value lexicographically;regexp — a regular expression, starts and ends with /. The pattern works the same way as in the basic URL rules, but the characters /, $ and , must be escaped with \\. The modifier &quot;:&quot; h_value part may be omitted. In that case, the modifier matches the header name only. Examples ||example.com^$header=set-cookie:foo blocks requests whose responses have the Set-Cookie header with the value matching foo literally.||example.com^$header=set-cookie blocks requests whose responses have the Set-Cookie header with any value.@@||example.com^$header=set-cookie:/foo\\, bar\\$/ unblocks requests whose responses have the Set-Cookie header with value matching the foo, bar$ regular expression.@@||example.com^$header=set-cookie unblocks requests whose responses have a Set-Cookie header with any value. Compatibility Rules with the $header modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.11 or later. $important​ The $important modifier applied to a rule increases its priority over any other rule without $important modifier. Even over basic exception rules. Go to rules priorities for more details. Examples ! blocking rule will block all requests despite of the exception rule ||example.org^$important @@||example.org^  ! if the exception rule also has `$important` modifier, it will prevail and requests won't be blocked ||example.org^$important @@||example.org^$important  $match-case​ This modifier defines a rule which applies only to addresses that match the case. Default rules are case-insensitive. Examples */BannerAd.gif$match-case — this rule will block http://example.com/BannerAd.gif, but not http://example.com/bannerad.gif. Compatibility Rules with the $match-case are supported by AdGuard for iOS and AdGuard for Safari, running SafariConverterLib v2.0.43 or later. All other products already support this modifier. $method​ This modifier limits the rule scope to requests that use the specified set of HTTP methods. Negated methods are allowed. The methods must be specified in all lowercase characters, but are matched case-insensitively. To add multiple methods to one rule, use the vertical bar | as a separator. Examples ||evil.com^$method=get|head blocks only GET and HEAD requests to evil.com.||evil.com^$method=~post|~put blocks any requests to evil.com except POST or PUT.@@||evil.com$method=get unblocks only GET requests to evil.com.@@||evil.com$method=~post unblocks any requests to evil.com except POST. Restrictions Rules with mixed negated and not negated values are considered invalid. So, for example, the rule ||evil.com^$method=get|~head will be rejected. Compatibility Rules with $method modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.12 or later and AdGuard Browser Extension for Chrome, Firefox, and Edge with TSUrlFilter v2.1.1 or later. $popup​ AdGuard will try to close the browser tab with any address that matches a blocking rule with this modifier. Please note that not all the tabs can be closed. Examples ||domain.com^$popup — if you try to go to http://domain.com/ from any page in the browser, a new tab in which specified site has to be opened will be closed by this rule. Compatibility $popup modifier works best in AdGuard Browser Extension.In AdGuard for Safari and iOS, $popup rules simply block the page right away.In AdGuard for Windows, Mac, and Android, $popup modifier may not detect a popup in some cases and it will not be blocked. $popup modifier applies the document content type with a special flag which is passed to a blocking page. Blocking page itself can do some checks and close the window if it is really a popup. Otherwise, page should be loaded. It can be combined with other request type modifiers, such as $third-party and $important.Rules with $popup modifier are not supported by AdGuard Content Blocker. $third-party​ A restriction of third-party and own requests. A third-party request is a request from a different domain. For example, a request to example.org from domain.com is a third-party request. 注意 To be considered as such, a third-party request should meet one of the following conditions: Its referrer is not a subdomain of the target domain or vice versa. For example, a request to subdomain.example.org from example.org is not a third-party requestIts Sec-Fetch-Site header is set to cross-site Examples $third-party: ||domain.com^$third-party — this rule applies to all domains, except domain.com and its subdomains. An example of a third-party request: http://example.org/banner.jpg. If there is a $~third-party modifier, the rule is only applied to the requests that are not from third parties. Which means, they have to be sent from the same domain. $~third-party: ||domain.com$~third-party — this rule is applied to domain.com, but not to the other domains. Example of a request that is not a third-party request: http://domain.com/icon.ico. 注意 You may use a shorter name (alias) instead of using the full modifier name: $3p. $to​ $to limits the rule scope to requests made to the specified domains and their subdomains. To add multiple domains to one rule, use the | character as a separator. Examples /ads$to=evil.com|evil.org blocks any request to evil.com or evil.org and their subdomains with a path matching /ads./ads$to=~not.evil.com|evil.com blocks any request to evil.com and its subdomains, with a path matching /ads, except requests to not.evil.com and its subdomains./ads$to=~good.com|~good.org blocks any request with a path matching /ads, except requests to good.com or good.org and their subdomains. Restrictions $denyallow can not be used together with $to. It can be expressed with inverted $to: $denyallow=a.com|b.com is equivalent to $to=~a.com|~b.com. Compatibility Rules with the $to modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.12 or later and AdGuard Browser Extension with TSUrlFilter v2.1.3 or later. "},{"title":"Content-type modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#content-type-modifiers","content":"There is a set of modifiers, which can be used to limit the rule's application area to certain type of content. These modifiers can also be combined to cover, for example, both images and scripts. Compatibility There is a big difference in how AdGuard determines the content type on different platforms. For AdGuard Browser Extension, content type for every request is provided by the browser. AdGuard for Windows, Mac, and Android use the following method: first, the apps try to determine the type of the request by the Sec-Fetch-Dest request header or by the filename extension. If the request is not blocked at this stage, the type will be determined using the Content-Type header at the beginning of the server response. Examples of content-type modifiers ||example.org^$image — corresponds to all images from example.org.||example.org^$script,stylesheet — corresponds to all the scripts and styles from example.org.||example.org^$~image,~script,~stylesheet — corresponds to all requests to example.org except for the images, scripts and styles. Modifier \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tAdGuard iOS版\tAdGuard Safari版\tAdGuard 内容拦截器$document\t✅\t✅\t✅\t✅\t✅\t❌ $font\t✅\t✅\t✅\t✅\t✅\t✅ $image\t✅\t✅\t✅\t✅\t✅\t✅ $media\t✅\t✅\t✅\t✅\t✅\t✅ $object\t✅\t✅\t✅\t✅\t✅\t✅ $other\t✅\t✅\t✅\t✅\t✅\t❌ $ping\t✅ *\t✅\t✅\t❌\t❌\t✅ $script\t✅\t✅\t✅\t✅\t✅\t✅ $stylesheet\t✅\t✅\t✅\t✅\t✅\t✅ $subdocument\t✅ *\t✅\t✅\t✅\t✅\t❌ $websocket\t✅\t✅\t✅\t✅ *\t✅ *\t✅ $xmlhttprequest\t✅\t✅\t✅\t✅\t✅\t✅ $webrtc 🚫\t❌\t❌\t❌\t❌\t❌\t❌ $object-subrequest 🚫\t❌\t❌\t❌\t❌\t❌\t❌ 注意 ✅ — fully supported✅ * — supported, but reliability may vary or limitations may occur; check the modifier description for more details❌ — not supported🚫 — removed and no longer supported $document​ The rule corresponds to the main frame document requests, i.e. HTML documents that are loaded in the browser tab. It does not match iframes, there is a $subdocument modifier for these. By default, AdGuard does not block the requests that are loaded in the browser tab (e.g. &quot;main frame bypass&quot;). The idea is not to prevent pages from loading as the user clearly indicated that they want this page to be loaded. However, if the $document modifier is specified explicitly, AdGuard does not use that logic and prevents the page load. Instead, it responds with a &quot;blocking page&quot;. If this modifier is used with an exclusion rule (@@), it completely disables blocking on corresponding pages. It is equivalent to using $elemhide, $content, $urlblock, $jsinject, $extension modifiers simultaneously. Examples @@||example.com^$document completely disables filtering on all pages at example.com and all subdomains. ||example.com^$document blocks HTML document request to example.com with a blocking page. ||example.com^$document,redirect=noopframe redirects HTML document request to example.com to an empty html document. ||example.com^$document,removeparam=test removes test query parameter from HTML document request to example.com. ||example.com^$document,replace=/test1/test2/ replaces test1 with test2 in HTML document request to example.com. 注意 You may use a shorter name (alias) instead of using the full modifier name: $doc. $font​ The rule corresponds to requests for fonts, e.g. .woff filename extension. $image​ The rule corresponds to images requests. $media​ The rule corresponds to requests for media files — music and video, e.g. .mp4 files. $object​ The rule corresponds to browser plugins resources, e.g. Java or Flash. $other​ The rule applies to requests for which the type has not been determined or does not match the types listed above. $ping​ The rule corresponds to requests caused by either navigator.sendBeacon() or the ping attribute on links. Compatibility AdGuard for Windows, Mac, and Android often cannot accurately detect navigator.sendBeacon(). Using $ping is not recommended in the filter lists that are supposed to be used by CoreLibs-based AdGuard products. Rules with $ping modifier are not supported by AdGuard for Safari and iOS. $script​ The rule corresponds to script requests, e.g. javascript, vbscript. $stylesheet​ The rule corresponds to CSS files requests. 注意 You may use a shorter name (alias) instead of using the full modifier name: $css. $subdocument​ The rule corresponds to requests for built-in pages — HTML tags frame and iframe. Examples ||example.com^$subdocument blocks built-in page requests (frame and iframe) to example.com and all its subdomains anywhere.||example.com^$subdocument,domain=domain.com blocks built-in page requests (frame и iframe) to example.com (and its subdomains) from domain.com and all its subdomains. 注意 You may use a shorter name (alias) instead of using the full modifier name: $frame. Compatibility In AdGuard for Windows, Mac, and Android subdocuments are being detected by the Sec-Fetch-Dest header if it is present. Otherwise, some main pages may be treated as subdocuments. Rules with $subdocument modifier are not supported by AdGuard Content Blocker. $websocket​ The rule applies only to WebSocket connections. Compatibility $websocket modifier is supported in all AdGuard products except AdGuard Content Blocker. As for AdGuard for Safari and AdGuard for iOS, it's supported on devices with macOS Monterey (version 12) and iOS 16 or higher. $xmlhttprequest​ The rule applies only to ajax requests (requests sent via javascript object XMLHttpRequest). 注意 You may use a shorter name (alias) instead of using the full modifier name: $xhr. Compatibility AdGuard for Windows, Mac, Android when filtering older browsers cannot accurately detect this type and sometimes detects it as $other or $script. They can only reliably detect this content type when filtering modern browsers that support Fetch metadata request headers. $object-subrequest (removed)​ Removal notice $object-subrequest modifier is removed and is no longer supported. Rules with it are considered as invalid. The rule corresponds to requests by browser plugins (it is usually Flash). $webrtc (removed)​ Removal notice This modifier is removed and is no longer supported. Rules with it are considered as invalid. If you need to suppress WebRTC, consider using the nowebrtc scriptlet. The rule applies only to WebRTC connections. Examples ||example.com^$webrtc,domain=example.org blocks webRTC connections to example.com for example.org.@@*$webrtc,domain=example.org disables the RTC wrapper for example.org. "},{"title":"Exception rules modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#exception-modifiers","content":"Exception rules disable the other basic rules for the addresses to which they correspond. They begin with a @@ mark. All the basic modifiers listed above can be applied to them and they also have a few special modifiers. Visual representation We recommend to get acquainted with the Adblock Plus filter cheatsheet, for better understanding of how exception rules should be made. Modifier \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tAdGuard iOS版\tAdGuard Safari版\tAdGuard 内容拦截器$content\t✅\t❌\t✅\t❌\t❌\t❌ $elemhide\t✅\t✅\t✅\t✅\t✅\t✅ $extension\t✅\t❌\t❌\t❌\t❌\t❌ $jsinject\t✅\t✅\t✅\t✅\t✅\t❌ $stealth\t✅\t✅\t✅\t❌\t❌\t❌ $urlblock\t✅\t✅\t✅\t✅ *\t✅ *\t❌ $genericblock\t✅\t✅\t✅\t✅ *\t✅ *\t❌ $generichide\t✅\t✅\t✅\t✅\t✅\t✅ $specifichide\t✅\t✅\t✅\t❌\t❌\t❌ 注意 ✅ — fully supported✅ * — supported, but reliability may vary or limitations may occur; check the modifier description for more details❌ — not supported $content​ Disables HTML filtering, $hls, $replace, and $jsonprune rules on the pages that match the rule. Examples @@||example.com^$content disables all content modifying rules on pages at example.com and all its subdomains. $elemhide​ Disables any cosmetic rules on the pages matching the rule. Examples @@||example.com^$elemhide disables all cosmetic rules on pages at example.com and all subdomains. 注意 You may use a shorter name (alias) instead of using the full modifier name: $ehide. $extension​ Disables specific userscripts or all userscripts for a given domain. Syntax $extension[=&quot;userscript_name1&quot;[|&quot;userscript_name2&quot;[|&quot;userscript_name3&quot;[...]]]]  userscript_name(i) stands for a specific userscript name to be disabled by the modifier. The modifier can contain any number of userscript names or not contain them at all. In the latter case the modifier disables all the userscripts. Userscript names usually contain spaces or other special characters, which is why you should enclose the name in quotes. Both single (') and double (&quot;) ASCII quotes are supported. Multiple userscript names should be separated with a pipe (|). However, if a userscript name is a single word without any special characters, it can be used without quotes. You can also exclude a userscript by adding a ~ character before it. In this case, the userscript will not be disabled by the modifier. $extension=~&quot;userscript name&quot;  注意 When excluding a userscript, you must place ~ outside the quotes. If a userscript's name includes quotes (&quot;), commas (,), or pipes (|), they must be escaped with a backslash (\\). $extension=&quot;userscript name\\, with \\&quot;quote\\&quot;&quot;  Examples @@||example.com^$extension=&quot;AdGuard Assistant&quot; disables the AdGuard Assistant userscript on example.com website.@@||example.com^$extension=MyUserscript disables the MyUserscript userscript on example.com website.@@||example.com^$extension='AdGuard Assistant'|'Popup Blocker' disables both AdGuard Assistant and Popup Blocker userscripts on example.com website.@@||example.com^$extension=~&quot;AdGuard Assistant&quot; disables all user scripts on example.com website, except AdGuard Assistant.@@||example.com^$extension=~&quot;AdGuard Assistant&quot;|~&quot;Popup Blocker&quot; disables all user scripts on example.com website, except AdGuard Assistant and Popup Blocker.@@||example.com^$extension no userscript will work on webpages on example.com.@@||example.com^$extension=&quot;AdGuard \\&quot;Assistant\\&quot;&quot; disables the AdGuard &quot;Assistant&quot; userscript on example.com website. Compatibility Only AdGuard for Windows, Mac, Android are technically capable of using rules with $extension modifier.$extension modifier with specific userscript name is supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.13 or later. Rules with $extension modifier with specific userscript name are supported by AdGuard for Windows, Mac and Android with CoreLibs v1.13 or later. $jsinject​ Forbids adding of javascript code to the page. You can read about scriptlets and javascript rules further. Examples @@||example.com^$jsinject disables javascript on pages at example.com and all subdomains. $stealth​ Disables the Stealth Mode module for all corresponding pages and requests. Syntax $stealth [= opt1 [| opt2 [| opt3 [...]]]]  opt(i) stand for certain Stealth Mode options disabled by the modifier. The modifier can contain any number of options (see below) or not contain them at all. In the latter case the modifier disables all the Stealth Mode features. The list of the available modifier options: searchqueries disables Hide your search queries optiondonottrack disables Ask websites not to track you option3p-cookie disables Self-destructing third-party cookies option1p-cookie disables Self-destructing first-party cookies option3p-cache disables Disable cache for third-party requests option3p-auth disables Block third-party Authorization header optionwebrtc disables Block WebRTC optionpush disables Block Push API optionlocation disables Block Location API optionflash disables Block Flash optionjava disables Block Java optionreferrer disables Hide Referer from third parties optionuseragent disables Hide your User-Agent optionip disables Hide your IP address optionxclientdata disables Remove X-Client-Data header from HTTP requests optiondpi disables Protect from DPI option Examples @@||example.com^$stealth disables Stealth Mode for example.com (and subdomains) requests, except for blocking cookies and hiding tracking parameters (see below).@@||domain.com^$script,stealth,domain=example.com disables Stealth Mode only for script requests to domain.com (and its subdomains) on example.com and all its subdomains.@@||example.com^$stealth=3p-cookie|dpi disables blocking third-party cookies and DPI fooling measures for example.com. 注意 Blocking cookies and removing tracking parameters is achieved by using rules with $cookie and $removeparam modifiers. Exception rules with only $stealth modifier will not do those things. If you want to completely disable all Stealth Mode features for a given domain, you need to include all three modifiers: @@||example.org^$stealth,removeparam,cookie Restrictions Modifier options should be lowercase, i.e. $stealth=DPI will be rejected.Modifier options cannot be negated, i.e. $stealth=~3p-cookie will be rejected. Compatibility Stealth Mode is available in AdGuard for Windows, Mac, and Android, and AdGuard Browser Extension. All other products will ignore the rules with $stealth modifier.Rules with $stealth modifier with specific options are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.10 or later. $urlblock​ Disables blocking of all requests sent from the pages matching the rule and disables all $cookie rules. Examples @@||example.com^$urlblock — any requests sent from the pages at example.com and all subdomains are not going to be blocked. Compatibility In AdGuard for iOS and AdGuard for Safari, rules with $urlblock work as $document exclusion — unblock everything. Rules with $urlblock modifier are not supported by AdGuard Content Blocker. Generic rules​ Before we can proceed to the next modifiers, we have to make a definition of generic rules. The rule is generic if it is not limited to specific domains. Wildcard character * is supported as well. For example, these rules are generic: ###banner *###banner #@#.adsblock *#@#.adsblock ~domain.com###banner ||domain.com^ ||domain.com^$domain=~example.com  And these are not: domain.com###banner ||domain.com^$domain=example.com  $genericblock​ Disables generic basic rules on pages that correspond to exception rule. Examples @@||example.com^$genericblock disables generic basic rules on any pages at example.com and all subdomains. Compatibility In AdGuard for iOS and AdGuard for Safari, rules with $genericblock work as $document exclusion — unblock everything. Rules with $genericblock modifier are not supported by AdGuard Content Blocker. $generichide​ Disables all generic cosmetic rules on pages that correspond to the exception rule. Examples @@||example.com^$generichide disables generic cosmetic rules on any pages at example.com and its subdomains. 注意 You may use a shorter name (alias) instead of using the full modifier name: $ghide. specifichide​ Disables all specific element hiding and CSS rules, but not general ones. Has an opposite effect to $generichide. Examples @@||example.org^$specifichide disables example.org##.banner but not ##.banner. 注意 You may use a shorter name (alias) instead of using the full modifier name: $shide. 注意 All cosmetic rules — not just specific ones — can be disabled by $elemhide modifier. Compatibility Rules with $specifichide modifier are not supported by AdGuard for iOS, AdGuard for Safari, and AdGuard Content Blocker. "},{"title":"Advanced capabilities​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#advanced-modifiers","content":"These modifiers are able to completely change the behavior of basic rules. Modifier \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tAdGuard iOS版\tAdGuard Safari版\tAdGuard 内容拦截器$all\t✅\t✅\t✅\t✅\t✅\t❌ $badfilter\t✅\t✅\t✅\t✅\t✅\t❌ $cookie\t✅\t✅\t✅\t❌\t❌\t❌ $csp\t✅\t✅\t✅\t❌\t❌\t❌ $hls\t✅\t❌\t❌\t❌\t❌\t❌ $inline-font\t✅\t✅\t✅\t❌\t❌\t❌ $inline-script\t✅\t✅\t✅\t❌\t❌\t❌ $jsonprune\t✅\t❌\t❌\t❌\t❌\t❌ $network\t✅\t❌\t❌\t❌\t❌\t❌ $permissions\t✅\t⏳\t⏳\t❌\t❌\t❌ $redirect\t✅\t✅\t✅\t❌\t❌\t❌ $redirect-rule\t✅\t✅\t✅\t❌\t❌\t❌ $referrerpolicy\t✅\t❌\t❌\t❌\t❌\t❌ $removeheader\t✅\t✅\t✅\t❌\t❌\t❌ $removeparam\t✅\t✅\t✅\t❌\t❌\t❌ $replace\t✅\t❌\t✅\t❌\t❌\t❌ noop\t✅\t✅\t✅\t✅\t✅\t❌ $empty 👎\t✅\t✅\t✅\t❌\t❌\t❌ $mp4 👎\t✅\t✅\t✅\t❌\t❌\t❌ 注意 ✅ — fully supported✅ * — supported, but reliability may vary or limitations may occur; check the modifier description for more details❌ — not supported👎 — deprecated; still supported but will be removed in the future $all​ $all modifier is made of all content-types modifiers and $popup. E.g. rule ||example.org^$all is converting into rule: ||example.org^$document,subdocument,font,image,media,object,other,ping,script,stylesheet,websocket,xmlhttprequest,popup  This modifier cannot be used as an exception with the @@ mark. Compatibility Rules with $all modifier are not supported by AdGuard Content Blocker. $badfilter​ The rules with the $badfilter modifier disable other basic rules to which they refer. It means that the text of the disabled rule should match the text of the $badfilter rule (without the $badfilter modifier). Examples ||example.com$badfilter disables ||example.com||example.com$image,badfilter disables ||example.com$image@@||example.com$badfilter disables @@||example.com||example.com$domain=domain.com,badfilter disables ||example.com$domain=domain.com Rules with $badfilter modifier can disable other basic rules for specific domains if they fulfill the following conditions: The rule has a $domain modifierThe rule does not have a negated domain ~ in $domain modifier value In that case, the $badfilter rule will disable the corresponding rule for domains specified in both the $badfilter and basic rules. Please note that wildcard-TLD logic works here as well. Examples /some$domain=example.com|example.org|example.io is disabled for example.com by /some$domain=example.com,badfilter/some$domain=example.com|example.org|example.io is disabled for example.com and example.org by /some$domain=example.com|example.org,badfilter/some$domain=example.com|example.org and /some$domain=example.io are disabled completely by /some$domain=example.com|example.org|example.io,badfilter/some$domain=example.com|example.org|example.io is disabled completely by /some$domain=example.*,badfilter/some$domain=example.* is disabled for example.com and example.org by /some$domain=example.com|example.org,badfilter/some$domain=example.com|example.org|example.io is NOT disabled for example.com by /some$domain=example.com|~example.org,badfilter because the value of $domain modifier contains a negated domain Compatibility Rules with $badfilter modifier are not supported by AdGuard Content Blocker. $cookie​ The $cookie modifier completely changes rule behavior. Instead of blocking a request, this modifier makes AdGuard suppress or modify the Cookie and Set-Cookie headers. Multiple rules matching a single request In case if multiple $cookie rules match a single request, we will apply each of them one by one. Syntax $cookie [= name[; maxAge = seconds [; sameSite = strategy ]]]  where: name — optional, string or regular expression to match cookie name.seconds — number of seconds for current time to offset the expiration date of cookie.strategy — string for Same-Site strategy to make cookie use. For example, ||example.org^$cookie=NAME;maxAge=3600;sameSite=lax  every time AdGuard encounters a cookie called NAME in a request to example.org, it will do the following: Set its expiration date to current time plus 3600 secondsMakes the cookie use Same-Site &quot;lax&quot; strategy. Escaping special characters If regular expression name is used for matching, two characters must be escaped: comma , and dollar sign $. Use backslash \\ escape each of them. For example, escaped comma looks like this: \\,. Examples ||example.org^$cookie blocks all cookies set by example.org; this is an equivalent to setting maxAge=0$cookie=__cfduid blocks CloudFlare cookie everywhere$cookie=/__utm[a-z]/ blocks Google Analytics cookies everywhere||facebook.com^$third-party,cookie=c_user prevents Facebook from tracking you even if you are logged in There are two methods to deactivate $cookie rules: the primary method involves using an exception marked with @@ — @@||example.org^$cookie. The alternative method employs a $urlblock exception (also included under the $document exception alias — $elemhide,jsinject,content,urlblock,extension). Here's how it works: @@||example.org^$cookie unblocks all cookies set by example.org@@||example.org^$urlblock unblocks all cookies set by example.org and disables blocking of all requests sent from example.org@@||example.org^$cookie=concept unblocks a single cookie named concept@@||example.org^$cookie=/^_ga_/ unblocks every cookie that matches the regular expression Restrictions $cookie rules support a limited list of modifiers: $domain, $~domain, $important, $third-party, and $~third-party. Compatibility Rules with $cookie modifier are not supported by AdGuard Content Blocker, AdGuard for iOS, and AdGuard for Safari. $csp​ This modifier completely changes the rule behavior. If it is applied to a rule, the rule will not block the matching request. Response headers will be modified instead. 信息 In order to use this type of rules, it is required to have the basic understanding of the Content Security Policy security layer. For the requests matching a $csp rule, we will strengthen response security policy by enhancing the content security policy, similar to the content security policy of the $csp modifier contents. $csp rules are applied independently from any other rule type. Other basic rules have no influence on it save for document-level exceptions (see the examples section below). Multiple rules matching a single request In case if multiple $csp rules match a single request, we will apply each of them. Syntax $csp value syntax is similar to the Content Security Policy header syntax. $csp value can be empty in the case of exception rules. See examples section below. Examples ||example.org^$csp=frame-src 'none' blocks all frames on example.org and its subdomains.@@||example.org/page/*$csp=frame-src 'none' disables all rules with the $csp modifier exactly matching frame-src 'none' on all the pages matching the rule pattern. For instance, the rule above.@@||example.org/page/*$csp disables all the $csp rules on all the pages matching the rule pattern.||example.org^$csp=script-src 'self' 'unsafe-eval' http: https: disables inline scripts on all the pages matching the rule pattern.@@||example.org^$document or @@||example.org^$urlblock disables all the $csp rules on all the pages matching the rule pattern. Restrictions There are a few characters forbidden in the $csp value: ,, $.$csp rules support limited list of modifiers: $domain, $important, $subdocument.Rules with report-* directives are considered invalid. Compatibility Rules with $csp modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and AdGuard for Safari. $hls​ $hls rules modify the response of a matching request. They are intended as a convenient way to remove segments from HLS playlists (RFC 8216). 注意 The word &quot;segment&quot; in this document means either a &quot;Media Segment&quot; or a &quot;playlist&quot; as part of a &quot;Master Playlist&quot;: $hls rules do not distinguish between a &quot;Master Playlist&quot; and a &quot;Media Playlist&quot;. Syntax ||example.org^$hls=urlpattern removes segments whose URL matches the URL pattern urlpattern. The pattern works just like the one in basic URL rules, however, the characters /, $ and , must be escaped with \\ inside urlpattern.||example.org^$hls=/regexp/options removes segments where the URL or one of the tags (for certain options, if present) is matched by the regular expression regexp. Available options are: t — instead of testing the segment's URL, test each of the segment's tags against the regular expression. A segment with a matching tag is removed;i — make the regular expression case-insensitive. The characters /, $ and , must be escaped with \\ inside regexp. Exceptions Basic URL exceptions shall not disable rules with $hls modifier. They can be disabled as described below: @@||example.org^$hls disables all $hls rules for responses from URLs matching ||example.org^.@@||example.org^$hls=text disables all $hls rules with the value of the $hls modifier equal to text for responses from URLs matching ||example.org^. 提示 $hls rules can also be disabled by $document, $content and $urlblock exception rules. 注意 When multiple $hls rules match the same request, their effect is cumulative. Examples ||example.org^$hls=\\/videoplayback^?*&amp;source=dclk_video_ads removes all segments with the matching URL.||example.org^$hls=/\\/videoplayback\\/?\\?.*\\&amp;source=dclk_video_ads/i achieves more or less the same with a regular expression instead of a URL pattern.||example.org^$hls=/#UPLYNK-SEGMENT:.*\\,ad/t removes all segments which have the matching tag. Anatomy of an HLS playlist A quick summary of the specification: An HLS playlist is a collection of text linesA line may be empty, a comment (starts with #), a tag (also starts with #, can only be recognized by name) or a URLA URL line is called a &quot;segment&quot;Tags may apply to a single segment, i.e. the first URL line after the tag, to all segments following the tag and until the tag with the same name, or to the whole playlist Some points specific to the operation of $hls rules: When a segment is removed, all of the tags that apply only to that segment are also removedWhen there is a tag that applies to multiple segments, and all of those segments are removed, the tag is also removedSince there is no way to recognize different kinds of tags by syntax, we recognize all of the tags specified by the RFC, plus some non-standard tags that we have seen in the field. Any lines starting with # and not recognized as a tag are passed through without modification, and are not matched against the rulesWe do not match tags that apply to the whole playlist, and $hls rules can not be used to remove them, since $hls rules are intended for removing segments. If you know what you are doing, you can use $replace rules to remove or rewrite just a single tag from the playlist An example of a transformation done by the rules: Original response #EXTM3U #EXT-X-TARGETDURATION:10 #EXTINF,5 preroll.ts #UPLYNK-SEGMENT:abc123,ad #UPLYNK-KEY:aabb1122 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #UPLYNK-SEGMENT:abc123,segment #UPLYNK-KEY:ccdd2233 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #EXT-X-ENDLIST  Applied rules ||example.org^$hls=preroll ||example.org^$hls=/#UPLYNK-SEGMENT:.*\\,ad/t  Modified response #EXTM3U #EXT-X-TARGETDURATION:10 #UPLYNK-SEGMENT:abc123,segment #UPLYNK-KEY:ccdd2233 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #EXT-X-ENDLIST  Restrictions $hls rules are only allowed in trusted filters.$hls rules are compatible with the modifiers $domain, $third-party, $app, $important, $match-case, and $xmlhttprequest only.$hls rules only apply to HLS playlists, which are UTF-8 encoded text starting with the line #EXTM3U. Any other response will not be modified by these rules.$hls rules do not apply if the size of the original response is more than 10 MB. Compatibility Rules with the $hls modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.10 or later. $inline-script​ The $inline-script modifier is designed to block inline JavaScript embedded into the web page, using Content Security Policy (CSP). It improves security and privacy by preventing application of inline ads or potentially malicious scripts. The rule ||example.org^$inline-script is converting into the CSP-syntax rule: ||example.org^$csp=script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:  $inline-font​ The $inline-font modifier is designed to block inline fonts embedded into the web page, using Content Security Policy (CSP). It improves security and privacy by preventing application of inline fonts that could be used for data collection and fingerprinting. The rule ||example.org^$inline-font is converting into the CSP-syntax rule: ||example.org^$csp=font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:  $jsonprune​ $jsonprune rules modify the response to a matching request by removing JSON items that match a modified JSONPath expression. They do not modify responses which are not valid JSON documents. In AdGuard for Windows, Mac, and Android running CoreLibs v1.11 or later, $jsonprune also supports modifying JSONP (padded JSON) documents. Syntax ||example.org^$jsonprune=expression removes items that match the modified JSONPath expression expression from the response. Due to the way rule parsing works, the characters $ and , must be escaped with \\ inside expression. The modified JSONPath syntax has the following differences from the original: Script expressions are not supportedThe supported filter expressions are: ?(has &lt;key&gt;) — true if the current object has the specified key?(key-eq &lt;key&gt; &lt;value&gt;) — true if the current object has the specified key, and its value is equal to the specified value?(key-substr &lt;key&gt; &lt;value&gt;) — true if the specified value is a substring of the value of the specified key of the current object Whitespace outside of double- or single-quoted strings has no meaningBoth double- and single-quoted strings can be usedExpressions ending with .. are not supportedMultiple array slices can be specified in square brackets There are various online tools that make working with JSONPath expressions more convenient: https://www.site24x7.com/tools/jsonpath-finder-validator.html https://jsonpathfinder.com/ https://jsonpath.com/ Keep in mind, though, that all JSONPath implementations have unique features/quirks and are subtly incompatible with each other. Exceptions Basic URL exceptions shall not disable rules with $jsonprune modifier. They can be disabled as described below: @@||example.org^$jsonprune disables all $jsonprune rules for responses from URLs matching ||example.org^.@@||example.org^$jsonprune=text disable all $jsonprune rules with the value of the $jsonprune modifier equal to text for responses from URLs matching ||example.org^. $jsonprune rules can also be disabled by $document, $content and $urlblock exception rules. 注意 When multiple $jsonprune rules match the same request, they are sorted in lexicographical order, the first rule is applied to the original response, and each of the remaining rules is applied to the result of applying the previous one. Examples ||example.org^$jsonprune=\\$..[one\\, &quot;two three&quot;] removes all occurrences of the keys &quot;one&quot; and &quot;two three&quot; anywhere in the JSON document. Input { &quot;one&quot;: 1, &quot;two&quot;: { &quot;two three&quot;: 23, &quot;four five&quot;: 45 } }  Output { &quot;two&quot;: { &quot;four five&quot;: 45 } }  ||example.org^$jsonprune=\\$.a[?(has ad_origin)] removes all children of a that have an ad_origin key. Input { &quot;a&quot;: [ { &quot;ad_origin&quot;: &quot;https://example.org&quot;, &quot;b&quot;: 42 }, { &quot;b&quot;: 1234 } ] }  Output { &quot;a&quot;: [ { &quot;b&quot;: 1234 } ] }  ||example.org^$jsonprune=\\$.*.*[?(key-eq 'Some key' 'Some value')] removes all items that are at nesting level 3 and have a property &quot;Some key&quot; equal to &quot;Some value&quot;. Input { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: {&quot;Some key&quot;: &quot;Some value&quot;}, &quot;d&quot;: {&quot;Some key&quot;: &quot;Other value&quot;}}}, &quot;e&quot;: {&quot;f&quot;: [{&quot;Some key&quot;: &quot;Some value&quot;}, {&quot;Some key&quot;: &quot;Other value&quot;}]} }  Output { &quot;a&quot;: {&quot;b&quot;: {&quot;d&quot;: {&quot;Some key&quot;: &quot;Other value&quot;}}}, &quot;e&quot;: {&quot;f&quot;: [{&quot;Some key&quot;: &quot;Other value&quot;}]} }  Nested JSONPath expressions In AdGuard for Windows, Mac and Android running CoreLibs v1.11 or later, JSONPath expressions may be used as keys in filter expressions. ||example.org^$jsonprune=\\$.elems[?(has &quot;\\$.a.b.c&quot;)] removes all children of elems which have a property selectable by the JSONPath expression $.a.b.c. Input { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}}, &quot;k&quot;: &quot;v&quot; }, { &quot;d&quot;: {&quot;e&quot;: {&quot;f&quot;: 123}}, &quot;k1&quot;: &quot;v1&quot; } ] }  Output { &quot;elems&quot;: [ { &quot;d&quot;: {&quot;e&quot;: {&quot;f&quot;: 123}}, &quot;k1&quot;: &quot;v1&quot; } ] }  ||example.org^$jsonprune=\\$.elems[?(key-eq &quot;\\$.a.b.c&quot; &quot;abc&quot;)] removes all children of elems which have a property selectable by the JSONPath expression $.a.b.c with a value equal to &quot;abc&quot;. Input { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}}, }, { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: &quot;abc&quot;}} } ] }  Output { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}} } ] }  Restrictions $jsonprune rules are only compatible with these specific modifiers: $domain, $third-party, $app, $important, $match-case, and $xmlhttprequest.$jsonprune rules do not apply if the size of the original response is more than 10 MB. Compatibility Rules with the $jsonprune modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.10 or later. $network​ This is basically a Firewall-like rule allowing to fully block or unblock access to a specified remote address. $network rules match IP addresses only! You cannot use them to block or unblock access to a domain.To match an IPv6 address, you have to use the collapsed syntax, e.g. use [2001:4860:4860::8888]$network instead of [2001:4860:4860:0:0:0:0:8888]$network.An allowlist $network rule makes AdGuard bypass data to the matching endpoint, e.g. there will be no further filtering at all.If the IP part starts and ends with / character, it is treated as a regular expression. We recommend to get acquainted with this article for better understanding of regular expressions. Restrictions The $network modifier can only be used in rules together with the $app and $important modifiers, and not with any other modifiers. Examples 174.129.166.49:3478^$network blocks access to 174.129.166.49:3478 (but not to 174.129.166.49:34788).[2001:4860:4860::8888]:443^$network blocks access to [2001:4860:4860::8888]:443.174.129.166.49$network blocks access to 174.129.166.49:*.@@174.129.166.49$network makes AdGuard bypass data to the endpoint. No other rules will be applied./.+:3[0-9]{4}/$network blocks access to any port from 30000 to 39999./8.8.8.(:?8|4)/$network blocks access to both 8.8.8.8 and 8.8.8.4. Compatibility Only AdGuard for Windows, Mac, and Android are technically capable of using rules with $network modifier. $permissions​ This modifier completely changes the rule behavior. If it is applied to a rule, the rule will not block the matching request. Response headers will be modified instead. 信息 In order to use this type of rules, it is required to have a basic understanding of the Permissions Policy security layer. For the requests matching a $permissions rule, AdGuard strengthens response's permissions policy by adding an additional permission policy equal to the $permissions modifier contents. $permissions rules are applied independently from any other rule type. Other basic rules have no influence on it save for document-level exceptions (see the examples section). Multiple rules matching a single request. In case if multiple $permissions rules match a single request, AdGuard will apply each of them. Syntax $permissions value syntax is similar to the Permissions-Policy header syntax with one exception: comma that separates several features MUST be escaped — see examples below. The list of the available directives is available here. $permissions value can be empty in the case of exception rules — see examples below. Examples ||example.org^$permissions=autoplay=() disallows autoplay media requested through the HTMLMediaElement interface across example.org.@@||example.org/page/*$permissions=autoplay=() disables all rules with the $permissions modifier exactly matching autoplay=() on all the pages matching the rule pattern. For instance, the rule above.@@||example.org/page/*$permissions disables all the $permissions rules on all the pages matching the rule pattern.$domain=example.org|example.com,permissions=storage-access=()\\, camera=() disallows using the Storage Access API to request access to unpartitioned cookies and using video input devices across example.org and example.com.@@||example.org^$document or @@||example.org^$urlblock disables all the $permission rules on all the pages matching the rule pattern. Restrictions Characters forbidden in the $permissions value: $$permissions is compatible with the limited list of modifiers: $domain, $important, and $subdocument Compatibility Rules with the $permissions modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.11 or later. $redirect​ AdGuard is able to redirect web requests to a local &quot;resource&quot;. Syntax AdGuard uses the same filtering rule syntax as uBlock Origin. Also, it is compatible with ABP $rewrite=abp-resource modifier. $redirect is a modifier for the basic filtering rules so rules with this modifier support all other basic modifiers like $domain, $third-party, $script, etc. The value of the $redirect modifier must be the name of the resource that will be used for redirection. Disabling $redirect rules​ ||example.org/script.js$script,redirect=noopjs — this rule redirects all requests to example.org/script.js to the resource named noopjs.||example.org/test.mp4$media,redirect=noopmp4-1s — this rule redirects all requests to example.org/test.mp4 to the resource named noopmp4-1s.@@||example.org^$redirect will disable all $redirect rules for URLs that match ||example.org^.@@||example.org^$redirect=nooptext will disable all rules with $redirect=nooptext for any request that matches ||example.org^. More information on redirects and their usage is available on GitHub. Priorities of $redirect rules​ $redirect rules have higher priority than regular basic blocking rules. This means that if there is a basic blocking rule, the $redirect rule will override it. Allowlist rules with @@ mark have higher priority than $redirect rules. If a basic rule with the $important modifier and the $redirect rule matches the same URL, the latter is overridden unless it's also marked as $important. In short: $important &gt; @@ &gt; $redirect &gt; basic rules. Go to rules priorities for more details. Compatibility Rules with $redirect modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and AdGuard for Safari.$redirect in uBlock Origin supports specifying priority, e.g. $redirect=noopjs:42. AdGuard does not support it and instead just discards the priority postfix. $redirect-rule​ This is basically an alias to $redirect since it has the same &quot;redirection&quot; values and the logic is almost similar. The difference is that $redirect-rule is applied only in the case when the target request is blocked by a different basic rule. Go to rules priorities for more details. Negating $redirect-rule works exactly the same way as for regular $redirect rules. Even more than that, @@||example.org^$redirect will negate both $redirect and $redirect-rule rules. Examples ||example.org/script.js ||example.org^$redirect-rule=noopjs  In this case, only requests to example.org/script.js will be &quot;redirected&quot; to noopjs. All other requests to example.org will be kept intact. Compatibility Rules with $redirect-rule modifier are not supported by AdGuard Content Blocker, AdGuard for iOS, and AdGuard for Safari. $referrerpolicy​ These rules allow overriding of a page's referrer policy. Responses to matching requests will have all of their Referrer-Policy headers replaced with a single header with the value equal to the matching rule's modifier value. If the response carries an HTML document with a &lt;meta name=&quot;referrer&quot;... tag, the content attribute of the tag will also be replaced with the modifier value. An exception rule with a modifier value disables the blocking rule with the same modifier value. An exception rule without a modifier value disables all matched referrer-policy rules. If a request matches multiple $referrerpolicy rules not disabled by exceptions, only one of them (it is not specified which one) is applied. $referrerpolicy rules without specified content-type modifiers apply to $document and $subdocument content types. Examples ||example.com^$referrerpolicy=unsafe-url overrides the referrer policy for example.com with unsafe-url.@@||example.com^$referrerpolicy=unsafe-url disables the previous rule.@@||example.com/abcd.html^$referrerpolicy disables all $referrerpolicy rules on example.com/abcd.html. Compatibility Rules with the $referrerpolicy modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.12 or later. $removeheader​ Rules with $removeheader modifier are intended to remove headers from HTTP requests and responses. The initial motivation for this rule type is to be able to get rid of the Refresh header which is often used to redirect users to an undesirable location. However, this is not the only case where this modifier can be useful. Just like $csp, $redirect, $removeparam, and $cookie, this modifier exists independently, rules with it do not depend on the regular basic rules, i.e. regular exception or blocking rules will not affect it. By default, it only affects response headers. However, you can also change it to remove headers from HTTP requests as well. Syntax Basic syntax ||example.org^$removeheader=header-name removes a response header called header-name||example.org^$removeheader=request:header-name removes a request header called header-name $removeheader is case-insensitive, but we suggest always using lower case. Negating $removeheader This type of rules works pretty much the same way it works with $csp and $redirect modifiers. Use @@ to negate $removeheader: @@||example.org^$removeheader negates all $removeheader rules for URLs that match ||example.org^.@@||example.org^$removeheader=header negates the rule with $removeheader=header for any request matching ||example.org^. $removeheader rules can also be disabled by $document and $urlblock exception rules. But basic exception rules without modifiers will not do that. For example, @@||example.com^ will not disable $removeheader=p for requests to example.com, but @@||example.com^$urlblock will. 注意 In case of multiple $removeheader rules matching a single request, we will apply each of them one by one. Examples ||example.org^$removeheader=refresh removes Refresh header from all HTTP responses returned by example.org and its subdomains. ||example.org^$removeheader=request:x-client-data removes X-Client-Data header from all HTTP requests. Next block of rules removes Refresh and Location headers from all HTTP responses returned by example.org save for requests to example.org/path/*, for which no headers will be removed: ||example.org^$removeheader=refresh ||example.org^$removeheader=location @@||example.org/path/$removeheader  Restrictions This type of rules can be used only in trusted filters. In order to avoid compromising the security $removeheader cannot remove headers from the list below: access-control-allow-originaccess-control-allow-credentialsaccess-control-allow-headersaccess-control-allow-methodsaccess-control-expose-headersaccess-control-max-ageaccess-control-request-headersaccess-control-request-methodorigintiming-allow-originallowcross-origin-embedder-policycross-origin-opener-policycross-origin-resource-policycontent-security-policycontent-security-policy-report-onlyexpect-ctfeature-policyorigin-isolationstrict-transport-securityupgrade-insecure-requestsx-content-type-optionsx-download-optionsx-frame-optionsx-permitted-cross-domain-policiesx-powered-byx-xss-protectionpublic-key-pinspublic-key-pins-report-onlysec-websocket-keysec-websocket-extensionssec-websocket-acceptsec-websocket-protocolsec-websocket-versionp3psec-fetch-modesec-fetch-destsec-fetch-sitesec-fetch-userreferrer-policycontent-typecontent-lengthacceptaccept-encodinghostconnectiontransfer-encodingupgrade $removeheader rules are only compatible with $domain, $third-party, $app, $important, $match-case, and content type modifiers such as $script and $stylesheet. The rules which have any other modifiers are considered invalid and will be discarded. Compatibility Rules with $removeheader modifier are supported by AdGuard for Windows, Mac, and Android, and AdGuard Browser Extension for Chrome, Firefox, and Edge. $removeparam​ 注意 $queryprune is an alias of $removeparam. Since $queryprune is deprecated, avoid using it and use $removeparam instead. Rules with $removeparam modifier are intended to strip query parameters from requests' URLs. Please note that such rules are only applied to GET, HEAD, OPTIONS, and sometimes POST requests. $removeparam rules that do not have any content type modifiers will match only requests where content type is document. Syntax Basic syntax $removeparam=param removes query parameter with the name param from URLs of any request, e.g. a request to http://example.com/page?param=1&amp;another=2 will be transformed into http://example.com/page?another=2. Compatibility Rules with $removeparam modifier are supported by AdGuard for Windows, Mac and, Android with CoreLibs v1.7 or later and AdGuard Browser Extension v3.6 or later. Regular expressions You can also use regular expressions to match query parameters and/or their values: $removeparam=/regexp/[options] — removes query parameters that matches the regexp regular expression from URLs of any request. Unlike basic syntax, it means &quot;remove query parameters normalized to a name=value string which match the regexp regular expression&quot;. [options] here is the list of regular expression options. At the moment, the only supported option is i which makes matching case-insensitive. Escaping special characters Do not forget to escape special characters like ,, / and $ in the regular expressions. Use \\ character for that purpose. For example, an escaped comma should look like this: \\,. 注意 Regexp-type rules target both name and value of the parameter. To minimize mistakes, it is safer to start every regexp with /^ unless you specifically target parameter values. We will try to detect and ignore unescaped $ automatically using a simple rule of thumb — it is not an options delimiter if all three are true: It looks like $/There is another slash character / to the left of itThere is another unescaped dollar sign $ to the left of that slash character Remove all query parameters Specify naked $removeparam to remove all query parameters: ||example.org^$removeparam — removes all query parameters from URLs matching ||example.org^. Inversion Use ~ to apply inversion: $removeparam=~param — removes all query parameters with the name different from param.$removeparam=~/regexp/ — removes all query parameters that do not match the regexp regular expression. Negating $removeparam This sort of rules work pretty much the same way it works with $csp and $redirect modifiers. Use @@ to negate $removeparam: @@||example.org^$removeparam negates all $removeparam rules for URLs that match ||example.org^.@@||example.org^$removeparam=param negates the rule with $removeparam=param for any request matching ||example.org^.@@||example.org^$removeparam=/regexp/ negates the rule with $removeparam=/regexp/ for any request matching ||example.org^. Multiple rules matching a single request In the case when multiple $removeparam rules match a single request, each of them will be applied one by one. Examples $removeparam=/^(utm_source|utm_medium|utm_term)=/ $removeparam=/^(utm_content|utm_campaign|utm_referrer)=/ @@||example.com^$removeparam  With these rules some UTM parameters will be stripped out from any request, except that requests to example.com will not be stripped at all, e.g. http://google.com/page?utm_source=s&amp;utm_referrer=fb.com&amp;utm_content=img will be transformed to http://google.com/page, but http://example.com/page?utm_source=s&amp;utm_referrer=fb.com&amp;utm_content=img will not be affected by the blocking rule. $removeparam=utm_source removes utm_source query parameter from all requests. $removeparam=/utm_.*/ removes all utm_* query parameters from URL queries of any request, e.g. a request to http://example.com/page?utm_source=test will be transformed to http://example.com/page. $removeparam=/^utm_source=campaign$/ removes utm_source query parameter with the value equal to campaign. It does not touch other utm_source parameters. Negating one $removeparam rule and replacing it with a different rule $removeparam=/^(gclid|yclid|fbclid)=/ @@||example.com^$removeparam=/^(gclid|yclid|fbclid)=/ ||example.com^$removeparam=/^(yclid|fbclid)=/  With these rules, Google, Yandex, and Facebook Click IDs will be removed from all requests. There is one exception: Google Click ID (gclid) will not be removed from requests to example.com. Negating $removeparam for all parameters $removeparam=/^(utm_source|utm_medium|utm_term)=/ $removeparam=/^(utm_content|utm_campaign|utm_referrer)=/ @@||example.com^$removeparam  With these rules, specified UTM parameters will be removed from any request save for requests to example.org. $removeparam rules can also be disabled by $document and $urlblock exception rules. But basic exception rules without modifiers do not do that. For example, @@||example.com^ will not disable $removeparam=p for requests to example.com, but @@||example.com^$urlblock will. Restrictions Rules with $removeparam modifier can be used only in trusted filters.$removeparam rules are compatible with basic modifiers, content-type modifiers, and with $important and $app modifiers. Rules with any other modifiers are considered invalid and will be discarded. Compatibility Rules with $removeparam modifier are supported by AdGuard for Windows, Mac, and Android and AdGuard Browser Extension for Chrome, Firefox, and Edge.$removeparam syntax for regular expressions is supported by AdGuard Browser Extension v4.0 and AdGuard for Windows, Mac, and Android, running CoreLibs version 1.8 or later.POST request types are supported only by AdGuard for Windows, Mac, and Android with CoreLibs v1.10 or later. $replace​ This modifier completely changes the rule behavior. If it is applied, the rule will not block the request. The response is going to be modified instead. You will need some knowledge of regular expressions to use $replace modifier. Features $replace rules apply to any text response, but will not apply to binary (media, image, object, etc.).$replace rules do not apply if the size of the original response is more than 10 MB.$replace rules have a higher priority than other basic rules (including exception rules). So if a request corresponds to two different rules one of which has the $replace modifier, this rule will be applied.Document-level exception rules with $content or $document modifiers do disable $replace rules for requests matching them.Other document-level exception rules ($generichide, $elemhide or $jsinject modifiers) are applied alongside $replace rules. It means that you can modify the page content with a $replace rule and disable cosmetic rules there at the same time. $replace value can be empty in the case of exception rules. See examples section for further information. Multiple rules matching a single request In case if multiple $replace rules match a single request, we will apply each of them. The order is defined alphabetically. Syntax In general, $replace syntax is similar to replacement with regular expressions in Perl. replace = &quot;/&quot; regexp &quot;/&quot; replacement &quot;/&quot; modifiers  regexp — a regular expression.replacement — a string that will be used to replace the string corresponding to regexp.modifiers — a regular expression flags. For example, i — insensitive search, or s — single-line mode. In the $replace value, two characters must be escaped: comma , and dollar sign $. Use backslash \\ for it. For example, an escaped comma looks like this: \\,. Examples ||example.org^$replace=/(&lt;VAST[\\s\\S]*?&gt;)[\\s\\S]*&lt;\\/VAST&gt;/\\$1&lt;\\/VAST&gt;/i  There are three parts in this rule: regexp — (&lt;VAST(.|\\s)*?&gt;)(.|\\s)*&lt;\\/VAST&gt;;replacement — \\$1&lt;\\/VAST&gt; where $ is escaped;modifiers — i for insensitive search. You can see how this rule works here: http://regexr.com/3cesk Multiple $replace rules ||example.org^$replace=/X/Y/||example.org^$replace=/Z/Y/@@||example.org/page/*$replace=/Z/Y/ Both rule 1 and 2 will be applied to all requests sent to example.org.Rule 2 is disabled for requests matching ||example.org/page/, but rule 1 still works! Disabling $replace rules @@||example.org^$replace will disable all $replace rules matching ||example.org^.@@||example.org^$document or @@||example.org^$content will disable all $replace rules originated from pages of example.org including the page itself. Restrictions Rules with $replace modifier can be used only in trusted filters. Compatibility Rules with $replace modifier are supported by AdGuard for Windows, Mac, and Android and AdGuard Browser Extension for Firefox. Such rules do not work in extensions for other browsers because they are unable to modify content on the network level. noop​ noop modifier does nothing and can be used solely to increase rules' readability. It consists of a sequence of underscore characters (_) of any length and can appear in a rule as many times as needed. Examples ||example.com$_,removeparam=/^ss\\\\$/,_,image ||example.com$replace=/bad/good/,___,~third-party  Compatibility Rules with noop modifier are not supported by AdGuard Content Blocker. $empty (deprecated)​ Deprecation notice This modifier is deprecated in favor of the $redirect modifier. Rules with $empty are still supported and being converted into $redirect=nooptext now but the support shall be removed in the future. Usually, blocked requests look like a server error to browser. If you use $empty modifier, AdGuard will emulate a blank response from the server with200 OK status. Examples ||example.org^$empty returns an empty response to all requests to example.org and all subdomains. Compatibility Rules with $empty modifier are not supported by AdGuard Content Blocker, AdGuard for iOS, and AdGuard for Safari. $mp4 (deprecated)​ Deprecation notice This modifier is deprecated in favor of the $redirect modifier. Rules with $mp4 are still supported and being converted into $redirect=noopmp4-1s,media now but the support shall be removed in the future. As a response to blocked request AdGuard returns a short video placeholder. Examples ||example.com/videos/$mp4 blocks all video downloads from ||example.com/videos/* and changes the response to a video placeholder. Compatibility Rules with $mp4 modifier are not supported by AdGuard Content Blocker, AdGuard for iOS, and AdGuard for Safari. "},{"title":"Rule priorities​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#rule-priorities","content":"Each rule has its own priority, which is necessary when several rules match the request and the filtering engine needs to select one of them. Priority is measured by a positive integer. Collisions When two rules with the same priority match the same request, it depends on the filtering engine implementation which one will be selected. 信息 The concept of rule priorities becomes increasingly important in light of Manifest V3 as the existing rules need to be converted to declarativeNetRequest rules. Priority computation​ To calculate priority, we've categorized modifiers into different groups. These groups are ranked based on their priority, from lowest to highest. A modifier that significantly narrows the scope of a rule adds more weight to its total priority. Conversely, if a rule applies to a broader range of requests, its priority decreases. It's worth noting that there are cases where a single-parameter modifier has a higher priority than multi-parameter ones. For instance, in the case of $domain=example.com|example.org, a rule that includes two domains has a slightly broader effective area than a rule with one specified domain, therefore its priority is lower. The base priority of any rule is 1. If the calculated priority is a floating-point number, it will be rounded up to the smallest integer greater than or equal to the calculated priority. Compatibility The concept of priority has been introduced in tsurlfilter v2.1.0 and CoreLibs v1.13. Before that AdGuard didn't have any special priority computation algorithm and collisions handling could be different depending on AdGuard product and version.AdGuard for iOS, Safari, and AdGuard Content Blocker rely on the browsers implementation and they cannot follow the rules specified here. 注意 Modifier aliases (1p, 3p, etc.) are not included in these categories, however, they are utilized within the engine to compute the rule priority. Basic modifiers, the presence of each adds 1 to the priority​ $app with negated applications using ~,$denyallow,$domain with negated domains using ~,$match-case,$method with negated methods using ~,$third-party,$to,restricted content-types with ~. When dealing with a negated domain, app, method, or content-type, we add 1 point for the existence of the modifier itself, regardless of the quantity of negated domains or content-types. This is because the rule's scope is already infinitely broad. Put simply, by prohibiting multiple domains, content-types, methods or apps, the scope of the rule becomes only minimally smaller. Defined content-type modifiers, defined methods, defined headers, $popup, special exceptions​ All allowed content types: $document,$font,$image,$media,$object,$other,$ping,$script,$stylesheet,$subdocument,$websocket,$xmlhttprequest; This also includes rules that implicitly add the modifier $document: $popup; Or special exceptions that implicitly add $document,subdocument: $content,$elemhide,$extension,$genericblock,$generichide,$jsinject,$specifichide,$urlblock; Or allowed methods via $method. Or rules with $header. The presence of any content-type modifiers adds (50 + 50 / N), where N is the number of modifiers present, for example: ||example.com^$image,script will add 50 + 50 / 2 = 50 + 25 = 75 to the total weight of the rule. The $popup also belongs to this category, because it implicitly adds the modifier $document. Similarly, specific exceptions add $document,subdocument. If there is a $method modifier in the rule with allowed methods it adds (50 + 50 / N), where N is the number of methods allowed, for example: ||example.com^$method=GET|POST|PUT will add 50 + 50 / 3 = 50 + 16.6 = 67 to the total weight of the rule. If there is a $header modifier in the rule it adds 50. $domain or $app with allowed domains or applications​ Specified domains through $domain or specified applications through $app add 100 + 100 / N, where N is the number of modifier values for example: ||example.com^$domain=example.com|example.org|example.net will add 100 + 100 / 3 = 134.3 = 135 or ||example.com^$app=org.example.app1|org.example.app2 will add 100 + 100 / 2 = 151 or ||example.com^$domain=example.com,app=org.example.app1|org.example.app2 will add 100 + 100/1 ($domain part) and 100 + 100/2 ($app part), totaling 350. Modifier values that are regexps or tld will be interpreted as normal entries of the form example.com and counted one by one, for example: ||example.com^$domain=example.* will add 100 + 100 / 1 = 200 or ||example.com^$domain=example.*|adguard.* will add 100 + 100 / 2 = 150. $redirect rules​ $redirect,$redirect-rule. Each of which adds 10^3 to rule priority. Specific exceptions​ $content,$elemhide,$extension,$genericblock,$generichide,$jsinject,$specifichide,$urlblock; Each of which adds 10^4 to the priority. As well as exception with $document modifier: because it's an alias for $elemhide,content,jsinject,urlblock,extension. It will add 10^4 for each modifier from the top list, 10^4 * 5 in total. In addition, each of these exceptions implicitly adds the two allowed content-type modifiers $document,subdocument. Allowlist rules​ Modifier @@ adds 10^5 to rule priority. $important rules​ Modifier $important adds 10^6 to rule priority. Rules for which there is no priority weight​ Other modifiers, which are supposed to perform additional post- or pre-processing of requests, do not add anything to the rules priority. 注意 The $replace modifier takes precedence over all blocking rules of categories 1-3, as well as exception rules from categories 3-5, except $content, because an exception with the $content modifier overrides all $replace rules. Examples​ Example 1 ||example.com^ Weight of the rule without modifiers: 1. Example 2 ||example.com^$match-case Weight of the rule: base weight + weight of the modifier from category 1: 1 + 1 = 2. Example 3 ||example.org^$removeparam=p Weight of the rule: base weight + 0, since $removeparam is not involved in the priority calculation: 1 + 0 = 1. Example 4 ||example.org^$document,redirect=nooptext Rule weight: base weight + allowed content type, category 3 + $redirect from category 6: 1 + (100 + 100 / 1) + 1000 = 1201. Example 5 @@||example.org^$removeparam=p,document Rule weight: base weight + allowlist rule, category 5 + 0 because $removeparam is not involved in the priority calculation + allowed content type, category 2: 1 + 10000 + 0 + (50 + 50 / 1) = 10101. Example 6 @@||example.com/ad/*$domain=example.org|example.net,important Rule weight: base weight + allowlist rule, category 5 + important rule, category 7 + allowed domains, category 3: 1 + 10000 + 1000000 + (100 + 100 / 2) = 1010152. Example 7 @@||example.org^$document without additional modifiers is an alias for @@||example.com^$elemhide,content,jsinject,urlblock,extension Rule weight: base weight + specific exceptions, category 4 + two allowed content types (document and subdocument), category 2: 1 + 10000 * 4 + (50 + 50 / 2) = 40076. Example 8 *$script,domain=a.com,denyallow=x.com|y.com Rule weight: base weight + allowed content type, category 2 + allowed domain, category 3 + denyallow, category 1: 1 + (50 + 50/1) + (100 + 100 / 1) + 1 = 303. Example 9 ||example.com^$all (alias to ||example.com^$document,subdocument,image,script,media,etc. + $popup) Rule weight: base weight + allowed content types, category 2: 1 + (50 + 50/12) = 55. "},{"title":"Non-basic rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-rules","content":"However, basic rules may not be enough to block ads. Sometimes you need to hide an element or change part of the HTML code of a web page without breaking anything. The rules described in this section are created specifically for this purpose. Categories \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tAdGuard iOS版\tAdGuard Safari版\tAdGuard 内容拦截器Element hiding\t✅\t✅\t✅\t✅\t✅\t✅ CSS rules\t✅\t✅\t✅\t✅\t✅\t❌ Extended CSS\t✅\t✅\t✅\t✅\t✅\t❌ HTML filtering\t✅\t❌\t✅\t❌\t❌\t❌ JavaScript\t✅\t✅\t✅\t✅\t✅\t❌ Scriptlets\t✅\t✅\t✅\t✅\t✅\t❌ 注意 ✅ — fully supported❌ — not supported "},{"title":"Cosmetic rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-rules","content":"信息 Work with non-basic rules requires the basic knowledge of HTML and CSS. So, if you want to learn how to make such rules, we recommend to get acquainted with this documentation. "},{"title":"Element hiding rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-elemhide-rules","content":"Element hiding rules are used to hide the elements of web pages. It is similar to applying { display: none; } style to selected element. Element hiding rules may operate differently depending on the platform. Syntax​  rule = [domains] &quot;##&quot; selector domains = [domain0, domain1[, ...[, domainN]]]  selector — CSS selector, defines the elements to be hidden.domains — domain restriction for the rule. If you want to limit the rule application area to certain domains, just enter them separated with commas. For example: example.org,example.com##selector. This rule will be also applied to all subdomains of example.org and example.com. If you want the rule not to be applied to certain domains, start a domain name with ~ sign. For example: ~example.org##selector. You can use both approaches in a single rule. For example, example.org,~subdomain.example.org##domain will work for example.org and all subdomains, except subdomain.example.org. 注意 Element hiding rules are not dependent on each other. If there is a rule example.org##selector in the filter and you add ~example.org##selector both rules will be applied independently. Examples example.com##div.textad — hides a div with a class textad at example.com and all subdomains.example.com,example.org###adblock — hides an element with attribute id equals adblock at example.com, example.org and all subdomains.~example.com##.textad — hides an element with a class textad at all domains, except example.com and its subdomains. 限制 Safari does not support both permitted and restricted domains. So the rules like example.org,~foo.example.org##.textad are invalid in AdGuard for Safari. Exceptions Exceptions can disable some rules on particular domains. They are very similar to usual exception rules, but instead of ## you have to use #@#. For example, there is a rule in filter: ##.textad  If you want to disable it for example.com, you can create an exception rule: example.com#@#.textad  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. It will completely disable matching CSS elemhide rule on ALL domains: #@#.textad  The same can be achieved by adding this rule: *#@#.textad  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. "},{"title":"CSS rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-css-rules","content":"Sometimes, simple hiding of an element is not enough to deal with advertising. For example, blocking an advertising element can just break the page layout. In this case AdGuard can use rules that are much more flexible than hiding rules. With this rules you can basically add any CSS styles to the page. Syntax  rule = [domains] &quot;#$#&quot; selector &quot;{&quot; style &quot;}&quot; domains = [domain0, domain1[, ...[, domainN]]]  selector — CSS selector, that defines the elements we want to apply the style to.domains — domain restriction for the rule. Same principles as in element hiding rules.style — CSS style, that we want to apply to selected elements. Examples example.com#$#body { background-color: #333!important; }  This rule will apply a style background-color: #333!important; to the body element at example.com and all subdomains. Exceptions Just like with element hiding, there is a type of rules that disable the selected CSS style rule for particular domains. Exception rule syntax is almost the same, you just have to change #$# to #@$#. For example, there is a rule in filter: #$#.textad { visibility: hidden; }  If you want to disable it for example.com, you can create an exception rule: example.com#@$#.textad { visibility: hidden; }  We recommend to use this kind of exceptions only if it is not possible to change the CSS rule itself. In other cases it is better to change the original rule, using domain restrictions. Restrictions Styles that lead to loading any resource are forbidden. Basically, it means that you cannot use any &lt;url&gt; type of value in the style. Compatibility CSS rules are not supported by AdGuard Content Blocker. CSS rules may operate differently depending on the platform. "},{"title":"Extended CSS selectors​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#extended-css-selectors","content":"限制Pseudo-class :has()Pseudo-class :contains()Pseudo-class :matches-css()Pseudo-class :matches-attr()Pseudo-class :matches-property()Pseudo-class :xpath()Pseudo-class :nth-ancestor()Pseudo-class :upward()Pseudo-class :remove() and pseudo-property removePseudo-class :is()Pseudo-class :not()Pseudo-class :if-not() (removed) CSS 3.0 is not always enough to block ads. To solve this problem AdGuard extends CSS capabilities by adding support for the new pseudo-elements. We have developed a separate open-source library for non-standard element selecting and applying CSS styles with extended properties. The idea of extended capabilities is an opportunity to match DOM elements with selectors based on their own representation (style, text content, etc.) or relations with other elements. There is also an opportunity to apply styles with non-standard CSS properties. Application area Extended selectors can be used in any cosmetic rule, whether they are element hiding rules or CSS rules. Compatibility Rules with extended CSS selectors are not supported by AdGuard Content Blocker. Syntax Regardless of the CSS pseudo-classes you are using in the rule, you can use special markers to force applying these rules by ExtendedCss. It is recommended to use these markers for all extended CSS cosmetic rules so that it was easier to find them. The syntax for extended CSS rules: #?# — for element hiding, #@?# — for exceptions#$?# — for CSS rules, #@$?# — for exceptions We strongly recommend using these markers any time when you use an extended CSS selector. Examples example.org#?#div:has(&gt; a[target=&quot;_blank&quot;][rel=&quot;nofollow&quot;]) — this rule blocks all div elements containing a child node that has a link with the attributes [target=&quot;_blank&quot;][rel=&quot;nofollow&quot;]. The rule applies only to example.org and its subdomains.example.com#$?#h3:contains(cookies) { display: none!important; } — this rule sets the style display: none!important to all h3 elements that contain the word cookies. The rule applies only to example.com and all its subdomains.example.net#?#.banner:matches-css(width: 360px) — this rule blocks all .banner elements with the style property width: 360px. The rule applies only to example.net and its subdomains.example.net#@?#.banner:matches-css(width: 360px) — this rule will disable the previous rule. You can apply standard CSS selectors using the ExtendedCss library by using a rule marker #?#, e.g. #?#div.banner. Learn more about how to debug extended selectors. 注意 Some pseudo-classes do not require selector before it. Still adding a universal selector * makes an extended selector easier to read, even though it has no effect on the matching behavior. So selector #block :has(&gt; .inner) works exactly like #block *:has(&gt; .inner) but second one is more obvious. Pseudo-class names are case-insensitive, e.g. :HAS() works as :has(). Still the lower-case names are used commonly. ExtendedCss Limitations​ CSS comments and at-rules are not supported. Specific pseudo-class may have its own limitations: :has(), :xpath(), :nth-ancestor(), :upward(), :is(), :not(), and :remove(). Pseudo-class :has()​ Draft CSS 4.0 specification describes the :has() pseudo-class. Unfortunately, it is not yet supported by all popular browsers. 注意 Rules with the :has() pseudo-class should use the native implementation of :has() if they use ## marker and if it is possible, i.e. with no other extended selectors inside. To force applying of ExtendedCss rules with :has(), use #?#/#$?# marker explicitly. Compatibility with other pseudo-classes Synonyms :-abp-has() is supported by ExtendedCss for better compatibility. Removal notice :if() is no longer supported as a synonym for :has(). Syntax [target]:has(selector)  target — optional, standard or extended CSS selector, can be missed for checking any elementselector — required, standard or extended CSS selector The pseudo-class :has() selects the target elements that fit to the selector. Also the selector can start with a combinator. A selector list can be set in selector as well. In this case all selectors in the list are being matched for now. In the future it will be fixed for &lt;forgiving-relative-selector-list&gt; as argument. :has() limitations​ Usage of the :has() pseudo-class is restricted for some cases (2, 3): disallow :has() inside the pseudos accepting only compound selectors;disallow :has() after regular pseudo-elements. Native :has() pseudo-class does not allow :has(), :is(), :where() inside :has() argument to avoid increasing the :has() invalidation complexity (case 1). But ExtendedCss did not have such limitation earlier and filter lists already contain such rules, so we have not added this limitation to ExtendedCss and allow to use :has() inside :has() as it was possible before. To use it, just force ExtendedCss usage by setting #?#/#$?# rule marker. Native implementation does not allow any usage of :scope inside :has() argument ([1], [2]). Still, there are some such rules in filter lists: div:has(:scope a) which we continue to support by simply converting them to div:has(&gt; a), as it used to be done previously. Examples div:has(.banner) selects all div elements which include an element with the banner class: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;span class=&quot;banner&quot;&gt;inner element&lt;/span&gt; &lt;/div&gt;  div:has(&gt; .banner) selects all div elements which include an banner class element as a direct child of div: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;p class=&quot;banner&quot;&gt;child element&lt;/p&gt; &lt;/div&gt;  div:has(+ .banner) selects all div elements preceding banner class element which immediately follows the div and both are children of the same parent: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected&lt;/div&gt; &lt;p class=&quot;banner&quot;&gt;adjacent sibling&lt;/p&gt; &lt;span&gt;Not selected&lt;/span&gt;  div:has(~ .banner) selects all div elements preceding banner class element which follows the div but not necessarily immediately and both are children of the same parent: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected&lt;/div&gt; &lt;span&gt;Not selected&lt;/span&gt; &lt;p class=&quot;banner&quot;&gt;general sibling&lt;/p&gt;  div:has(span, .banner) selects all div elements which include both span element and banner class element: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;span&gt;child span&lt;/span&gt; &lt;p class=&quot;banner&quot;&gt;child .banner&lt;/p&gt; &lt;/div&gt;  Old syntax Backward compatible syntax for :has() is supported but not recommended. Pseudo-class :contains()​ The :contains() pseudo-class principle is very simple: it allows to select the elements that contain specified text or which content matches a specified regular expression. Regexp flags are supported. 注意 The :contains() pseudo-class uses the textContent element property for matching, not the innerHTML. Compatibility with other pseudo-classes Synonyms :-abp-contains() and :has-text() are supported for better compatibility. Syntax [target]:contains(match)  target — optional, standard or extended CSS selector, can be missed for checking any elementmatch — required, string or regular expression for matching element textContent. Regular expression flags are supported. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div id=&quot;match&quot;&gt;Selected as IT contains &quot;banner&quot;&lt;/div&gt; &lt;div&gt;Not selected &lt;div class=&quot;banner&quot;&gt;&lt;/div&gt;&lt;/div&gt;  the element div#match can be selected by any on these extended selectors: ! plain text div:contains(banner) ! regular expression div:contains(/as .* banner/) ! regular expression with flags div:contains(/it .* banner/gi)  注意 Only the div with id=match is selected because the next element does not contain any text, and banner is a part of code, not a text. Old syntax Backward compatible syntax for :contains() is supported but not recommended. Pseudo-class :matches-css()​ The :matches-css() pseudo-class allows to match the element by its current style properties. The work of the pseudo-class is based on using the Window.getComputedStyle() method. Syntax [target]:matches-css([pseudo-element, ] property: pattern)  target — optional, standard or extended CSS selector, can be missed for checking any elementpseudo-element — optional, valid standard pseudo-element, e.g. before, after, first-line, etc.property — required, a name of CSS property to check the element forpattern — required, a value pattern that is using the same simple wildcard matching as in the basic url filtering rules OR a regular expression. For this type of matching, AdGuard always does matching in a case-insensitive manner. In the case of a regular expression, the pattern looks like /regexp/. Special characters escaping and unescaping For non-regexp patterns (,),[,] must be unescaped, e.g. :matches-css(background-image:url(data:*)). For regexp patterns \\ should be escaped, e.g. :matches-css(background-image: /^url\\\\(&quot;data:image\\\\/gif;base64.+/). Examples For such DOM: &lt;!-- HTML code --&gt; &lt;style type=&quot;text/css&quot;&gt; #matched::before { content: &quot;Block me&quot; } &lt;/style&gt; &lt;div id=&quot;matched&quot;&gt;&lt;/div&gt; &lt;div id=&quot;not-matched&quot;&gt;&lt;/div&gt;  the div elements with pseudo-element ::before and with specified content property can be selected by any of these extended selectors: ! string pattern div:matches-css(before, content: block me) ! string pattern with wildcard div:matches-css(before, content: block*) ! regular expression pattern div:matches-css(before, content: /block me/)  Restrictions Regexp patterns do not support flags. Compatibility Obsolete pseudo-classes :matches-css-before() and :matches-css-after() are no longer recommended but still are supported for better compatibility. Old syntax Backward compatible syntax for :matches-css() is supported but not recommended. Pseudo-class :matches-attr()​ The :matches-attr() pseudo-class allows to select an element by its attributes, especially if they are randomized. Syntax [target]:matches-attr(&quot;name&quot;[=&quot;value&quot;])  target — optional, standard or extended CSS selector, can be missed for checking any elementname — required, simple string or string with wildcard or regular expression for attribute name matchingvalue — optional, simple string or string with wildcard or regular expression for attribute value matching Escaping special characters For regexp patterns &quot; and \\ should be escaped, e.g. div:matches-attr(class=/[\\\\w]{5}/). Examples div:matches-attr(&quot;ad-link&quot;) selects the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; ad-link=&quot;1random23-banner_240x400&quot;&gt;&lt;/div&gt;  div:matches-attr(&quot;data-*&quot;=&quot;adBanner&quot;) selects the element div#target2: &lt;!-- HTML code --&gt; &lt;div id=&quot;target2&quot; data-1random23=&quot;adBanner&quot;&gt;&lt;/div&gt;  div:matches-attr(*unit*=/^click$/) selects the element div#target3: &lt;!-- HTML code --&gt; &lt;div id=&quot;target3&quot; random123-unit094=&quot;click&quot;&gt;&lt;/div&gt;  *:matches-attr(&quot;/.{5,}delay$/&quot;=&quot;/^[0-9]*$/&quot;) selects the element #target4: &lt;!-- HTML code --&gt; &lt;div&gt; &lt;inner-random23 id=&quot;target4&quot; nt4f5be90delay=&quot;1000&quot;&gt;&lt;/inner-random23&gt; &lt;/div&gt;  Restrictions Regexp patterns do not support flags. Pseudo-class :matches-property()​ The :matches-property() pseudo-class allows to select an element by matching its properties. Syntax [target]:matches-property(&quot;name&quot;[=&quot;value&quot;])  target — optional, standard or extended CSS selector, can be missed for checking any elementname — required, simple string or string with wildcard or regular expression for element property name matchingvalue — optional, simple string or string with wildcard or regular expression for element property value matching Escaping special characters For regexp patterns &quot; and \\ should be escaped, e.g. div:matches-property(prop=/[\\\\w]{4}/). 注意 Regexp patterns are supported in name for any property in chain, e.g. prop./^unit[\\\\d]{4}$/.type. Examples An element with such properties: divProperties = { id: 1, check: { track: true, unit_2random1: true, }, memoizedProps: { key: null, tag: 12, _owner: { effectTag: 1, src: 'ad.com', }, }, };  can be selected by any of these extended selectors: div:matches-property(check.track) div:matches-property(&quot;check./^unit_.{4,8}$/&quot;) div:matches-property(&quot;check.unit_*&quot;=true) div:matches-property(memoizedProps.key=&quot;null&quot;) div:matches-property(memoizedProps._owner.src=/ad/)  For filters maintainers To check properties of a specific element, do the following: Inspect the page element or select it in Elements tab of browser DevToolsRun console.dir($0) in Console tab Restrictions Regexp patterns do not support flags. Pseudo-class :xpath()​ The :xpath() pseudo-class allows to select an element by evaluating an XPath expression. Syntax [target]:xpath(expression)  target- optional, standard or extended CSS selectorexpression — required, valid XPath expression :xpath() limitations​ target can be omitted so it is optional. For any other pseudo-class that would mean &quot;apply to all DOM nodes&quot;, but in case of :xpath() it just means &quot;apply to the whole document&quot;, and such applying slows elements selecting significantly. That's why rules like #?#:xpath(expression) are limited to looking inside the body tag. For example, rule #?#:xpath(//div[@data-st-area=\\'Advert\\']) is parsed as #?#body:xpath(//div[@data-st-area=\\'Advert\\']). Extended selectors with defined target as any selector — *:xpath(expression) — can still be used but it is not recommended, so target should be specified instead. Works properly only at the end of selector, except for pseudo-class :remove(). Examples :xpath(//*[@class=&quot;banner&quot;]) selects the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; class=&quot;banner&quot;&gt;&lt;/div&gt;  :xpath(//*[@class=&quot;inner&quot;]/..) selects the element div#target2: &lt;!-- HTML code --&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt;  Pseudo-class :nth-ancestor()​ The :nth-ancestor() pseudo-class allows to lookup the nth ancestor relative to the previously selected element. subject:nth-ancestor(n)  subject — required, standard or extended CSS selectorn — required, number &gt;= 1 and &lt; 256, distance to the needed ancestor from the element selected by subject Syntax subject:nth-ancestor(n)  subject — required, standard or extended CSS selectorn — required, number &gt;= 1 and &lt; 256, distance to the needed ancestor from the element selected by subject :nth-ancestor() limitations​ The :nth-ancestor() pseudo-class is not supported inside the argument of the :not() pseudo-class. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot;&gt; &lt;div class=&quot;child&quot;&gt;&lt;/div&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div&gt; &lt;div&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  .child:nth-ancestor(1) selects the element div#target1, div[class=&quot;inner&quot;]:nth-ancestor(3) selects the element div#target2. Pseudo-class :upward()​ The :upward() pseudo-class allows to lookup the ancestor relative to the previously selected element. Syntax subject:upward(ancestor)  subject — required, standard or extended CSS selectorancestor — required, specification for the ancestor of the element selected by subject, can be set as: number &gt;= 1 and &lt; 256 for distance to the needed ancestor, same as :nth-ancestor()standard CSS selector for matching closest ancestor :upward() limitations​ The :upward() pseudo-class is not supported inside the argument of the :not() pseudo-class. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; data=&quot;true&quot;&gt; &lt;div class=&quot;child&quot;&gt;&lt;/div&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div&gt; &lt;div&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  .inner:upward(div[data]) selects the element div#target1, .inner:upward(div[id]) selects the element div#target2, .child:upward(1) selects the element div#target1, .inner:upward(3) selects the element div#target2. Pseudo-class :remove() and pseudo-property remove​ Sometimes, it is necessary to remove a matching element instead of hiding it or applying custom styles. In order to do it, you can use the :remove() pseudo-class as well as the remove pseudo-property. Pseudo-class :remove() can be placed only at the end of a selector. Syntax ! pseudo-class selector:remove() ! pseudo-property selector { remove: true; }  selector — required, standard or extended CSS selector :remove() and remove limitations​ The :remove() pseudo-class is limited to work properly only at the end of selector. For applying the :remove() pseudo-class to any element, a universal selector * should be used. Otherwise such extended selector may be considered as invalid, e.g. .banner &gt; :remove() is not valid for removing any child element of banner class element, so it should look like .banner &gt; *:remove(). If the :remove() pseudo-class or the remove pseudo-property is used, all style properties are ignored except for the debug pseudo-property. Examples div.banner:remove() div:has(&gt; div[ad-attr]):remove() div:contains(advertisement) { remove: true; } div[class]:has(&gt; a &gt; img) { remove: true; }  注意 Rules with the remove pseudo-property should use #$?# marker: $ for CSS-style rule syntax, ? for ExtendedCss syntax. Pseudo-class :is()​ The :is() pseudo-class allows to match any element that can be selected by any of selectors passed to it. Invalid selectors are skipped and the pseudo-class deals with valid ones with no error thrown. Our implementation of the native :is() pseudo-class. Syntax [target]:is(selectors)  target — optional, standard or extended CSS selector, can be missed for checking any elementselectors — forgiving selector list of standard or extended selectors. For extended selectors only compound selectors are supported, not complex. :is() limitations​ Rules with the :is() pseudo-class should use the native implementation of :is() if rules use ## marker and it is possible, i.e. with no other extended selectors inside. To force applying ExtendedCss rules with :is(), use #?#/#$?# marker explicitly. If the :is() pseudo-class argument selectors is an extended selector, due to the way how the :is() pseudo-class is implemented in ExtendedCss v2.0, it is impossible to apply it to the top DOM node which is html, i.e. #?#html:is(&lt;extended-selectors&gt;) does not work. So if target is not defined or defined as a universal selector *, the extended pseudo-class applying is limited to html's children, e.g. rules #?#:is(...) and #?#*:is(...) are parsed as #?#html *:is(...). Please note that there is no such limitation for a standard selector argument, i.e. #?#html:is(.locked) works fine. Complex selectors with extended pseudo-classes are not supported as selectors argument for :is() pseudo-class, only compound ones are allowed. Check examples below for more details. Examples #container *:is(.inner, .footer) selects only the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;container&quot;&gt; &lt;div data=&quot;true&quot;&gt; &lt;div&gt; &lt;div id=&quot;target1&quot; class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  Due to limitations :is(*:not([class]) &gt; .banner)' does not work but :is(*:not([class]):has(&gt; .banner)) can be used instead of it to select the element div#target2: &lt;!-- HTML code --&gt; &lt;span class=&quot;span&quot;&gt;text&lt;/span&gt; &lt;div id=&quot;target2&quot;&gt; &lt;p class=&quot;banner&quot;&gt;inner paragraph&lt;/p&gt; &lt;/div&gt;  Pseudo-class :not()​ The :not() pseudo-class allows to select elements which are not matched by selectors passed as argument. Invalid argument selectors are not allowed and error is to be thrown. Our implementation of the :not() pseudo-class. Syntax [target]:not(selectors)  target — optional, standard or extended CSS selector, can be missed for checking any elementselectors — list of standard or extended selectors :not() limitations​ Rules with the :not() pseudo-class should use the native implementation of :not() if rules use ## marker and it is possible, i.e. with no other extended selectors inside. To force applying ExtendedCss rules with :not(), use #?#/#$?# marker explicitly. If the :not() pseudo-class argument selectors is an extended selector, due to the way how the :not() pseudo-class is implemented in ExtendedCss v2.0, it is impossible to apply it to the top DOM node which is html, i.e. #?#html:not(&lt;extended-selectors&gt;) does not work. So if target is not defined or defined as a universal selector *, the extended pseudo-class applying is limited to html's children, e.g. rules #?#:not(...) and #?#*:not(...) are parsed as #?#html *:not(...). Please note that there is no such limitation for a standard selector argument, i.e. #?#html:not(.locked) works fine. The :not() is considered as a standard CSS pseudo-class inside the argument of the :upward() pseudo-class because :upward() supports only standard selectors. &quot;Up-looking&quot; pseudo-classes which are :nth-ancestor() and :upward() are not supported inside selectors argument for :not() pseudo-class. Examples #container &gt; *:not(h2, .text) selects only the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;container&quot;&gt; &lt;h2&gt;Header&lt;/h2&gt; &lt;div id=&quot;target1&quot;&gt;&lt;/div&gt; &lt;span class=&quot;text&quot;&gt;text&lt;/span&gt; &lt;/div&gt;  Pseudo-class :if-not() (removed)​ Removal notice The :if-not() pseudo-class is removed and is no longer supported. Rules with it are considered as invalid. This pseudo-class was basically a shortcut for :not(:has()). It was supported by ExtendedCss for better compatibility with some filters subscriptions. "},{"title":"Cosmetic rules priority​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-rules-priority","content":"The way element hiding and CSS rules are applied is platform-specific. In AdGuard for Windows, Mac, and Android, we use a stylesheet injected into the page. The priority of cosmetic rules is the same as any other websites' CSS stylesheet. But there is a limitation: element hiding and CSS rules cannot override inline styles. In such cases, it is recommended to use extended selectors or HTML filtering. In AdGuard Browser Extension, the so called &quot;user stylesheets&quot; are used. They have higher priority than even the inline styles. Extended CSS selectors use JavaScript to work and basically add an inline style themselves, therefore they can override any style. "},{"title":"HTML filtering rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#html-filtering-rules","content":"In most cases, the basis and cosmetic rules are enough to filter ads. But sometimes it is necessary to change the HTML-code of the page itself before it is loaded. This is when you need filtering rules for HTML content. They allow to indicate the HTML elements to be cut out before the browser loads the page. Compatibility HTML filtering rules are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser Extension for Firefox. Such rules do not work in extensions for other browsers because they are unable to modify content on network level. "},{"title":"Syntax​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#syntax-1","content":" selector = [tagName] [attributes] [pseudoClasses] combinator = &quot;&gt;&quot; rule = [domains] &quot;$$&quot; selector *(combinator selector) domains = [domain0, domain1[, ...[, domainN]]] attributes = &quot;[&quot; name0 = value0 &quot;]&quot; &quot;[&quot; name1 = value2 &quot;]&quot; ... &quot;[&quot; nameN = valueN &quot;]&quot; pseudoClasses = pseudoClass *pseudoClass pseudoClass = &quot;:&quot; pseudoName [ &quot;(&quot; pseudoArgs &quot;)&quot; ]  tagName — name of the element in lower case, for example, div or script.domains — domain restriction for the rule. Same principles as in element hiding rule syntax.attributes — a list of attributes that limit the selection of elements. name — attribute name, value — substring, that is contained in attribute value.pseudoName — the name of a pseudo-class.pseudoArgs — the arguments of a function-style pseudo-class.combinator — an operator that works similarly to the CSS child combinator: that is, the selector on the right of the combinator will only match an element whose direct parent matches the selector on the left of the combinator. "},{"title":"Examples​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#examples-2","content":"HTML code: &lt;script data-src=&quot;/banner.js&quot;&gt;&lt;/script&gt;  Rule: example.org$$script[data-src=&quot;banner&quot;]  This rule removes all script elements with the attribute data-src containing the substring banner. The rule applies only to example.org and all its subdomains. "},{"title":"Special attributes​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#special-attributes","content":"In addition to usual attributes, which value is every element checked for, there is a set of special attributes that change the way a rule works. Below there is a list of these attributes: tag-content​ Deprecation notice This special attribute may become unsupported in the future. Prefer using the :contains() pseudo-class where it is available. This is the most frequently used special attribute. It limits selection with those elements whose innerHTML code contains the specified substring. You should use &quot;&quot; to escape &quot;, for instance: $$script[tag-content=&quot;alert(&quot;&quot;this is ad&quot;&quot;)&quot;] For example, take a look at this HTML code: &lt;script type=&quot;text/javascript&quot;&gt; document.write('&lt;div&gt;banner text&lt;/div&gt;&quot; /&gt;'); &lt;/script&gt;  Following rule will delete all script elements with a banner substring in their code: $$script[tag-content=&quot;banner&quot;]  Limitations The tag-content special attribute must not appear in a selector to the left of a &gt; combinator. wildcard​ Deprecation notice This special attribute may become unsupported in the future. Prefer using the :contains() pseudo-class where it is available. This special attribute works almost like tag-content and allows you to check the innerHTML code of the document. Rule will check if HTML code of the element fits to the search pattern. You should use &quot;&quot; to escape &quot;, for instance: $$script[wildcard=&quot;&quot;banner&quot;&quot;] For example: $$script[wildcard=&quot;*banner*text*&quot;] It will check, if the code of element contains two consecutive substrings banner and text. Limitations The wildcard special attribute must not appear in a selector to the left of a &gt; combinator. max-length​ Deprecation notice This special attribute may become unsupported in the future. Prefer using the :contains() pseudo-class with a regular expression where it is available. Specifies the maximum length for content of HTML element. If this parameter is set and the content length exceeds the value, a rule does not apply to the element. Default value If this parameter is not specified, the max-length is considered to be 8192. For example: $$div[tag-content=&quot;banner&quot;][max-length=&quot;400&quot;]  This rule will remove all the div elements, whose code contains the substring banner and the length of which does not exceed 400 characters. Limitations The max-length special attribute must not appear in a selector to the left of a &gt; combinator. min-length​ Deprecation notice This special attribute may become unsupported in the future. Prefer using the :contains() pseudo-class with a regular expression where it is available. Specifies the minimum length for content of HTML element. If this parameter is set and the content length is less than preset value, a rule does not apply to the element. For example: $$div[tag-content=&quot;banner&quot;][min-length=&quot;400&quot;]  This rule will remove all the div elements, whose code contains the substring banner and the length of which exceeds 400 characters. Limitations The min-length special attribute must not appear in a selector to the left of a &gt; combinator. "},{"title":"Pseudo-classes​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#pseudo-classes","content":":contains()​ Syntax​ :contains(unquoted text)  or :contains(/reg(ular )?ex(pression)?/)  Compatibility :-abp-contains() and :has-text() are synonyms for :contains(). Compatibility The :contains() pseudo-class is supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.13 or later. Requires that the inner HTML of the element contains the specified text or matches the specified regular expression. Limitations A :contains() pseudo-class must not appear in a selector to the left of a &gt; combinator. "},{"title":"Exceptions​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#exceptions","content":"Similar to hiding rules, there is a special type of rules that disable the selected HTML filtering rule for particular domains. The syntax is the same, you just have to change $$ to $@$. For example, there is a rule in filter: $$script[tag-content=&quot;banner&quot;]  If you want to disable it for example.com, you can create an exception rule: example.com$@$script[tag-content=&quot;banner&quot;]  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. $@$script[tag-content=&quot;banner&quot;]  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. "},{"title":"JavaScript rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#javascript-rules","content":"AdGuard supports a special type of rules that allows you to inject any javascript code to websites pages. We strongly recommend using scriptlets instead of JavaScript rules whenever possible. JS rules are supposed to help with debugging, but as a long-time solution a scriptlet rule should be used. Syntax rule = [domains] &quot;#%#&quot; script  domains — domain restriction for the rule. Same principles as in element hiding rules.script — arbitrary javascript code in one string. Examples example.org#%#window.__gaq = undefined; executes the code window.__gaq = undefined; on all pages at example.org and all subdomains. Exceptions Similar to hiding rules, there is a special type of rules that disable the selected javascript rule for particular domains. The syntax is the same, you just have to change #%# to #@%#. For example, there is a rule in filter: #%#window.__gaq = undefined;  If you want to disable it for example.com, you can create an exception rule: example.com#@%#window.__gaq = undefined;  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. #@%#window.__gaq = undefined;  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. Restrictions JavaScript rules can be used only in trusted filters. Compatibility JavaScript rules are not supported by AdGuard Content Blocker. "},{"title":"Scriptlet rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#scriptlets","content":"Scriptlet is a JavaScript function that provides extended capabilities for content blocking. These functions can be used in a declarative manner in AdGuard filtering rules. 注意 AdGuard supports a lot of different scriptlets. In order to achieve cross-blocker compatibility, we also support syntax of uBO and ABP. Syntax rule = [domains] &quot;#%#//scriptlet(&quot; scriptletName arguments &quot;)&quot;  scriptletName — required, a name of the scriptlet from AdGuard's Scriptlets libraryarguments — optional, a list of string arguments (no other types of arguments are supported) Examples example.org#%#//scriptlet(&quot;abort-on-property-read&quot;, &quot;alert&quot;)  This rule will be applied to example.org and subdomains pages and will execute the abort-on-property-read scriptlet with the alert parameter. Learn more about how to debug scriptlets. More information about scriptlets can be found on GitHub. Compatibility Scriptlet rules are not supported by AdGuard Content Blocker. "},{"title":"Trusted scriptlets​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#trusted-scriptlets","content":"Trusted scriptlets are scriptlets with extended functionality. It means the same syntax and restrictions. Trusted scriptlet names are prefixed with trusted-, e.g. trusted-set-cookie, to be easily distinguished from common scriptlets. 注意 Trusted scriptlets are not compatible with other ad blockers except AdGuard. Restrictions Trusted scriptlets rules can be used only in trusted filters. Compatibility Trusted scriptlets rules are not supported by AdGuard Content Blocker. Learn more about how to debug scriptlets. More information about trusted scriptlets can be found on GitHub. "},{"title":"Modifiers for non-basic type of rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-rules-modifiers","content":"Each rule can be modified using the modifiers described in the following paragraphs. Syntax {#non-basic-rules-modifiers-syntax} rule = &quot;[$&quot; modifiers &quot;]&quot; [rule text] modifiers = modifier0[, modifier1[, ...[, modifierN]]]  modifier — set of the modifiers described below.rule text — a rule to be modified. For example, [$domain=example.com,app=test_app]##selector. In the modifiers values of the following characters must be escaped: [, ], ,, and \\ (unless it is used for the escaping). Use \\ to escape them. For example, an escaped bracket looks like this: \\]. Modifier \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tAdGuard iOS版\tAdGuard Safari版\tAdGuard 内容拦截器$app\t✅\t❌\t❌\t❌\t❌\t❌ $domain\t✅\t✅\t✅\t✅\t✅\t❌ $path\t✅\t✅\t✅\t✅\t✅\t❌ $url\t✅\t⏳\t⏳\t❌\t❌\t❌ 注意 ✅ — fully supported⏳ — feature that has been implemented or is planned to be implemented but is not yet available in any product❌ — not supported "},{"title":"$app​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-app-modifier","content":"$app modifier lets you narrow the rule coverage down to a specific application or a list of applications. The modifier's behavior and syntax perfectly match the corresponding basic rules $app modifier. Examples [$app=org.example.app]example.com##.textad hides a div with a class textad at example.com and all subdomains in requests sent from the org.example.app Android app.[$app=~org.example.app1|~org.example.app2]example.com##.textad hides a div with a class textad at example.com and all subdomains in requests sent from any app except org.example.app1 and org.example.app2.[$app=com.apple.Safari]example.org#%#//scriptlet('prevent-setInterval', 'check', '!300') applies scriptlet prevent-setInterval only in Safari browser on Mac.[$app=org.example.app]#@#.textad disables all ##.textad rules for all domains while using org.example.app. Compatibility Such rules with $app modifier are supported by AdGuard for Windows, Mac, and Android. "},{"title":"$domain​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-domain-modifier","content":"$domain modifier limits the rule application area to a list of domains and their subdomains. The modifier's behavior and syntax perfectly match the corresponding basic rules $domain modifier. Examples [$domain=example.com]##.textad — hides a div with a class textad at example.com and all subdomains.[$domain=example.com|example.org]###adblock — hides an element with attribute id equals adblock at example.com, example.org and all subdomains.[$domain=~example.com]##.textad — this rule hides div elements of the class textad for all domains, except example.com and its subdomains. There are 2 ways to specify domain restrictions for non-basic rules: the &quot;classic&quot; way is to specify domains before rule mask and attributes: example.com##.textad;the modifier approach is to specify domains via $domain modifier: [$domain=example.com]##.textad. But rules with mixed style domains restriction are considered invalid. So, for example, the rule [$domain=example.org]example.com##.textad will be rejected. Compatibility Such rules with $domain modifier are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser Extension for Chrome, Firefox, Edge. "},{"title":"$path​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-path-modifier","content":"$path modifier limits the rule application area to specific locations or pages on websites. Syntax $path [&quot;=&quot; pattern]  pattern — optional, a path mask to which the rule is restricted. Its syntax and behavior are pretty much the same as with the pattern for basic rules. You can also use special characters, except for ||, which does not make any sense in this case (see examples below). If pattern is not set for $path, rule will apply only on the main page of website. $path modifier matches the query string as well. $path modifier supports regular expressions in the same way basic rules do. Examples [$path=page.html]##.textad hides a div with a class textad at /page.html or /page.html?&lt;query&gt; or /sub/page.html or /another_page.html[$path=/page.html]##.textad hides a div with a class textad at /page.html or /page.html?&lt;query&gt; or /sub/page.html of any domain but not at /another_page.html[$path=|/page.html]##.textad hides a div with a class textad at /page.html or /page.html?&lt;query&gt; of any domain but not at /sub/page.html[$path=/page.html|]##.textad hides a div with a class textad at /page.html or /sub/page.html of any domain but not at /page.html?&lt;query&gt;[$path=/page*.html]example.com##.textad hides a div with a class textad at /page1.html or /page2.html or any other path matching /page&lt;...&gt;.html of example.com[$path]example.com##.textad hides a div with a class textad at the main page of example.com[$domain=example.com,path=/page.html]##.textad hides a div with a class textad at page.html of example.com and all subdomains but not at another_page.html[$path=/\\\\/(sub1|sub2)\\\\/page\\\\.html/]##.textad hides a div with a class textad at both /sub1/page.html and /sub2/page.html of any domain (please note the escaped special characters) Compatibility Rules with $path modifier are not supported by AdGuard Content Blocker. "},{"title":"$url​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-url-modifier","content":"$url modifier limits the rule application area to URLs matching the specified mask. Syntax url = pattern  where pattern is pretty much the same as pattern of the basic rules assuming that some characters must be escaped. The special characters and regular expressions are supported as well. Examples [$url=||example.com/content/*]##div.textad hides a div with a class textad at addresses like https://example.com/content/article.html and even https://subdomain.example.com/content/article.html.[$url=||example.org^]###adblock hides an element with attribute id equal to adblock at example.org and its subdomains.[$url=/\\[a-z\\]+\\\\.example\\\\.com^/]##.textad hides div elements of the class textad for all domains matching the regular expression [a-z]+\\.example\\.com^. Compatibility Rules with the $url modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.11 or later. "},{"title":"Information for filters maintainers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#information-for-filters-maintainers","content":"If you maintain a third-party filter that is known to AdGuard, you might be interested in the information presented in this section. Please note that hints will be applied to registered filters only. The filter is considered to be registered and known by AdGuard, if it is present in the known filters index. If you want your filter to be registered, please file an issue to AdguardFilters repo. "},{"title":"Preprocessor directives​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#preprocessor-directives","content":"We provide preprocessor directives that can be used by filters maintainers to improve compatibility with different ad blockers and provide: including a fileapplying rules conditionally by ad blocker typecontent blocker specifying for rules applying in Safari 注意 Any mistake in a preprocessor directive will lead to AdGuard failing the filter update in the same way as if the filter URL was unavailable. Preprocessor directives can be used in the user rules or in the custom filters. Including a file​ The !#include directive allows to include contents of a specified file into the filter. It supports only files from the same origin to make sure that the filter maintainer is in control of the specified file. The included file can also contain pre- directives (even other !#include directives). Ad blockers should consider the case of recursive !#include and implement a protection mechanism. Syntax !#include file_path  where file_path is a same origin absolute or relative file path to be included. The files must originate from the same domain but may be located in a different folder. If included file is not found or unavailable, the whole filter update should fail. Same-origin limitation should be disabled for local custom filters. Examples Filter URL: https://example.org/path/filter.txt ! Valid (same origin): !#include https://example.org/path/includedfile.txt ! ! Valid (relative path): !#include /includedfile.txt !#include ../path2/includedfile.txt ! ! Invalid (another origin): !#include https://domain.com/path/includedfile.txt  Conditions​ Filters maintainers can use conditions to supply different rules depending on the ad blocker type. A conditional directive beginning with a !#if directive must explicitly be terminated with an !#endif directive. Conditions support all basic logical operators. There are two possible scenarios: When an ad blocker encounters an !#if directive and no !#else directive, it will compile the code between !#if and !#endif directives only if the specified condition is true. If there is an !#else directive, the code between !#if and !#else will be compiled if the condition is true; otherwise, the code between !#else and !#endif will be compiled. 注意 Whitespaces matter. !#if is a valid directive, while !# if is not. Syntax !#if (conditions) rules_list !#endif  or !#if (conditions) true_conditions_rules_list !#else false_conditions_rules_list !#endif  where: !#if (conditions) — start of the block when conditions are trueconditions — just like in some popular programming languages, preprocessor conditions are based on constants declared by ad blockers. Authors of ad blockers define on their own what exact constants they declare. Possible values: adguard always declared; shows maintainers that this is one of AdGuard products; should be enough in 95% of casesproduct-specific constants for cases when you need a rule to work (or not work — then ! should be used before constant) in a specific product only: adguard_app_windows — AdGuard for Windowsadguard_app_mac — AdGuard for Macadguard_app_android — AdGuard for Androidadguard_app_ios — AdGuard for iOSadguard_ext_safari — AdGuard for Safariadguard_ext_chromium — AdGuard Browser Extension for Chrome (and chromium-based browsers, e.g. new Microsoft Edge)adguard_ext_firefox — AdGuard Browser Extension for Firefoxadguard_ext_edge — AdGuard Browser Extension for Edge Legacyadguard_ext_opera — AdGuard Browser Extension for Operaadguard_ext_android_cb — AdGuard Content Blocker for mobile Samsung and Yandex browsersext_ublock — special case; this one is declared when a uBlock version of a filter is compiled by the FiltersRegistrycap_html_filtering — products that support HTML filtering rules: AdGuard for Windows, AdGuard for Mac, and AdGuard for Android !#else — start of the block when conditions are falserules_list, true_conditions_rules_list, false_conditions_rules_list — lists of rules!#endif — end of the block Examples ! for all AdGuard products except AdGuard for Safari !#if (adguard &amp;&amp; !adguard_ext_safari) ||example.org^$third-party domain.com##div.ad !#endif  ! directives even can be combined !#if (adguard_app_android) !#include /androidspecific.txt !#endif  !#if (adguard &amp;&amp; !adguard_ext_safari) ! for all AdGuard products except AdGuard for Safari ||example.org^$third-party domain.com##div.ad !#else ! for AdGuard for Safari only ||subdomain.example.org^$third-party !#endif  Compatibility The !#else directive is supported by the FiltersDownloader v1.1.20 or later. It is already supported for filter lists compiled by the FiltersRegistry, but it still may not be supported by AdGuard products when adding a filter list with !#else as a custom one. The following products will support it in the mentioned versions or later: AdGuard for Windows, Mac, and Android, running CoreLibs v1.13;AdGuard Browser Extension v4.2.208;AdGuard for Safari v1.11.16. Safari affinity​ Safari's limit for each content blocker is 150,000 active rules. But in AdGuard for Safari and AdGuard for iOS, we've split the rules into 6 content blockers, thus increasing the rule limit to 900,000. Here is the composition of each content blocker: AdGuard General — Ad Blocking, Language-specificAdGuard Privacy — PrivacyAdGuard Social — Social Widgets, AnnoyancesAdGuard Security — SecurityAdGuard Other — OtherAdGuard Custom — Custom User rules and allowlist are added to every content blocker. 警告 The main disadvantage of using multiple content blockers is that rules from different blockers are applied independently. Blocking rules are not affected by this, but unblocking rules may cause problems. If a blocking rule is in one content blocker and an exception is in another, the exception will not work. Filter maintainers use !#safari_cb_affinity to define Safari content blocker affinity for the rules inside of the directive block. Syntax !#safari_cb_affinity(content_blockers) rules_list !#safari_cb_affinity  where: !#safari_cb_affinity(content_blockers) — start of the blockcontent_blockers — comma-separated list of content blockers. Possible values: general — AdGuard General content blockerprivacy — AdGuard Privacy content blockersocial — AdGuard Social content blockersecurity — AdGuard Security content blockerother — AdGuard Other content blockercustom — AdGuard Custom content blockerall — special keyword that means that the rules must be included into all content blockers rules_list — list of rules!#safari_cb_affinity — end of the block Examples ! to unhide specific element which is hidden by AdGuard Base filter: !#safari_cb_affinity(general) example.org#@#.adBanner !#safari_cb_affinity  ! to allowlist basic rule from AdGuard Tracking Protection filter filter: !#safari_cb_affinity(privacy) @@||example.org^ !#safari_cb_affinity  "},{"title":"Hints​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#hints","content":"&quot;Hint&quot; is a special comment, instruction to the filters compiler used on the server side (see FiltersRegistry). Syntax !+ HINT_NAME1(PARAMS) HINT_NAME2(PARAMS)  Multiple hints can be applied. NOT_OPTIMIZED hint​ For each filter, AdGuard compiles two versions: full and optimized. Optimized version is much more lightweight and does not contain rules which are not used at all or used rarely. Rules usage frequency comes from the collected filter rules statistics. But filters optimization is based on more than that — some filters have specific configuration. This is how it looks like for Base filter: &quot;filter&quot;: AdGuard Base filter, &quot;percent&quot;: 30, &quot;minPercent&quot;: 20, &quot;maxPercent&quot;: 40, &quot;strict&quot;: true  where: filter — filter identifierpercent — expected optimization percent ~= (rules count in optimized filter) / (rules count in original filter) * 100minPercent — lower bound of percent valuemaxPercent — upper bound of percent valuestrict — if percent &lt; minPercent OR percent &gt; maxPercent and strict mode is on then filter compilation should fail, otherwise original rules must be used In other words, percent is the &quot;compression level&quot;. For instance, for the Base filter it is configured to 40%. It means that optimization algorithm should strip 60% of rules. Eventually, here are the two versions of the Base filter for AdGuard Browser Extension: full: https://filters.adtidy.org/extension/chromium/filters/2.txtoptimized: https://filters.adtidy.org/extension/chromium/filters/2_optimized.txt If you want to add a rule which should not be removed at optimization use the NOT_OPTIMIZED hint: !+ NOT_OPTIMIZED ||example.org^  And this rule will not be optimized only for AdGuard for Android: !+ NOT_OPTIMIZED PLATFORM(android) ||example.org^  PLATFORM and NOT_PLATFORM hints​ Used to specify the platforms to apply the rules. List of existing platforms and links to Base filter, for example, for each of them: windows — AdGuard for Windows — https://filters.adtidy.org/windows/filters/2.txt mac — AdGuard for Mac — https://filters.adtidy.org/mac_v2/filters/2.txt android — AdGuard for Android — https://filters.adtidy.org/android/filters/2.txt ios — AdGuard for iOS — https://filters.adtidy.org/ios/filters/2.txt ext_chromium — AdGuard Browser Extension for Chrome — https://filters.adtidy.org/extension/chromium/filters/2.txt ext_ff — AdGuard Browser Extension for Firefox — https://filters.adtidy.org/extension/firefox/filters/2.txt ext_edge — AdGuard Browser Extension for Edge — https://filters.adtidy.org/extension/edge/filters/2.txt ext_opera — AdGuard Browser Extension for Opera — https://filters.adtidy.org/extension/opera/filters/2.txt ext_safari — AdGuard for Safari — https://filters.adtidy.org/extension/safari/filters/2.txt ext_android_cb — AdGuard Content Blocker — https://filters.adtidy.org/extension/android-content-blocker/filters/2.txt ext_ublock — uBlock Origin — https://filters.adtidy.org/extension/ublock/filters/2.txt Examples This rule will be available only in AdGuard for Windows, Mac, Android: !+ PLATFORM(windows,mac,android) ||example.org^  This rule will be available for every platform except AdGuard for Safari, AdGuard Content Blocker, and AdGuard for iOS: !+ NOT_PLATFORM(ext_safari, ext_android_cb, ios) ||example.org^  "},{"title":"How to debug filtering rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#how-to-debug-filtering-rules","content":"It may be possible to create simple filtering rules &quot;in your head&quot; but for anything even slightly more complicated you will need additional tools to debug and iterate them. There are tools to assist you with that. You can use DevTools in Chrome and its analogs in other browsers but most AdGuard products provide another one — Filtering log. "},{"title":"Filtering log​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#filtering-log","content":"Filtering log is an advanced tool that will be helpful mostly to filter developers. It lists all web requests that pass through AdGuard, gives you exhaustive information on each of them, offers multiple sorting options, and has other useful features. Depending on which AdGuard product you are using, Filtering log can be located in different places. In AdGuard for Windows, you can find it in the Ad Blocker tab or via the tray menuIn AdGuard for Mac, it is located in Settings → Advanced → Filtering logIn AdGuard for Android, you can find it under Statistics → Recent activity. Recent activity can also be accessed from the AssistantIn AdGuard Browser Extension, it is accessible from the Miscellaneous settings tab or by right-clicking the extension icon. Only Chromium- and Firefox-based browsers show applied element hiding rules (including CSS, ExtCSS) and JS rules and scriptlets in their Filtering logs 注意 In AdGuard for iOS and AdGuard for Safari, Filtering log does not exist because of the way content blockers are implemented in Safari. AdGuard does not see the web requests and therefore cannot display them. "},{"title":"Selectors debugging mode​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#selectors-debug-mode","content":"Sometimes, you might need to check the performance of a given selector or a stylesheet. In order to do it without interacting with JavaScript directly, you can use a special debug style property. When ExtendedCss meets this property, it enables the debugging mode either for a single selector or for all selectors, depending on the debug value. Open the browser console while on a web page to see the timing statistics for selector(s) that were applied there. Debugging mode displays the following stats as object where each of the debugged selectors are keys, and value is an object with such properties: Always printed: selectorParsed — text of eventually parsed selectortimings — list of DOM nodes matched by the selector appliesCount — total number of times that the selector has been applied on the pageappliesTimings — time that it took to apply the selector on the page, for each of the instances that it has been applied (in milliseconds)meanTiming — mean time that it took to apply the selector on the pagestandardDeviation — standard deviationtimingsSum — total time it took to apply the selector on the page across all instances Printed only for remove pseudos: removed — flag to signal if elements we removed Printed if elements are not removed: matchedElements — list of DOM nodes matched by the selectorstyleApplied — parsed rule style declaration related to the selector Examples Debugging a single selector: When the value of the debug property is true, only information about this selector will be shown in the browser console. #$?#.banner { display: none; debug: true; }  Enabling global debug: When the value of the debug property is global, the console will display information about all extended CSS selectors that have matches on the current page, for all the rules from any of the enabled filters. #$?#.banner { display: none; debug: global; }  Testing extended selectors without AdGuard ExtendedCss can be executed on any page without using any AdGuard product. In order to do that you should copy and execute the following code in a browser console: !function(e,t,d){C=e.createElement(t),C.src=d,C.onload=function(){alert(&quot;ExtendedCss loaded successfully&quot;)},s=e.getElementsByTagName(t)[0],s?s.parentNode.insertBefore(C,s):(h=e.getElementsByTagName(&quot;head&quot;)[0],h.appendChild(C))}(document,&quot;script&quot;,&quot;https://AdguardTeam.github.io/ExtendedCss/extended-css.min.js&quot;);  Alternatively, install the ExtendedCssDebugger userscript. Now you can now use the ExtendedCss from global scope, and run its method query() as Document.querySelectorAll(). Examples const selector = 'div.block:has=(.header:matches-css(after, content: Ads))'; // array of HTMLElements matched the `selector` is to be returned ExtendedCss.query(selector);  "},{"title":"Debugging scriptlets​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#debug-scriptlets","content":"If you are using AdGuard Browser Extension and want to debug a scriptlet or a trusted scriptlet rule, you can get additional information by opening the Filtering log. In that case, scriptlets will switch to debug mode and there will be more information in the browser console. The following scriptlets are especially developed for debug purposes: debug-current-inline-scriptdebug-on-property-readdebug-on-property-writelog-addEventListenerlog-on-stack-tracelog-evallog The following scriptlets also may be used for debug purposes: json-pruneprevent-fetchprevent-requestAnimationFrameprevent-setIntervalprevent-setTimeoutprevent-window-open with specified replacement parameterprevent-xhrtrusted-replace-fetch-responsetrusted-replace-xhr-response "},{"title":"Compatibility tables legend​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#compatibility-tables-legend","content":""},{"title":"Product shortcuts​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#what-product","content":"CoreLibs apps — AdGuard for Windows, AdGuard for Mac, and AdGuard for AndroidAdGuard for Chromium — AdGuard Browser Extension for Chrome and other Chromium-based browsers such as Microsoft Edge, OperaAdGuard for Firefox — AdGuard Browser Extension for FirefoxAdGuard for iOS — AdGuard for iOS and AdGuard Pro for iOS (for mobile Safari browser)AdGuard for Safari — AdGuard for desktop Safari browser AdGuard Content Blocker — Content Blocker for Android mobile browsers: Samsung Internet and Yandex Browser "},{"title":"Compatibility shortcuts​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#what-compatibility","content":"注意 ✅ — fully supported✅ * — supported, but reliability may vary or limitations may occur; check the modifier description for more details🧩 — may already be implemented in nightly or beta versions but is not yet supported in release versions⏳ — feature that has been implemented or is planned to be implemented but is not yet available in any product❌ — not supported👎 — deprecated; still supported but will be removed in the future🚫 — removed and no longer supported "}]