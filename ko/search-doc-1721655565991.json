[{"title":"Comparison to standalone apps","type":0,"sectionRef":"#","url":"adguard-browser-extension/comparison-standalone/","content":"Comparison to standalone apps info 브라우저만 보호하는 AdGuard 브라우저 확장 프로그램에 관한 문서입니다. To protect your entire device, download the AdGuard app 브라우저 확장 프로그램과 비교했을 때 AdGuard 독립 실행형 프로그램의 가장 큰 장점은 모든 브라우저와 거의 모든 앱에서 광고를 차단할 수 있다는 점입니다. 여러 브라우저를 동시에 사용해도 앱이 모든 브라우저에서 광고와 온라인 위협을 동일하게 필터링합니다. 두 번째 차이점은 확장 프로그램 기반 광고 차단기의 가능성은 브라우저 가이드라인에 의해 엄격하게 제한된다는 점입니다. 브라우저 확장 프로그램은 광고 차단이 제한될 수 있는 브라우저의 정책을 준수해야 합니다. 따라서 일부 유형의 필터링 규칙은 확장 프로그램에서 지원되지 않습니다. 데스크톱 앱의 기능은 제한되지 않으므로 필터링 품질이 더 우수합니다. AdGuard 브라우저 확장 프로그램은 무료이며, 설치가 쉽고 광고를 차단하며 온라인 위협에 대응하는 필터가 있습니다. 정식 앱의 경우 확장 프로그램 대비 더 강력하고 고급 기능 목록을 제공합니다. 아래 비교 표에서 모든 차이점을 확인하세요. 1 – within browser restrictions and only in the browser where it is installed; 2 – the extension is unable to detect requests from other extensions. 만약 악성 또는 추적 확장 프로그램이 광고나 당신의 활동을 추적하기 위해 서버에 요청을 보내는 경우, AdGuard 브라우저 확장 프로그램은 해당 요청을 차단할 수 없습니다. 3 – not all types of ads and threats can be blocked by browser extensions due to certain browser limitations. 일부 요소는 페이지로 이동하여 로딩 프로세스가 느려질 수 있습니다. 또한 브라우저 기반 광고 차단기와 달리 AdGuard 앱은 광고가 브라우저에 로드되기 전에 차단합니다. 이렇게 하면 트래픽이 절약되고 페이지 로딩 속도가 빨라집니다.","keywords":""},{"title":"필터","type":0,"sectionRef":"#","url":"adguard-browser-extension/features/filters/","content":"","keywords":""},{"title":"사용자 정의 필터​","type":1,"pageTitle":"필터","url":"adguard-browser-extension/features/filters/#사용자-정의-필터","content":"어느 정도 예측 가능한 기능을 가진 필터 그룹 외에 사용자 정의 필터가 있습니다.  이 탭에서는 기본적으로 확장 프로그램에 없는 필터를 추가할 수 있습니다. 인터넷에는 공개적으로 사용 가능한 필터가 많이 있습니다. 또한 자신만의 필터를 만들고 추가할 수 있습니다. 필터 세트를 만들고 원하는 방식으로 광고 차단을 맞춤 설정할 수 있습니다. 필터를 추가하려면 사용자 정의 필터 추가를 클릭하고 추가하려는 필터의 URL 또는 파일 경로를 입력한 후 다음을 클릭합니다.  "},{"title":"사용자 규칙​","type":1,"pageTitle":"필터","url":"adguard-browser-extension/features/filters/#user-rules","content":"사용자 규칙은 광고 차단을 맞춤 설정하는 데 도움이 되는 또 다른 도구입니다.  새 규칙을 추가하는 방법에는 여러 가지가 있습니다. 가장 간단한 방법은 규칙을 입력하는 것이지만, 규칙 구문에 대한 지식이 필요합니다. 텍스트 파일에서 바로 사용할 수 있는 필터 목록을 가져올 수도 있습니다. 서로 다른 규칙은 줄 바꿈으로 구분해야 합니다. 바로 사용할 수 있는 필터 목록을 가져오는 것은 사용자 정의 필터 탭에서 하는 것이 좋습니다. 또한 자신만의 필터링 규칙을 내보낼 수도 있습니다. 이 옵션은 브라우저나 장치 간에 규칙 목록을 전송할 때 유용합니다. 웹사이트를 허용 목록에 추가하거나(자세한 내용은 아래 참조) 페이지에서 요소를 숨기기 위해 어시스턴트 도구를 사용하면 해당 규칙이 사용자 규칙에도 저장됩니다. "},{"title":"허용 목록​","type":1,"pageTitle":"필터","url":"adguard-browser-extension/features/filters/#허용-목록","content":"허용 목록은 특정 웹사이트를 필터링에서 제외하는 데 사용됩니다. 목록에 있는 웹사이트에는 차단 규칙이 적용되지 않습니다.  허용 목록을 반대로 사용할 수도 있습니다. 이 목록에 추가된 웹사이트를 제외한 모든 곳에서 광고 차단을 해제할 수 있습니다. 이렇게 하려면 허용 목록 반전 옵션을 활성화합니다.  허용 목록을 가져오거나 내보낼 수도 있습니다. 예를 들어 각 브라우저에 동일한 규칙을 적용하려는 경우 유용합니다. "},{"title":"호환성","type":0,"sectionRef":"#","url":"adguard-browser-extension/availability/","content":"호환성 info 브라우저만 보호하는 AdGuard 브라우저 확장 프로그램에 관한 문서입니다. To protect your entire device, download the AdGuard app AdGuard Browser Extension is a free extension that works in five popular browsers: Chrome, Firefox, Edge, Opera, and Yandex Browser. 브라우저의 부가 기능 스토어나 공식 웹사이트에서 쉽게 찾을 수 있습니다. Browser extensions include basic ad-blocking features but cannot be compared with full-featured desktop programs, such as AdGuard for Windows and AdGuard for Mac. note Safari용 독립 실행형 확장 프로그램이 있습니다. Since the release of Safari 13, most of the ad-blocking extensions have experienced huge issues and many of them stopped functioning. We had to develop a separate extension for Safari that has some differences in comparison with the extension described in this article. Do not forget that the functionality of each extension is strictly limited by the browser’s capabilities. So if you want to get full-fledged protection, consider installing a standalone program for your computer. There's a reason why.","keywords":""},{"title":"확장 프로그램의 기본 메뉴","type":0,"sectionRef":"#","url":"adguard-browser-extension/features/main-menu/","content":"확장 프로그램의 기본 메뉴 info 브라우저만 보호하는 AdGuard 브라우저 확장 프로그램에 관한 문서입니다. 전체 기기를 보호하려면 AdGuard 앱을 다운로드하세요. 확장 프로그램의 메인 페이지는 브라우저의 도구 모음에서 확장 프로그램의 아이콘을 클릭하여 액세스할 수 있습니다. 기본 페이지에서 페이지의 모든 요소를 수동으로 숨기거나(사용자 규칙에 해당 규칙이 추가됨), 필터링 로그를 열어 브라우저의 트래픽에 대한 전체 정보를 확인하고 이동 중에 요청을 차단하거나 웹사이트의 보안 보고서를 확인할 수 있습니다. 또한 모든 웹사이트에 대한 불만 사항을 제출하고 (예: 페이지에 누락된 광고가 있는 경우 필터 개발자가 신고를 검토하여 문제를 해결합니다) 적용된 차단 규칙에 대한 통계를 확인할 수 있습니다. 브라우저에서 이루어진 모든 웹 요청은 필터링 로그에 각 요청에 대한 자세한 정보와 함께 표시됩니다. 예를 들어, 필터링 로그를 통해 AdGuard 확장 프로그램에서 차단한 요청들을 쉽게 모니터링할 수 있습니다. 또한 두 번의 클릭으로 모든 요청을 차단하거나 이전에 차단한 요청을 허용 목록에 추가할 수 있습니다. 필터링 로그에서 웹 요청을 정렬할 수 있는 다양한 옵션도 제공하므로 사용자 정의 규칙을 만들 때 유용하게 사용할 수 있습니다. 기본 메뉴에서 해당 항목을 선택하거나 설정 페이지(추가 설정 탭)에서 필터링 로그를 열 수 있습니다. 확장 프로그램의 주 메뉴 오른쪽 상단에 있는 아이콘을 클릭하면 콘텐츠 차단기 설정을 열거나 보호 기능을 일시 중지할 수 있습니다.","keywords":""},{"title":"Compatibility with the standalone app","type":0,"sectionRef":"#","url":"adguard-browser-extension/compatibility/","content":"","keywords":""},{"title":"AdGuard Browser Assistant​","type":1,"pageTitle":"Compatibility with the standalone app","url":"adguard-browser-extension/compatibility/#adguard-browser-assistant","content":" AdGuard Browser Assistant is a browser extension that works and feels just like AdGuard Browser Extension, but it's much lighter and doesn't interfere with the desktop apps. You can read more about Browser Assistant for Windows or Mac, or download it from our website. AdGuard Browser Assistant is available in all major browsers. "},{"title":"스텔스 모드","type":0,"sectionRef":"#","url":"adguard-browser-extension/features/stealth-mode/","content":"스텔스 모드 info 브라우저만 보호하는 AdGuard 브라우저 확장 프로그램에 관한 문서입니다. 전체 기기를 보호하려면 AdGuard 앱을 다운로드하세요. 스텔스 모드는 추적기 및 사기 사이트로부터 민감한 개인정보를 보호하는 것을 목표로 합니다. 스텔스 모드에서는 웹사이트가 인터넷에서 해당 웹사이트를 찾는 데 사용한 검색어를 볼 수 없도록 하고, 쿠키(제3자 쿠키 포함)를 자동으로 삭제하는 등의 기능을 사용할 수 있습니다. 별도의 문서에서 이러한 모든 기능에 대해 확인할 수 있습니다. note 정식 앱에서 사용이 가능한 일부 스텔스 모드 옵션은 기술적 한계로 인해 확장 프로그램에서는 존재하지 않습니다.","keywords":""},{"title":"설치 방법","type":0,"sectionRef":"#","url":"adguard-browser-extension/installation/","content":"","keywords":""},{"title":"Google Chrome이나 Chromium 계열 브라우저용 AdGuard 브라우저 확장 프로그램 설치​","type":1,"pageTitle":"설치 방법","url":"adguard-browser-extension/installation/#google-chrome이나-chromium-계열-브라우저용-adguard-브라우저-확장-프로그램-설치","content":"Chrome 웹 스토어 확장 프로그램 페이지를 열고 Chrome에 추가를 클릭하세요.  열린 팝업 창에서 확장 추가를 클릭하세요.  "},{"title":"Opera용 AdGuard 확장 프로그램 설치 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-browser-extension/installation/#opera용-adguard-확장-프로그램-설치-방법","content":"addons.opera.com 페이지를 엽니다.  Opera에 추가를 클릭하세요. "},{"title":"Firefox용 AdGuard 확장 프로그램 설치 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-browser-extension/installation/#firefox용-adguard-확장-프로그램-설치-방법","content":"addons.mozilla.org 페이지를 엽니다.  Firefox에 추가를 클릭하세요. "},{"title":"Yandex 브라우저용 AdGuard 확장 프로그램 설치 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-browser-extension/installation/#yandex-브라우저용-adguard-확장-프로그램-설치-방법","content":"브라우저 오른쪽 위에 있는 설정 버튼을 클릭하고, 메뉴에서 Add-ons를 고르세요. 스크롤을 내려 AdGuard를 찾은 뒤 설치를 클릭하세요.  "},{"title":"Microsoft Edge용 AdGuard 확장 프로그램 설치 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-browser-extension/installation/#microsoft-edge용-adguard-확장-프로그램-설치-방법","content":"Edge 확장 프로그램 스토어에서 AdGuard 브라우저 확장 프로그램을 찾은 뒤 다운로드를 클릭하세요.  팝업 창에서 확장 프로그램 추가를 누르세요.  다른 대안으로, Chrome 웹 스토어에서 Edge용 AdGuard 확장 프로그램을 설치할 수 있습니다. Edge 브라우저에서 해당 웹페이지를 열고 페이지 상단의 배너에서 다른 스토어의 확장 프로그램 허용 선택합니다.  대화 상자가 열리면 확장 프로그램 추가를 클릭합니다.  Chrome에 추가를 클릭합니다.  열린 팝업 창에서 확장 프로그램 추가하기를 클릭하여 AdGuard 확장 프로그램을 설치합니다.  "},{"title":"Safari용 AdGuard 확장 프로그램 설치 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-browser-extension/installation/#safari용-adguard-확장-프로그램-설치-방법","content":"Safari용 AdGuard는 일반적으로 브라우저 확장 프로그램이 아닙니다. You can read more about it in a dedicated article. 또는 이 페이지에서 설치 파일을 다운로드할 수 있습니다. "},{"title":"기타 기능 및 설정","type":0,"sectionRef":"#","url":"adguard-browser-extension/features/other-features/","content":"","keywords":""},{"title":"일반​","type":1,"pageTitle":"기타 기능 및 설정","url":"adguard-browser-extension/features/other-features/#general","content":"일반 탭에서 검색 광고 및 웹사이트 자체 홍보를 허용하고 언어별 필터 자동 활성화나 필터 업데이트 주기 등을 지정할 수 있습니다.  또한, 여기에서 피싱 및 멀웨어 보호를 활성화할 수 있습니다. 설정 내보내기 버튼을 클릭하여 구성을 저장할 수 있습니다. 설정은 .json 파일로 저장됩니다. 이전에 만든 구성을 적용하려면 설정 가져오기 기능을 사용하세요. 다른 설정 프로필 간에 빠르게 전환하거나 다른 브라우저 간에 구성을 전송하는 데에도 사용할 수 있습니다. "},{"title":"추가 설정​","type":1,"pageTitle":"기타 기능 및 설정","url":"adguard-browser-extension/features/other-features/#misc","content":"추가 설정 섹션에는 광고 차단 프로세스 및 앱 사용성과 관련된 다양한 설정이 포함되어 있습니다.  이 탭에서 최적화된 필터를 활성화하고, 확장 프로그램 업데이트에 대한 알림을 사용 설정하고, 필터링 로그를 열거나 차단된 광고 및 트래커의 통계를 지울 수 있습니다. 또한 적용된 규칙에 대한 통계(어떤 규칙이, 어떤 웹사이트에서, 얼마나 자주 트리거되는지 등)를 보내 필터 개발에 도움을 줄 수도 있습니다. 저희는 사용자의 동의 없이 데이터를 수집하지 않으므로 이 옵션은 기본적으로 비활성화되어 있습니다. 이 기능을 활성화하면 모든 데이터는 완전한 익명으로 전송됩니다. "},{"title":"정보​","type":1,"pageTitle":"기타 기능 및 설정","url":"adguard-browser-extension/features/other-features/#about","content":"정보 섹션에는 현재 버전에 대한 정보, EULA 및 개인정보취급방침에 대한 링크, GitHub의 브라우저 확장 프로그램 저장소를 확인할 수 있습니다.  "},{"title":"브라우저에 의해 보호받는 페이지","type":0,"sectionRef":"#","url":"adguard-browser-extension/protected-pages/","content":"","keywords":""},{"title":"Chromium 브라우저 제한 사항​","type":1,"pageTitle":"브라우저에 의해 보호받는 페이지","url":"adguard-browser-extension/protected-pages/#chromium-브라우저-제한-사항","content":"Google Chrome과 같은 Chromium 기반 브라우저들은 확장 프로그램이 접근할 수 없는 제한된 도메인 목록을 유지합니다. 다음은 이러한 도메인의 예시입니다. clients.google.comclients[0-9]+.google.comsb-ssl.google.comchrome://, chrome-extension://, 또는 https://chrome.google.com/webstore/로 시작하는 URLPDF 파일Javascript가 비활성화된 페이지보안 경고 페이지404 오류, 네트워크 오류 등의 오류 페이지view-source: 또는 data:로 시작하는 URL "},{"title":"Firefox 브라우저 제한 사항​","type":1,"pageTitle":"브라우저에 의해 보호받는 페이지","url":"adguard-browser-extension/protected-pages/#firefox-브라우저-제한-사항","content":"마찬가지로 Firefox 브라우저에는 확장 프로그램이 작동하지 않는 제한된 도메인 목록이 존재합니다. 이러한 제한된 도메인은 다음과 같습니다. accounts-static.cdn.mozilla.netaccounts.firefox.comaddons.cdn.mozilla.net --addons.mozilla.orgapi.accounts.firefox.comcontent.cdn.mozilla.netdiscovery.addons.mozilla.orginstall.mozilla.orgoauth.accounts.firefox.comprofile.accounts.firefox.comsupport.mozilla.orgsync.services.mozilla.com "},{"title":"Firefox에서 제한 사항 수정하기​","type":1,"pageTitle":"브라우저에 의해 보호받는 페이지","url":"adguard-browser-extension/protected-pages/#firefox에서-제한-사항-수정하기","content":"고급 설정을 변경하는 것은 Firefox의 안정성과 보안에 영향을 미칠 수 있습니다. 이 기능은 고급 사용자에게만 권장됩니다. 이러한 위험성을 알고 있음에도 보호된 페이지에서 허용되지 않는 추가 기능을 활성화하려면 아래 단계를 따르세요. 메뉴 버튼 → 애드온과 테마 → 확장 프로그램을 클릭합니다.활성화하고 싶은 제한된 확장 프로그램을 클릭합니다 (이 상황에서는 AdGurad).제한 사항이 있는 사이트에서 실행 항목에서 허용을 선택합니다. 또는 다른 방법을 사용할 수도 있습니다. 새 탭을 열고 주소 표시줄에 about:config를 입력합니다.돌아가기 버튼을 누릅니다. 경고창이 나타날 수도 있습니다. 이 경우 위험 수락 및 계속을 클릭합니다.extensions.webextensions.restrictedDomains을 찾습니다. 이 설정을 찾을 수 없는 경우 직접 만들 수 있습니다. Boolean 유형을 선택하고 +를 클릭하여 추가하면 됩니다.해당 설정 옆에 있는 토글 버튼을 클릭하고 해당 값을 false로 변경합니다.Firefox를 재시작합니다. 이 주제에 대한 더 자세한 정보는, Mozilla의 지원 웹사이트를 참조하세요. "},{"title":"설치 방법","type":0,"sectionRef":"#","url":"adguard-content-blocker/installation/","content":"설치 방법 info 이 글은 삼성 인터넷 브라우저와 Yandex 브라우저만 보호하는 AdGuard 콘텐츠 차단기에 관한 글입니다. 기기 전체를 보호하려면 AdGuard 앱을 다운로드하세요. 이 애플리케이션은 5개의 스토어에서 사용할 수 있습니다: Google Play, Galaxy Store, Huawei AppGallery, Aptoide, F-Droid. AdGuard 콘텐츠 차단기를 Google Play 스토어에서 설치하려면, AdGuard 콘텐츠 차단기를 검색하여 설치를 누르세요. note AdGuard 콘텐츠 차단기는 Yandex 브라우저와 Samsung 인터넷 브라우저 두 곳에서 작동합니다. 설치가 완료되면 애플리케이션을 열기 위해 열기를 누르세요. 기기에 지원되는 브라우저가 설치되어 있는 경우 앱에서 AdGuard를 활성화할지 묻는 메시지가 표시됩니다. 지원되는 브라우저가 없는 경우 브라우저를 선택하여 설치하라는 메시지가 표시됩니다. 브라우저를 설치한 후 AdGuard 콘텐츠 차단기를 시작하여 광고 및 추적기를 차단할 수 있습니다.","keywords":""},{"title":"기능 개요","type":0,"sectionRef":"#","url":"adguard-content-blocker/overview/","content":"기능 개요 info 이 글은 삼성 인터넷 브라우저와 Yandex 브라우저만 보호하는 AdGuard 콘텐츠 차단기에 관한 글입니다. 기기 전체를 보호하려면 AdGuard 앱을 다운로드하세요. AdGuard에는 두 가지 안드로이드 앱이 있습니다: Android용 AdGuard 및 AdGuard 콘텐츠 차단기. Android용 AdGuard는 브라우저 및 앱에서 광고, 추적기 및 방해 요소를 차단하고, 필터와 도메인 수준 광고 차단을 사용하고, 사용자 규칙을 지원하는 등 훨씬 더 광범위한 기능을 제공합니다. AdGuard 콘텐츠 차단기는 한정적인 기능만 제공합니다. Google 정책으로 인해 모든 기능을 지원하는 광고 차단기를 Google Play에 등록할 수 없습니다. Google Play는 &quot;다른 앱의 광고 표시를 차단하거나 방해하는 앱&quot;을 금지 했습니다. 따라서 Android용 AdGuard는 AdGuard의 공식 웹사이트에서만 다운로드할 수 있습니다. 이에 대한 대안으로 Google은 개발자에게 콘텐츠 차단 API를 제공합니다. 이 API는 엄격한 제한되어 있으며 현재 두 가지 브라우저에서 지원됩니다: Yandex 브라우저와 삼성 인터넷입니다. 다른 AdGuard 제품에서 지원되는 많은 복잡한 필터링 규칙은 이 API에서 작동하지 않습니다. AdGuard 콘텐츠 차단기는 Google Play 정책에 맞게 설계되었습니다. 다른 AdGuard 제품에 비해 AdGuard 콘텐츠 차단기는 광고 차단 기능이 적습니다: AdGuard 콘텐츠 차단기는 콘텐츠 차단 기술을 지원하는 브라우저에서만 작동합니다. 현재 Yandex 브라우저와 삼성 인터넷 등 두 가지 브라우저가 있습니다.기존 기술 내에서 AdGuard 콘텐츠 차단기의 기능은 제한적입니다. 예를 들어 앱이나 기타 브라우저에서 광고 및 추적기를 차단할 수 없고, 필터링 로그가 없으며 도메인 수준에서의 필터링을 지원하지 않습니다. 하지만 AdGuard 콘텐츠 차단기는 지원되는 두 가지 브라우저에서 광고, 추적기 및 방해 요소를 차단할 수 있는 35개의 필터를 제공합니다. 적절한 언어별 필터를 선택하거나 사용자 정의 규칙을 추가하여 광고 차단을 맞춤 설정할 수도 있습니다. AdGuard 콘텐츠 차단기는 무료 오픈 소스 소프트웨어입니다. 소스 코드는 Github에서 확인할 수 있습니다. 더 우수하고 맞춤설정 가능한 광고 차단 환경을 위해 완전한 기능을 갖춘 Android 앱을 사용해 보세요. Android용 AdGuard는 당사 웹사이트에서 다운로드할 수 있습니다.","keywords":""},{"title":"백그라운드 페이지에서 로그를 내보내는 방법","type":0,"sectionRef":"#","url":"adguard-browser-extension/solving-problems/logs/","content":"","keywords":""},{"title":"확장 프로그램의 백그라운드 페이지에서 로그를 내보내기​","type":1,"pageTitle":"백그라운드 페이지에서 로그를 내보내는 방법","url":"adguard-browser-extension/solving-problems/logs/#확장-프로그램의-백그라운드-페이지에서-로그를-내보내기","content":""},{"title":"Chrome​","type":1,"pageTitle":"백그라운드 페이지에서 로그를 내보내는 방법","url":"adguard-browser-extension/solving-problems/logs/#chrome","content":"AdGuard 브라우저 확장 프로그램을 열고, 가능하다면 오류를 일으킨 작업을 반복합니다. 이 오류가 발생한 정확한 시간을 기록해 주세요. chrome://extensions로 이동합니다. 개발자 모드를 활성화합니다. background.html을 클릭합니다. 콘솔 탭을 엽니다. 상황에 맞는 메뉴를 열어 다른 이름으로 저장을 선택합니다. "},{"title":"Firefox​","type":1,"pageTitle":"백그라운드 페이지에서 로그를 내보내는 방법","url":"adguard-browser-extension/solving-problems/logs/#firefox","content":"AdGuard 브라우저 확장 프로그램을 열고, 가능하다면 오류를 일으킨 작업을 반복합니다. 이 오류가 발생한 정확한 시간을 기록해 주세요. about:addons로 이동합니다. 부가 기능 디버그를 누릅니다. 검사를 누릅니다. 콘솔 탭으로 이동합니다. 모든 메세지를 파일에 저장을 클릭합니다. "},{"title":"로그 전송하기​","type":1,"pageTitle":"백그라운드 페이지에서 로그를 내보내는 방법","url":"adguard-browser-extension/solving-problems/logs/#로그-전송하기","content":"AdGuard is committed to protecting your privacy. We strictly follow our Privacy Policy and do not collect any private information about users. Before sending your logs to the support team, please review the file as it may contain additional information that you don’t want to share. If it contains such personal information, we recommend that you delete it first. 로그를 저장했다면, 다음 단계에 따라 개발팀에 제출해 주세요. GitHub에 버그를 제보하세요.로그와 재생 시간이 포함된 ZIP 파일을 devteam@adguard.com로 보내고 GitHub 이슈에 링크를 추가합니다. 파일을 첨부하는 대신 Google 드라이브에 ZIP 파일을 업로드하고 링크를 추가할 수도 있습니다. "},{"title":"무료 버전과 정식 버전 비교","type":0,"sectionRef":"#","url":"adguard-for-android/features/free-vs-full/","content":"무료 버전과 정식 버전 비교 info 이 글은 시스템 수준에서 기기를 보호하는 광고 차단기인 Android용 AdGuard에 관한 내용입니다. 작동 방식을 확인하려면 AdGuard 앱을 다운로드하세요. Android용 AdGuard는 무료 버전과 유료 버전이 있습니다. 유료 기능은 AdGuard의 기능을 확장합니다. 앱 내 광고 차단을 사용하면 브라우저 이외의 앱에서 광고를 차단할 수 있습니다. 앱 관리에서 필터링할 앱을 지정할 수 있습니다. note AdGuard는 자체 광고 없는 미디어 플레이어를 사용하여 YouTube에서 광고를 차단합니다. 미디어 플레이어를 열려면 YouTube 앱을 열고 AdGuard와 동영상을 공유하세요. 이 기능은 무료로 사용할 수 있습니다. 추적 보호는 추적 요청, 온라인 카운터, UTM 태그, 분석 시스템 등을 차단하여 개인정보를 보호합니다. 추적 보호에 대해 자세히 알아보기 브라우징 보안은 잠재적으로 위험한 웹사이트를 방문하려고 할 때 경고해 줍니다. 브라우징 보안에 대해 자세히 알아보기 사용자 정의 필터 및 사용자 규칙을 사용하면 자신만의 필터링 규칙과 타사 필터를 추가하여 광고 차단을 세밀하게 조정할 수 있습니다. 필터에 대해 자세히 알아보기 유저스크립트를 사용하면 브라우저의 기능을 확장하고 광고 재인젝션을 방지하는 AdGuard Extra를 이용할 수 있습니다. 유저스크립트에 대해 자세히 알아보기 라이선스를 구매하면 이러한 기능을 이용할 수 있습니다. 라이선스 활성화 방법","keywords":""},{"title":"앱 관리","type":0,"sectionRef":"#","url":"adguard-for-android/features/app-management/","content":"","keywords":""},{"title":"'문제가 없는' 앱과 '문제가 있는' 앱​","type":1,"pageTitle":"앱 관리","url":"adguard-for-android/features/app-management/#문제가-없는-앱과-문제가-있는-앱","content":"필터링이 활성화되어 있으면 대부분의 앱이 제대로 작동합니다. 이러한 앱의 경우, 해당 앱의 트래픽은 AdGuard를 통해 라우팅되고 기본적으로 필터링됩니다. 다운로드 관리자, 라디오, UID 1000 및 1001이 있는 시스템 앱(예: Google Play 서비스)과 같은 일부 앱은 '문제가 있는' 앱으로 AdGuard를 통해 라우팅할 때 잘못 작동할 수 있습니다. 그렇기 때문에 모든 앱을 라우팅하거나 필터링하려고 할 때 다음과 같은 경고가 표시될 수 있습니다.  기기에 설치된 모든 앱이 제대로 작동하도록 하려면 문제가 없는 앱만 AdGuard를 통해 라우팅할 것을 강력히 권장합니다. 필터링에 권장되지 않는 앱의 전체 목록은 설정 → 일반 → 고급 → 로우 레벨 설정 → 보호 → 제외된 앱에서 확인할 수 있습니다. "},{"title":"어시스턴트","type":0,"sectionRef":"#","url":"adguard-for-android/features/assistant/","content":"","keywords":""},{"title":"어시스턴트에 액세스하는 방법​","type":1,"pageTitle":"어시스턴트","url":"adguard-for-android/features/assistant/#어시스턴트에-액세스하는-방법","content":"Android 기기의 경우 화면 상단에서 아래로 스와이프하여 알림 창을 엽니다.AdGuard 알림을 찾아 확장합니다.  어시스턴트를 탭합니다.  "},{"title":"어시스턴트 사용 방법​","type":1,"pageTitle":"어시스턴트","url":"adguard-for-android/features/assistant/#어시스턴트-사용-방법","content":"어시스턴트를 열면 앱 및 웹사이트 두 개의 탭이 표시됩니다. 각 항목에는 최근에 사용한 앱과 웹사이트 목록이 포함되어 있습니다.  "},{"title":"앱 탭​","type":1,"pageTitle":"어시스턴트","url":"adguard-for-android/features/assistant/#앱-탭","content":"앱을 선택하면 수행할 수 있는 몇 가지 옵션이 표시됩니다. Chrome을 예로 들어 보겠습니다.  최근 활동​ AdGuard 앱으로 이동하게되고 Chrome에서 최근에 발생한 10,000개의 요청에 대한 자세한 정보를 볼 수 있습니다.  앱 통계​ AdGuard 앱으로 이동하여 Chrome에 대한 다음과 같은 자세한 통계를 확인할 수 있습니다. Chrome에서 차단된 광고 및 트래커의 수Chrome의 광고 또는 추적 요청을 차단하여 절약한 데이터Chrome에서 요청을 보내는 회사 앱 관리​ AdGuard 앱 화면으로 이동하여 앱에 대한 AdGuard 보호를 비활성화할 수 있습니다. 방화벽 설정​ AdGuard 화면으로 이동하여 앱에대한 방화벽 설정을 변경할 수 있으며, 앱의 인터넷 접근을 관리할 수 있게 됩니다. "},{"title":"웹사이트 탭​","type":1,"pageTitle":"어시스턴트","url":"adguard-for-android/features/assistant/#웹사이트-탭","content":" 웹사이트를 선택하면 할 수 있는 몇 가지 옵션이 표시됩니다. 여기서는 예시로 google.com을 사용합니다.  허용 목록에 추가​ 이 옵션을 탭하면 즉시 google.com이 허용 목록에 추가되며 AdGuard는 더 이상 해당 웹사이트를 필터링하지 않습니다(즉, 광고 및 트래커가 차단되지 않습니다). 최근 활동​ AdGuard 앱으로 이동하여 google.com에 대한 최근 10,000개의 요청에 대한 자세한 정보를 볼 수 있습니다.  웹사이트 통계​ AdGuard 앱으로 이동하여 google.com에 대해 다음과 같은 자세한 통계를 볼 수 있습니다. 차단된 광고 수 및 google.com에 대한 추적 요청 수google.com에 대한 광고 및 추적 요청을 차단하여 절약한 데이터google.com에 요청을 보내는 앱google.com의 하위 도메인에 대한 정보 "},{"title":"AdGuard VPN과 통합","type":0,"sectionRef":"#","url":"adguard-for-android/features/integration-with-vpn/","content":"AdGuard VPN과 통합 info 이 글은 시스템 수준에서 기기를 보호하는 광고 차단기인 Android용 AdGuard에 관한 내용입니다. 작동 방식을 확인하려면 AdGuard 앱을 다운로드하세요. Android용 AdGuard는 로컬 VPN을 생성하여 트래픽을 필터링합니다. 따라서 Android용 AdGuard가 실행되는 동안에는 다른 VPN 앱을 사용할 수 없습니다. 하지만 AdGuard와 AdGuard VPN 앱 모두 통합 모드가 있어 동시에 사용할 수 있습니다. 이 모드에서 AdGuard VPN은 AdGuard 광고 차단기가 트래픽을 라우팅하는 아웃바운드 프록시 서버 역할을 합니다. 이를 통해 AdGuard는 VPN 인터페이스를 생성하고 로컬에서 광고와 추적기를 차단하는 동시에 모든 트래픽을 원격 서버를 통해 라우팅할 수 있습니다. AdGuard VPN을 비활성화하면 AdGuard는 아웃바운드 프록시로 사용을 중지합니다. AdGuard를 비활성화하면 AdGard VPN은 자체 VPN 인터페이스를 통해 트래픽을 라우팅합니다. AdGuard 광고 차단기를 사용 중이고 AdGuard VPN을 설치한 경우, 광고 차단기 앱이 이를 감지하여 AdGuard VPN과의 통합을 자동으로 활성화합니다. 그 반대도 마찬가지입니다. 통합을 활성화한 경우, AdGuard VPN 앱에서 앱 예외를 관리하고 DNS 서버에 연결할 수 없다는 점에 유의하세요. 설정 → 필터링 → 네트워크 → 프록시 → 프록시를 통해 작동하는 앱을 통해 VPN 터널을 통해 라우팅할 앱을 지정할 수 있습니다. DNS 서버를 선택하려면 AdGuard → 보호 → DNS 보호 → DNS 서버를 엽니다.","keywords":""},{"title":"브라우징 보안","type":0,"sectionRef":"#","url":"adguard-for-android/features/protection/browsing-security/","content":"브라우징 보안 info 이 글은 시스템 수준에서 기기를 보호하는 광고 차단기인 Android용 AdGuard에 관한 내용입니다. 작동 방식을 확인하려면 AdGuard 앱을 다운로드하세요. 브라우징 보안 모듈은 보호 탭(화면 하단의 왼쪽 두 번째 아이콘)을 탭한 다음 브라우징 보안을 선택하면 액세스할 수 있습니다. 브라우징 보안은 피싱 및 악성 웹사이트 방문으로부터 사용자를 보호합니다. 또한 잠재적인 멀웨어에 대해서도 경고합니다. 위험한 웹사이트를 방문하려는 경우 브라우징 보안에 다음과 같은 경고가 표시됩니다. danger Android용 AdGuard는 바이러스 백신 프로그램이 아닙니다. 바이러스가 다운로드되는 것을 막거나 이미 다운로드된 바이러스를 삭제하지는 않습니다. 기기를 완벽하게 보호하려면 AdGuard를 바이러스 백신과 함께 사용하는 것이 좋습니다. 브라우징 보안은 안전한 기능입니다. AdGuard는 사용자가 어떤 웹사이트를 방문했는지 알지 못합니다. 웹사이트 보안을 확인하기 위해 URL 대신 해시 접두사를 사용합니다. 이 문서에서 브라우징 보안이 작동하는 방식에 대해 자세히 알아보기.","keywords":""},{"title":"광고 차단","type":0,"sectionRef":"#","url":"adguard-for-android/features/protection/ad-blocking/","content":"광고 차단 info 이 글은 시스템 수준에서 기기를 보호하는 광고 차단기인 Android용 AdGuard에 관한 내용입니다. 작동 방식을 확인하려면 AdGuard 앱을 다운로드하세요. 광고 차단 모듈은 보호 탭(화면 하단의 왼쪽 두 번째 아이콘)을 탭한 다음 광고 차단을 선택하면 액세스할 수 있습니다. 광고 차단 및 언어별 필터를 적용하여 광고를 차단하는 기능입니다. 광고 차단 메커니즘에 대해 자세히 알아보려면 광고 차단 관련 도움말 문서를 참조하세요. 기본 보호는 대부분의 웹사이트에서 효과적으로 광고를 차단합니다. 보다 맞춤형의 광고 차단을 위해서는 다음의 작업을 수행할 수 있습니다. 언어별 필터 활성화 — 특정 언어로 된 웹사이트에서 광고를 차단할 수 있는 필터링 규칙이 포함되어 있습니다. 화이트리스트에 웹사이트 추가 — 해당 웹사이트들은 AdGuard에서 필터링되지 않습니다. 사용자 규칙 추가 — AdGuard는 해당 웹사이트에 이를 적용합니다. 나만의 사용자 규칙을 만드는 방법 알아보기","keywords":""},{"title":"방해 요소 차단","type":0,"sectionRef":"#","url":"adguard-for-android/features/protection/annoyance-blocking/","content":"방해 요소 차단 info 이 글은 시스템 수준에서 기기를 보호하는 광고 차단기인 Android용 AdGuard에 관한 내용입니다. 작동 방식을 확인하려면 AdGuard 앱을 다운로드하세요. 추적 보호 모듈은 보호 탭(화면 하단의 왼쪽 두 번째 아이콘)을 누른 다음 방해 요소 차단을 선택하면 이용할 수 있습니다. 이 기능은 AdGuard의 방해 요소 필터를 기반으로 하며 팝업, 온라인 지원 창, 쿠키 알림, 모바일 앱 다운로드 프롬프트 및 이와 유사한 성가신 요소를 차단할 수 있습니다. 방해 요소 필터에 대해 자세히 알아보기","keywords":""},{"title":"퀵 액션","type":0,"sectionRef":"#","url":"adguard-for-android/features/protection/firewall/quick-actions/","content":"퀵 액션 info 이 글은 시스템 수준에서 기기를 보호하는 광고 차단기인 Android용 AdGuard에 관한 내용입니다. 작동 방식을 확인하려면 AdGuard 앱을 다운로드하세요. 빠른 작업은 방화벽 모듈 내에서 찾을 수 있으며, 보호 탭(화면 하단의 왼쪽 두 번째 아이콘)을 탭한 다음 방화벽을 선택하면 액세스할 수 있습니다. 퀵 액션은 최근 활동(**통계**에서 확인할 수 있음)의 요청을 기반으로 합니다. 이 섹션에는 최근에 인터넷에 연결한 앱이 표시됩니다. 인터넷을 전혀 사용해서는 안 되는 앱이나 최근에 사용하지 않은 앱이 보이면 즉시 해당 앱의 액세스를 차단할 수 있습니다. 방화벽 모듈이 켜져 있지 않으면 이 기능을 사용할 수 없습니다.","keywords":""},{"title":"DNS 보호","type":0,"sectionRef":"#","url":"adguard-for-android/features/protection/dns-protection/","content":"DNS 보호 info 이 글은 시스템 수준에서 기기를 보호하는 광고 차단기인 Android용 AdGuard에 관한 내용입니다. 작동 방식을 확인하려면 AdGuard 앱을 다운로드하세요. DNS 보호 모듈은 보호 탭(화면 하단의 왼쪽 두 번째 아이콘)을 탭한 다음 DNS 보호를 선택하면 액세스할 수 있습니다. tip DNS 보호는 일반 광고 및 추적기 차단과는 다른 방식으로 작동합니다. DNS 보호 및 작동 방식에 대한 자세한 내용은 전용 문서에서 확인할 수 있습니다. DNS 보호를 사용하면 선택한 DNS 서버, DNS 필터 및 사용자 규칙을 이용하여 DNS 요청을 필터링할 수 있습니다. 일부 DNS 서버에는 잠재적으로 유해한 도메인에 대한 DNS 요청을 차단하는 목록이 있습니다. DNS 서버 외에도 AdGuard는 특수 DNS 필터를 사용하여 자체적으로 DNS 요청을 필터링할 수 있습니다. 여기에는 광고 및 추적 도메인의 방대한 목록이 포함되어 있으며, 해당 도메인으로의 요청은 블랙홀 서버로 리라우팅됩니다. 사용자 규칙을 만들어 도메인을 차단하고 차단을 해제할 수도 있습니다. DNS 필터링 규칙 구문에 대한 도움말 문서를 참조해야 할 수도 있습니다. DNS 서버​ 이 섹션에서는 DNS 요청을 처리할 DNS 서버를 선택할 수 있습니다. 또한 광고 및 추적기를 차단하고 DNS 트래픽을 암호화할 수 있습니다. 서버를 탭하여 전체 설명을 읽고 프로토콜을 선택합니다. 원하는 서버를 찾지 못한 경우, 수동으로 추가할 수 있습니다. DNS 서버 추가를 탭하고 서버 주소를 입력합니다. 또는 알려진 DNS 제공업체 목록에서 DNS 서버를 선택하고 옆에 있는 AdGuard에 추가를 탭할 수 있습니다. 사설 AdGuard DNS 서버를 사용하는 경우, 대시보드에서 해당 서버를 AdGuard에 추가할 수 있습니다. 기본적으로 자동 DNS가 선택되어 있습니다. AdGuard 및 기기 설정에 따라 DNS 서버를 설정합니다. AdGuard VPN과의 통합이 활성화되어 있거나 다른 SOCKS5 프록시가 활성화되어 있는 경우 AdGuard DNS 필터링 미사용 또는 사용자가 지정한 다른 서버에 연결됩니다. 다른 모든 경우에는 기기 설정에서 선택한 DNS 서버에 연결됩니다. DNS 필터​ 이 섹션에서는 사용자 정의 DNS 필터 및 DNS 필터링 규칙을 추가할 수 있습니다. filterlists.com에서 더 많은 필터를 찾을 수 있습니다.","keywords":""},{"title":"방화벽","type":0,"sectionRef":"#","url":"adguard-for-android/features/protection/firewall/","content":"","keywords":""},{"title":"글로벌 방화벽 규칙​","type":1,"pageTitle":"방화벽","url":"adguard-for-android/features/protection/firewall/#글로벌-방화벽-규칙","content":"이 섹션에서는 전체 기기에 대한 인터넷 액세스를 제어할 수 있습니다.  이러한 규칙은 사용자 정의 규칙을 설정하지 않은 경우 기기의 모든 앱에 적용됩니다. "},{"title":"사용자 정의 방화벽 규칙​","type":1,"pageTitle":"방화벽","url":"adguard-for-android/features/protection/firewall/#사용자-정의-방화벽-규칙","content":"이 섹션에서는 특정 앱의 인터넷 액세스를 제어할 수 있습니다. 신뢰할 수 없는 앱에 대한 권한을 제한하거나 반대로 글로벌 방화벽 규칙을 우회하려는 앱의 차단을 해제할 수 있습니다. 사용자 정의 방화벽 규칙을 엽니다. 사용자 정의 규칙이 있는 앱 아래에서 앱 추가를 탭합니다. 개별 규칙을 설정할 앱을 선택합니다. 사용 가능한 사용자 정의 규칙에서 설정하려는 규칙을 선택하고 '+' 아이콘을 탭합니다. 이제 규칙이 적용한 사용자 정의 규칙에 표시됩니다. 특정 유형의 연결을 차단해야 하는 경우 스위치를 왼쪽으로 옮깁니다. 허용하려면 스위치를 활성화한 상태로 두세요. 사용자 정의 규칙이 글로벌 규칙보다 우선합니다. 글로벌 방화벽 규칙에서 변경한 사항은 이 앱에 영향을 미치지 않습니다. 사용자 정의 규칙에서 규칙 또는 앱을 삭제하려면 왼쪽으로 스와이프합니다. "},{"title":"Notifications​","type":1,"pageTitle":"방화벽","url":"adguard-for-android/features/protection/firewall/#notifications","content":"If enabled, this feature notifies you when an app tries to break one of the Firewall rules set for that app (for example, to access mobile data when it shouldn’t). You can turn notifications on and off for all apps or for each app separately. Tap the notification to access the app’s Firewall settings, or temporary disable all Firewall rules for that app by tapping the corresponding button in the notification. You can also mute all Firewall notifications for the app by tapping the Mute button in the notification for that app. Note that if notifications for multiple apps would be displayed, they will be bundled into a single notification instead. "},{"title":"추적 보호","type":0,"sectionRef":"#","url":"adguard-for-android/features/protection/tracking-protection/","content":"추적 보호 info 이 글은 시스템 수준에서 기기를 보호하는 광고 차단기인 Android용 AdGuard에 관한 내용입니다. 작동 방식을 확인하려면 AdGuard 앱을 다운로드하세요. 추적 보호 모듈은 보호 탭(화면 하단의 왼쪽 두 번째 아이콘)을 누른 다음 추적 보호를 선택하면 이용할 수 있습니다. 추적 보호(이전의 스텔스 모드)는 웹사이트가 IP 주소, 브라우저 및 운영 체제 정보, 화면 해상도, 방문했거나 리디렉션된 페이지 등 사용자에 대한 정보를 수집하지 못하도록 차단합니다. 또한 웹사이트가 브라우저를 표시하거나 개인 설정 및 사용자 환경설정을 저장하거나 다음 방문 시 사용자를 인식하는 데 사용하는 쿠키를 차단할 수도 있습니다. 추적 보호에는 사전 구성된 세 가지 개인정보 보호 수준(표준 수준, 높은 수준, 궁극의 수준)과 한 가지 사용자 정의 수준(사용자 정의)이 있습니다. 사전 구성된 수준의 활성 기능은 다음과 같습니다. 표준 수준 a. 추적기 차단. 이 기능은 온라인 카운터 및 웹 분석 도구로부터 사용자를 보호하기 위해 AdGuard 추적 보호 필터를 사용합니다. b. 웹사이트에 추적하지 않도록 요청하기. 이 기능은 사용자가 방문하는 웹사이트에 Global Privacy Control 및 Do Not Track 신호를 전송하여 웹 앱이 사용자의 활동 추적을 비활성화하도록 요청합니다. c. X-Client-Data 헤더 제거 이 기능은 Google Chrome이 버전 및 수정 사항에 대한 정보를 Google 도메인(DoubleClick 및 GoogleAnalytics 포함)으로 전송하는 것을 방지합니다. 높은 수준 a. 추적기 차단. 이 기능은 온라인 카운터 및 웹 분석 도구로부터 사용자를 보호하기 위해 AdGuard 추적 보호 필터를 사용합니다. b. URL에서 추적 매개변수 제거. 이 기능은 AdGuard URL 추적 필터를 사용하여 페이지 URL에서 utm_* 및 fb_ref와 같은 추적 매개 변수를 제거합니다. c. 검색어 숨기기. 이 기능은 검색 엔진에서 방문한 웹사이트에 대한 검색어를 숨깁니다. d. 웹사이트에 추적하지 않도록 요청하기. 이 기능은 사용자가 방문하는 웹사이트에 Global Privacy Control 및 Do Not Track 신호를 전송하여 웹 앱이 사용자의 활동 추적을 비활성화하도록 요청합니다. e. 서드파티 쿠키 자동 파괴. 이 기능은 서드파티 쿠키의 유지시간을 180분으로 제한합니다 caution 이 기능은 강제 만료 후 모든 타사 쿠키를 삭제합니다. 여기에는 소셜 네트워크 또는 기타 타사 서비스를 통한 로그인도 포함됩니다. 일부 웹사이트에 주기적으로 재로그인해야 하거나 기타 쿠키 관련 문제가 발생할 수 있습니다. 추적 쿠키만 차단하려면 표준 보호 수준을 사용하세요. f. X-Client-Data 헤더 제거 이 기능은 Google Chrome이 버전 및 수정 사항에 대한 정보를 Google 도메인(DoubleClick 및 GoogleAnalytics 포함)으로 전송하는 것을 방지합니다. 궁극의 수준(이전에는 최고 수준으로 알려졌음) a. 추적기 차단. 이 기능은 온라인 카운터 및 웹 분석 도구로부터 사용자를 보호하기 위해 AdGuard 추적 보호 필터를 사용합니다. b. URL에서 추적 매개변수 제거. 이 기능은 AdGuard URL 추적 필터를 사용하여 페이지 URL에서 utm_* 및 fb_ref와 같은 추적 매개 변수를 제거합니다. c. 검색어 숨기기. 이 기능은 검색 엔진에서 방문한 웹사이트에 대한 검색어를 숨깁니다. d. 웹사이트에 추적하지 않도록 요청하기. 이 기능은 사용자가 방문하는 웹사이트에 Global Privacy Control 및 Do Not Track 신호를 전송하여 웹 앱이 사용자의 활동 추적을 비활성화하도록 요청합니다. e. 서드파티 쿠키 자동 파괴. 이 기능은 서드파티 쿠키의 유지시간을 180분으로 제한합니다. caution 이 기능은 강제 만료 후 모든 타사 쿠키를 삭제합니다. 여기에는 소셜 네트워크 또는 기타 타사 서비스를 통한 로그인도 포함됩니다. 일부 웹사이트에 주기적으로 재로그인해야 하거나 기타 쿠키 관련 문제가 발생할 수 있습니다. 추적 쿠키만 차단하려면 표준 보호 수준을 사용하세요. f. WebRTC 차단. 이 기능은 프록시나 VPN을 사용하더라도 실제 IP 주소가 유출될 수 있는 WebRTC를 차단합니다. g. Push API 차단. 이 기능은 브라우저가 서버로부터 푸시 메시지를 수신하지 못하도록 차단합니다. h. Location API 차단. 이 기능은 브라우저가 사용자의 GPS 데이터에 액세스하여 위치를 파악하는 것을 방지합니다. i. 제3자로부터 리퍼러 숨기기. 이 기능은 사용자가 방문한 웹사이트를 제3자가 알 수 없도록 차단합니다. 초기 페이지의 URL이 포함된 HTTP 헤더를 숨기고 설정할 수 있는 기본 또는 사용자 지정 헤더로 바꿉니다. j. 사용자-에이전트 숨기기. 이 기능은 일반적으로 브라우저의 이름과 버전, 운영 체제 및 언어 설정을 포함하는 사용자-에이전트 헤더에서 식별 정보를 제거합니다. k. X-Client-Data 헤더 제거 이 기능은 Google Chrome이 버전 및 수정 사항에 대한 정보를 Google 도메인(DoubleClick 및 GoogleAnalytics 포함)으로 전송하는 것을 방지합니다. 추적 보호에서 개별 설정을 조정하고 사용자 지정 구성을 만들 수 있습니다. 모든 설정에는 해당 역할을 이해하는 데 도움이 되는 설명이 있습니다. 다양한 추적 보호 설정의 기능에 대해 자세히 알아보세요. 일부 설정은 웹사이트 및 브라우저 확장 프로그램의 기능을 방해할 수 있으므로 신중하게 접근하세요.","keywords":""},{"title":"루팅된 기기","type":0,"sectionRef":"#","url":"adguard-for-android/features/rooted/","content":"루팅된 기기 info 이 글은 시스템 수준에서 기기를 보호하는 광고 차단기인 Android용 AdGuard에 관한 내용입니다. 작동 방식을 확인하려면 AdGuard 앱을 다운로드하세요. Android OS의 보안 조치로 인해 일부 AdGuard 기능은 루팅된 기기에서만 사용할 수 있습니다. 이 기능은 다음과 같습니다. 대부분의 앱은 사용자 저장소의 인증서를 신뢰하지 않으므로 대부분의 앱에서 HTTPS 필터링을 사용하려면 시스템 저장소에 CA 인증서를 설치해야 합니다. 시스템 저장소에 인증서를 설치하는 것은 루팅된 기기에서만 가능합니다.자동 프록시 라우팅 모드에서는 시스템 전체 트래픽 필터링에 대한 Android의 제한으로 인해 루트 액세스 권한이 필요합니다.수동 프록시 라우팅 모드를 사용하려면 Android 10 이상에서 루트 액세스가 필요하며, AdGuard가 필터링한 연결과 관련된 앱의 이름을 더 이상 확인할 수 없기 때문입니다.","keywords":""},{"title":"통계","type":0,"sectionRef":"#","url":"adguard-for-android/features/statistics/","content":"","keywords":""},{"title":"요청​","type":1,"pageTitle":"통계","url":"adguard-for-android/features/statistics/#요청","content":"이 섹션에는 차단된 광고 수, 추적기 및 총 요청 수가 표시됩니다. 모바일 데이터, Wi-Fi 또는 모든 데이터를 결합한 데이터 등 데이터 유형별로 요청을 필터링할 수 있습니다. 이전에는 필터링 로그로 알려진 최근 활동에는 AdGuard에서 처리한 최근 10,000건의 요청이 표시됩니다. 점 3개 메뉴(⋮)를 탭한 다음 사용자 지정을 탭하여 상태(일반, 차단됨, 수정됨, 허용됨) 또는 출처(퍼스트파티 또는 서드파티)별로 요청을 필터링할 수 있습니다. 요청을 탭하여 세부 정보를 확인하고 차단 또는 차단해제 규칙을 추가할 수 있습니다. "},{"title":"데이터 사용량​","type":1,"pageTitle":"통계","url":"adguard-for-android/features/statistics/#데이터-사용량","content":"이 섹션에는 선택한 데이터 유형(모바일 데이터, Wi-Fi 또는 전체)에 대한 다운로드 및 업로드된 데이터와 절약된 트래픽의 양이 표시됩니다. 절약됨, 업로드됨 또는 다운로드됨을 탭하면 시간별 데이터 사용량 그래프를 볼 수 있습니다. "},{"title":"앱​","type":1,"pageTitle":"통계","url":"adguard-for-android/features/statistics/#앱","content":"이 섹션에는 기기에 설치된 모든 앱에 대한 통계가 표시됩니다. 차단된 광고 또는 추적기의 수 또는 전송된 요청의 수에 따라 앱을 정렬할 수 있습니다. 모든 애플리케이션 보기를 탭하면 광고, 추적기 또는 요청 수에 따라 정렬된 앱 목록이 펼쳐집니다.  앱을 클릭하면 전송된 요청 수, 접속한 도메인 및 회사 등의 전체 통계를 확인할 수 있습니다. "},{"title":"기업​","type":1,"pageTitle":"통계","url":"adguard-for-android/features/statistics/#기업","content":"이 섹션에는 기기가 연결할 수 있는 회사가 표시됩니다. 그것은 무엇을 의미합니까? AdGuard는 기기가 요청을 보내는 도메인을 감지하고 해당 도메인이 속한 회사를 확인합니다. 기업 데이터베이스는 GitHub에서 확인할 수 있습니다. "},{"title":"DNS 통계​","type":1,"pageTitle":"통계","url":"adguard-for-android/features/statistics/#dns-통계","content":"이 섹션에는 DNS 보호가 처리하는 요청에 대한 데이터가 표시됩니다. 전송된 총 요청 수와 AdGuard에 의해 차단된 요청 수를 그림과 그래프로 확인할 수 있습니다. 또한 절약된 트래픽 양과 다운로드 및 업로드된 데이터에 대한 통계도 확인할 수 있습니다. "},{"title":"배터리 사용량​","type":1,"pageTitle":"통계","url":"adguard-for-android/features/statistics/#배터리-사용량","content":"이 섹션에는 지난 24시간 동안 AdGuard에서 사용한 기기 리소스에 대한 통계가 표시됩니다. 데이터는 기기 설정에 표시된 통계와 다를 수 있습니다. 이는 시스템이 필터링된 모든 앱의 트래픽을 AdGuard에 귀속시키기 때문에 발생합니다. 따라서 이 기기는 AdGuard가 실제보다 더 많은 리소스를 소비한다는 것을 보여줍니다. 배터리 및 트래픽 소비 문제에 대해 자세히 알아보기. "},{"title":"설정","type":0,"sectionRef":"#","url":"adguard-for-android/features/settings/","content":"","keywords":""},{"title":"설치 방법","type":0,"sectionRef":"#","url":"adguard-for-android/installation/","content":"","keywords":""},{"title":"시스템 요구 사항​","type":1,"pageTitle":"설치 방법","url":"adguard-for-android/installation/#시스템-요구-사항","content":"OS version: Android 7.0 or higher RAM: 2 GB 이상 Free disk space: 500 MB "},{"title":"설치 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-for-android/installation/#설치-방법","content":"대부분의 Android 기반 앱은 Google Play에서 다운로드할 수 있지만 Google은 Google Play를 통한 네트워크 수준 광고 차단기(다른 앱의 광고를 차단하는 앱)를 배포하는 것을 금지하기 때문에 Google Play에서 AdGuard 광고 차단 앱이 없습니다. You will find more information about Google restrictive policy in our blog. 그래서 Android용 AdGuard는 수동으로만 설치할 수 있습니다. 휴대폰에서 앱을 사용하려면 다음 단계를 수행하세요. Download the app on your device. Here are a few ways you can do this: head over to our website and tap the Download buttonstart the browser and type in the following URL: https://adguard.com/apkor scan this QR code: Allow installing apps from unknown sources. Once the file download is complete, tap Open in the notification. A popup will appear. Tap Settings, navigate to Install unknown apps, and grant permission for the browser you've used to download the file. Install the app. Once the browser has obtained the necessary permissions, the system will ask you if you want to install the AdGuard app. Tap Install. You will then be asked to read AdGuard's License agreement and Privacy policy. You can also participate in product development. To do this, check the boxes for Send crash reports automatically and Send technical and interaction data. Then tap Continue. Create a local VPN. In order to filter all traffic directly on your device and not route it through a remote server, AdGuard needs to establish a VPN connection. Enable HTTPS filtering. It is not a mandatory option, however, we advice to turn it on for the best ad-blocking quality. If your device is running Android 7–9, you'll be prompted to install a root certificate and configure HTTPS filtering after the local VPN setup. After you tap Install now, a prompt will appear asking you to authenticate the certificate installation with a password or fingerprint. If you have Android 10+ on your device, then after creating a local VPN, you will see the main app screen with a snack bar at the bottom with a suggestion to enable HTTPS filtering: tap Enable and follow the instructions on the next screen or check the article about certificate installation for more information. "},{"title":"AdGuard 제거 및 재설치​","type":1,"pageTitle":"설치 방법","url":"adguard-for-android/installation/#adguard-제거-및-재설치","content":"If you need to uninstall AdGuard on your mobile device, open Settings and choose Apps (Android 7) or Apps &amp; notifications (Android 8+). Find AdGuard in the list of installed apps and press Uninstall.  To reinstall AdGuard, just download the apk file again and follow the steps outlined in the Installation section. Uninstallation is not required beforehand. "},{"title":"How to install AdGuard for Android TV","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/adguard-for-android-tv/","content":"","keywords":""},{"title":"Installing AdGuard for Android TV via browser​","type":1,"pageTitle":"How to install AdGuard for Android TV","url":"adguard-for-android/solving-problems/adguard-for-android-tv/#installing-adguard-for-android-tv-via-browser","content":"Install the TV Bro browser on your Android TV. Download and install AdGuard for Android TV: Open the installed TV Bro browser on your Android TV.In the address bar of the browser, type https://agrd.io/tvapk and press Enter or follow the link.The browser will start downloading the AdGuard for Android TV installation file automatically.Once the download is complete, select Downloads in the browser control bar, then select the downloaded file.In a warning message, allow installing files from the browser.Return to your browser, open Downloads, and click the downloaded file.In the system window that appears, click Install, then Done or Open. Done, AdGuard for Android TV is installed. Launch AdGuard for Android TV: After the installation is complete, find the AdGuard app in the list of installed apps on your Android TV.Click the AdGuard icon to launch the app.Follow the on-screen instructions to complete the setup. "},{"title":"Installing AdGuard for Android TV via ADB​","type":1,"pageTitle":"How to install AdGuard for Android TV","url":"adguard-for-android/solving-problems/adguard-for-android-tv/#installing-adguard-for-android-tv-via-adb","content":"Make sure that Android Debug Bridge (ADB) is installed on your computer. If not, you can follow the instructions on XDA Developers: ADB Installation Guide. Download AdGuard for Android TV. In your TV settings, go to System → About and press the build number seven times to unlock developer options. Enable USB debugging. Write down the IP address of your Android TV: On your Android TV, navigate to Settings.Select System → About.Find Network and select Wi-Fi or Ethernet, depending on your connection type.Go to the network section and find IP address. Note down this IP address. Connect to Android TV via ADB: Open the terminal or command prompt on your computer.Enter the command adb connect and paste the IP address of your TV.The connection will be established. Install AdGuard for Android TV via ADB: In the terminal, enter the command adb install Downloads/adguard_tv.apk. If necessary, replace Downloads/adguard_tv.apk with your path.Wait for a message in the terminal indicating the successful installation of the app. "},{"title":"보통​","type":1,"pageTitle":"설정","url":"adguard-for-android/features/settings/#보통","content":"이 섹션에서는 색상 테마 및 언어를 설정하고 알림 등을 관리할 수 있습니다. AdGuard 팀이 앱 충돌을 감지하고 사용성을 조사하는 데 도움을 주고 싶다면 충돌 자동 보고 및 기술 및 상호 작용 데이터 전송을 활성화할 수 있습니다.  앱과 필터 업데이트에서 자동 필터 업데이트를 설정하고 앱 업데이트 채널을 선택할 수 있습니다. 더 안정적인 버전을 사용하려면 정식 버전를 선택하고, 새로운 기능을 가장 먼저 사용해보고 싶다면 베타 또는 Nightly을 선택하세요.  "},{"title":"고급 설정​","type":1,"pageTitle":"설정","url":"adguard-for-android/features/settings/#고급-설정","content":"자동화를 사용하면 태스커 앱을 통해 AdGuard를 관리할 수 있습니다. Watchdog은 AdGuard가 시스템에 의해 비활성화되지 않도록 보호합니다 (Android의 배터리 절약 모드에 대해 자세히 알아보기). 입력하는 값은 감시 확인 사이의 간격(초)이 됩니다. 로깅 수준은 앱 성능에 대한 어떤 데이터를 기록할지 정의합니다. 기본적으로 앱은 이벤트에 대한 데이터를 수집합니다. 디버그 로깅 수준은 더 많은 이벤트를 기록합니다. 문제가 있는 경우, 이 수준은 AdGuard 팀이 문제를 더 잘 이해하는 데 도움이 됩니다. 하지만 리소스를 더 많이 소모하므로 지원팀에서 요청하는 경우에만 활성화하는 것이 좋습니다. 로그 수집 및 전송에 대해 자세히 알아보기  로우 레벨 설정 섹션은 고급 사용자를 위한 섹션입니다. 로우 레벨 설정에 대해 자세히 알아보기  "},{"title":"필터링​","type":1,"pageTitle":"설정","url":"adguard-for-android/features/settings/#필터링","content":"이 섹션에서는 HTTPS 필터링 설정, 필터, 유저스크립트를 관리하고 프록시 서버를 설정할 수 있습니다.  "},{"title":"필터​","type":1,"pageTitle":"설정","url":"adguard-for-android/features/settings/#필터","content":"AdGuard는 필터의 규칙을 적용하여 광고, 추적기 및 성가신 광고를 차단합니다. 보호 섹션의 대부분의 기능은 AdGuard 필터를 기반으로 작동합니다. 기본 보호를 활성화하면 AdGuard 베이스 필터와 AdGuard 모바일 광고 필터가 자동으로 켜집니다. 두 필터를 모두 끄면 기본 보호 기능도 비활성화됩니다.  기본적으로 활성화된 필터만으로도 AdGuard를 정상적으로 작동할 수 있습니다. 그러나 광고 차단을 맞춤 설정하려면 다른 AdGuard 또는 타사 필터를 사용할 수 있습니다. 이렇게 하려면 카테고리를 선택하고 원하는 필터를 활성화합니다. 사용자 정의 필터를 추가하려면 사용자 정의 필터 → 사용자 정의 필터 추가를 탭하고 해당 URL 또는 파일 경로를 입력합니다. note 필터를 너무 많이 활성화하면 일부 웹사이트가 제대로 작동하지 않을 수 있습니다. 필터에 대해 자세히 알아보기 "},{"title":"유저스크립트​","type":1,"pageTitle":"설정","url":"adguard-for-android/features/settings/#유저스크립트","content":"유저스크립트는 하나 이상의 웹사이트의 기능을 확장하는 자바스크립트로 작성된 미니 프로그램입니다. 유저스크립트를 설치하려면 특별한 유저스크립트 관리자가 필요합니다. AdGuard에는 이러한 기능이 있으며 URL 또는 파일에서 유저스크립트를 추가할 수 있습니다.  AdGuard Extra​ AdGuard Extra는 복잡한 광고와 웹사이트에 광고를 다시 삽입하는 메커니즘을 차단하는 유저스크립트입니다. AMP 비활성화​ AMP 비활성화는 가속화된 모바일 페이지를 비활성화하는 유저스크립트입니다. "},{"title":"네트워크​","type":1,"pageTitle":"설정","url":"adguard-for-android/features/settings/#네트워크","content":"HTTPS 필터링​ 대부분의 웹사이트와 앱에서 광고와 추적기를 차단하려면 AdGuard가 HTTPS 트래픽을 필터링해야 합니다. HTTPS 필터링에 대해 자세히 알아보기 보안 인증서​ 암호화된 트래픽을 관리하기 위해 AdGuard는 기기에 CA 인증서를 설치합니다. 기기에 CA 인증서를 설치하는 것은 안전합니다. 트래픽은 로컬로 필터링되고 AdGuard는 연결의 보안을 확인합니다. Android의 이전 버전에서는 인증서가 자동으로 설치됩니다. Android 11 이상에서는 수동으로 설치해야 합니다. 설치 지침 사용자 저장소에 있는 CA 인증서는 브라우저와 일부 앱에서 HTTPS 트래픽을 필터링하는 데 충분합니다. 그러나 시스템 저장소의 인증서만 신뢰하는 앱도 있습니다. HTTPS 트래픽을 필터링하려면 시스템 저장소에 AdGuard의 CA 인증서를 설치해야 합니다. 지침 HTTPS로 필터링된 앱​ 이 섹션에서는 AdGuard가 HTTPS 트래픽을 필터링하는 앱 목록을 확인할 수 있습니다. 이 설정은 사용자 저장소와 시스템 저장소에 모두 CA 인증서가 있는 경우에만 모든 앱에 적용할 수 있습니다. HTTPS로 필터링된 웹사이트​ 이 설정을 사용하면 AdGuard가 HTTPS 트래픽을 필터링해야 하는 웹사이트를 관리할 수 있습니다. HTTPS 필터링을 통해 AdGuard는 요청 및 응답의 콘텐츠를 필터링할 수 있지만, 이 데이터를 수집하거나 저장하지 않습니다. 그러나 보안을 강화하기 위해 민감한 정보가 포함될 가능성이 있는 웹사이트는 HTTPS 필터링에서 제외합니다. 다음 모드 중 하나를 선택하여 원하는 사이트를 예외 목록에 추가할 수도 있습니다. 특정 웹사이트를 HTTPS 필터링에서 제외예외 목록에 추가된 웹사이트에서만 HTTPS 트래픽 필터링 또한 기본적으로 금융 웹사이트와 같이 EV(Extended Validation) 인증서를 사용하는 웹사이트는 필터링하지 않습니다. 필요한 경우 EV 인증서가 있는 웹사이트를 필터링 옵션을 활성화할 수 있습니다. 프록시​ 프록시 서버를 통해 모든 기기의 트래픽을 라우팅하도록 AdGuard를 설정할 수 있습니다. 아웃바운드 프록시 설정 방법 이 섹션에서는 VPN 제공업체가 허용하는 경우, 타사 VPN을 AdGuard와 함께 작동하도록 설정할 수 있습니다. 프록시를 통해 작동하는 앱 아래에서 지정한 프록시를 통해 트래픽을 라우팅할 앱을 선택할 수 있습니다. AdGuard VPN과의 통합을 활성화한 경우, 이 설정을 사용하면 AdGuard VPN 터널을 통해 라우팅할 앱을 지정하여 AdGuard VPN의 앱 예외 목록 역할을 합니다. 라우팅 모드​ 이 섹션에서는 트래픽 필터링 방법을 선택할 수 있습니다. 로컬 VPN은 로컬에서 생성한 VPN을 통해 트래픽을 필터링합니다. 이것은 가장 안정적인 모드입니다. Android 제한으로 인해 루팅되지 않은 기기에서 사용할 수 있는 유일한 시스템 전체 트래픽 필터링 방법이기도 합니다. note 로컬 VPN 모드에서는 AdGuard를 다른 VPN과 동시에 사용할 수 없습니다. AdGuard와 함께 다른 VPN을 사용하려면 프록시 모드에서 작동하도록 재설정하고 AdGuard에서 아웃바운드 프록시를 설정해야 합니다. AdGuard VPN의 경우, **통합 모드**의 도움으로 이 작업이 자동으로 수행됩니다. 자동 프록시는 VPN을 사용할 필요가 없는 대체 트래픽 라우팅 방법입니다. 한 가지 중요한 장점은 VPN과 병렬로 실행할 수 있다는 것입니다. 이 모드에는 루트 액세스 권한이 필요합니다. 수동 프록시는 특정 포트에 프록시 서버를 설정하는 것입니다(Wi-Fi 설정에서 구성할 수 있음). 이 모드를 사용하려면 Android 10 이상에서 루트 액세스 권한이 필요합니다. "},{"title":"라이선스​","type":1,"pageTitle":"설정","url":"adguard-for-android/features/settings/#라이선스","content":"이 섹션에서는 라이선스에 대한 정보를 찾고 라이선스를 관리할 수 있습니다. AdGuard 라이선스를 구매하여 정식 버전의 기능을 활성화하세요.AdGuard 계정에 로그인하거나 라이선스 키를 입력하여 라이선스를 활성화하세요.아직 7일 체험판을 사용하지 않았다면 가입하여 활성화하세요.점 3개 메뉴(:)에서 라이선스 상태를 새로 고칩니다.AdGuard 계정을 열어 라이선스를 관리하세요.이 라이선스의 기기 제한에 도달하여 다른 라이선스를 적용하려면 라이선스를 초기화하세요.  "},{"title":"고객 지원​","type":1,"pageTitle":"설정","url":"adguard-for-android/features/settings/#고객-지원","content":"이 섹션은 Android용 AdGuard에 대한 질문이나 제안 사항이 있는 경우, 도움이 될 것입니다. 지원팀에 문의하기 전에 FAQ 또는 지식창고를 참조하는 것이 좋습니다.  누락된 광고를 발견하면 잘못된 차단 신고를 통해 신고해 주세요. 예기치 않은 앱 동작이 발생하면 버그 신고를 선택합니다. 가능하면 문제를 자세히 설명하고 앱 로그를 추가하세요. 문제를 설명하는 방법 기능을 제안하려면 기능 요청을 사용하세요. note GitHub는 버그를 보고하고 새로운 기능을 제안하는 또 다른 방법입니다. 지침 및 리포지토리 링크 "},{"title":"How to protect AdGuard from being disabled by the system","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/background-work/","content":"","keywords":""},{"title":"Asus​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#asus","content":"Information on Asus devices is still far from being exhaustive so there may be more issues than listed here. We're going to update this part of the article when we know more. The main source of potential problems with background work on Asus devices is associated with the optimization app called Power Master. It is pre-installed and has pretty aggressive default settings, e.g. to block apps from starting and to kill background tasks when your screen turns off. To make sure apps background processing works, set up the following: Go to Mobile Manager → PowerMaster → Settings (or Battery-saving options) → Uncheck Clean up in suspend Go to Mobile Manager → PowerMaster → Settings (or Battery-saving options) → Uncheck Auto-deny apps from auto starting Alternatively, instead of unchecking Auto-deny apps from auto starting entirely, you can go to Settings → Battery-saving options → Auto-start manager → AdGuard and uncheck it. "},{"title":"Xiaomi​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#xiaomi","content":"Xiaomi (and especially MIUI) devices are among the most troublesome ones when it comes to background work. They are known to limit background processes and have non-standard permissions with a lack of proper documentation to top it off. Sometimes apps just don't work right on Xiaomi phones and there's little that can be done about that. Below are some actions you might attempt to perform if you run into any trouble regarding AdGuard's background work on various Xiaomi devices. "},{"title":"MIUI 12.0.8+​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-1208","content":"To let your AdGuard app run successfully in the background, do the following: In Settings → Apps → Manage apps → scroll down to locate AdGuard, set Autostart to “On”.  Scroll down to Battery saver, tap it, and set to “No restrictions”.  In Other Permissions, set all possible permissions to “On” Run the Security app. Tap on the Gear icon at the top-right corner of the screen.  Tap Boost speed in Feature Settings.  Tap Lock apps.  In the Lock apps screen, set the toggle switch for the AdGuard app to On.  That’s all! You’ve successfully pinned the AdGuard app. "},{"title":"MIUI 12​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-12","content":"Go to Settings → Apps → Manage apps → AdGuard.  Set Autostart to “On”Set all possible permissions in Other Permissions to “On”Set Battery saver to No restrictions  Now launch the active apps manager by swiping up from the bottom of the screen and look for the AdGuard app.  Tap and hold it until a menu pops up. Select a lock icon.  The lock icon should appear above the app window.  "},{"title":"MIUI 10-11​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-10-11","content":"To let your app run successfully in the background, configure its settings as follows: Set Autostart to “On”  Settings → Battery &amp; performance → switch-off Battery saver function  Then open App battery saver settings → AdGuard → No restrictions  "},{"title":"All models​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#all-models","content":"The following steps should be performed on any Xiaomi device that keeps killing the AdGuard app: Power management​ Please enable: Settings → Advanced Settings → Battery manager → set Power plan to PerformanceDevice Settings → Advanced Settings → Battery Manager → Protected apps — AdGuard needs to be ProtectedDevice Settings → Apps → AdGuard → Battery → Power-intensive prompt and Keep running after screen offSettings → Additional Settings → Battery &amp; Performance → Manage apps’ battery usage and here: Switch Power Saving Modes to “Off”Choose the following options: Saving Power in The Background → Choose apps → AdGuard → Background Settings → No restrictions App battery saver​ Set Security → Battery → App Battery Saver → AdGuard to No restriction App pinning​ To set up AdGuard's background work for Xiaomi devices you should pay attention to Battery and Permissions. Tap the Recent tasks button and swipe AdGuard down to make options visible (as shown on the screenshot): Tap on the lock icon. This will stop Xiaomi from closing AdGuard automatically. It should look like this: Go to Battery Select the battery saver app Find and select AdGuard Set up the following Background settings: Go to Permissions Select Autostart Make sure that autostart function is enabled for AdGuard: "},{"title":"Samsung​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#samsung","content":"On many Samsung devices, any app that is unused for 3 days will not be able to start from background. You should turn off Adaptive battery and Put apps to sleep options wherever possible to prevent that. Note that after an app or OS update, these settings often revert to their default values and will need to be turned off again. "},{"title":"Android 11+​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-11","content":"On Android 11, Samsung will prevent apps (including AdGuard) from working in background by default unless you exclude them from battery optimizations. To make sure AdGuard will not get killed in the background: Lock AdGuard in Recent Open Recent apps.Find AdGuard.Long-press the icon of the AdGuard app. To keep AdGuard working properly: Go to Settings → Apps → AdGuard → Battery → Optimize battery usage In the drop-down menu, select All. Then find AdGuard on the list and set the state for it to Don’t optimize (on some models, there may be a switch that you need to toggle off). On some devices, the relevant setting may be named differently and be located in other places. Among the possible paths is: Settings → Apps → (⁝) menu → Special Access → Optimize battery usage → Find AdGuard on the list and uncheck it Disable automatic optimization. To do so: Open Battery → (⁝) menu → Choose Automation → Toggle off all of the settings there Again, the exact path may differ, for example on some devices you should go to: Phone Settings → Device care → Tap the (⁝) 3-dot menu → Advanced → Disable Auto optimization and Optimize settings If your phone has it, disable Adaptive battery: Open phone Settings → Battery → More battery settings → Toggle off Adaptive battery Disable Sleeping apps (the exact name of this setting and the path to it may vary depending on the device): Open phone Settings → Battery → Background usage limits → Disable Put unused apps to sleep "},{"title":"Android 9 & 10​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-9--10","content":"Go to Phone settings → Device care → Tap on the Battery item → (⁝) 3-dot menu → Settings and uncheck Put unused apps to sleep and Auto-disable unused apps. Check that Phone settings → Apps → Sleep as Android → Battery → Background restriction is set to App can use battery in background for AdGuard. Remove AdGuard from Sleeping apps. To do that: Go to Phone settings → Device care Tap Battery Tap the 3-dot menu → Settings Tap Sleeping apps Wake up AdGuard using the trashcan icon "},{"title":"Old Samsung devices​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#old-samsung-devices","content":"For early Samsung devices, there is no huge need for setting up the background operation, but if in your case the AdGuard app is getting closed or disappears from the recent tasks after a while, do the following: Tap the Recent tasks button, tap the Additional settings icon. It should look like this: Tap Lock Apps: Tap on the lock icon "},{"title":"Huawei​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei","content":"Huawei and their Android customization EMUI belongs to the most troublesome on the market with respect to non-standard background process limitations. On default settings, virtually all apps that work in background will face problems and ultimately break. "},{"title":"App Launch on some EMUI 8, 9 and 10 devices (Huawei P20, Huawei P20 Lite, Huawei Mate 10…)​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#app-launch-on-some-emui-8-9-and-10-devices-huawei-p20-huawei-p20-lite-huawei-mate-10","content":"This feature may or may not be available for all devices or may be labeled differently. Go to phone Settings → Battery → App launch Turn off Manage all automatically Set AdGuard to Manage manually and enable all toggles. Disable Startup manager that prevents apps from running automatically after the phone starts up. Go to Settings → All → Startup manager → Toggle AdGuard off Also for reliable background processes you may need to uninstall PowerGenie as detailed below. "},{"title":"EMUI 9+ devices and PowerGenie​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#emui-9-devices-and-powergenie","content":"note On phones with EMUI 9+ (Android P+) there is a task killer app called PowerGenie which forces to quit all apps not whitelisted by Huawei and does not give users any configuration options. See below how to uninstall it. Huawei is extremely inventive in breaking apps on their devices. In addition to all the non-standard power management measures described below, they introduced a task killer app built right into EMUI 9 on Android Pie. It is called PowerGenie and it kills all apps that are not on its whitelist. You cannot add custom apps on their pre-defined whitelist. This means there is no other way to achieve proper app functionality on Huawei than uninstalling PowerGenie. Unfortunately, this is a system app that can only be fully uninstalled using ADB (Android Debug Bridge). Source XDA forum. You need to: It is not confirmed, but it might be possible to just disable PowerGenie in Phone settings → Apps. If this setting is present in your device's settings, you may skip the following steps. However, it would need to be re-applied every time you reboot your device. If there is no such setting, follow this instruction: Install ADB on your computer; Connect your phone with a data cable; Enable Developer options; Enable USB debugging within Developer options on your phone; Run the following commands on your computer: adb shell pm uninstall --user 0 com.huawei.powergenie adb shell pm uninstall -k --user 0 com.huawei.android.hwaps If AdGuard keeps getting killed, also try running adb shell pm stopservice hwPfwService "},{"title":"EMUI 6+ devices (and some EMUI 5 devices)​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#emui-6-devices-and-some-emui-5-devices","content":"Phone settings → Advanced Settings → Battery manager → Power plan set to Performance;Phone Settings → Advanced Settings → Battery Manager → Protected apps — set AdGuard as Protected;Phone Settings → Apps → Your app → Battery → Power-intensive prompt [uncheck] and Keep running after screen off [check];Phone settings → Apps → Advanced (At the bottom) → Ignore optimizations → Press Allowed → All apps → Find AdGuard on the list and set to Allow. Huawei P9 Plus​ Open device settings → Apps → Settings → Special access → choose Ignore battery optimization → select Allow for AdGuard. "},{"title":"Huawei P20, Huawei Honor 9 Lite and Huawei Mate 9 Pro​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei-p20-huawei-honor-9-lite-and-huawei-mate-9-pro","content":"Open device settings → Battery → App launch → set AdGuard to Manage manually and make sure everything is turned on. "},{"title":"Huawei P20, Huawei P20 Lite, Huawei Mate 10​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei-p20-huawei-p20-lite-huawei-mate-10","content":"Phone settings → Battery → App launch → set AdGuard to Manage manually and make sure everything is turned on. Also for reliable background processes you may need to uninstall PowerGenie as described above. "},{"title":"Early Huawei​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#early-huawei","content":"Old Huawei devices are the easiest to set up, it is enough to perform two simple steps to lock AdGuard in the background so it won't be terminated by battery saving or background killer process. Tap the Recent tasks button: Tap on the lock icon: Besides, to set up the background work of AdGuard more effectively, you should open device settings and do the following: Go to Settings → open Battery Manager → set Power plan to Performance;Then choose Protected apps in the Battery Manager and check if AdGuard is Protected;Go to Apps in the main settings and tap AdGuard there → choose Battery → enable Power-intensive prompt and Keep running after screen is off;Then in the Apps section open Settings (at the bottom) → Special access → choose Ignore battery optimization → press Allowed → All apps → find AdGuard on the list and set it to Deny. "},{"title":"Meizu​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#meizu","content":"Meizu has almost the same approach to the background process limitations as Huawei and Xiaomi. So you can avoid disabling the background work of AdGuard and any other app by adjusting the following settings: Go to Advanced Settings → open Battery Manager → set Power plan to Performance;Then choose Protected apps in the Battery Manager and check if AdGuard is Protected;Go to Apps section and tap AdGuard there → choose Battery → enable Power-intensive prompt and Keep running after screen is off. "},{"title":"Nokia​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia","content":"Nokia devices running Android 9+ have The Evenwell Power saver disabled, which was the main culprit for killing background processes. If AdGuard still gets killed on your Nokia phone, check out the legacy instruction. "},{"title":"Nokia 1 (Android Go)​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia-1-android-go","content":"Install ADB on your computer; Connect your phone with a data cable; Enable Developer options; Enable USB debugging within Developer options on your phone; Uninstall the com.evenwell.emm package via the following ADB commands: adb shell pm uninstall --user 0 com.evenwell.emm "},{"title":"Nokia 3.1 and 5.1​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia-31-and-51","content":"On these devices there is a task killer called DuraSpeed that terminates all background apps. It can't be uninstalled or disabled by regular means. These actions require ADB, and even then, when disabled, DuraSpeed will re-enable itself on reboot. You need a tasker app like MacroDroid for automatic DuraSpeed's disabling. Install ADB on your computer; Connect your phone with a data cable; Enable Developer options; Enable USB debugging within Developer options on your phone; Grant MacroDroid (or your choice of automation app) the ability to write to the global settings store by entering this command: adb shell pm grant com.arlosoft.macrodroid android.permission.WRITE_SECURE_SETTINGS Create a task triggered at Device Boot that performs the following: System Setting: type Global, name setting.duraspeed.enabled, value -1System Setting: type System, name setting.duraspeed.enabled, value -1System Setting: type Global, name setting.duraspeed.enabled, value 0System Setting: type System, name setting.duraspeed.enabled, value 0 note You need both Global and System type settings. The screenshot shows only Global as an example. ::: "},{"title":"Other Nokia models​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#other-nokia-models","content":"Go to phone Settings → Apps → See all apps. Tap on the right top corner menu → Show system. Find Power saver app on the list, select it and tap Force close. It will remain stopped for a while but will restart at some point. From now on, AdGuard should work normally and use the standard Android battery optimizations until Power Saver restarts. An alternative, more permanent solution for more tech-savvy users: Install ADB on your computer; Connect your phone with a data cable; Enable Developer options; Enable USB debugging within Developer options on your phone; Uninstall the com.evenwell.powersaving.g3 package via the following ADB commands: adb shell pm uninstall --user 0 com.evenwell.powersaving.g3 "},{"title":"Oppo​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#oppo","content":"Sometimes background services are being killed (including accessibility services, which then need re-enabling) when you turn the screen off. So far, a workaround for this is: Go to Security Centre → tap Privacy Permissions → Startup manager and allow AdGuard app to run in background. Other solutions: Pin AdGuard to the recent apps screenEnable AdGuard in the app list inside the security app’s “startup manager” and “floating app list” (com.coloros.safecenter / com.coloros.safecenter.permission.Permission)Turn off battery optimizations "},{"title":"OnePlus​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#oneplus","content":"Devices with OxygenOS on board are the most problematic, with its OS-specific cache cleaning and free RAM, including OS optimization. In addition, OxygenOS can interrupt the AdGuard's work if you do not use it for a while. To avoid these unwanted consequences, follow these steps. "},{"title":"Locking the app​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#locking-the-app","content":"Go to Settings Battery → Battery optimization Find AdGuard Tap on it and select Don't optimize option Tap Done to save Open recent apps menu (as showed on this screenshot): Lock AdGuard app: caution On some OnePlus phones there is also a thing called App Auto-Launch and Deep Optimization which essentially prevents apps from working in the background. Please disable it for AdGuard. "},{"title":"Battery optimization​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#battery-optimization","content":"Open device settings → Battery → Battery optimization → switch to the All apps list (top menu) → choose AdGuard → activate Don’t optimize Open device settings → Battery → Battery Optimization → (⁝) three-dot menu → Advanced Optimization → Disable Deep Optimization "},{"title":"App Auto-Launch​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#app-auto-launch","content":"App Auto-Launch (on some OnePlus phones) essentially prevents apps from working in the background. Please disable it for AdGuard. "},{"title":"Enhanced / Advanced optimization​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#enhanced--advanced-optimization","content":"For OnePlus 6 and above: Open System settings → Battery → Battery optimization → (⁝) three-dot menu → Advanced optimizationDisable Deep optimization / Adaptive BatteryDisble Sleep standby optimization. OnePlus tries to learn when you are usually asleep, and in those times it will then disable the phone’s network connections. This setting will prevent push notifications from being delivered. For OnePlus below 6: Turn off System settings → Battery → Battery optimization → (⁝) three-dot menu → Enhanced optimization. "},{"title":"Recent apps clearing behaviour​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#recent-apps-clearing-behaviour","content":"Normally when you swipe an app away, it won’t close. On OnePlus this may however work in a different way. Recent app clear behaviour manager might be set up in a way that swiping the app to close will kill it. To return it to the “normal” mode: Go to Settings → Advanced → Recent app management → Switch to Normal clear "},{"title":"Sony​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#sony","content":"Sony was the first mobile OS developer to introduce non-standard background process optimization. It is called Stamina mode and it instantly breaks all background processes if enabled. To solve this: Go to Settings → Battery → Disable STAMINA mode  On Android 11+, on the same screen with STAMINA mode, there is a setting called Adaptive battery, you should disable it too. You also need to be set AdGuard as Excepted from Power-saving feature: System settings ​→ Apps &amp; Notifications ​→ Advanced ​→ Special app access ​→ Power saving feature → Switch AdGuard to Excepted "},{"title":"Wiko​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#wiko","content":"Wiko devices are problematic in terms of non-standard background process optimizations. To let AdGuard work in background, do the following: Go to Phone Assistant → Battery → turn off Eco ModeGo back and go to Manual modeTap on the Gear icon on top right → Background apps whitelist → Select AdGuard "},{"title":"Android stock devices Pixel/Nexus/Nubia/Essential​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-stock-devices-pixelnexusnubiaessential","content":"Android stock OS normally does not conflict with apps working in the background, but if you are facing any issues you will need to switch on the Always-on VPN mode. Go to Settings → Network and Internet Tap VPN and choose AdGuard Set up Always-on VPN mode "},{"title":"배터리 및 트래픽 소비 문제","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/battery/","content":"","keywords":""},{"title":"자체 배터리 사용 통계 화면​","type":1,"pageTitle":"배터리 및 트래픽 소비 문제","url":"adguard-for-android/solving-problems/battery/#자체-배터리-사용-통계-화면","content":"You can access it by navigating to Statistics → Battery usage.  Inside you will find a chart that shows the AdGuard battery resource consumption within the last 24 hours, with an option to get more detailed hour-to-hour data by tapping on the chart. 또한 데이터의 숫자 분석과 간단한 기술 설명도 있습니다. "},{"title":"AdGuard는 실제로 얼마나 많은 배터리를 소비합니까?​","type":1,"pageTitle":"배터리 및 트래픽 소비 문제","url":"adguard-for-android/solving-problems/battery/#adguard는-실제로-얼마나-많은-배터리를-소비합니까","content":"First, let us lay down a bit of theory and links with necessary data. Android derives traffic consumption judging on so-called Power Profile, which is given by every manufacturer: https://source.android.com/devices/tech/power/values.html Main part of Power Profile is a set of values in mAh which define battery consumption for every component of the device: https://source.android.com/devices/tech/power/values.html For example, from the table above: wifi.active= 31mA additional consumption in mAh caused by WiFi data exchange. radio.active= 100-300mA additional consumption in mAh caused by data exchange over Mobile network. cpu.active= 100-200mA additional consumption in mAh caused by CPU load. AdGuard by itself almost doesn't consume any traffic, so for the sake of evaluating power consumption let's get rid of 'Mobile/Wi-Fi packets' and stick to 'CPU'. Formula to calculate the consumption: “CPU TIME (ms)” X “cpu.active” / (60 60 1000) = “POWER USE mAh” Let's put real numbers into this formula. Let's take CPU total from the second screenshot and convert into milliseconds: 506000 A coefficient cpu.active for 2GHz will be roughly equal to 225mAh Final result: 506000 225 / (60 60 * 1000) = 31,625mAh "},{"title":"결론​","type":1,"pageTitle":"배터리 및 트래픽 소비 문제","url":"adguard-for-android/solving-problems/battery/#결론","content":"Real consumption is several times less than it is shown in Android statistics. Instead of 220mAh it should be somewhere around 31-40mAh. On the other hand, browser's consumption should be not 66mAh, but ~200mAh. "},{"title":"Known compatibility issues with Android apps","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/compatibility-issues/","content":"","keywords":""},{"title":"VPN apps​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#vpn-apps","content":"If you are using AdGuard in the Local VPN filtering mode, you cannot run other VPN apps at the same time. To solve this problem, we suggest that you: Use AdGuard VPN — its Integrated mode allows two apps to operate simultaneouslyConfigure your VPN app to act as an outbound proxy and set up a local outbound proxy using the parameters from the third-party appSwitch to the Automatic proxy mode. When you do that, AdGuard will no longer use local VPN and will reconfigure iptables insteadSwitch to the Manual proxy mode. To do this, go to Settings → Filtering → Network → Routing mode Compatibility The Automatic proxy mode is only accessible on rooted devices. For Manual proxy, rooting is required on devices running on Android 10 or later. "},{"title":"Private DNS​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#private-dns","content":"The Private DNS feature was introduced in Android Pie. Before version Q, Private DNS didn't break AdGuard DNS filtering logic and the DNS forwarding through AdGuard worked normally. But starting from version Q, the presence of Private DNS forces apps to redirect traffic through the system resolver instead of AdGuard. See Android devs blog for more details. To solve the problem with Private DNS, use the $network rule Some device manufacturers keep Private DNS settings hidden and set 'Automatic' mode as a default one. Thus, disabling Private DNS is impossible but we can make the system think that the upstream is not valid by blocking it with a $network rule. For instance, if the system uses Google DNS by default, we can add rules |8.8.4.4^$network and |8.8.8.8^$network to block Google DNS. "},{"title":"Unsupported browsers​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#unsupported-browsers","content":""},{"title":"UC Browsers: UC Browser, UC Browser for x86, UC Mini, UC Browser HD​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#uc-browsers-uc-browser-uc-browser-for-x86-uc-mini-uc-browser-hd","content":"To be able to filter HTTPS traffic, AdGuard requires the user to add a certificate to the device's trusted user certificates. Unfortunately, UC-family browsers don't trust user certificates, so AdGuard cannot perform HTTPS filtering there. To solve this problem, move the certificate to the system certificate store Compatibility Requires root access. "},{"title":"Dolphin Browser: Dolphin Browser, Dolphin Browser Express​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#dolphin-browser-dolphin-browser-dolphin-browser-express","content":"AdGuard cannot filter its traffic when operating in the Manual proxy mode because this browser ignores system proxy settings. Use the Local VPN filtering mode to solve this problem "},{"title":"Opera mini: Opera mini, Opera mini with Yandex​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#opera-mini-opera-mini-opera-mini-with-yandex","content":"Opera mini drives traffic through a compression proxy by default and AdGuard is not able to decompress and filter it at the same time. There is no solution at this moment "},{"title":"Puffin Browser: Puffin Browser, Puffin Browser Pro​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#puffin-browser-puffin-browser-puffin-browser-pro","content":"Puffin Browser drives traffic through a compression proxy by default and AdGuard is not able to decompress and filter it at the same time. There is no solution at this moment "},{"title":"Problems caused by extending restricted settings","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/extending-restricted-settings/","content":"Problems caused by extending restricted settings info This article is about AdGuard for Android, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app In an effort to improve user privacy, Google has expanded the restriction settings in Android 15. More settings, such as App usage access, now require an additional permission to be enabled. Since the Firewall and Detect Samsung Pay features require the App usage access setting to be enabled for them to work properly, you may have experienced problems using them. To resolve these issues, please follow the steps below: note AdGuard has a strict no-logging policy, which means that we do not collect your data or send it to third parties. We only ask for access to data without which the application cannot function. On your Android device, open the Settings app.Tap Apps.Tap AdGuard If you can't find it, first tap See all apps or App info. Tap More (⁝) → Allow restricted settings. Follow the on-screen instructions. All done! Now the Firewall and Detect Samsung Pay features will work correctly.","keywords":""},{"title":"How to collect debug logs","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/log/","content":"","keywords":""},{"title":"Collecting debug log​","type":1,"pageTitle":"How to collect debug logs","url":"adguard-for-android/solving-problems/log/#collecting-debug-log","content":"디버그 로그를 수집하여 저희에게 보내려면 다음 단계를 수행하십시오. Go to Settings → General → Advanced.Tap Logging level and set it to Debug.Reproduce the problem and try to remember the exact time it occurred.Wait a while, then return to Settings and choose the Support tab. Tap Report a bug and complete the required fields. Don't forget to check the Send app logs and system info checkbox. Finally tap Send. If you're interested in following the resolution of your issue and engaging in a dialogue with the developers, we recommend that you take the following steps after completing the first three: Wait a while, then return to the Advanced screen and export logs via Export logs and system info. Then report a bug on GitHub by following these instructions.After creating an issue on GitHub, send the log file to devteam@adguard.com. Include the time of the bug and attach a link to your issue or its number (it appears as #number next to the title). Alternatively, you can upload the log file to Google Drive and send it to devteam@adguard.com. Add the file link to your GitHub issue "},{"title":"Moving the CA certificate to the system store on rooted devices","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/","content":"","keywords":""},{"title":"How to install AdGuard's certificate to the system store​","type":1,"pageTitle":"Moving the CA certificate to the system store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#how-to-install-adguards-certificate-to-the-system-store","content":"Open AdGuard → Settings → Filtering → Network → HTTPS filtering → Security certificates. If you don't have any certificate yet, install the AdGuard Personal CA into the user store. This will allow AdGuard to filter HTTPS traffic in browsers. Install the AdGuard Intermediate CA into the user store. You'll need it to run the adguardcert Magisk module that allows you to move certificates to the system store. Install the latest release of the adguardcert Magisk module. Open Magisk → Modules → Install from storage and select the downloaded adguardcert file. This will move the AdGuard Personal CA from the user store to the system store. Tap Reboot. After the transfer, the AdGuard Personal CA in the system store will allow you to filter HTTPS traffic in apps, while the AdGuard Intermediate CA in the user store will allow you to filter HTTPS traffic in Chromium-based browsers (see below why). "},{"title":"Known issues with Chrome and Chromium-based browsers​","type":1,"pageTitle":"Moving the CA certificate to the system store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#known-issues-with-chrome-and-chromium-based-browsers","content":"Chrome and other Chromium-based browsers require Certificate Transparency (CT) logs for certificates located in the system store. CT logs don't contain information about certificates issued by HTTPS-filtering apps. Therefore, AdGuard requires an additional certificate in the user store to filter HTTPS traffic in these browsers. "},{"title":"Bromite browser​","type":1,"pageTitle":"Moving the CA certificate to the system store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#bromite-browser","content":"In addition to the above issue, Bromite doesn't trust certificates in the user store by default. To filter HTTPS traffic there, open Bromite, go to chrome://flags, and set Allow user certificates to Enabled. This applies to both rooted and non-rooted devices. "},{"title":"Firefox 브라우저의 인증서 신뢰 문제","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/firefox-certificates/","content":"","keywords":""},{"title":"Method 1​","type":1,"pageTitle":"Firefox 브라우저의 인증서 신뢰 문제","url":"adguard-for-android/solving-problems/firefox-certificates/#method-1","content":"note 이 방법은 Firefox Nightly 90.0a1 이상 버전에서만 사용될 수 있습니다. Firefox의 베타 및 일반 버전이 v90에 도달하면 이 방법을 해당 버전에도 적용할 수 있습니다. Firefox Nightly가 AdGuard 인증서를 신뢰하도록 하려면 다음 단계를 따르십시오. Run the browser. Go to Settings → About Firefox. Tap the Firefox logo five times. Navigate to Settings → Secret Settings. Toggle Use third party CA certificates. "},{"title":"Method 2​","type":1,"pageTitle":"Firefox 브라우저의 인증서 신뢰 문제","url":"adguard-for-android/solving-problems/firefox-certificates/#method-2","content":"note This method will only work on rooted devices. Install and configure ADB; On the Windows platform, Samsung owners may need to install this utility. Activate the developer mode and enable USB debugging: Open the Settings app on your phone;Go to System section (last item in the settings menu). In this section, find the sub-item About phone;Tap the Build number line 7 times. After that, you will receive a notification that You are now a developer (If necessary, enter an unlock code for the device);Open System Settings → Developer Options → Scroll down and enable USB debugging → Confirm debugging is enabled in the window Allow USB debugging after reading the warning carefully. Install the Firefox browser (release version); Open the AdGuard settings (gear icon in the bottom right corner) → Filtering → Network → HTTPS filtering → Security certificate → Instructions for Firefox → Install for old versions; Open the folder data/data/org.mozilla.firefox/files/mozilla using adb shell su and cd data/data/..., then browse to the folder named xxxxxxx.default and memorize its name; In the specified folder we are interested in two files: cert9.dbkey4.db We need to move these files to a folder of the browser where the security certificate issue occurred: data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyy.default. The full command will look like this: adb shell sucp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxxx.default/cert9.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.defaultcp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxxx.default/key4.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.default In case you received the system notification permission denied, you should first move the specified files to the permission-free directory. And after that you should move them to the necessary folder in your Firefox browser. The full command should look something like this: adb shell sucp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxx.default/cert9.db sdcard/Downloadcp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxx.default/key4.db sdcard/Downloadcp -R sdcard/Download/cert9.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.defaultcp -R sdcard/Download/key4.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.default If adb shell su does not work, you should try adb shell initially, and then su. "},{"title":"HAR 파일 수집 방법","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/har/","content":"","keywords":""},{"title":"HAR 파일이란 무엇인가요?​","type":1,"pageTitle":"HAR 파일 수집 방법","url":"adguard-for-android/solving-problems/har/#har-파일이란-무엇인가요","content":"HAR(HTTP ARchive) 형식은 웹 브라우저와 사이트 간의 상호 작용을 로깅하기 위한 JSON 형식의 아카이브 파일로, 브라우저가 불러오는 웹 페이지에 대한 자세한 정보를 내보내는 데 이용되는 HTTP 트랜잭션에 대한 보관 데이터를 정의합니다. HAR 파일 형식에 대한 자세한 내용은 softwareishard.com에서 확인하실 수 있습니다. "},{"title":"HAR 파일 수집 방법​","type":1,"pageTitle":"HAR 파일 수집 방법","url":"adguard-for-android/solving-problems/har/#har-파일-수집-방법","content":"간혹 재생산하기 어려운 특정 광고를 차단하기 위해 HAR 파일 분석이 필요합니다. HAR 파일을 수집하려면 다음 단계를 따르십시오. Open AdGuard and go to Settings (⚙ icon in the lower right corner).Tap General →Advanced → Low-level settings.Scroll down and activate Capture HAR in the Filtering section.Open the app and perform the necessary actions to reproduce the problem.Turn Capture HAR off.Go back to Advanced.Tap Export logs and system info → Allow (if necessary) → Save. .har 파일을 AdGuard 지원 팀에 보내 주세요. note Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message. "},{"title":"How to analyze HAR files​","type":1,"pageTitle":"HAR 파일 수집 방법","url":"adguard-for-android/solving-problems/har/#how-to-analyze-har-files","content":"다음은 HAR 파일을 분석하기 위한 몇 가지 소스입니다. HTTP 아카이브 뷰어 마스터는 HAR 분석기 도구로, HTTP 추적 도구로 생성 된 HTTP 아카이브 (HAR) 로그 파일을 시각화합니다.Fiddler는 웹 디버깅 프록시로, 컴퓨터와 인터넷 간의 모든 HTTP(S) 트래픽을 캡처, 검사, 모니터링하고 모의 요청을 수행하고 네트워크 문제를 진단할 수 있습니다. "},{"title":"How to get system logs","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/logcat/","content":"","keywords":""},{"title":"기기에서 버그 보고서 받기​","type":1,"pageTitle":"How to get system logs","url":"adguard-for-android/solving-problems/logcat/#기기에서-버그-보고서-받기","content":"기기에서 직접 버그 보고서를 받으려면 다음을 수행하십시오. Be sure you have Developer options enabled. In Developer options, tap Take bug report. Select the type of bug report you want and tap Report. note After a moment, you will see a notification that the bug report is ready (see Figure 2). ::: ![Bug report *mobile](https://cdn.adtidy.org/public/Adguard/kb/newscreenshots/En/Android3.1/bugreporteen.png)  To share the bug report, tap the notification. Send this log to our support team. note Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message to support. ::: "},{"title":"Capture a bug report via Logcat​","type":1,"pageTitle":"How to get system logs","url":"adguard-for-android/solving-problems/logcat/#capture-a-bug-report-via-logcat","content":"On devices with Android 7 and below, it is not possible to send a bug report automatically. Then you can capture it manually via Logcat — a standard Android command-line tool that dumps a log of system messages. Follow this instruction: Part #1: prepare the device Switch device to the developer mode. To do this: go to Settings → About → tap Build Number 7 times. Go to Developer Options. Enable USB debugging. Increase Logger buffer sizes to 4 MB per log buffer. 4 MB should be enough for storing the logs we need until you're able to do the second part (getting the log from the device); Part #2: reproduce the problem It is important to reproduce the problem after you're done with the first part. 문제를 재현합니다. Remember/write down the date and time of reproduction and include it in the email to our support later. Part #3: get the log Connect your device to a PC with a USB cable. Download Android SDK Platform Tools. Choose the appropriate download link for your OS from the Downloads section. Once you tap the link, a ZIP file will be downloaded. You can extract the ADB (Android Debug Bridge) files from the ZIP file and store them wherever you want. Test whether ADB is working properly: connect your Android device to your computer using a USB cable, open the Command Prompt, PowerShell or Terminal and run the following command: adb devices An example of a successful result: Then run the following command (insert the relevant path): adb logcat -v threadtime -d &gt; C:\\Program Files\\platform-tools\\logs.txt Email the created txt file as well as the time the problem was reproduced (from part #2) to our support team at support@adguard.com. "},{"title":"Alternative way for ROOT users​","type":1,"pageTitle":"How to get system logs","url":"adguard-for-android/solving-problems/logcat/#alternative-way-for-root-users","content":"Download and run Logcat. Choose Record in the menu. Choose a name for a log file or just press OK. Now you can press Home button, CatLog will continue recording the log in background. Reproduce the issue. Open CatLog and press Stop record in the menu. Send this log to our support team. note Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message to support. "},{"title":"Problems caused by multiple user profiles","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/multiple-user-profiles/","content":"","keywords":""},{"title":"Problems caused by multiple user profiles​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#problems-caused-by-multiple-user-profiles","content":"On Android 9 and later, if AdGuard is installed for more than one user profile on your device, you may encounter problems when uninstalling the app. When you uninstall AdGuard from one user profile, the app will still appear on the app list, but you won't be able to uninstall or reinstall it. This happens because AdGuard is installed for a different user profile on the device. If you try to reinstall AdGuard after an unsuccessful removal attempt, you will see the error message “You can't install the app on your device”. To solve this problem, you need to uninstall the application for all users: go to Settings → All apps → AdGuard. Tap the three-dot menu in the top right corner and select Uninstall for all users.  "},{"title":"제한 모드 상태에서 프로필 사용으로 인한 문제​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#제한-모드-상태에서-프로필-사용으로-인한-문제","content":"Android 7 이상 운영 체제를 실행하는 휴대폰, 태블릿 또는 TV 사용자는 제한 모드 프로필 사용 시 문제를 겪을 수 있습니다. 제한 모드 프로파일을 사용하는 경우 VPN을 사용하는 다른 응용 프로그램과 마찬가지로 AdGuard의 VPN 트래픽 필터링 선택에 제한이 발생합니다. 결과적으로 AdGuard가 로컬 VPN 모드에서 보호를 실행할 수 없게 됩니다. 또한 듀얼 앱/듀얼 메신저 프로필을 사용할 때 이 문제가 발생할 수 있습니다. 해당 문제를 해결하는 방법은 다음과 같습니다. "},{"title":"솔루션​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#솔루션","content":"문제를 해결하는 세 가지 방법이 있습니다. "},{"title":"옵션 1: ADB를 사용하여 AdGuard에 권한 부여​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#옵션-1-adb를-사용하여-adguard에-권한-부여","content":"note This approach is available starting from AdGuard v3.5 nightly 6. 이전 버전을 사용하면 여기에서 Nightly 버전 다운로드가 가능합니다. Activate the developer mode and enable USB debugging: Open the Settings app phone;Go to System section (last item in the settings menu). In this section, find the sub-item About phone;Tap the Build number line 7 times. After that, you will receive a notification that You are now a developer (If necessary, enter an unlock code for the device);Open System Settings → Developer Options → Scroll down and enable USB debugging → Confirm debugging is enabled in the window Allow USB debugging after reading the warning carefully. note 어려움이나 추가 질문이있는 경우 여기에서 자세한 지침을 확인할 수 있습니다. ::: Install and configure ADB; On the Windows platform, Samsung owners may need to install this utility. USB 케이블을 사용하여 ADB를 설치한 컴퓨터 또는 노트북에 기기를 연결합니다. PC에서 명령줄을 엽니다. Windows를 사용하는 경우 cmd.exemacOS를 사용하는 경우 터미널 adb shell pm grant com.adguard.android android.permission.INTERACT_ACROSS_USERS 명령을 입력하고 엔터를 누릅니다. "},{"title":"옵션 2: 제한된 사용자 계정 삭제​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#옵션-2-제한된-사용자-계정-삭제","content":"Android 기기에서 사용자 계정을 관리하는 방법은 여기에서 확인할 수 있습니다. note In some cases restricted user accounts are created implicitly and cannot be removed. 제한된 사용자 계정이 암묵적으로 생성되어 삭제할 수 없습니다. 이러한 경우 문제를 해결하는 방법은 아래에서 확인할 수 있습니다. "},{"title":"옵션 3: 로컬 HTTP 프록시 모드에서 AdGuard 사용 (루트 필요)​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#옵션-3-로컬-http-프록시-모드에서-adguard-사용-루트-필요","content":"To enable this mode, open AdGuard Settings → Network → Filtering method → Local HTTP proxy "},{"title":"LG 및 삼성 기기​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#lg-및-삼성-기기","content":"LG 또는 삼성 휴대폰 소유자도 비슷한 문제를 맞닥트릴 수 있습니다. 이 경우 제한된 프로필을 자동으로 생성하는 듀얼 앱/듀얼 메신저 기능을 사용하기 때문에 해당 문제가 발생합니다. 문제를 해결하려면 이 기능을 비활성화해야 합니다. "},{"title":"Samsung​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#samsung","content":"설정을 엽니다.고급을 누릅니다.아래로 스크롤해 듀얼 메신저를 누릅니다.Disable the Dual messenger for all apps;5분 동안 기기를 잠금 상태로 유지합니다.화면 잠금을 해제하고 VPN 프로필을 다시 생성합니다. "},{"title":"LG​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#lg","content":"설정을 엽니다.일반 탭을 선택합니다.아래로 스크롤한 다음 듀얼 앱를 누릅니다.Remove all apps from the list;기기를 재부팅합니다. "},{"title":"Certificate installation on devices with Android 11+","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/manual-certificate/","content":"Certificate installation on devices with Android 11+ :::정보 This article is about AdGuard for Android, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app ::: To be able to filter HTTPS traffic (which is extremely important as most ads use HTTPS), AdGuard needs to install a certificate into your device's user storage. On older versions of the Android OS this was done automatically, but on Android 11 and later users have to install it manually. Follow these steps to install AdGuard certificate: When you see the HTTPS filtering is off notification, tap Enable. Then you'll be presented with three screens that explain: Why filter HTTPS trafficThe safety of this filtering processThe necessity of AdGuard certificate Consecutively tap Next → Next → Save certificate. Tap Save at the bottom of the opened Download folder. After saving, tap Open Settings. Tap More security settings → Encryption &amp; credentials → Install a certificate → CA certificate. You might see a warning. If so, tap Install anyway and enter your PIN if necessary. Select the AdGuard certificate file. Its name should look like adguard_1342_020322.crt. You're all set! Once the certificate is installed successfully, you've enabled HTTPS filtering. Please note that the steps provided are based on the Google Pixel 7 smartphone. If you're using a different Android device, the exact menu names or options might vary. For easier navigation consider searching for a certificate by entering “certificate” or “credentials” in the settings search bar. If you experience issues during the manual certificate installation (for example, you installed the certificate, but the application keeps ignoring it), you can follow one of the solutions below. Restart AdGuard.Try to install the correct certificate (AdGuard Personal CA) one more time. If you still encounter a problem and can't install the certificate, please contact our support team at support@adguard.com.","keywords":""},{"title":"Low-level settings guide","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"How to reach Low-level settings​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#how-to-reach-low-level-settings","content":"caution Changing Low-level settings can cause problems with the performance of AdGuard, may break the Internet connection or compromise your security and privacy. This section should only be opened if you know what you are doing, or you were asked to do so by our support team. To go to Low-level settings, open the AdGuard app and tap the gear icon in the lower right corner of the screen. Then choose General → Advanced → Low-level settings. "},{"title":"Low-level settings​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#low-level-settings","content":"For AdGuard v4.0 for Android we've completely redesigned the low-level settings: divided them into thematic blocks, made them clearer, added validation of entered values and other safety valves, got rid of some settings, and added others. "},{"title":"DNS protection​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#dns-protection","content":"Fallback upstreams​ Here you can specify the fallback DNS resolver(s) to be used if the configured server is unavailable. There are three options: Automatic DNS, None, and Custom DNS. If no fallback server is specified, the Automatic DNS — the system DNS or AdGuard DNS — will be used. None means no fallback at all. Selecting Custom DNS allows you to list IPv4 and IPv6 server addresses to use as upstreams. Fallback domains​ Here you can list domains that will be forwarded directly to fallback upstreams if they exist. Detect search domains​ If this setting is enabled, AdGuard will detect search domains and automatically forward them to fallback upstreams. Bootstrap upstreams​ Bootstrap DNS for DoH, DoT, and DoQ servers. The Automatic DNS — the system DNS or AdGuard DNS — is used by default. By selecting Custom DNS, you can list IPv4 and IPv6 server addresses to use as bootstrap upstreams. adblock-style 규칙을 위한 차단 모드​ Here you can specify the response type for domains blocked by DNS rules based on adblock rule syntax (for instance, ||example.org^). Respond with REFUSEDRespond with NXDOMAINRespond with Custom IP address (IPv4 and IPv6 addresses can be specified here) 호스트 규칙에 대한 차단 모드​ Here you can specify the response type for domains blocked by DNS rules based on hosts rule syntax (for instance, &lt;ip&gt; &lt;domain&gt; 0.0.0.0 example.com). Respond with REFUSEDRespond with NXDOMAINRespond with Custom IP address (IPv4 and IPv6 addresses can be specified here) DNS request timeout​ 이 필드에서 AdGuard가 폴백 DNS 서버를 사용하기 전에 선택한 DNS 서버의 응답을 기다리는 시간(밀리초)을 지정할 수 있습니다. 이 필드를 채우지 않거나 잘못된 값을 입력하면 5000이라는 값이 사용됩니다. 차단된 TTL 응답​ Here you can specify the TTL (time to live) value that will be returned in response to a blocked request. DNS cache size​ Here you can specify the maximum number of cached responses. Default value is 1000. ECH blocking​ If enabled, AdGuard strips Encrypted Client Hello parameters from DNS responses. Ignore unavailable outbound proxy​ If this setting is enabled, AdGuard will send DNS requests directly when the outbound proxy is unavailable. Try HTTP/3 for DNS-over-HTTPS upstreams​ If this setting is enabled, AdGuard will use HTTP/3 to speed up DNS query resolution for DoH upstreams. Otherwise, AdGuard will revert to its default behavior and use HTTP/2 to send all DNS requests for DNS-over-HTTPS. SERVFAIL failure response​ If this setting is enabled and all upstreams, including fallback ones, fail to respond, AdGuard will send a SERVFAIL response to the client. Use fallback for non-fallback domains​ If this setting is enabled, AdGuard will use fallback upstreams for all domains. Otherwise, fallback upstreams will only be used for fallback domains and search domains if the corresponding option is enabled. Validate DNS upstreams​ If this setting is enabled, AdGuard will test DNS upstreams before adding or updating custom DNS servers. Filter secure DNS​ If this setting is on, AdGuard will apply all enabled DNS filters and DNS user rules to encrypted DNS-over-HTTPS (DoH) traffic and not only to plain DNS. DoH traffic mostly comes from Chrome and other browsers that have a Secure DNS (or similar) setting. You can use Filter secure DNS in two different modes: Filter on the fly. In this mode, AdGuard applies all enabled DNS filters and DNS user rules to DoH traffic but doesn’t redirect it to the local DNS proxy. If a DNS server is specified in the browser’s settings, this server will handle the DoH traffic for this browser Redirect to DNS proxy. In this mode, AdGuard applies all enabled DNS filters and DNS user rules to DoH traffic by redirecting it to the local DNS proxy. The DNS server specified in the AdGuard’s DNS settings will handle all DoH traffic "},{"title":"Filtering​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#filtering","content":"Capture HAR​ If this setting is enabled, AdGuard will capture HAR files. It will create a directory named “har” inside the app cache directory and add there information about all filtered HTTP requests in HAR 1.2 format that can be analyzed with the Fiddler program. Use it only for debugging purposes! "},{"title":"HTTPS 필터링​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#https-필터링","content":"Encrypted Client Hello​ 모든 암호화된 인터넷 연결에는 암호화되지 않은 부분이 있습니다. 이것은 연결하려는 서버의 이름이 포함된 첫 번째 패킷입니다. Encrypted Client Hello 기술은 이 문제를 해결하고 암호화되지 않은 마지막 비트의 정보를 암호화합니다. To benefit from it, enable the Encrypted Client Hello option. It uses a local DNS proxy to look for the ECH configuration for the domain. ECH 구성이 발견되면 ClientHello 패킷이 암호화됩니다. OCSP checking​ If this setting is enabled, AdGuard will perform asynchronous OCSP checks to get the revocation status of a website's SSL certificate. If an OCSP check is completed within the required timeout, AdGuard will immediately block the connection if the certificate is revoked or establish the connection if the certificate is valid. If the verification takes too long, AdGuard will allow the connection while continuing to check the certificate status in the background. 인증서가 해지되면 도메인에 대한 현재 및 향후 연결이 차단됩니다. Redirect DNS-over-HTTPS requests​ If this setting is enabled, AdGuard will redirect DNS-over-HTTPS requests to the local DNS proxy in addition to plain DNS requests. We recommend disabling fallback upstreams and using only encrypted DNS servers to maintain privacy. Filter HTTP/3​ If this setting is enabled, AdGuard will filter requests sent over HTTP/3 in addition to other request types. "},{"title":"Outbound proxy​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#outbound-proxy","content":"Show the Filter DNS requests setting​ If this is enabled, the Filter DNS requests switch will be displayed in the Add proxy server dialog. Use it to enable filtering of DNS requests passing through the specified proxy. "},{"title":"Protection​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#protection","content":"Port ranges​ Here you can specify port ranges that should be filtered. Log removed HTML events​ If this setting is enabled, AdGuard will record blocked HTML elements in Recent activity. Scriplet debugging​ If this setting is enabled, debugging in scriptlets will be activated, and the browser log will record when scriptlet rules are applied. Excluded apps​ Here you can list package names and UIDs that you want to exclude from AdGuard protection. QUIC bypass packages​ Here you can specify package names for which AdGuard should bypass QUIC traffic. Reconfigure Automatic proxy when network changes​ If this setting is enabled, the AdGuard protection will restart to reconfigure the automatic proxy settings when your device connects to another network. This setting only applies if Routing mode is set to Automatic proxy. IPv6 filtering​ If this setting is enabled, AdGuard will filter IPv6 networks if an IPv6 network interface is available. IPv4 ranges excluded from filtering​ Filtering for the IPv4 ranges listed in this section is disabled. IPv6 ranges excluded from filtering​ Filtering for the IPv6 ranges listed in this section is disabled. TCP keepalive for outgoing sockets​ If this setting is enabled, AdGuard will send a keepalive probe after the specified time period to ensure that the TCP connection is alive. Here, you can specify the idle time before starting keepalive probes and the time between keepalive probes for an unresponsive peer. After a system-defined number of unsuccessful attempts to get a response from the server, the system automatically closes the TCP connection. "},{"title":"Local VPN settings​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#local-vpn-settings","content":"Recovery delay for revoked VPN​ Here you can set the time of a delay in milliseconds before AdGuard tries to restore VPN protection after it has been revoked by a third-party VPN app or by deleting the VPN profile. The default value is 5000 ms. Reschedule delay for revoked VPN recovery​ Here you can set the time of a delay in milliseconds before AdGuard reschedules the restoration of VPN protection after it has been revoked by a third-party VPN app or by deleting the VPN profile. The default value is 5000 ms. MTU​ Here you can set the maximum transmission unit (MTU) of the VPN interface. The recommended range is 1500-1900 bytes. Restore VPN automatically​ If this setting is enabled, AdGuard’s local VPN will be automatically re-enabled after being turned off due to network absence, tethering, or low-power mode. Packet capture (PCAP)​ If this setting is enabled, AdGuard will create a file timestamp.pcap (for instance, 1682599851461.pcap) in the app cache directory. This file lists all network packets transferred through the VPN and can be analyzed with the Wireshark program. Include Wi-Fi gateway in VPN routes​ If this setting is enabled, the gateway IP addresses will be added to VPN routes when on Wi-Fi. IPv4 address​ Here you can enter the IP address that will be used to create a TUN interface. By default, it is 172.18.11.218. Forcibly route LAN IPv4​ If this setting is enabled, AdGuard will filter all LAN connections, including local IPv4 network traffic, even if the Route all LAN IPv4 connections option is enabled. Route all LAN IPv4 connections​ If this setting is enabled, AdGuard will exclude LAN connections from filtering for simple networks. This may not work for complex networks. This setting only applies if Forcibly route LAN IPv4 is disabled. IPv6 address​ Here you can enter the IP address that will be used to create a TUN interface. By default, it is 2001:db8:ad:0:ff::. "},{"title":"Miscellaneous​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#miscellaneous","content":"Detect Samsung Pay​ If this setting is enabled, AdGuard protection will be paused while Samsung Pay is in use. Korean users require this feature as they experience issues with Samsung Pay when AdGuard is enabled. "},{"title":"How to set up outbound proxy","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/outbound-proxy/","content":"","keywords":""},{"title":"Proxy configuration examples​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#proxy-configuration-examples","content":"In this article we give examples of how to set up some of the most popular proxies to work with AdGuard. "},{"title":"Tor와 함께 AdGuard를 사용하는 방법​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#tor와-함께-adguard를-사용하는-방법","content":"Open AdGuard and go to Settings → Filtering → Network → Proxy. Download “Orbot: Proxy with Tor” directly from Google Play or by tapping Integrate with Tor and then Install. Orbot을 열고 애플리케이션의 메인 화면에서 시작 버튼을 누릅니다. Go back to the Proxy screen of AdGuard. Tor와 통합 버튼을 누릅니다. All the required fields will be pre-filled: 필드\t값프록시 유형\tSOCKS4 또는 SOCKS5 프록시 호스트\t127.0.0.1 프록시 포트\t9050 Or you can tap Proxy server → Add proxy server, enter these values manually, and set Orbot as a default proxy. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. Now AdGuard will forward all traffic through Orbot. If you disable Orbot, Internet connection will be unavailable until you disable outbound proxy settings in AdGuard. "},{"title":"PIA(Private Internet Access)와 함께 AdGuard를 사용하는 방법​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#piaprivate-internet-access와-함께-adguard를-사용하는-방법","content":"Here we presume that you are already a PIA VPN client and have it installed on your device. Open AdGuard and go to Settings → Filtering → Network → Proxy → Proxy server. 프록시 서버 추가 버튼을 누르고 다음 데이터를 입력합니다. 필드\t값프록시 유형\tSOCKS5 프록시 호스트\tproxy-nl.privateinternetaccess.com 프록시 포트\t1080 You also need to fill out the Username/Password fields. To do so, log in to the Client Control Panel on the PIA website. Tap the Generate Password button under the Generate PPTP/L2TP/SOCKS Password section. A username starting with “x” and a random password will be shown. Use them to fill out the Proxy username and Proxy password fields in AdGuard. Tap Save and select. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. "},{"title":"TorGuard와 함께 AdGuard를 사용하는 방법​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#torguard와-함께-adguard를-사용하는-방법","content":"Here we presume that you are already a TorGuard client and have it installed on your device. Open AdGuard and go to Settings → Filtering → Network → Proxy → Proxy server. 프록시 서버 추가 버튼을 누르고 다음 데이터를 입력합니다. 필드\t값프록시 유형\tSOCKS5 프록시 호스트\tproxy.torguard.org or proxy.torguard.io 프록시 포트\t1080 or 1085 or 1090 For Username and Password fields, enter your proxy username and proxy password you have chosen at TorGuard signup. Tap Save and select. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. "},{"title":"NordVPN과 함께 AdGuard를 사용하는 방법​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#nordvpn과-함께-adguard를-사용하는-방법","content":"Open AdGuard and go to Settings → Filtering → Network → Proxy → Proxy server. 프록시 서버 추가 버튼을 누르고 다음 데이터를 입력합니다. 필드\t값프록시 유형\tSOCKS5 프록시 호스트\tany server from this list 프록시 포트\t1080 For Username and Password fields, enter your NordVPN Username and Password. Tap Save and select. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. "},{"title":"Shadowsock과 함께 AdGuard를 사용하는 방법​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#shadowsock과-함께-adguard를-사용하는-방법","content":"Here we presume that you have already configured a Shadowsocks server and a client on your device. note You should remove Shadowsocks app from filtering before setting up the process (App management → Shadowsocks → Route traffic through AdGuard) to avoid infinite loops and drops. Open AdGuard and go to Settings → Filtering → Network → Proxy → Proxy server. Tap the Add proxy server and fill in the fields: 필드\t값프록시 유형\tSOCKS5 프록시 호스트\t127.0.0.1 프록시 포트\t1080 Tap Save and select. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. "},{"title":"How to use AdGuard with Clash​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#how-to-use-adguard-with-clash","content":"Here we presume that you are already a Clash client and have it installed on your device. Open Clash and go to Settings → Network → Route System Traffic and toggle the switch. This will set Clash to proxy mode. Open AdGuard and go to App management. Choose Clash For Android and disable Route traffic through AdGuard. This will eliminate traffic looping. Then go to Settings → Filtering → Network → Proxy → Proxy server. Tap Add proxy server and fill in the fields: 필드\t값프록시 유형\tSOCKS5 프록시 호스트\t127.0.0.1 프록시 포트\t7891 "},{"title":"제한​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#제한","content":"There is a factor that can prevent certain traffic from being routed through the outgoing proxy even after you configure AdGuard proxy settings. It can happen if you don't set up the app itself to send the traffic through AdGuard. To do it, you need to proceed to App management, choose the app, and turn on Route traffic through AdGuard. "},{"title":"Certificate installation in a Secure folder","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/secure-folder/","content":"Certificate installation in a Secure folder :::정보 This article is about AdGuard for Android, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app ::: If you install AdGuard to the Secure folder on your Android (this applies mainly to Samsung devices), you may face some difficulties when installing the HTTPS certificate. The thing is, the Secure folder has its own space where the certificates are stored. However, if you do everything according to the regular certificate installation instructions (described here), the certificate will be installed into the main memory and will play no role for your ad blocker in the Secure folder. To solve this problem and install the certificate for your AdGuard for Android into the Secure folder's storage, please follow these instructions instead: After installing the app and connecting the local VPN, tap ENABLE next to the HTTPS filtering is off message.Tap Next → Next → Save it now → Save certificate.Save the certificate (at this stage, you can rename it to make it easier to locate it later, which you will need to do).After the Installation instructions popup appears, DO NOT tap Open Settings.Minimize the app and go to the Secure folder.Tap the three-dot menu and go to Settings → Other security settings.Tap Security certificates → Install from device storage → CA certificate → Install anywayConfirm installation with your graphic key/password/fingerprint.Find and select the previously saved certificate, then tap Done.Return to the AdGuard app and navigate back to the main screen. You may have to swipe and restart the app to get rid of the HTTPS filtering is off message.끝! The certificate has been installed.","keywords":""},{"title":"How to use Samsung Pay with AdGuard in South Korea","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/samsungpay-with-adguard-in-south-korea/","content":"How to use Samsung Pay with AdGuard in South Korea :::정보 This article is about AdGuard for Android, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app ::: A number of users have encountered an issue where Samsung Pay does not work while AdGuard is running. This issue occurs almost exclusively on devices registered in South Korea. What is causing this issue? Sometimes Samsung Pay does not work on devices with VPN services running, and AdGuard is one of these apps. By default, AdGuard uses a local VPN to filter traffic, which can cause problems when using Samsung Pay. As a consequence, users had to disable AdGuard when making payments with Samsung Pay. This can be avoided with the Detect Samsung Pay feature. When this option is enabled, the AdGuard app is paused whenever the user opens the Samsung Pay app and resumes when the app is closed. note This feature will work only if the Local VPN filtering mode is chosen in AdGuard settings. If another mode is being used, Samsung Pay will function without any interruptions. To enable Detect Samsung Pay, follow these steps: Go to Settings → General → Advanced→ Low-level settings. Scroll to Detect Samsung Pay and move the slider to the right. Tap Allow permissions and give AdGuard access to information about the use of other apps. We need it to collect statistics about the operation of Samsung Pay in order for the Detect Samsung Pay feature to work. After enabling this feature, when you switch from Samsung Pay to AdGuard, the following message will appear as shown in the screenshot. Alternatively, you can disable filtering for Samsung Pay in App management. Simply go to the App management screen (third tab from the bottom), find Samsung Pay in the list, and turn off the switch at Route traffic through AdGuard.","keywords":""},{"title":"AdGuard 및 AdGuard Pro","type":0,"sectionRef":"#","url":"adguard-for-ios/adguard-and-adguard-pro/","content":"AdGuard 및 AdGuard Pro info 이 글은 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 iOS용 AdGuard에 관한 것입니다. 이용하고자 한다면 AdGuard 앱을 다운로드해 보십시오. App Store에서 AdGuard를 검색하면 AdGuard, AdGuard Pro 두 가지 앱을 찾을 수 있습니다. 이 앱들은 Safari나 다른 브라우저 및 앱에서 광고와 트래커를 차단하고 DNS 보호를 관리하도록 만들어졌습니다. 두 앱 모두 Apple의 스마트폰과 태블릿에서 광고를 차단하니 헷갈리지 않아도 됩니다. 변경된 앱 스토어 리뷰 지침으로 기능이 달랐던 이 두 앱은 이제 기본적으로 동일합니다. AdGuard 프리미엄을 구매한 경우, AdGuard Pro를 받을 필요가 없으며 그 반대도 마찬가지입니다.","keywords":""},{"title":"How to block ads in the YouTube app","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/youtube-ads/","content":"","keywords":""},{"title":"Watch YouTube in the AdGuard app​","type":1,"pageTitle":"How to block ads in the YouTube app","url":"adguard-for-android/solving-problems/youtube-ads/#watch-youtube-in-the-adguard-app","content":" Open the YouTube app and start the video you want to watch. Tap the Share button. Select AdGuard from the list of apps. That's it! A new window with the video will open where you'll be able to watch it without being interrupted by ads. "},{"title":"Watch YouTube in a browser​","type":1,"pageTitle":"How to block ads in the YouTube app","url":"adguard-for-android/solving-problems/youtube-ads/#watch-youtube-in-a-browser","content":"Alternatively, you can also watch YouTube in a browser and there will be no ads if you have AdGuard installed and enabled. "},{"title":"활동 및 통계","type":0,"sectionRef":"#","url":"adguard-for-ios/features/activity/","content":"","keywords":""},{"title":"통계​","type":1,"pageTitle":"활동 및 통계","url":"adguard-for-ios/features/activity/#statistics","content":"활동 화면 외에도 홈 화면과 위젯에서 글로벌 통계를 확인할 수 있습니다. "},{"title":"How to automate AdGuard for Android","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/tasker/","content":"","keywords":""},{"title":"AdGuard interface​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#adguard-interface","content":"There are a lot of tasker apps out there, for example Tasker, AutomateIt etc. AdGuard provides an interface that allows these apps to setup various automation rules.  Thanks to this interface, any app can send a special message (called “intent”) that contains the name of the action and some additional data, if needed. AdGuard will look at this intent and perform the required actions. "},{"title":"Security concerns​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#security-concerns","content":"Isn't it dangerous to let some random apps manage what AdGuard does? It is, and that's why a password is sent along with the intent. This password will be generated by AdGuard automatically, but you can, of course, change it at any time. "},{"title":"Available actions​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#available-actions","content":"Here are actions that, when included in the intent, will be understood by AdGuard: start starts the protection, no extra data is needed; stop stops the protection, no extra data required; pause pauses the protection. The difference between this and stop is that a notification will appear that restarts the protection when you tap it. No extra data required; update checks for available filter and app updates, no additional data is needed;  dns_filtering turns DNS filtering on and off. Requires an extra flag: enable:true or enable:false enables or disables DNS filtering, accordingly. fake_dns allows resolving DNS requests on the specified proxy server. This requires an extra flag: enable:true or enable:false enables or disables the Use FakeDNS setting, respectively. note When the Use FakeDNS setting is enabled, DNS Protection will be automatically disabled. DNS requests won't be filtered locally.  dns_server switches between DNS servers, you need to include additional data: server:adguard dns switches to AdGuard DNS server; note The full list of supported provider names can be found in our known DNS providers list. server:custom switches to the previously added server named custom; server:tls://dns.adguard.com creates a new server and switches to it if the previously added servers and providers don't contain a server with the same address. Otherwise, it switches to the respective server. You can add server addresses as IP ( regular DNS), sdns://… (DNSCrypt or DNS-over-HTTPS), https://… (DNS-over-HTTPS) or tls://... (DNS-over-TLS); server:1.1.1.1, tls://1.1.1.1 creates a server with comma separated addresses and switches to it. When adding a server via server:1.1.1.1, tls://1.1.1.1, the previously added server is removed. server:system resets DNS settings to default system DNS servers.  proxy_state enables/disables the outbound proxy. Requires an extra flag: enable:true or enable:false activates or deactivates the outbound proxy, accordingly.  proxy_default sets the proxy from the list of previously added ones as default or creates a new one if server has not been added before. You need to specify additional data: server:[name] where [name] is the name of the outbound proxy from the list. Or you can configure server parameters manually: server:[type=…&amp;host=…&amp;port=…&amp;username=…&amp;password=…&amp;udp=…&amp;trust=…]. proxy_remove removes the proxy server from the list of previously added ones. server:[name] where [name] is the name of the outbound proxy from the list. Or you can configure remove parameters manually: server:[type=…&amp;host=…&amp;port=…&amp;username=…&amp;password=…&amp;udp=…&amp;trust=…]. Compulsory parameters: [type] — proxy server type: HTTPSOCKS4SOCKS5HTTPS_CONNECT [host] — outbound proxy domain or IP address; [port] — outbound proxy port (integer number from 1 to 65535); Optional parameters: [login and password] — only if proxy requires it. This data is ignored when setting up SOCKS4; [udp] applied only on SOCKS5 server type and include option UDP through SOCKS5. It is necessary to set true or false value; [trust] applies for HTTPS_CONNECT server type only and include option Trust any certificates. It is necessary to set true or false value. Example setting by name: server:MyServer manually settings: server:host=1.2.3.4&amp;port=80&amp;type=SOCKS5&amp;username=foo&amp;password=bar&amp;udp=true Don't forget to include the password as an extra and mention package name and class. You need to do so for every intent. Extra: password:******* Package name: com.adguard.android Class: com.adguard.android.receiver.AutomationReceiver note Before v4.0 the class was called com.adguard.android.receivers.AutomationReceiver but then we changed its name to com.adguard.android.receiver.AutomationReceiver. If you used this feature, please pay attention and use the new name. "},{"title":"Execution without notification​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#execution-without-notification","content":"To perform a task without showing a toast, add an additional EXTRA quiet: true "},{"title":"Example​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#example","content":" "},{"title":"고급 보호","type":0,"sectionRef":"#","url":"adguard-for-ios/features/advanced-protection/","content":"","keywords":""},{"title":"고급 보호 기능을 활성화하는 방법​","type":1,"pageTitle":"고급 보호","url":"adguard-for-ios/features/advanced-protection/#고급-보호-기능을-활성화하는-방법","content":"고급 보호를 사용하려면 화면 하단의 왼쪽 두 번째 아이콘을 탭하여 보호 탭을 열고 고급 보호 모듈을 선택한 다음 스위치 슬라이더를 토글하여 기능을 활성화한 다음 화면의 안내에 따릅니다. note 고급 보호 기능은 iOS 15 이상 버전에서만 작동합니다. 이전 버전의 iOS를 사용하는 경우, 앱에 고급 보호 대신 YouTube 광고 차단 모듈이 표시됩니다.  "},{"title":"어시스턴트","type":0,"sectionRef":"#","url":"adguard-for-ios/features/assistant/","content":"","keywords":""},{"title":"어시스턴트​","type":1,"pageTitle":"어시스턴트","url":"adguard-for-ios/features/assistant/#assistant","content":" 어시스턴트는 앱으로 다시 전환하지 않고 브라우저에서 바로 Safari의 필터링을 관리할 수 있도록 도와주는 도구입니다. 어시스턴트를 보려면 Safari를 열고 상자 안의 화살표 기호를 탭합니다. AdGuard 또는 AdGuard Pro까지 아래로 스크롤하여 클릭하면 다음 옵션이 있는 창이 열립니다. 이 페이지에서 활성화.스위치를 끄면 현재 도메인을 허용 목록에 추가할 수 있습니다.이 페이지의 요소 차단. 탭하여 '요소 차단' 모드로 들어가려면 페이지에서 요소를 선택하고 '+' 또는 '-'를 탭하여 크기를 조정하고 필요한 경우 미리 본 다음 확인 표시 아이콘을 탭하여 확인합니다. 선택한 요소가 페이지에서 숨겨지고 해당 규칙이 사용자 규칙에 추가됩니다. 변경 사항을 되돌리려면 제거하거나 비활성화합니다.이 페이지의 문제 신고.몇 번의 탭만으로 지원팀에 보고서를 보낼 수 있는 웹 신고 도구가 열립니다. 페이지에서 누락된 광고나 잘못된 차단을 발견한 경우 사용하세요. tip iOS 15 기기에서 어시스턴트 기능은 iOS용 AdGuard의 기능을 향상시키고 iOS 15를 활용할 수 있도록 해주는 AdGuard Safari 웹 확장 프로그램을 통해 사용할 수 있습니다. 이 웹 확장 프로그램을 통해 AdGuard는 고급 필터 규칙을 적용하고 결과적으로 더 많은 광고를 차단할 수 있습니다. "},{"title":"로우 레벨 설정","type":0,"sectionRef":"#","url":"adguard-for-ios/features/low-level-settings/","content":"","keywords":""},{"title":"IPv6 차단​","type":1,"pageTitle":"로우 레벨 설정","url":"adguard-for-ios/features/low-level-settings/#blockipv6","content":"IPv6 주소를 가져오기 위해 전송된 모든 DNS 쿼리에 대해 앱은 빈 응답을 반환합니다(마치 이 IPv6 주소가 존재하지 않는 것처럼). 이제 IPv6 주소를 반환하지 않는 옵션이 있습니다. 이 시점에서 이 기능에 대한 설명은 너무 기술적이 되어버립니다. IPv6를 구성하거나 비활성화하는 것은 고급 사용자의 전유물이기 때문입니다. 아마도 당신이 그들 중 하나라면 이제이 기능이 있다는 것을 아는 것이 좋을 것입니다. 그렇지 않다면 자세히 알아볼 필요가 없습니다. "},{"title":"부트스트랩 및 폴백 서버​","type":1,"pageTitle":"로우 레벨 설정","url":"adguard-for-ios/features/low-level-settings/#bootstrap-fallback","content":"폴백은 백업 DNS 서버입니다. DNS 서버를 선택했는데 문제가 발생한 경우 주 서버가 응답할 때까지 백업 DNS 서버를 설정하는 폴백이 필요합니다. 부트스트랩을 사용하면 조금 더 복잡해집니다. iOS용 AdGuard가 사용자 정의 보안 DNS 서버를 사용하려면 먼저 앱이 해당 IP 주소를 가져와야 합니다. 이를 위해 기본적으로 시스템 DNS가 사용되지만 여러 가지 이유로 사용할 수 없는 경우도 있습니다. 이러한 경우 부트스트랩을 사용하여 선택한 보안 DNS 서버의 IP 주소를 가져올 수 있습니다. 다음은 사용자 정의 부트스트랩 서버가 도움이 될 수 있는 경우를 설명하는 두 가지 예입니다: 시스템 기본 DNS 서버가 보안 DNS 서버의 IP 주소를 반환하지 않아 보안 DNS 서버를 사용할 수 없는 경우당사 앱과 타사 VPN을 동시에 사용하고 시스템 DNS를 부트스트랩으로 사용할 수 없는 경우 "},{"title":"AdGuard VPN과의 호환성","type":0,"sectionRef":"#","url":"adguard-for-ios/features/compatibility-with-adguard-vpn/","content":"","keywords":""},{"title":"호환성 모드를 활성화하는 방법​","type":1,"pageTitle":"AdGuard VPN과의 호환성","url":"adguard-for-ios/features/compatibility-with-adguard-vpn/#호환성-모드를-활성화하는-방법","content":"AdGuard VPN을 설치할 때 이미 AdGuard 광고 차단기가 있는 경우, 통합(호환) 모드가 자동으로 켜져 앱을 동시에 사용할 수 있습니다. AdGuard VPN을 먼저 설치한 후 AdGuard 광고 차단기를 사용하기로 결정한 경우, 두 앱을 함께 사용하려면 다음 단계를 따르세요. iOS용 AdGuard VPN 앱을 열고 화면 오른쪽 하단에서 ⚙ 설정을 선택합니다.앱 설정으로 이동하여 운영 모드를 선택합니다.모드를 VPN에서 통합으로 전환합니다. note 통합 모드에서는 AdGuard VPN의 예외 및 DNS 서버 기능을 사용할 수 없습니다. "},{"title":"Safari 보호","type":0,"sectionRef":"#","url":"adguard-for-ios/features/safari-protection/","content":"","keywords":""},{"title":"콘텐츠 차단기​","type":1,"pageTitle":"Safari 보호","url":"adguard-for-ios/features/safari-protection/#content-blockers","content":"콘텐츠 차단기는 광고 및 추적을 차단하는 실제 작업을 수행하는 필터링 규칙을 위한 '컨테이너' 역할을 합니다. iOS용 AdGuard에는 6가지 콘텐츠 차단기(일반, 개인정보 보호, 소셜, 보안, 사용자 지정 및 기타)가 포함되어 있습니다. 이전에는 Apple에서 각 콘텐츠 차단기에 최대 50,000개의 필터링 규칙만 포함할 수 있었지만, iOS 15 릴리스에서는 상한선이 150,000개의 규칙으로 변경되었습니다. 모든 콘텐츠 차단 기능, 해당 기능의 상태, 현재 포함된 주제별 필터, 사용된 필터링 규칙의 총 개수는 해당 화면의 고급 설정(오른쪽 하단의 톱니바퀴 아이콘 탭 → 일반 → 고급 설정 → 콘텐츠 차단 기능)에서 확인할 수 있습니다.  tip 최상의 필터링 품질을 위해 모든 콘텐츠 차단 기능을 활성화하세요. "},{"title":"필터​","type":1,"pageTitle":"Safari 보호","url":"adguard-for-ios/features/safari-protection/#filters","content":"콘텐츠 차단 기능은 필터 목록이라고도 하는 필터를 기반으로 작동합니다. 각 필터는 필터링 규칙의 목록입니다. 브라우징 시 광고 차단 기능을 활성화한 경우, 광고 차단 기능은 방문한 페이지와 페이지의 요소를 이러한 필터링 규칙과 비교하여 지속적으로 확인하고 일치하는 모든 항목을 차단합니다. 광고, 추적기 등을 차단하기 위한 규칙이 개발되었습니다. 모든 필터는 주제별 카테고리로 그룹화됩니다. 이러한 카테고리의 전체 목록을 보려면(콘텐츠 차단과 혼동하지 마세요) 방패 아이콘을 탭하여 보호 섹션을 연 다음 Safari 보호 → 필터로 이동하세요.  8개의 필터가 있으며, 각 카테고리에는 광고 차단, 소셜 미디어 위젯, 쿠키 알림, 온라인 사기로부터 사용자 보호 등 공통의 목적을 가진 여러 필터가 통합되어 있습니다. 필요에 맞는 필터를 결정하려면 설명을 읽고 라벨(광고, 개인정보, 추천 등)을 따라 탐색하세요. note 필터를 많이 사용한다고 해서 광고가 줄어든다는 보장은 없습니다. 다양한 필터를 동시에 많이 사용하면 광고 차단 품질이 떨어집니다. 사용자 정의 필터 카테고리는 기본적으로 비어 있으므로 사용자가 URL로 필터를 추가할 수 있습니다. 인터넷에서 필터를 찾거나 직접 필터를 만들 수도 있습니다. "},{"title":"사용자 규칙​","type":1,"pageTitle":"Safari 보호","url":"adguard-for-ios/features/safari-protection/#user-rules","content":"여기에서 새 규칙을 수동으로 입력하거나 Safari의 AdGuard 수동 차단 도구를 사용하여 새 규칙을 추가할 수 있습니다. 이 도구를 사용하면 전체 필터 목록을 추가하지 않고도 Safari 필터링을 사용자 지정할 수 있습니다. 나만의 광고 필터를 만드는 방법을 알아보세요. 하지만 iOS의 Safari에서는 작동하지 않는 경우가 많다는 점에 유의하세요.  "},{"title":"허용 목록​","type":1,"pageTitle":"Safari 보호","url":"adguard-for-ios/features/safari-protection/#allowlist","content":"Safari 보호 화면의 세 번째 섹션입니다. 특정 웹사이트에서 광고 차단을 비활성화하려는 경우 허용 목록이 도움이 될 것입니다. \u001d예외 목록에 도메인과 하위 도메인을 추가할 수 있습니다. iOS용 AdGuard에는 가져오기/내보내기 기능이 있어 한 기기의 허용 목록을 다른 기기로 쉽게 전송할 수 있습니다. "},{"title":"DNS 보호","type":0,"sectionRef":"#","url":"adguard-for-ios/features/dns-protection/","content":"","keywords":""},{"title":"DNS 구현​","type":1,"pageTitle":"DNS 보호","url":"adguard-for-ios/features/dns-protection/#dns-implementation","content":" 이 섹션에는 AdGuard 및 기본 구현 옵션이 있습니다. 기본적으로 DNS를 설정하는 방법입니다. 기본 구현에서 DNS는 앱이 아닌 시스템에 의해 처리됩니다. 즉, AdGuard는 로컬 VPN을 만들 필요가 없습니다. 안타깝게도 시스템 제한을 우회하고 다른 VPN 기반 \u001d앱과 함께 AdGuard를 사용하는 데는 도움이 되지 않습니다. VPN이 활성화되어 있으면 기본 DNS가 무시됩니다. 따라서 로컬에서 트래픽을 필터링하거나 새로운 DNS-over-QUIC 프로토콜(DoQ)을 사용할 수 없습니다. "},{"title":"DNS 서버​","type":1,"pageTitle":"DNS 보호","url":"adguard-for-ios/features/dns-protection/#dns-servers","content":"DNS 보호 화면에 표시되는 다음 섹션은 DNS 서버입니다. 현재 선택된 DNS 서버와 암호화 유형이 표시됩니다. 둘 중 하나를 변경하려면 버튼을 탭하여 DNS 서버 화면으로 들어갑니다.  서버는 속도, 사용하는 프로토콜, 신뢰성, 로깅 정책 등에 따라 다릅니다. 기본적으로 AdGard는 가장 인기 있는 DNS 서버(AdGard DNS 포함) 중에서 여러 개의 DNS 서버를 제안합니다. 아무거나 탭하여 암호화 유형을 변경하거나(서버 소유자가 해당 옵션을 제공한 경우) 서버의 홈페이지를 확인합니다. '무로깅 정책', '광고 차단', '보안' 등의 레이블을 추가하여 선택에 도움을 드리고자 합니다. 또한 화면 하단에는 사용자 정의 DNS 서버를 추가할 수 있는 옵션이 있습니다. 일반, DNSCrypt, DNS-over-HTTPS, DNS-over-TLS 및 DNS-over-QUIC 서버를 지원합니다. DNS-over-HTTPS를 위한 HTTP 기본 인증​ 이 기능은 인증 기능이 내장되어 있지 않은 DNS에 HTTP 프로토콜의 인증 기능을 제공합니다. DNS 인증은 사용자 정의 DNS 서버에 대한 액세스를 특정 사용자로 제한하려는 경우에 유용합니다. 이 기능을 활성화하려면 다음과 같이 하세요: AdGuard DNS에서 서버 설정 → 기기 → 설정으로 이동하여 DNS 서버를 인증이 있는 서버로 변경합니다. 다른 프로토콜 거부를 클릭하면 다른 프로토콜 사용 옵션이 제거되어 DNS-over-HTTPS 인증만 활성화되고 제3자가 사용하지 못하게 됩니다. 생성된 주소를 복사합니다.  iOS용 AdGuard에서 보호 탭 → DNS 보호 → DNS 서버로 이동하여 생성된 주소를 사용자 정의 DNS 서버 추가 필드에 붙여넣습니다. 새 구성을 저장하고 선택합니다. 모든 것이 올바르게 설정되었는지 확인하려면 진단 페이지를 방문하세요. "},{"title":"네트워크 설정​","type":1,"pageTitle":"DNS 보호","url":"adguard-for-ios/features/dns-protection/#network-settings","content":" 사용자는 네트워크 설정 화면에서 DNS 보안을 관리할 수도 있습니다. 모바일 데이터 필터링 및 Wi-Fi 필터링은 각 네트워크 유형에 대한 DNS 보호를 활성화 또는 비활성화합니다. 더 아래로 내려가면 Wi-Fi 예외에서 특정 Wi-Fi 네트워크를 DNS 보호에서 제외할 수 있습니다(예를 들어, AdGuard Home을 사용하는 경우 홈 네트워크를 제외할 수 있음). "},{"title":"DNS 필터링​","type":1,"pageTitle":"DNS 보호","url":"adguard-for-ios/features/dns-protection/#dns-filtering","content":"DNS 필터링을 사용하면 AdGuard DNS 필터를 활성화하고, 사용자 정의 DNS 필터를 추가하고, DNS 차단 목록/허용 목록을 사용하여 DNS 트래픽을 사용자 지정할 수 있습니다. DNS 필터링에 액세스하는 방법 보호(하단 메뉴 표시줄의 방패 아이콘) → DNS 보호 → DNS 필터링으로 이동합니다.  DNS 필터​ Safari에서 작동하는 필터와 마찬가지로 DNS 필터는 특수한 구문에 따라 작성된 규칙 집합입니다. AdGuard는 DNS 트래픽을 모니터링하고 하나 이상의 규칙과 일치하는 요청을 차단합니다. AdGuard DNS 필터](https://github.com/AdguardTeam/AdguardSDNSFilter)와 같은 필터를 사용하거나 호스트 파일을 필터로 추가할 수 있습니다. 여러 필터를 동시에 추가할 수 있습니다. 여러 필터를 동시에 추가하는 방법을 알아보려면 이 설명서를 참조하세요. 허용 목록 및 차단 목록​ DNS 필터 외에도 차단 목록 또는 허용 목록에 단일 도메인을 추가하여 DNS 필터링에 타겟팅된 영향을 미칠 수 있습니다. 차단 목록은 동일한 DNS 구문도 지원하며, Safari 콘텐츠 차단에서 허용 목록과 마찬가지로 둘 다 가져오고 내보낼 수 있습니다. "},{"title":"기타 기능","type":0,"sectionRef":"#","url":"adguard-for-ios/features/other-features/","content":"","keywords":""},{"title":"다크 테마​","type":1,"pageTitle":"기타 기능","url":"adguard-for-ios/features/other-features/#다크-테마","content":"  설정 → 일반 화면 상단에 있는 이 설정에서는 다크 테마와 라이트 테마를 전환할 수 있습니다. "},{"title":"위젯​","type":1,"pageTitle":"기타 기능","url":"adguard-for-ios/features/other-features/#위젯","content":" AdGuard는 Safari 콘텐츠 차단 및 DNS 보호 스위치에 빠르게 액세스하고 글로벌 요청 통계를 표시하는 위젯을 지원합니다. "},{"title":"Wi-Fi 환경에서만 자동 업데이트​","type":1,"pageTitle":"기타 기능","url":"adguard-for-ios/features/other-features/#wi-fi-환경에서만-자동-업데이트","content":"이 설정이 활성화되어 있을 경우, AdGuard는 백그라운드 필터 업데이트를 Wi-Fi 환경에서만 실행합니다. "},{"title":"허용 목록 반전​","type":1,"pageTitle":"기타 기능","url":"adguard-for-ios/features/other-features/#허용-목록-반전","content":"Safari 필터링의 대체 모드로, 목록에서 지정된 웹사이트를 제외한 모든 광고의 차단을 해제합니다. 기본적으로 비활성화되어 있습니다. "},{"title":"개발자 모드​","type":1,"pageTitle":"기타 기능","url":"adguard-for-ios/features/other-features/#개발자-모드","content":"개발자 모드는 고급 설정을 잠금 해제합니다. 사용법을 잘 알고 있거나 기술 지원팀에 문의한 경우가 아니라면 이러한 설정을 사용하지 않는 것이 좋습니다. "},{"title":"통계 초기화​","type":1,"pageTitle":"기타 기능","url":"adguard-for-ios/features/other-features/#통계-초기화","content":"요청 수와 같은 모든 통계 데이터를 지웁니다. "},{"title":"설정 초기화​","type":1,"pageTitle":"기타 기능","url":"adguard-for-ios/features/other-features/#설정-초기화","content":"이 옵션을 선택하면 모든 설정은 초기화됩니다. "},{"title":"고객 지원​","type":1,"pageTitle":"기타 기능","url":"adguard-for-ios/features/other-features/#고객-지원","content":"이 옵션을 사용하여 지원팀에 문의하거나, 누락된 광고를 신고하거나(사용자의 편의를 위해 어시스턴트 또는 AdGuard의 Safari 웹 확장 프로그램을 사용하는 것이 좋습니다), 로그를 내보내거나 기능 요청을 할 수 있습니다. "},{"title":"정보​","type":1,"pageTitle":"기타 기능","url":"adguard-for-ios/features/other-features/#정보","content":"앱의 현재 버전과 거의 필요하지 않은 다양한 옵션 및 링크가 포함되어 있습니다. "},{"title":"설치 방법","type":0,"sectionRef":"#","url":"adguard-for-ios/installation/","content":"","keywords":""},{"title":"시스템 요구 사항​","type":1,"pageTitle":"설치 방법","url":"adguard-for-ios/installation/#시스템-요구-사항","content":""},{"title":"iPhone​","type":1,"pageTitle":"설치 방법","url":"adguard-for-ios/installation/#iphone","content":"iOS 11.2 이상 "},{"title":"iPad​","type":1,"pageTitle":"설치 방법","url":"adguard-for-ios/installation/#ipad","content":"iPadOS 11.2 이상 "},{"title":"iPod touch​","type":1,"pageTitle":"설치 방법","url":"adguard-for-ios/installation/#ipod-touch","content":"iOS 11.2 이상 "},{"title":"iOS용 AdGuard 설치 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-for-ios/installation/#ios용-adguard-설치-방법","content":"iOS용 AdGuard는 App Store에서 다운로드할 수 있는 무료 앱입니다. AdGuard를 기기에 설치하려면 App Store를 열고 화면 하단의 검색 아이콘을 탭하세요.  검색창에 adguard를 입력한 후 표시될 adGuard를 탭하세요.  App Store의 열린 페이지에서 AdGuard - adblock&amp;privacy 문자열 아래에서 다운로드를 탭한 다음 설치를 탭합니다. 설치를 완료하려면 Apple ID 로그인 및 암호를 입력하고 설치가 완료될 때까지 기다리십시오.  "},{"title":"iOS용 AdGuard Pro 설치 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-for-ios/installation/#ios용-adguard-pro-설치-방법","content":"AdGuard Pro는 프리미엄 기능을 제공하는 iOS용 AdGuard의 유료 버전입니다. AdGuard Pro를 설치하려면 App Store 앱을 실행하고 화면 하단의 검색 아이콘을 탭하세요.  검색창에 adguard를 입력한 후 표시될 adGuard pro - adblock를 탭하세요.  App Store의 열린 페이지에서 AdGuard Pro - adblock 아래에 라이선스 가격이 있는 버튼을 탭한 후 구매 버튼을 누릅니다. 설치를 완료하려면 Apple ID 로그인 및 암호를 입력하고 설치가 완료될 때까지 기다리십시오.  라이선스는 개인 AdGuard 계정에서 사용자 자격 증명을 입력하여 활성화 할 수 있습니다. 이를 위해서 사용자는 하나 추가의 예비 라이선스 키가 있어야 합니다. "},{"title":"YouTube 광고를 차단하는 방법","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/block-youtube-ads/","content":"","keywords":""},{"title":"YouTube 앱에서 광고를 차단하는 방법​","type":1,"pageTitle":"YouTube 광고를 차단하는 방법","url":"adguard-for-ios/solving-problems/block-youtube-ads/#youtube-앱에서-광고를-차단하는-방법","content":"YouTube 앱을 엽니다.동영상을 선택하고 공유를 누르세요.더보기를 누르고 YouTube 광고 차단(AdGuard 제공)을 선택하세요. AdGuard가 광고 없는 비디오 플레이어를 열게 됩니다. "},{"title":"Safari에서 YouTube 광고를 차단하는 방법​","type":1,"pageTitle":"YouTube 광고를 차단하는 방법","url":"adguard-for-ios/solving-problems/block-youtube-ads/#safari에서-youtube-광고를-차단하는-방법","content":"tip AdGuard에 모든 웹사이트에 대한 접근 권한을 부여했는지 확인하세요. Safari → 확장 프로그램 → AdGuard에서 확인할 수 있습니다. 그런 다음 AdGuard를 열고 고급 보호를 활성화하세요. Safari에서 youtube.com을 열기동영상을 선택하고 공유를 누르세요.YouTube 광고 차단(AdGuard 제공)을 누르세세요. AdGuard가 광고 없는 비디오 플레이어를 열게 됩니다. "},{"title":"FaceTime과의 호환성 문제를 해결하는 방법","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/facetime-compatibility-issues/","content":"FaceTime과의 호환성 문제를 해결하는 방법 :::정보 이 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 iOS용 AdGuard에 대해 다룹니다. 작동 방식을 확인하려면 AdGuard 앱을 다운로드하세요. ::: 풀 터널 모드는 VPN 앱뿐만 아니라 FaceTime의 작동을 방해할 수 있습니다. iOS용 AdGuard의 풀 터널 모드를 켜져 있을 때 FaceTime이 작동하지 않은 경우가 있었습니다. iOS용 AdGuard의 풀 터널 (VPN 아이콘이 표시되지 않음) 모드를 켜져 있을 때 FaceTime이 작동하는 것도 보장할 수 없습니다. 이 모드는 VPN 앱과도 호환되지 않고 불안정하기 때문입니다. FaceTime 영상/음성 통화가 중단되지 않도록 하려면 분할 터널 모드를 사용하는 것이 좋습니다. 분할 터널 모드를 활성화하는 방법은 다음과 같습니다. iOS용 AdGuard 설정 → 일반 설정으로 이동합니다.고급 모드 활성화 후 고급 설정으로 이동터널 모드&gt; 분할 터널 모드 선택 끝! 이제는 FaceTime과의 호환성에는 문제가 없을 것입니다.","keywords":""},{"title":"로우 레벨 설정","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"로우 레벨 설정을 찾는 방법​","type":1,"pageTitle":"로우 레벨 설정","url":"adguard-for-ios/solving-problems/low-level-settings/#로우-레벨-설정을-찾는-방법","content":"caution 로우 레벨 설정을 변경하면 AdGuard의 성능에 문제가 발생하거나 인터넷 연결이 끊어지거나 보안이 손상될 수 있습니다. 이 섹션은 무엇을 하고 있는지 알고 있거나 지원팀에서 요청을 받은 경우에만 열면 됩니다. 로우 레벨 설정으로 이동하려면 화면 오른쪽 하단의 톱니바퀴 아이콘을 탭하여 설정을 엽니다. 일반 섹션을 선택한 다음 고급 모드 스위치를 켜면 아래에 고급 설정 섹션이 나타납니다. 고급 설정을 탭하여 로우 레벨 설정 섹션으로 이동합니다. "},{"title":"로우 레벨 설정​","type":1,"pageTitle":"로우 레벨 설정","url":"adguard-for-ios/solving-problems/low-level-settings/#로우-레벨-설정","content":""},{"title":"터널링 모드​","type":1,"pageTitle":"로우 레벨 설정","url":"adguard-for-ios/solving-problems/low-level-settings/#터널링-모드","content":"두 가지 주요 터널링 모드는 분할 터널링과 풀 터널링입니다. 분할 터널링 모드는 AdGuard와 소위 '개인 VPN' 앱의 호환성을 제공합니다. 풀 터널링 모드에서는 다른 어떤 VPN도 AdGuard와 동시에 작동할 수 없습니다. 분할 터널링 모드의 특정 기능이 있습니다. DNS 프록시가 제대로 작동하지 않는 경우(예: AdGuard DNS 서버의 응답이 제시간에 반환되지 않는 경우) iOS는 iOS 설정에 지정된 DNS 서버를 통해 트래픽을 리디렉션합니다. 현재 광고는 차단되지 않으며 DNS 트래픽은 암호화되지 않습니다. 풀 터널링 모드에서는 AdGuard 설정에 지정된 DNS 서버만 사용됩니다. 응답하지 않으면 인터넷이 작동하지 않는 것입니다. 풀 터널링 모드를 활성화하면 일부 프로그램(예: Facetime)의 성능이 저하되고 앱 업데이트에 문제가 발생할 수 있습니다. 기본적으로 AdGuard는 가장 안정적인 분할 터널링 모드를 사용합니다. 풀 터널링(VPN 아이콘 없음)이라는 추가 모드도 있습니다. 이 모드는 풀 터널링과 완전히 동일한 모드이지만, 시스템 표시줄에 VPN 아이콘이 나타나지 않도록 구성됩니다. "},{"title":"차단 모드​","type":1,"pageTitle":"로우 레벨 설정","url":"adguard-for-ios/solving-problems/low-level-settings/#차단-모드","content":"이 모듈에서는 차단해야 하는 DNS 쿼리에 대해 AdGuard가 응답하는 방식을 선택할 수 있습니다. 기본 — adblock 규칙에 의해 차단된 경우 null IP 주소로 응답하고, /etc/hosts 규칙에 의해 차단된 경우 규칙에 지정된 IP 주소로 응답합니다.REFUSED — REFUSED 코드로 응답합니다.NXDOMAIN — NXDOMAIN 코드로 응답합니다.지정되지 않은 IP — IP 주소가 0인 응답합니다.사용자 정의 IP — 수동으로 설정한 IP 주소로 응답합니다. "},{"title":"IPv6 차단​","type":1,"pageTitle":"로우 레벨 설정","url":"adguard-for-ios/solving-problems/low-level-settings/#ipv6-차단","content":"토글을 오른쪽으로 이동하면 IPv6 쿼리(AAAA 요청) 차단을 활성화할 수 있습니다. AAAA 유형의 DNS 요청은 확인되지 않으므로 IPv4 쿼리만 처리할 수 있습니다. "},{"title":"차단된 TTL 응답​","type":1,"pageTitle":"로우 레벨 설정","url":"adguard-for-ios/solving-problems/low-level-settings/#차단된-ttl-응답","content":"여기에서 기기가 DNS 요청에 대한 응답을 캐시할 기간을 설정할 수 있습니다. 지정된 유효 시간(초) 동안 DNS 서버에 다시 요청하지 않고 캐시에서 요청을 읽을 수 있습니다. "},{"title":"부트스트랩 서버​","type":1,"pageTitle":"로우 레벨 설정","url":"adguard-for-ios/solving-problems/low-level-settings/#부트스트랩-서버","content":"DNS-over-HTTPS, DNS-over-TLS 및 DNS-over-QUIC의 경우 기본 DNS 서버의 IP 주소를 가져오기 위해 부트스트랩 서버가 필요합니다. 지정하지 않으면 iOS 설정의 DNS 서버가 부트스트랩 서버로 사용됩니다. "},{"title":"폴백 서버​","type":1,"pageTitle":"로우 레벨 설정","url":"adguard-for-ios/solving-problems/low-level-settings/#폴백-서버","content":"여기서는 기본 서버가 응답하지 않을 경우 요청이 다시 라우팅될 대체 서버를 지정할 수 있습니다. 지정하지 않으면 시스템 DNS 서버가 폴백 서버로 사용됩니다. 없음을 지정할 수도 있으며, 이 경우 폴백 서버가 설정되지 않고 기본 DNS 서버만 사용됩니다. "},{"title":"백그라운드 앱 새로고침 시간​","type":1,"pageTitle":"로우 레벨 설정","url":"adguard-for-ios/solving-problems/low-level-settings/#백그라운드-앱-새로고침-시간","content":"여기에서 \u001d앱이 백그라운드에서 필터 업데이트를 확인할 빈도를 선택할 수 있습니다. 업데이트 확인은 지정된 기간보다 더 자주 수행되지는 않지만 정확한 간격이 지켜지지 않을 수도 있습니다. "},{"title":"프리미엄 기능을 활성화하는 방법","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/premium-activation/","content":"프리미엄 기능을 활성화하는 방법 info 이 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 iOS용 AdGuard에 대해 다룹니다. 이용하고자 한다면 AdGuard 앱을 다운로드해 보세요. iOS용 AdGuard 프리미엄 활성화하는 방법은 두 가지가 있습니다. 구독 구매. 앱 어디에서나 프리미엄 구매 명판을 탭하고 화면의 안내를 따르기만 하면 됩니다. Apple ID 비밀번호를 입력하고 월간, 연간, 평생 구독 중 선택하여 구매를 확인 하시면 됩니다. AdGuard 라이선스 사용(AdGuard 웹사이트에서 구매 가능) 앱을 통해 AdGuard 개인 계정에 로그인하려면 AdGuard 앱 → 설정 → 라이선스 화면으로 이동한 후 로그인 버튼을 탭하세요. 그다음에는 AdGuard 개인 계정 자격 증명을 입력하세요. 계정에 유효한 라이선스 키가 있는 경우, iOS용 AdGuard 앱에서 자동으로 프리미엄을 선택하여 활성화됩니다. 또는 이메일 필드에 유효한 라이선스 키를 직접 입력하면 프리미엄 기능이 활성화됩니다. note iOS용 AdGuard Pro(다른 iOS 앱)는 App Store에서만 구매할 수 있습니다.","keywords":""},{"title":"DNS","type":0,"sectionRef":"#","url":"adguard-for-mac/features/dns/","content":"","keywords":""},{"title":"DNS 보호​","type":1,"pageTitle":"DNS","url":"adguard-for-mac/features/dns/#dns-보호","content":"DNS 섹션에는 여러 설정이 있는 DNS 보호라는 하나의 기능이 포함되어 있습니다. 제공자필터차단 목록허용 목록  DNS 보호를 활성화하면 DNS 트래픽이 AdGuard에 의해 관리됩니다. "},{"title":"제공자​","type":1,"pageTitle":"DNS","url":"adguard-for-mac/features/dns/#제공자","content":"제공업체에서 DNS 트래픽을 암호화하고 광고 및 추적기를 차단할 DNS 서버를 선택할 수 있습니다. AdGuard DNS를 사용하는 것이 좋습니다. 고급 구성을 위해 왼쪽 하단에 있는 + 아이콘을 클릭하여 사설 AdGuard DNS 서버를 설정하거나 사용자 정의 서버를 추가할 수 있습니다. "},{"title":"필터​","type":1,"pageTitle":"DNS","url":"adguard-for-mac/features/dns/#필터","content":"DNS 필터는 DNS 수준에서 광고 차단 규칙을 적용합니다. 이러한 필터링은 일반 광고 차단보다 정확도가 떨어지지만 전체 도메인을 차단하는 데 특히 유용합니다. DNS 필터를 추가하려면 +를 클릭합니다. filterlists.com에서 더 많은 DNS 필터를 찾을 수 있습니다. "},{"title":"차단 목록​","type":1,"pageTitle":"DNS","url":"adguard-for-mac/features/dns/#차단-목록","content":"이 목록의 도메인은 차단됩니다. 도메인을 추가하려면 +를 클릭합니다. 특수 구문을 사용하여 도메인 이름 또는 DNS 필터링 규칙을 추가할 수 있습니다. 차단 목록을 내보내거나 가져오려면 콘텍스트 메뉴를 엽니다. "},{"title":"허용 목록​","type":1,"pageTitle":"DNS","url":"adguard-for-mac/features/dns/#허용-목록","content":"이 목록의 도메인은 필터링되지 않습니다. 도메인을 추가하려면 +를 클릭합니다. 허용 목록을 내보내거나 가져오려면 콘텍스트 메뉴를 엽니다. "},{"title":"Safari 웹 확장 프로그램","type":0,"sectionRef":"#","url":"adguard-for-ios/web-extension/","content":"","keywords":""},{"title":"AdGuard Safari 웹 확장 프로그램의 기능​","type":1,"pageTitle":"Safari 웹 확장 프로그램","url":"adguard-for-ios/web-extension/#adguard-safari-웹-확장-프로그램의-기능","content":"기본적으로 Safari는 콘텐츠 차단 기능에 기본 도구만 제공합니다. 이러한 도구는 다른 운영 체제(Windows, Mac, Android)의 콘텐츠 차단 프로그램에서 볼 수 있는 수준의 성능을 제공하지 않습니다. 예를 들어, 다른 플랫폼의 AdGuard 앱은 CSS 규칙, CSS 선택기 및 스크립틀릿(scriptlets)과 같은 효과적인 도구를 사용하여 광고를 차단할 수 있습니다. 안타깝게도 이러한 도구는 YouTube의 프리롤 광고와 같은 더 복잡한 경우를 처리할 때 절대적으로 필요합니다. Safari용 AdGuard 웹 확장 프로그램은 이러한 모든 유형의 필터링 규칙을 적용할 수 있는 기능을 제공함으로써 AdGuard를 보완합니다. 그 외에도 AdGuard의 Safari 웹 확장 프로그램을 사용하면 브라우저에서 바로 iOS용 AdGuard를 빠르게 관리할 수 있습니다. 확장 프로그램 버튼(직소 아이콘이 있는 버튼)을 탭합니다. 기기 유형에 따라 주소창 왼쪽 또는 오른쪽에 위치할 수 있습니다. 목록에서 AdGuard를 찾아서 탭합니다.  iPad의 경우 브라우저의 주소 표시줄에서 AdGuard 아이콘을 탭하여 AdGuard의 Safari 웹 확장 프로그램에 바로 액세스할 수 있습니다. 다음과 같은 옵션 목록이 표시됩니다. 웹사이트에서 보호 기능 활성화/비활성화하기. 스위치를 끄면 현재 웹사이트에 대해 AdGuard가 완전히 비활성화되고 각각의 제외 규칙이 추가됩니다. 스위치를 다시 켜면 웹사이트에 대한 보호가 다시 시작되고 규칙이 삭제됩니다. 이러한 변경 사항이 적용되려면 어느 정도 시간이 필요합니다. 페이지의 요소를 수동으로 차단. 이 페이지에서 요소 차단 버튼을 탭하면 요소 차단 팝업이 표시됩니다. 페이지에서 숨기려는 요소를 선택하고 선택 영역을 조정한 다음 변경 사항을 미리 보고 제거를 확인합니다. 해당 필터링 규칙이 AdGuard에 추가됩니다(나중에 비활성화하거나 삭제하여 변경 사항을 되돌릴 수 있음). 문제 신고하기. 위로 스와이프하여 문제 신고하기 버튼을 표시합니다. 누락된 광고 또는 현재 페이지에서 발생한 기타 문제를 신고하는 데 사용합니다. "},{"title":"AdGuard의 Safari 웹 확장 프로그램을 활성화하는 방법​","type":1,"pageTitle":"Safari 웹 확장 프로그램","url":"adguard-for-ios/web-extension/#adguard의-safari-웹-확장-프로그램을-활성화하는-방법","content":"note AdGuard의 Safari 웹 확장 프로그램은 작동을 위해 웹페이지의 콘텐츠에 액세스해야 하지만 광고 차단 이외의 다른 목적으로는 사용하지 않습니다. "},{"title":"iOS 설정​","type":1,"pageTitle":"Safari 웹 확장 프로그램","url":"adguard-for-ios/web-extension/#ios-설정","content":"웹 확장 프로그램은 독립형 도구가 아니며 iOS용 AdGuard가 필요합니다. 기기에 iOS용 AdGuard가 설치되어 있지 않은 경우, 먼저 설치한 후 온보딩 프로세스를 완료하세요. 완료되면 설정 → Safari → 확장 프로그램을 엽니다.   이 확장 프로그램 허용 섹션을 찾은 다음 사용 가능한 확장 프로그램 중에서 AdGuard를 찾습니다.  탭한 다음 스위치를 전환합니다. 같은 화면에서 AdGard의 모든 웹사이트 권한을 허용 또는 요청으로 설정합니다. 허용을 선택하면 새 웹사이트를 방문할 때마다 권한을 부여할 필요가 없습니다. 확실하지 않은 경우, 사이트별로 권한 부여 요청을 선택하세요.  "},{"title":"Safari​","type":1,"pageTitle":"Safari 웹 확장 프로그램","url":"adguard-for-ios/web-extension/#safari","content":"또는 Safari 브라우저에서 AdGuard 확장 프로그램을 켤 수도 있습니다. 확장 프로그램 버튼을 탭합니다(주소 표시줄 옆에 표시되지 않으면 aA 아이콘을 탭\u001d함).  그런 다음 목록에서 확장 프로그램 관리 옵션을 찾아 탭합니다. 열린 창에서 AdGuard 옆에 있는 스위치를 켭니다.   이 방법을 사용하는 경우, Safari 설정으로 이동하여 AdGuard 확장 프로그램에 필요한 권한을 부여해야 할 수도 있습니다. 이제 사용 가능한 확장 프로그램에서 AdGuard를 볼 수 있을 것입니다. 탭한 다음 노란색 i 아이콘을 탭합니다. 켜기 버튼을 탭하고 작업을 확인하여 고급 보호를 사용하도록 설정합니다. note 프리미엄 구독 없이 iOS용 AdGuard를 사용하는 경우, 고급 보호 기능을 사용할 수 없습니다. 또는 앱의 보호 탭(하단 아이콘 줄 왼쪽에서 두 번째)에서 직접 고급 보호 기능을 설정할 수 있습니다. AdGuard의 Safari 웹 확장 프로그램은 iOS 버전 15 이상에서만 작동합니다. "},{"title":"브라우저 어시스턴트","type":0,"sectionRef":"#","url":"adguard-for-mac/features/browser-assistant/","content":"","keywords":""},{"title":"작동 방식​","type":1,"pageTitle":"브라우저 어시스턴트","url":"adguard-for-mac/features/browser-assistant/#작동-방식","content":"AdGuard 브라우저 어시스턴트는 브라우저 확장 프로그램입니다. 이를 통해 AdGuard 앱을 빠르게 관리할 수 있습니다: 특정 웹사이트에 대한 보호 활성화 또는 비활성화(웹사이트 이름 아래 토글)30초 동안 보호 기능 일시 중지보호 기능 비활성화(오른쪽 상단 모서리에 있는 일시 중지 아이콘)수동으로 광고 차단하기필터링 로그 열기잘못된 차단 신고하기AdGuard 설정 열기웹사이트 인증서 보기 및 HTTPS 필터링 관리(웹사이트 이름 옆의 자물쇠 아이콘) "},{"title":"설치 방법​","type":1,"pageTitle":"브라우저 어시스턴트","url":"adguard-for-mac/features/browser-assistant/#설치-방법","content":"Mac용 AdGuard를 설치하면 기본 브라우저용 어시스턴트를 설치하라는 메시지가 표시됩니다. 이 단계를 건너뛰면 나중에 설치할 수 있습니다. 설정에서 기본 브라우저용 어시스턴트를 설치하는 방법 AdGuard 메뉴를 엽니다.톱니바퀴 아이콘을 클릭하고 설정을 선택합니다.어시스턴트 탭으로 전환합니다.기본 브라우저 옆의 확장 프로그램 추가를 클릭합니다.브라우저의 확장 프로그램 스토어에서 어시스턴트를 설치합니다.  웹사이트에서 어시스턴트를 설치하는 방법 어시스턴트 페이지를 엽니다.브라우저 이름 아래에서 설치를 선택합니다.브라우저의 확장 프로그램 스토어에서 어시스턴트를 설치합니다. note 드물지만 브라우저가 어시스턴트와 호환되지 않는 경우가 있을 수 있습니다. 브라우저에서 AdGuard를 관리하려면 이전 버전의 어시스턴트를 설치하면 됩니다. "},{"title":"레거시 어시스턴트​","type":1,"pageTitle":"브라우저 어시스턴트","url":"adguard-for-mac/features/browser-assistant/#레거시-어시스턴트","content":"레거시 어시스턴트는 AdGuard 브라우저 어시스턴트의 이전 버전입니다. 추가 설치가 필요 없는 유저스크립트입니다. 레거시 어시스턴트는 작업을 잘 수행하지만 몇 가지 단점이 있습니다. 확장 버전보다 기능이 적습니다.사용자 스크립트가 웹페이지에 삽입될 때까지 기다려야 하며, 때로는 즉시 로드되지 않을 수도 있습니다.페이지에서 어시스턴트 아이콘을 숨길 수 없습니다. 새 어시스턴트를 사용할 수 없는 경우에만 레거시 어시스턴트를 사용하는 것이 좋습니다. "},{"title":"iOS용 AdGuard에서 시스템 전체 필터링을 활성화하는 방법","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/system-wide-filtering/","content":"","keywords":""},{"title":"시스템 전체 필터링 정보​","type":1,"pageTitle":"iOS용 AdGuard에서 시스템 전체 필터링을 활성화하는 방법","url":"adguard-for-ios/solving-problems/system-wide-filtering/#시스템-전체-필터링-정보","content":"시스템 전체 필터링은 Safari 브라우저 외부, 즉 다른 앱과 브라우저에서 광고 및 추적기를 차단하는 것입니다. 이 \u001d글에서는 iOS 기기에서 이 기능을 활성화하는 방법을 설명합니다. iOS 기기의 전체 시스템에서 추적기와 광고를 차단하려면 DNS 필터링을 사용해야 합니다. 먼저 DNS 보호를 활성화해야 합니다. DNS 보호를 사용 설정하려면 다음과 같이 하세요. iOS용 AdGuard를 엽니다.보호 아이콘(하단 메뉴 표시줄의 두 번째 아이콘)을 탭합니다.DNS 보호 스위치를 켭니다.  이제 시스템 전체에서 광고 및 추적기를 차단하려면 다음 세 가지 옵션이 있습니다. AdGuard DNS 필터 사용합니다. AdGuard DNS 필터를 사용하려면 보호(하단 메뉴의 방패 아이콘) → DNS 보호 → DNS 필터링 → DNS 필터 → AdGuard DNS 필터로 이동합니다.AdGuard DNS 서버를 사용합니다. AdGuard DNS 서버를 사용하려면 보호(하단 메뉴의 방패 아이콘) → DNS 보호 → DNS 서버 → AdGuard DNS 또는 원하는 다른 차단 DNS 서버로 이동합니다.원하는 대로 사용자 정의 DNS 필터/호스트 파일을 추가하세요. 첫 번째와 세 번째 옵션에는 몇 가지 장점이 있습니다. 필터 자체가 광고를 차단하기 때문에 특정 차단 서버뿐만 아니라 원하는 DNS 서버를 사용할 수 있습니다.여러 개의 DNS 필터 및/또는 호스트 파일을 추가할 수 있습니다(너무 많이 사용하면 AdGuard 속도가 느려질 수 있음).  "},{"title":"사용자 정의 DNS 필터/호스트 파일을 추가하는 방법​","type":1,"pageTitle":"iOS용 AdGuard에서 시스템 전체 필터링을 활성화하는 방법","url":"adguard-for-ios/solving-problems/system-wide-filtering/#사용자-정의-dns-필터호스트-파일을-추가하는-방법","content":"원하는 DNS 필터 또는 호스트 파일을 추가할 수 있습니다. 예를 들어, OISD Blocklist Big을 추가해 보겠습니다. https://big.oisd.nl 링크를 복사합니다(OISD Blocklist Big 필터용 링크).보호(하단 메뉴의 방패 아이콘) → DNS 보호 → DNS 필터링 → DNS 필터를 엽니다.필터 추가를 탭합니다.링크를 필터 URL 필드에 붙여넣습니다.다음 → 추가를 탭합니다.  4단계에서 다른 URL을 붙여넣어 동일한 방식으로 다른 DNS 필터를 원하는 만큼 추가하세요. 여기에서 다양한 필터와 링크를 확인할 수 있습니다. "},{"title":"보통","type":0,"sectionRef":"#","url":"adguard-for-mac/features/general/","content":"","keywords":""},{"title":"앱 설정을 여는 방법​","type":1,"pageTitle":"보통","url":"adguard-for-mac/features/general/#앱-설정을-여는-방법","content":"Mac용 AdGuard를 설정하려면 기본 창의 오른쪽 상단에 있는 톱니바퀴 아이콘을 클릭하고 설정을 선택하세요.  "},{"title":"보통​","type":1,"pageTitle":"보통","url":"adguard-for-mac/features/general/#보통","content":" "},{"title":"검색 광고 및 웹사이트 자체 홍보 광고 차단하지 않기​","type":1,"pageTitle":"보통","url":"adguard-for-mac/features/general/#검색-광고-및-웹사이트-자체-홍보-광고-차단하지-않기","content":"이 기능은 AdGuard가 웹사이트의 검색 광고 및 자체 홍보를 차단하는 것을 방지합니다. 예를 들어, 온라인 쇼핑을 하다가 일부 웹사이트의 할인 혜택을 보고 싶을 때 유용하게 사용할 수 있습니다. 이러한 웹사이트를 허용 목록에 추가하는 대신 자체 홍보 및 검색 광고를 필터링에서 제외할 수 있습니다. "},{"title":"언어별 필터를 자동으로 활성화하기​","type":1,"pageTitle":"보통","url":"adguard-for-mac/features/general/#언어별-필터를-자동으로-활성화하기","content":"이 기능은 사용자가 방문하는 웹사이트의 언어를 감지하고 더 정확한 광고 차단을 위해 적절한 필터를 자동으로 활성화합니다. 언어를 자주 변경하는 경우 특히 유용합니다. "},{"title":"로그인 시 AdGuard 실행​","type":1,"pageTitle":"보통","url":"adguard-for-mac/features/general/#로그인-시-adguard-실행","content":"이 기능은 컴퓨터를 재시작하면 자동으로 AdGuard를 실행합니다. 따라서 앱을 수동으로 열지 않고도 AdGuard 보호를 활성 상태로 유지할 수 있습니다. "},{"title":"메뉴 아이콘 숨기기​","type":1,"pageTitle":"보통","url":"adguard-for-mac/features/general/#메뉴-아이콘-숨기기","content":"이 기능은 메뉴 표시줄에서 AdGuard의 아이콘을 숨기지만 백그라운드에서 AdGuard가 계속 실행되도록 합니다. AdGuard를 완전히 비활성화하려면 메인 창 메뉴에서 AdGuard 종료를 클릭하세요. "},{"title":"허용 목록​","type":1,"pageTitle":"보통","url":"adguard-for-mac/features/general/#허용-목록","content":"이 목록에 추가된 웹사이트는 필터링되지 않습니다. 사용자 규칙에서 허용 목록에 있는 웹사이트에 액세스할 수도 있습니다. "},{"title":"메인 창","type":0,"sectionRef":"#","url":"adguard-for-mac/features/main/","content":"메인 창 info 이 글은 시스템 수준에서 기기를 보호하는 광고 차단기인 Mac용 AdGuard에 관한 내용입니다. 작동 방식을 확인하려면 AdGuard 앱을 다운로드하세요. Mac용 AdGuard의 메인 창에서 AdGuard 보호 기능을 활성화 또는 비활성화할 수 있습니다. 또한 AdGuard를 설치한 이후 또는 마지막 통계 재설정 이후 차단된 광고, 추적기 및 위협 등 앱 통계에 대한 간략한 개요를 제공합니다. 톱니바퀴 아이콘을 클릭하면 설정에 액세스하고 앱 및 필터 업데이트를 확인할 수 있습니다. 또한 지원팀에 문의하고 라이선스를 관리할 수도 있습니다.","keywords":""},{"title":"확장 프로그램","type":0,"sectionRef":"#","url":"adguard-for-mac/features/extensions/","content":"","keywords":""},{"title":"AdGuard 어시스턴트 (레거시)​","type":1,"pageTitle":"확장 프로그램","url":"adguard-for-mac/features/extensions/#adguard-어시스턴트-레거시","content":"이 유저스크립트를 사용하면 브라우저에서 직접 AdGuard 보호를 관리할 수 있습니다. 새 어시스턴트는 브라우저 스토어에서 설치할 수 있는 브라우저 확장 프로그램인 반면, 레거시 어시스턴트는 추가 설치가 필요 없는 유저스크립트입니다. 일부 기능은 두 어시스턴트 모두에 공통으로 적용됩니다. 특정 웹사이트에 대한 보호 활성화 또는 비활성화30초 동안 보호 기능 일시 중지수동으로 광고 차단하기잘못된 차단 신고하기 하지만 새로운 어시스턴트는 더 발전된 기능을 제공합니다. 또한 모든 웹사이트에 대한 AdGuard 보호 관리, 웹사이트 인증서 확인, HTTPS 필터링 관리, 필터링 로그 또는 앱 설정 열기 등의 기능을 사용할 수 있습니다. 새 어시스턴트를 사용할 수 없는 경우에만 레거시 어시스턴트를 사용하는 것이 좋습니다. "},{"title":"AdGuard Extra​","type":1,"pageTitle":"확장 프로그램","url":"adguard-for-mac/features/extensions/#adguard-extra","content":"이 유저스크립트는 일반적인 규칙으로 충분하지 않을 때 가장 복잡한 광고 차단 문제를 해결합니다. 또한 웹사이트가 광고 차단기를 우회하여 차단된 광고를 다시 삽입하는 것을 방지합니다. 항상 활성화된 상태로 유지하는 것이 좋습니다. 유저스크립트를 설치하려면 +를 클릭합니다. greasyfork.org에서 유저스크립트를 찾을 수 있습니다. "},{"title":"스텔스 모드","type":0,"sectionRef":"#","url":"adguard-for-mac/features/stealth/","content":"","keywords":""},{"title":"고급 개인정보 보호​","type":1,"pageTitle":"스텔스 모드","url":"adguard-for-mac/features/stealth/#고급-개인정보-보호","content":" 고급 개인정보 보호는 쿠키, UTM 태그, 온라인 카운터 및 분석 시스템을 삭제하여 사용자의 개인정보를 보호합니다. 이 기능을 사용하면 웹사이트가 IP 주소, 디바이스 및 브라우저 매개변수, 검색어, 개인 정보를 수집하지 못하도록 합니다. 스텔스 모드 설정에 대해 자세히 알아보기 "},{"title":"네트워크","type":0,"sectionRef":"#","url":"adguard-for-mac/features/network/","content":"","keywords":""},{"title":"보통​","type":1,"pageTitle":"네트워크","url":"adguard-for-mac/features/network/#보통","content":" "},{"title":"자동으로 애플리케이션 필터​","type":1,"pageTitle":"네트워크","url":"adguard-for-mac/features/network/#자동으로-애플리케이션-필터","content":"기본적으로 AdGard는 대부분의 브라우저에서 광고와 추적기를 차단합니다(Tor 브라우저는 예외). 이 설정을 사용하면 AdGuard가 앱 내 광고도 차단할 수 있습니다. 필터링된 앱을 관리하려면 애플리케이션을 클릭합니다. "},{"title":"HTTPS 프로토콜 필터​","type":1,"pageTitle":"네트워크","url":"adguard-for-mac/features/network/#https-프로토콜-필터","content":"이 설정을 통해 AdGuard는 현재 대부분의 웹사이트와 앱에서 사용되는 보안 HTTPS 프로토콜을 필터링할 수 있습니다. 기본적으로 은행 서비스와 같이 민감한 정보가 포함될 수 있는 웹사이트는 필터링되지 않습니다. HTTPS 제외를 관리하려면 제외를 클릭합니다. 기본적으로 AdGuard는 EV(Extended Validation) 인증서가 있는 웹사이트를 필터링하지 않습니다. 필요한 경우, EV 인증서가 있는 웹사이트를 필터링 옵션을 활성화할 수 있습니다. "},{"title":"아웃바운드 프록시​","type":1,"pageTitle":"네트워크","url":"adguard-for-mac/features/network/#아웃바운드-프록시","content":"프록시 서버를 통해 모든 기기의 트래픽을 라우팅하도록 AdGuard를 설정할 수 있습니다. "},{"title":"HTTP 프록시​","type":1,"pageTitle":"네트워크","url":"adguard-for-mac/features/network/#http-프록시","content":"AdGuard를 HTTP 프록시 서버로 사용할 수 있습니다. 이렇게 하면 프록시에 연결된 다른 기기의 트래픽을 필터링할 수 있습니다. Mac과 다른 기기가 동일한 네트워크에 연결되어 있는지 확인하고, 프록시 서버를 통해 라우팅하려는 기기의 프록시 포트(일반적으로 네트워크 설정에 있음)를 입력합니다. HTTPS 트래픽도 필터링하려면 AdGuard의 프록시 인증서를 이 기기로 전송하세요. 프록시 인증서 설치에 대해 자세히 알아보기 "},{"title":"필터","type":0,"sectionRef":"#","url":"adguard-for-mac/features/filters/","content":"","keywords":""},{"title":"필터​","type":1,"pageTitle":"필터","url":"adguard-for-mac/features/filters/#필터","content":" 필터 목록은 특별한 구문을 사용하여 작성된 규칙 집합입니다. AdGuard는 이러한 규칙을 해석하고 구현하여 광고, 추적기 및 방해 요소를 차단합니다. 일부 필터(예: AdGuard 베이스 필터, 추적 보호 필터, EasyList)는 사전 설치되어 있으며, 다른 필터는 추가로 설치할 수 있습니다. 다음 필터를 활성화하는 것이 좋습니다. AdGuard 베이스 필터AdGuard 추적 보호 필터 및 AdGuard URL 추적 필터AdGuard 방해 요소 필터언어별 필터 이러한 필터는 대부분의 광고, 추적기 및 성가신 요소를 차단하는 데 중요한 역할을 합니다. 고급 광고 차단을 위해 사용자 정의 필터와 사용자 규칙을 사용할 수 있습니다. 필터를 추가하려면 목록 왼쪽 하단에 있는 +를 클릭합니다. 필터를 사용하려면 해당 확인란을 선택합니다. "},{"title":"사용자 규칙​","type":1,"pageTitle":"필터","url":"adguard-for-mac/features/filters/#사용자-규칙","content":"Mac용 AdGuard에서 사용자 규칙은 필터에 있습니다. 규칙을 만들려면 +를 클릭합니다. 규칙을 활성화하려면 해당 확인란을 선택합니다. 규칙을 내보내거나 가져오려면 콘텍스트 메뉴를 엽니다.  "},{"title":"보안","type":0,"sectionRef":"#","url":"adguard-for-mac/features/security/","content":"","keywords":""},{"title":"피싱 및 멀웨어 보호​","type":1,"pageTitle":"보안","url":"adguard-for-mac/features/security/#피싱-및-멀웨어-보호","content":" AdGuard에는 사기, 피싱, 악성 도메인에 대한 데이터베이스가 있습니다. 피싱 및 멀웨어 보호를 활성화하면 위험한 웹사이트를 방문하려고 할 때마다 AdGuard가 경고합니다. 웹사이트의 일부만 위험하더라도 AdGuard는 이를 확인하고 경고를 표시합니다. 이 기능은 안전하게 사용할 수 있습니다. AdGuard는 URL이 아닌 해시 접두사를 확인하므로 사용자가 방문하는 웹사이트를 알 수 없습니다. AdGuard의 보안 검사에 대해 자세히 알아보세요 note AdGuard는 바이러스 백신 소프트웨어가 아닙니다. 의심스러운 파일을 다운로드하는 것을 막거나 기존 바이러스를 삭제할 수는 없습니다. "},{"title":"설치 방법/ 제거 방법","type":0,"sectionRef":"#","url":"adguard-for-mac/installation/","content":"","keywords":""},{"title":"시스템 요구 사항​","type":1,"pageTitle":"설치 방법/ 제거 방법","url":"adguard-for-mac/installation/#시스템-요구-사항","content":"Operating system version: macOS 10.15 (64 bit) or higher RAM: 2 GB 이상 브라우저: Safari, Chrome, Opera, Yandex.Browser, Firefox 및 기타 macOS 호환 브라우저 디스크 여유 공간: 120 MB "},{"title":"설치 방법​","type":1,"pageTitle":"설치 방법/ 제거 방법","url":"adguard-for-mac/installation/#설치-방법","content":"To install AdGuard for Mac on your computer, launch your browser, type adguard.com in the address bar, and press Download on the page that opens.  Wait for AdguardInstaller.dmg to download and double-click its icon in the list of downloaded files on the Dock panel.  바탕 화면에 AdGuard 아이콘이 표시될 것입니다. 설치 앱을 열려면 아이콘을 클릭합니다. 다음 열린 설치 창에서 AdGuard 아이콘을 두 번 클릭합니다.  AdGuard가 처음 시작되면 운영 체제에서 이 프로그램이 인터넷에서 다운로드되었음을 경고합니다. 열기를 클릭합니다.  다음에 Install를 클릭합니다.  설치 프로그램이 필요한 파일을 다운로드할 때까지 기다립니다.  프로그램을 사용하시려면 macOS 계정의 관리자 암호가 필요합니다. Enter the password when prompted in the dialogue box and press OK.  이제 사용자의 필요에 맞게 보호를 설정할 수 있습니다. 프로그램 기능의 단계별 설정을 조정하려면 '네 알겠습니다'을 클릭합니다. 이 단계를 건너 뛰려면 '아니요 하지않겠습니다'를 누릅니다.  맥북에 AdGuard가 설치되었습니다! "},{"title":"제거 방법​","type":1,"pageTitle":"설치 방법/ 제거 방법","url":"adguard-for-mac/installation/#제거-방법","content":""},{"title":"일반 제거 방법​","type":1,"pageTitle":"설치 방법/ 제거 방법","url":"adguard-for-mac/installation/#일반-제거-방법","content":"Finder 앱을 엽니다.  응용 프로그램 섹션으로 이동하여 AdGuard를 우클릭하고 휴지통으로 이동을 선택합니다.  "},{"title":"고급 제거 방법​","type":1,"pageTitle":"설치 방법/ 제거 방법","url":"adguard-for-mac/installation/#고급-제거-방법","content":"고객 지원 팀에서 특별히 '고급 제거'를 권장하거나 고급 제거에 익숙한 경우에만 이 지침을 사용하십시오. 또한 '일반 제거'의 모든 단계를 먼저 수행하십시오. After that, delete following AdGuard files: /Library/Application Support/AdGuard Software/com.adguard.mac.adguard (folder)~/Library/Preferences/com.adguard.mac.adguard.plist (file)~/Library/Group\\ Containers/TC3Q7MAJXF.com.adguard.mac (folder)/Library/LaunchDaemons/com.adguard.mac.adguard.adguard-pac.daemon.plist (file)/Library/LaunchDaemons/com.adguard.mac.adguard.adguard-tun-helper.daemon.plist (file)/Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-pac.daemon.log (file)/Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-tun-helper.daemon.log (file) To do so, open the Terminal app, then enter and execute the following commands: sudo rm -R &quot;/Library/Application Support/AdGuard Software/com.adguard.mac.adguard&quot; rm -R &quot;$HOME/Library/Application Support/com.adguard.mac.adguard&quot; rm $HOME/Library/Preferences/com.adguard.mac.adguard.plist rm -R &quot;$HOME/Library/Group Containers/TC3Q7MAJXF.com.adguard.mac&quot; find &quot;$HOME/Library/Application Support&quot; -name &quot;com.adguard.browser_extension_host.nm.json&quot; -delete sudo rm /Library/LaunchDaemons/com.adguard.mac.adguard.adguard-pac.daemon.plist sudo rm /Library/LaunchDaemons/com.adguard.mac.adguard.adguard-tun-helper.daemon.plist sudo rm /Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-pac.daemon.log sudo rm /Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-tun-helper.daemon.log Run the Activity Monitor app. 검색 도구를 사용하여 cfprefsd 프로세스를 찾습니다. 사용자로 실행중인 프로세스를 중지합니다 (루트에서 실행되는 프로세스 제외). 프로세스를 중지하려면 프로세스를 클릭한 후 왼쪽 상단의 X를 클릭합니다. Confirm the action in the dialogue window. 이제 AdGuard가 맥북에서 제거되었습니다. "},{"title":"How to install AdGuard on macOS High Sierra and above","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/high-sierra-compatibility/","content":"How to install AdGuard on macOS High Sierra and above :::정보 This article is about AdGuard for Mac, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app ::: During the Installation of AdGuard on macOS High Sierra (or later versions) you may see a message: &quot;System Extension Blocked&quot;. This is a new security mechanism that appeared in High Sierra, it requires you to explicitly allow the installation of a third-party system extension. To complete the installation of AdGuard you have to manually allow loading the extension in System Preferences → Security &amp; Privacy → General. Click the &quot;Allow&quot; button, and after that you will be able to proceed with the installation as normal.","keywords":""},{"title":"Advanced Settings guide","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/advanced-settings/","content":"","keywords":""},{"title":"고급 설정으로 이동하는 방법​","type":1,"pageTitle":"Advanced Settings guide","url":"adguard-for-mac/solving-problems/advanced-settings/#고급-설정으로-이동하는-방법","content":"caution Changing Advanced Settings may cause problems with AdGuard's performance, break the Internet connection, or compromise your security and privacy. Make changes to this section only if you are sure of what you are doing or our support team has asked you to do it. To find Advanced Settings, open AdGuard, click the gear icon, select Advanced, then select Advanced Settings. "},{"title":"고급 설정​","type":1,"pageTitle":"Advanced Settings guide","url":"adguard-for-mac/solving-problems/advanced-settings/#고급-설정","content":"network.extension.exclude.domains The listed domains will be excluded from filtering in the Network Extension mode. Use a comma or line break to separate values. network.extension.exclude.ports The listed ports will be excluded from filtering in the Network Extension mode. Use a comma or line break to separate values. network.extension.route.exclude The listed routes will be excluded from filtering in the Network Extension mode. Set routes using an IP address or destination CIDR. Separate values with commas or line breaks. network.extension.http.downgrade.bundleids Here you can specify a list of applications for which the HTTP/2 protocol will be downgraded to HTTP/1.1 in the Network Extension filtering mode. The bundle ID should be separated by a comma or a line break. network.extension.monterey.force.split.tunnel Here you can prohibit AdGuard from using the &quot;default route&quot; which is enabled by default in the Network Extension mode on macOS Monterey. AdGuard uses &quot;default route&quot; to disable iCloud Private Relay and Protect Mail Activity, as it cannot operate in unison with them. You will find more information about the problem in this article. network.extension.dns.redirect.exclude.bundleids Here you can specify a list of applications that make DNS queries directly not via system DNS resolver (for example, some VPN clients or DNS filtering applications). DNS filtering will be disabled for them in the Network Extension mode. The bundle IDs should be separated by a comma or line break. network.dns.filter.secure.request Redirects secure DNS requests to a local DNS proxy, if there is one available. network.https.ocsp.check By setting true, you enable HTTPS certificate revocation checking. network.tcp.keepalive.enabled Periodically sends TCP packets over an idle connection to ensure that it remains active and to renew NAT timeouts. network.tcp.keepalive.interval.seconds Idle time, in seconds, before sending a keepalive probe. If 0 is specified, the system will use the default value. network.tcp.keepalive.timeout.seconds Time, in seconds, before sending another keepalive probe to an unresponsive peer. If 0 is specified, the value selected by the system will be used. network.https.ech.enabled Uses a local DNS proxy to look for configs in the ECH Config Lists. If found, encrypts ClientHellos. network.https.enforce.certificate.transparency Verifies the authenticity of all certificates for the domain based on Chrome Certificate Transparency Policy. network.https.filter.http3.enabled By setting true, you allow AdGuard to filter traffic sent over HTTP/3, the latest version of the HTTP protocol based on QUIC. network.filtering.localnetwork By setting true, you enable local network filtering. network.filtering.localhost By setting true, you enable LoopBack filtering. dns.proxy.bootstrap.ips Here you can enter the IP addresses of the DNS servers that will be used to determine the address of the encrypted DNS server. dns.proxy.fallback.ips Here you can specify a list of IP addresses of DNS servers that will be used as backups in case the encrypted DNS server fails to respond. dns.proxy.fallback.on.upstreams.failure.enabled Normal queries will be redirected to a fallback upstream if all normal upstreams fail. dns.proxy.detect.search.domains This option enables automatic detection of the local network domain, which will be automatically redirected to the fallback DNS server instead of the main DNS server. dns.proxy.fallback.domains Here you can list domains for which the fallback DNS server will be used instead of the main DNS server. dns.proxy.adblockrules.blocking.mode Here you can specify the type of DNS server response to blocked requests, corresponding to ad-blocker-style rules. 0 — respond with REFUSED1 — respond with NXDOMAIN2 — respond with 0.0.0.0 or the addresses specified in dns.proxy.blocking.response.IPv4.address and/or dns.proxy.blocking.response.IPv6.address dns.proxy.hostrules.blocking.mode Here you can specify the type of DNS server response to blocked requests, corresponding to hosts rules: 0 — respond with REFUSED1 — respond with NXDOMAIN2 — respond with 0.0.0.0 or the addresses specified in dns.proxy.blocking.response.IPv4.address and/or dns.proxy.blocking.response.IPv6.address dns.proxy.blocking.response.IPv4.address Here you can specify the IPv4 address that will be returned in response to blocked &quot;A&quot; requests when dns.proxy.adblockrules.blocking.mode or dns.proxy.hostrules.blocking.mode is set to the response type &quot;ADDRESS&quot;. dns.proxy.blocking.response.IPv6.address Here you can specify the IPv6 address that will be returned in response to blocked &quot;AAAA&quot; requests when dns.proxy.adblockrules.blocking.mode or dns.proxy.hostrules.blocking.mode is set to the response type &quot;ADDRESS&quot;. dns.proxy.block.AAAA.requests Here you can enable IPv6 DNS query blocking. dns.proxy.blocked.response.TTL.in.seconds Here you can specify the TTL (time to live) value that will be returned in response to a blocked request. dns.proxy.parallel.upstream.queries.enabled All upstreams are queried simultaneously. The first response is returned. dns.proxy.servfail.on.upstreams.failure.enabled Responds to upstream failure with a SERVFAIL packet. dns.proxy.http3.enabled Enables HTTP/3 for DNS-over-HTTPS upstreams to accelerate connection. dns.proxy.block.encrypted.client.hello.response Removes the Encrypted Client Hello parameters from responses. stealth.antidpi.http.split.fragment.size Adjusts the size of the HTTP request fragmentation. Valid values: 1–1500. If an invalid size is specified, the system will use the default value. stealth.antidpi.clienthello.split.fragment.size This option specifies the size of TCP packet fragmentation, which helps avoid deep packet inspection. Valid values: 1–1500. If an invalid size is specified, the system will use the default value. stealth.antidpi.http.space.juggling Adds extra space between the HTTP method and the URL and removes space after the &quot;Host:&quot; field. stealth.antidpi.split.delay.millisecond Here you can specify the delay, in milliseconds, after sending the first fragment, if fragmentation is performed. subscription.link.interception.userscript Activate this feature if you want AdGuard to automatically intercept the URLs of userscripts and open the installation window. subscription.link.interception.filter Activate this feature if you want AdGuard to automatically intercept subscription URLs (for example, abp:subscribe, etc.) and open the custom filter setup window. "},{"title":"Installation problems solving","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/installation-issues/","content":"","keywords":""},{"title":"\"Installation failed\" error in macOS Catalina​","type":1,"pageTitle":"Installation problems solving","url":"adguard-for-mac/solving-problems/installation-issues/#installation-failed-error-in-macos-catalina","content":"During the installation you can face an error like this:  Follow this instruction to solve the problem: Restart your MacAs your Mac restarts, press and hold down the Command(⌘) + R keys immediately upon hearing the startup chime. Hold the keys until the Apple logo appears to get the computer into Recovery mode.From the top bar select Utilities → Terminal, and execute this command: csrutil disableRestart the Mac and log into Administrator's profileOpen the Finder window and select from the top bar Go → Go to Folder and type ~/private/Create a folder named tmp and type in your passwordLaunch AdGuard installation As the installation is completed, restart your Mac in Recovery mode using the instruction above and execute csrutil enable command in Terminal to enable system protection. "},{"title":"Compatibility issues with different macOS versions","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/big-sur-issues/","content":"","keywords":""},{"title":"Currently existing problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#currently-existing-problems","content":"Every year Apple releases a new version of macOS, introducing innovative solutions and adding new useful features. But some of them, such as Network Extensions API (Big Sur) or iCloud Private Relay (Monterey), cause some problems to many applications, AdGuard not being an exception. In this article we go over the known issues specific to each macOS version and possible ways to solve them. "},{"title":"Monterey 12: currently existing problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#monterey-12-currently-existing-problems","content":"These problems aren't fixed by Apple yet, or fixed only partially. Compatibility with iCloud Private Relay​ Currently, AdGuard and iCloud Private Relay cannot work at the same time. AdGuard has no ability to block ads because iCloud Private Relay encrypts traffic before AdGuard can filter network connections. When iCloud Private Relay is active, any filtering (including local filtering) becomes impossible. Thus, AdGuard can't filter traffic or perform DNS filtering in Safari. That's why by default, AdGuard uses the &quot;default route&quot; which disables iCloud Private Relay. For a deeper understanding of this problem, read this article. Recommended solution We recommend using AdGuard together with a more traditional VPN service such as AdGuard VPN. Alternative solution You can prevent AdGuard from using the &quot;default route&quot; by disabling it. It can be done via Advanced Settings → network.extension.monterey.force.split.tunnel. Note that enabling this setting will cause the problems described above.  Compatibility with Protect Mail Activity​ Apple's Mail app now uses a proxy to hide a user's IP address when downloading images from emails. However, it won't work if there's an active VPN connection. As it treats AdGuard as a VPN, it won't preload images automatically. For a deeper understanding of this problem, read this article. Recommended solution At this point, we recommend using a more traditional VPN service, such as AdGuard VPN, instead of the newer Apple privacy features. "},{"title":"Monterey 12, Big Sur 11.6 and later: currently existing problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#monterey-12-big-sur-116-and-later-currently-existing-problems","content":"These problems aren't fixed by Apple yet, or fixed only partially. Compatibility with Cisco AnyConnect​ AdGuard will not work together with Cisco AnyConnect while in the Network Extension mode. You have to switch AdGuard to Automatic Proxy mode. To do so, follow this instruction. Compatibility with Flutter​ This problem is solved in Flutter 2.2, released in June 2021. But to fix it for applications developed in Flutter, you need to wait for updates. If you use Flutter alongside AdGuard in &quot;Network Extension&quot; mode (or any other &quot;Transparent Proxy&quot;-type app) in Monterey or Big Sur, you will run into problems: projects won't open and Flutter will be effectively broken. We have already reported this bug to Apple. Meanwhile, you can use these temporary solutions: Use AdGuard in Automatic Proxy mode. Disable SIP and switch AdGuard to Kernel Extension mode as explained here. VPN apps with legacy API​ Despite AdGuard is displayed as a VPN in system settings, it shouldn't cause any conflicts when working alongside other VPN-based apps. However, if you're using a VPN-based app that was downloaded from outside App Store, there's a chance it uses the old VPN API and you have to exclude it from filtering: Open AdGuard's menu.Select Preferences....Switch to the Network tab.Click the Applications... button.Find the app you want to exclude and uncheck the checkbox next to it.  "},{"title":"Already fixed problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#already-fixed-problems","content":"These problems have been fixed by Apple by now but can be encountered in the older versions of macOS Big Sur. "},{"title":"Compatibility with Little Snitch 5​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#compatibility-with-little-snitch-5","content":"At this moment, Network Extension mode in AdGuard isn't compatible with Little Snitch 5. When both are running, there's a chance to encounter issues with various apps' behavior, even if they aren't filtered by AdGuard. This problem is directly caused by a bug in Big Sur, and we've already informed Apple about it. This leaves us to believe that this issue will get resolved in one of the next updates. It needs to be said that this problem can't be solved by disabling connections monitoring in Little Snitch, because this action doesn't unload Little Snitch's extension from the system. We recommend to switch to Automatic Proxy filtering mode when running AdGuard alongside with Little Snitch on Big Sur, at least until Apple fixes the bug. "},{"title":"Compatibility with local proxies​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#compatibility-with-local-proxies","content":"note Now AdGuard can filter local proxies (mostly) without any problems. If you encounter any issues in OS versions 11.1+, or if you're using Big Sur 11.0, remove the local proxy from System settings and configure an upstream proxy in AdGuard by following the instruction below. To configure an upstream proxy in AdGuard for Mac in Big Sur: Open AdGuard's settings Preferences → Network → Outbound proxy.Choose HTTP, HTTPS, SOCKS4 or SOCKS5, depending on your proxy type.Fill in the fields: host is the IP address of your proxy server,port is the desired port number to be used by the proxy server,user and password are corresponding username and password of your proxy (if needed). Ignore either or both when not applicable. If you run into any problems, please contact our tech support at support@adguard.com. Example 1: Configuring an upstream Shadowsocks proxy​ Here's an example of how to configure an upstream proxy for Shadowsocks. First of all, you need a working server side for your proxy. Most likely, to set it up, you would use a JSON file like this (server and password values were chosen randomly here): { &quot;server&quot;:&quot;111.222.333.444&quot;, &quot;server_port&quot;:8388, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;barfoo!&quot;, &quot;timeout&quot;:600, &quot;method&quot;:&quot;chacha20-ietf-poly1305&quot; }  tip You can find more information about how to get started on Shadowsocks website. Then you'd have to install Shadowsocks client on your Mac. Make sure that you select 'Manual Mode' or 'Auto Mode' in its settings! The configuration won't work if you select 'Global Mode' (or 'Auto Mode' in Big Sur versions prior to 11.1).  Now go to AdGuard menu → Advanced → Advanced Settings... and set the Value area of the upstream.proxy setting to socks5://localhost:1080. Notice that you need to use &quot;local_port&quot; value from the JSON file here. Because Shadowsocks uses SOCKS5, you also need to set the value of the upstream.proxy.socks5udp setting in AdGuard Advanced Settings to true to make AdGuard route UDP traffic to the proxy server. Example 2: Configuring an upstream Surge proxy​ In Big Sur v11.1+, there are no known conflicts between AdGuard and Surge proxy. If you are using an older version of Big Sur (prior to 11.1), check that System Proxy in the bottom right corner is disabled. Otherwise, Surge won't work with AdGuard. On the other hand, Enhanced Mode can be enabled without causing a conflict in any Big Sur version.  Now go to Preferences → Network → Outbound proxy and fill in the fields. For SOCKS5 proxy type: host: localhostport: 6153 For HTTP proxy type:host: localhostport: 6152 "},{"title":"Alternatives to using a Network Extension​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#alternatives-to-using-a-network-extension","content":"It's impossible to foresee each and every possible problem that can pop up in Big Sur or Monterey, there are countless various hardware/software and settings configurations. If you face any compatibility issues, please contact our support team, but feel free to try one of these workarounds first. "},{"title":"Using \"Automatic proxy\" filtering mode​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#automatic-proxy","content":"If you face problems in Big Sur or Monterey which can't be resolved by any of the methods above, you can try switching AdGuard to Automatic proxy mode. Open AdGuard's menu.Select Preferences....Switch to the Network tab.Click the Select Mode... button.Select Automatic Proxy.  Now AdGuard has automatically added a .pac file to your Mac's network settings, so that the system will consider AdGuard a proxy and try to send all traffic through AdGuard. note Some apps may ignore this system setting and their traffic will not be filtered. "},{"title":"Enabling Kernel Extension in Big Sur and Monterey​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#kernel-extension","content":"By default AdGuard uses Network Extension framework in Big Sur and Monterey as the old Kernel Extension framework is disabled there. This can cause some compatibility problems, but to enable Kernel Extension back, you need to disable System Integrity Protection (SIP) first. To disable SIP, follow this instruction: Click the Apple symbol in the Menu bar.Click Restart…Hold down Command-R to reboot into Recovery Mode.Click Utilities.Select Terminal.Type csrutil disable.Press Return or Enter on your keyboard.Click the Apple symbol in the Menu bar.Click Restart… Now that SIP is disabled, this is how you enable Kernel Extension:  Open AdGuard's menu.Select Preferences....Switch to the Network tab.Click the Select Mode... button.Select Kernel Extension.Confirm that you want to switch to Kernel Extension. caution However, we only recommend using this method if everything else fails, as this may lead to unexpected issues. "},{"title":"Launch issues on macOS","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/launch-issues/","content":"","keywords":""},{"title":"Launch issues on macOS 11 and higher​","type":1,"pageTitle":"Launch issues on macOS","url":"adguard-for-mac/solving-problems/launch-issues/#launch-issues-on-macos-11-and-higher","content":"If you have problems launching AdGuard for Mac on Big Sur and Monterey operating systems, please use this instruction: Reboot Mac and enter recovery mode.Disable SIP (Launch Terminal from the Utilities menu and type csrutil disable).Reboot Mac.Close the AdGuard app, open Terminal and type systemextensionsctl reset.Reboot Mac and enter recovery mode.Enable SIP (Launch Terminal from the Utilities menu and type csrutil enable).Launch the AdGuard app and enable protection. "},{"title":"Launch issues on macOS 10​","type":1,"pageTitle":"Launch issues on macOS","url":"adguard-for-mac/solving-problems/launch-issues/#launch-issues-on-macos-10","content":"If you have problems launching AdGuard for Mac on Sierra, Mojave and Catalina operating systems, please use this instruction: Open Terminal and enter command ls -@lOae /private/var/db/KernelExtensionManagement.Check that the restricted flag is not present (like on the screenshot). Reboot your Mac in recovery mode.Open Utilities → Terminal.Enter csrutil disable.Enter administrator password.Reboot your Mac.Open Terminal and enter the following command: sudo chflags restricted /private/var/db/KernelExtensionManagement.Reboot your Mac in recovery mode.Open Utilities → Terminal → Enter csrutil enable → Enter administrator password → Reboot your Mac.Enable AdGuard protection. "},{"title":"iCloud Private Relay and AdGuard","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/icloud-private-relay/","content":"","keywords":""},{"title":"Problem description in a nutshell​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#problem-description-in-a-nutshell","content":"By default, AdGuard uses the &quot;default route&quot; which disables iCloud Private Relay. Currently, AdGuard and iCloud Private Relay cannot work at the same time. AdGuard cannot block ads because iCloud Private Relay encrypts traffic before AdGuard can filter network connections. When iCloud Private Relay is active, any filtering (including local filtering) becomes impossible. Thus, AdGuard can't filter traffic or perform DNS filtering in Safari. Yet, AdGuard still filters traffic in other browsers. To keep using iCloud Private Relay, consider installing AdGuard for Safari. The same applies to using any VPN apps on Mac: you have to choose between using iCloud Private Relay or a VPN service. "},{"title":"In detail​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#in-detail","content":"AdGuard for Mac now uses macOS built-in socket filtering based on the network extensions API. This new and rather buggy mechanism replaced good old Kernel extensions. Over the last 1.5 years, we've reported more than 20(!) bugs to Apple regarding their new filtering method. The network extensions API has a VPN-like configuration with a list of route-like entries. On Big Sur, AdGuard developed &quot;split-tunnel&quot; rules to avoid creating the &quot;default route&quot; rule because it causes problems on early Big Sur releases. On Monterey, iCloud Private Relay got introduced. Privacy features of the Mail app also use Private Relay servers. As a consequence, AdGuard can't work together with iCloud Private Relay and the Mail app privacy features: iCloud Private Relay is applied to connections at the library level — before they reach the socket level, where AdGuard operates.iCloud Private Relay uses QUIC, which AdGuard can't filter in filtered apps because HTTP/3 filtering is not yet available.Consequently, AdGuard blocks QUIC, including iCloud Private Relay traffic — otherwise, ad blocking is impossible.When you use iCloud Private Relay and switch AdGuard into the &quot;split-tunnel&quot; mode, you can't open websites in Safari.To work around this issue for Monterey, we apply the &quot;default route&quot; rule. When Private Relay sees that rule, it disables itself automatically. So, AdGuard works seamlessly on Monterey, but iCloud Private Relay gets disabled. network.extension.monterey.force.split.tunnel restores the &quot;Big Sur&quot; behavior, but this option may break access to websites due to (3) and (4). We keep searching for a solution to this issue. One of the options is implementing HTTP/3 filtering. "},{"title":"Recommended solution​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#recommended-solution","content":"We recommend using AdGuard together with a more traditional VPN service such as AdGuard VPN. "},{"title":"Alternative solution​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#alternative-solution","content":"You can prevent AdGuard from using the &quot;default route&quot; by disabling the &quot;default route&quot;. It can be done via Advanced Settings → network.extension.monterey.force.split.tunnel.  Bear in mind that, in this case, you'll face the issues described above. "},{"title":"Manual certificate installation","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/manual-certificate-installation/","content":"Manual certificate installation :::정보 This article is about AdGuard for Mac, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app ::: AdGuard for Mac needs to install the root certificate into certificate storage to be able to filter HTTPS traffic. This action is performed automatically in most cases as you run the app for the first time, but users of Gecko-based browsers (Firefox, Waterfox etc.) who have a master password set up for their browser may be required to take additional steps (because these browsers use their own certificate storage instead of the system one). They need to either enter the master password when prompted (to grant AdGuard access to the certificate storage) or manually install the certificate. To manually install the certificate into Firefox-like browser: Open Preferences Go to Privacy &amp; Security → Certificates Click View Certificates Navigate to the Authorities tab and click the Import... button Select file /Library/Application Support/AdGuard Software/com.adguard.mac.adguard/AdguardCore/Adguard Personal CA.cer or just download it from http://local.adguard.org/cert using a Chromium-based browser (e.g Google Chrome or new Edge) and with a HTTPS-filtering running in AdGuard Exact actions required for different Gecko-based browsers may vary, but the general sequence and the path to AdGuard Personal CA.cer file will be the same. P.S.: For Setapp application version the file path is the following: /Library/Application Support/com.adguard.mac.adguard-setapp/AdguardCore/Adguard Personal CA.cer","keywords":""},{"title":"Protect Mail Activity and AdGuard","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/protect-mail-activity/","content":"","keywords":""},{"title":"In a nutshell​","type":1,"pageTitle":"Protect Mail Activity and AdGuard","url":"adguard-for-mac/solving-problems/protect-mail-activity/#in-a-nutshell","content":"Apple's Mail app now uses a proxy to hide a user's IP address when downloading images from emails.  However, it won't work if there's an active VPN connection. As it treats AdGuard as a VPN, it won't preload images automatically. Apple explains this issue here. "},{"title":"In detail​","type":1,"pageTitle":"Protect Mail Activity and AdGuard","url":"adguard-for-mac/solving-problems/protect-mail-activity/#in-detail","content":"AdGuard for Mac now uses macOS built-in socket filtering based on the network extensions API. This new and rather buggy mechanism replaced good old Kernel extensions. Over the last 1.5 years, we've reported more than 20(!) bugs to Apple regarding their new filtering method. The network extensions API has a VPN-like configuration with a list of route-like entries. On Big Sur, AdGuard used &quot;split-tunnel&quot; rules to avoid creating the &quot;default route&quot; rule because it causes problems on early Big Sur releases. These problems were solved in Monterey so nothing prevents us from using the &quot;default route&quot; rule. On Monterey, iCloud Private Relay got introduced. Privacy features of Mail.app also use Private Relay servers. As a consequence, AdGuard can't work together with iCloud Private Relay and Mail app privacy features: iCloud Private Relay is applied to connections at the library level — before they reach the socket level, where AdGuard operates.iCloud Private Relay uses QUIC, which AdGuard can't filter because HTTP/3 filtering is not yet available.Consequently, AdGuard blocks QUIC, including iCloud Private Relay traffic – otherwise, ad blocking is impossible.When you use iCloud Private Relay and switch AdGuard into the &quot;split-tunnel&quot; mode, you can't open websites in Safari.To work around this issue for Monterey, we apply the &quot;default route&quot; rule. When Private Relay sees that rule, it disables itself automatically. So, AdGuard works seamlessly on Monterey, but iCloud Private Relay gets disabled. network.extension.monterey.force.split.tunnel restores the &quot;Big Sur&quot; behavior, but this option may break access to websites due to (3) and (4). We keep searching for a solution to this issue. One of the options is implementing HTTP/3 filtering. "},{"title":"Recommended solution​","type":1,"pageTitle":"Protect Mail Activity and AdGuard","url":"adguard-for-mac/solving-problems/protect-mail-activity/#recommended-solution","content":"At this point, we recommend using a more traditional VPN service, such as AdGuard VPN, instead of the newer Apple privacy features. "},{"title":"Incompatibility with Screen Time","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/screen-time-issues/","content":"Incompatibility with Screen Time info This article is about AdGuard for Mac, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app If you have Content Restrictions enabled in Screen Time while AdGuard is on, you may experience problems loading web pages. To check if Content Restrictions are active: Go to System Settings → Screen Time → Content &amp; Privacy → Content Restrictions Check if the setting for Access to Web Content is set to Limit Adult Websites If this setting is on, pages won’t load. To continue using AdGuard, disable Content &amp; Privacy in Screen Time, and then restart the system.","keywords":""},{"title":"Protection cannot be enabled","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/protection-cannot-be-enabled/","content":"Protection cannot be enabled :::정보 This article is about AdGuard for Mac, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app ::: If AdGuard Protection cannot be enabled for some reason, perform the following steps: Click the AdGuard icon at the menu bar and go to Advanced → Reset settings... → Quit AdGuard... In the Spotlight Search, type Terminal, enter sudo rm -R /Library/Application\\ Support/com.adguard.adguard and execute. Restart your computer. Open the Terminal again, type ls -al /Library/StagedExtensions/Library/Application\\ Support/com.adguard.adguard/ and execute. You should receive the following: No such file or directory. Start AdGuard and enter your login information when prompted.","keywords":""},{"title":"Setting up filtering in Tor Browser","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/tor-filtering/","content":"Setting up filtering in Tor Browser :::정보 This article is about AdGuard for Mac, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app ::: By default, Tor Browser is added to AdGuard’s list of filtered applications. However, to filter it, AdGuard needs to change Tor's security settings. This will make Tor trust AdGuard's CA certificate. If you decide to filter Tor and check it in Preferences → Network → Applications, AdGuard will show you this dialog box: By updating Tor settings, AdGuard will set the following: security.enterprise_roots.enabled: true This setting will cause Tor to trust root certificates. Learn more security.cert_pinning.enforcement_level: 1 Public Key Pinning is a security measure that allows websites to ensure that the connection between a website and a user is authentic. This involves the website publishing a list of public keys, or pins, that it trusts. With the enforcement level set to 1, pinning is not enforced for custom CAs. Learn more To apply the changes, you’ll need to restart Tor Browser. If you manually change these settings, Tor filtering will be stopped.","keywords":""},{"title":"Safari 확장 프로그램","type":0,"sectionRef":"#","url":"adguard-for-safari/extensions/","content":"","keywords":""},{"title":"Safari 확장 프로그램이란 무엇인가요?​","type":1,"pageTitle":"Safari 확장 프로그램","url":"adguard-for-safari/extensions/#safari-확장-프로그램이란-무엇인가요","content":"Safari 확장 프로그램은 Safari 웹 브라우저에 기능을 추가하는 작은 소프트웨어 프로그램입니다. 이를 통해 사용자는 브라우저에 기본적으로 내장되어 있지 않은 기능을 추가하여 브라우징 환경을 개선할 수 있습니다. Safari용 AdGuard는 주로 확장 프로그램을 사용하여 Safari에서 열린 웹사이트에 필터링 규칙을 적용합니다. "},{"title":"작동 방식​","type":1,"pageTitle":"Safari 확장 프로그램","url":"adguard-for-safari/extensions/#작동-방식","content":"웹사이트의 광고, 트래커 및 방해 요소를 차단하기 위해 AdGuard는 필터링 규칙을 사용합니다. AdGuard의 규칙과 사용자 저의 필터는 Safari에서 이해할 수 있는 규칙으로 변환되어 6개의 Safari 확장 프로그램에 통합됩니다: AdGuard GeneralAdGuard PrivacyAdGuard SocialAdGuard SecurityAdGuard Other 각 콘텐츠 차단 확장 프로그램에는 최대 15만 개의 활성 필터링 규칙이 포함될 수 있습니다. 대부분의 필터 그룹 내 규칙 수는 15만 개를 넘지 않습니다. 그러나 언어별 또는 사용자 정의 필터를 너무 많이 활성화하면 한도를 초과할 수 있습니다. 이러한 경우 한도를 초과하는 임의의 규칙은 자동으로 비활성화되어 잘못된 차단으로 이어질 수 있습니다. 필요한 필터만 활성화하는 것이 좋습니다. 다른 기능을 담당하는 또 다른 확장 프로그램인 Safari용 AdGuard도 있습니다. Safari용 AdGuard는 Safari의 검색창 옆에 AdGuard 아이콘을 추가하고 고급 규칙을 사용하여 복잡한 광고를 차단할 수 있습니다.  아래에서 각 확장 프로그램에 대해 자세히 알아보세요. "},{"title":"콘텐츠 차단 확장 프로그램​","type":1,"pageTitle":"Safari 확장 프로그램","url":"adguard-for-safari/extensions/#콘텐츠-차단-확장-프로그램","content":"AdGuard General 확장 프로그램은 필터 → 광고 차단 및 필터 → 특정 언어에서 찾을 수 있는 필터의 규칙을 적용합니다. 이 확장 프로그램은 포괄적인 광고 차단에 중점을 두며 특정 언어의 광고에 대한 필터를 포함합니다. AdGuard Privacy 확장 프로그램은 필터 → 프라이버시에 있는 필터의 규칙을 적용합니다. 추적 메커니즘을 차단하고 브라우징 활동을 비공개로 유지합니다. AdGuard Social 확장 프로그램은 필터 → 소셜 위젯 및 필터 → 방해 요소에서 찾을 수 있는 필터의 규칙을 적용합니다. 웹 페이지에서 팝업, 소셜 미디어 버튼, 온라인 지원 창 및 기타 성가신 요소를 차단합니다. AdGuard Security 확장 프로그램은 필터 → 보안 섹션에서 규칙을 적용합니다. 이 확장 프로그램은 잠재적으로 유해한 요소를 식별하고 차단하여 악성 콘텐츠로부터 사용자를 보호합니다. AdGuard Other 확장 프로그램은 필터 → 기타에서 필터 규칙을 적용합니다. 이러한 필터(유용한 광고 필터, AdGuard DNS 필터 및 AdGuard 실험 필터)는 위의 카테고리에 포함되지 않습니다. AdGuard Custom 확장 프로그램은 사용자 정의 필터에 직접 추가한 필터의 규칙을 적용합니다. 사용자 규칙과 허용 목록 규칙은 모든 확장 프로그램에 포함되어 있습니다. "},{"title":"Safari용 AdGuard​","type":1,"pageTitle":"Safari 확장 프로그램","url":"adguard-for-safari/extensions/#safari용-adguard","content":"Safari용 AdGuard 검색창 옆에 있는 AdGuard 아이콘을 활성화합니다. 특정 웹사이트에 대한 보호 기능을 빠르게 설정하거나 수동으로 광고를 차단하려는 경우 유용합니다. 또한 Safari에서 지원되지 않는 형식으로 변환되지 않는 고급 규칙도 포함되어 있습니다. 고급 규칙에는 복잡한 광고(예: YouTube 광고)를 차단할 수 있는 CSS 규칙, CSS 선택기 및 스크립틀릿이 포함되어 있습니다. "},{"title":"Safari용 확장 프로그램 관리 방법​","type":1,"pageTitle":"Safari 확장 프로그램","url":"adguard-for-safari/extensions/#safari용-확장-프로그램-관리-방법","content":"Safari를 열고 화면 왼쪽 상단 모서리에 있는 Safari를 클릭하여 메뉴를 확장합니다. 설정...을 클릭합니다.확장 프로그램을 선택합니다.  "},{"title":"Safari용 AdGuard에 권한이 필요한 이유​","type":1,"pageTitle":"Safari 확장 프로그램","url":"adguard-for-safari/extensions/#safari용-adguard에-권한이-필요한-이유","content":"Safari용 AdGuard 확장 프로그램을 활성화할 때 웹페이지 콘텐츠에 액세스하고 인터넷 사용 기록에 액세스해야 한다는 메시지가 표시될 수 있습니다. 이러한 권한이 필요한 이유는 다음과 같습니다. 수동 광고 차단 및 고급 차단 규칙이 올바르게 작동하려면 웹페이지 콘텐츠에 액세스해야 합니다.웹사이트의 보호 상태를 확인하고 어떤 고급 규칙을 적용해야 하는지 결정하려면 검색 기록에 액세스해야 합니다. 당사는 이 데이터를 다른 목적으로 사용하거나 누구와도 공유하지 않습니다. 자세한 내용은 개인정보취급방침을 참조하세요. "},{"title":"정보","type":0,"sectionRef":"#","url":"adguard-for-safari/features/about/","content":"정보 정보 탭에서 제품의 현재 버전에 대한 정보와 법률 문서 링크를 확인할 수 있습니다. GitHub의 리포지토리 링크도 있습니다. 여기에서 제품 개발을 확인할 수 있습니다. 새로운 기능을 제안하고 버그를 신고할 수도 있습니다. Reminder AdGuard for Safari can be downloaded for free from the App Store. A detailed setup instruction is available in the Knowledge base.","keywords":""},{"title":"What is a content blocker?","type":0,"sectionRef":"#","url":"adguard-for-safari/features/content-blockers/","content":"What is a content blocker? 콘텐츠 차단기는 주제별 필터 블록입니다. Privacy-related filters are included in the content blocker with the corresponding name — AdGuard Privacy. 콘텐츠 차단기는 필터를 구조화하고 Apple의 제한 사항을 준수하기 위해 설계되었습니다. In 2019, Apple put limitations on ad blockers for Safari, allowing them to use only 50,000 filtering rules simultaneously. 5만 개의 필터링 규칙으로는 좋은 필터링 품질을 제공할 수 없었습니다. 예를 들어, AdGuard 베이스 필터에만 3만 개의 필터링 규칙이 있습니다. 그래서 Safari용 AdGuard를 각각 최대 5만 개의 규칙을 포함하는 6개의 콘텐츠 차단기로 나누었습니다. In 2022, Apple increased the filtering rule limit for each content blocker to 150,000 rules applied simultaneously. Safari용 AdGuard의 경우, 6개의 콘텐츠 차단기 모두에 대해 최대 90만 개의 규칙을 활성화할 수 있습니다. 한도는 증가했지만 콘텐츠 차단 기능의 구조는 그대로 유지되었습니다. 콘텐츠 차단기 탭에서 어떤 콘텐츠 차단기가 활성화되어 있는지, 각 차단기가 얼마나 많은 규칙을 사용하고 있는지, 어떤 필터가 작동하는지 확인할 수 있습니다. tip 필터 탭에서 활성화된 필터를 관리할 수 있습니다. 콘텐츠 차단기 섹션에서는 이미 활성화된 필터 목록만 볼 수 있습니다.","keywords":""},{"title":"AdGuard General","type":0,"sectionRef":"#","url":"adguard-for-safari/features/content-blockers/adguard-general/","content":"AdGuard General AdGuard General is a content blocker that combines the most essential filters for blocking ads. AdGuard 베이스 필터를 활성화해 두는 것이 좋습니다.","keywords":""},{"title":"AdGuard Custom","type":0,"sectionRef":"#","url":"adguard-for-safari/features/content-blockers/adguard-custom/","content":"AdGuard Custom If you need more filters, you can add them to AdGuard Custom. 사용자 정의 필터를 추가하려면 해당 필드에 URL 또는 로컬 파일 경로를 입력하세요. You can find new filters at filterlists.com.","keywords":""},{"title":"AdGuard Privacy","type":0,"sectionRef":"#","url":"adguard-for-safari/features/content-blockers/adguard-privacy/","content":"AdGuard Privacy 이 콘텐츠 차단기는 카운터 및 웹 분석 도구로부터 보호합니다. The AdGuard Tracking Protection filter is enabled by default.","keywords":""},{"title":"AdGuard Other","type":0,"sectionRef":"#","url":"adguard-for-safari/features/content-blockers/adguard-other/","content":"AdGuard Other AdGuard Other contains filters with various functions. 예를 들어, 검색 광고와 자체 홍보 광고의 차단을 해제하는 필터가 있습니다. 이러한 종류의 광고는 다른 광고보다 관련성이 높고 방해가 덜하기 때문에 어떤 경우에는 원하는 것을 찾는 데 도움이 됩니다. Disclaimer We don’t have any ‘acceptable ads’ paid by advertisers. Instead, we provide users with an option to see search ads and websites' self-promotion.","keywords":""},{"title":"필터","type":0,"sectionRef":"#","url":"adguard-for-safari/features/filters/","content":"필터 필터는 특별한 구문으로 작성된 규칙 목록입니다. 콘텐츠 차단기는 이러한 규칙을 사용하여 광고 또는 위험한 사이트에 대한 요청을 차단합니다. Filters are combined into eight thematic categories: Ad Blocking, Privacy, Social widgets, Annoyances, Security, Language-specific filters, Custom, and Other filters. Read more about AdGuard filters or ad filtering in general. 필터 탭에서 전체 카테고리 또는 개별 필터를 활성화할 수 있습니다. 필터 탭의 변경 사항은 콘텐츠 차단기 섹션(일반 탭에 있음)에 반영됩니다.","keywords":""},{"title":"AdGuard Social","type":0,"sectionRef":"#","url":"adguard-for-safari/features/content-blockers/adguard-social/","content":"AdGuard Social AdGuard Social contains filters against social media buttons, widgets, scripts, and icons. 팝업, 모바일 앱 배너, 쿠키 알림을 차단하는 필터와 같은 다른 방해 요소 필터도 이 섹션에서 찾을 수 있습니다. To enable them, find Social Widgets in the Filters tab.","keywords":""},{"title":"보통","type":0,"sectionRef":"#","url":"adguard-for-safari/features/general/","content":"","keywords":""},{"title":"일반 탭​","type":1,"pageTitle":"보통","url":"adguard-for-safari/features/general/#일반-탭","content":" 첫 번째 탭은 알림, 업데이트 간격, 시스템 시작 시 AdGuard 실행 등의 설정을 구성할 수 있는 일반 화면입니다. 메뉴 표시줄에 AdGuard 아이콘을 표시하도록 선택할 수도 있습니다. There you can also turn on content blockers to block ads, trackers, annoyances, etc. "},{"title":"사용자 규칙","type":0,"sectionRef":"#","url":"adguard-for-safari/features/rules/","content":"사용자 규칙 사용자 규칙을 사용하여 광고 차단을 맞춤 설정할 수 있습니다. 수동으로 추가하거나 가져올 수 있습니다. 페이지에서 항목을 차단하면 사용자 정의 규칙이 자동으로 만들어집니다. To add your own filering rules, use a special syntax.","keywords":""},{"title":"AdGuard Security","type":0,"sectionRef":"#","url":"adguard-for-safari/features/content-blockers/adguard-security/","content":"AdGuard Security 이 콘텐츠 차단기는 여러 보안 관련 필터를 통합합니다. Malware Domains Blocklist blocks domains that are notorious for spreading malware and spyware. Spam404 protects you from Internet fraudsters. NoCoin Filter List disrupts browser-based cryptominers, such as Coinhive.","keywords":""},{"title":"설치 방법","type":0,"sectionRef":"#","url":"adguard-for-safari/installation/","content":"","keywords":""},{"title":"Safari용 AdGuard를 설치하는 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-for-safari/installation/#install","content":"Safari용 AdGuard는 App Store에서 다운로드할 수 있는 무료 앱입니다. 기기에 Safari용 AdGuard를 설치하려면 다음 단계를 따르세요. App Store를 열고 필요한 확장 프로그램을 찾습니다. 받기 → 설치 → 열기를 누릅니다. Safari용 AdGuard를 설정하려면 Safari 설정에서 AdGuard 확장 프로그램을 활성화합니다. note Safari용 AdGuard가 제대로 작동하기 위해 모든 확장 프로그램이 필요한 것은 아닙니다. 예를 들어 아이콘 확인란을 선택하면 검색창 옆에 AdGuard 아이콘이 나타납니다. 그러나 모두 활성화하는 것이 좋습니다. ::: ![확장 프로그램 확인됨](https://cdn.adtidy.org/content/Kb/ad_blocker/safari/adguard-for-safari-extensions-checked.png)  AdGuard가 웹사이트에서 작동하려면 콘텐츠 차단 기능을 활성화합니다. 모든 웹사이트에 사용 설정하거나 원하는 웹사이트를 선택할 수 있습니다. note 이 단계는 iOS 9.0 이상, macOS 10.11(Safari 10 포함) 및 macOS 10.12 이상에서 필요합니다. ::: macOS에서는 설정 → 웹사이트 → 콘텐츠 차단기를 클릭합니다. 모든 웹사이트에서 AdGard를 사용하려면 다른 웹사이트 방문 시를 켭니다.  On iOS, go to Settings → Safari → Content Blockers, and set the option to Yes.  1~4단계를 완료하면 Safari용 AdGuard가 작동하기 시작합니다. 이제 해당 설정을 구성할 수 있습니다. "},{"title":"Safari용 AdGuard를 제거하는 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-for-safari/installation/#uninstall","content":"Safari용 AdGuard를 제거하려면 다음 단계를 수행하세요. 앱을 종료합니다. Safari 환경설정을 엽니다. 확장 프로그램 탭을 선택합니다. 확장 프로그램 목록이 표시되며, AdGuard에는 8개의 확장 프로그램이 있습니다. 모든 확인란의 선택을 취소하고 그 아래에서 제거를 누릅니다. 알림이 표시됩니다. Finder에서 보기 를 누르고 앱을 휴지통으로 이동합니다. Safari용 AdGuard가 기기에서 제거됩니다. "},{"title":"Filtering doesn’t work and ads aren’t blocked","type":0,"sectionRef":"#","url":"adguard-for-safari/solving-problems/ads-not-blocked/","content":"","keywords":""},{"title":"How to fix​","type":1,"pageTitle":"Filtering doesn’t work and ads aren’t blocked","url":"adguard-for-safari/solving-problems/ads-not-blocked/#how-to-fix","content":"Open Safari.Click Safari in the left upper corner menu.Click Settings… → Extensions.Clear the checkboxes for AdGuard’s extensions: Custom, General, Other, Privacy, Security, Social, AdGuard for Safari, and AdGuard Assistant.Restart Safari.Return to Settings... → Extensions and re-enable the content-blocking extensions.Open AdGuard for Safari app.Go to Filters.Click Check for updates.Do not close the AdGuard for Safari window until the filters are updated. If this doesn’t help and ads are still not being blocked, please contact our support at support@adguard.com. If you only have problems with a specific page or website, you can report it directly from the browser: click the AdGuard for Safari icon next to the Safari search bar, and then click Report an issue. "},{"title":"How to collect logs in AdGuard for Safari","type":0,"sectionRef":"#","url":"adguard-for-safari/solving-problems/logs/","content":"","keywords":""},{"title":"로그 수집 방법​","type":1,"pageTitle":"How to collect logs in AdGuard for Safari","url":"adguard-for-safari/solving-problems/logs/#로그-수집-방법","content":"Open AdGuard for Safari app.Scroll down and click Export logs.Choose a location to save the .zip file and click Save. Now you can send this file to support@adguard.com or attach it to your bug report on GitHub. AdGuard is committed to protecting your privacy. We strictly follow our Privacy Policy and do not collect any private information about users. Before sending your logs to the support team, please review the file as it may contain additional information that you don’t want to share. If it contains such personal information, we recommend that you delete it first. Open the AdGuard for Safari GitHub repo and click New issue.Send the log file to devteam@adguard.com. Include the time of the bug and attach a link to your issue or its number (it appears as #number next to the title). Alternatively, you can upload the log file to Google Drive and send it to devteam@adguard.com. Add the file link to your GitHub issue. "},{"title":"Filtering doesn’t stop when AdGuard for Safari is disabled","type":0,"sectionRef":"#","url":"adguard-for-safari/solving-problems/filters-after-disable/","content":"","keywords":""},{"title":"How to fix​","type":1,"pageTitle":"Filtering doesn’t stop when AdGuard for Safari is disabled","url":"adguard-for-safari/solving-problems/filters-after-disable/#how-to-fix","content":"Open Safari.Click Safari in the left upper corner menu.Click Settings… → Extensions.Clear the checkboxes for AdGuard’s extensions: Custom, General, Other, Privacy, Security, Social, AdGuard for Safari, and AdGuard Assistant.Restart Safari.Return to Settings... → Extensions and re-enable the content-blocking extensions. Now everything should work as intended: filtering is on when AdGuard for Safari is enabled, and filtering is off when it is disabled. "},{"title":"Documentation for admins","type":0,"sectionRef":"#","url":"adguard-for-windows/admins-documentation/","content":"","keywords":""},{"title":"Rule limit issues","type":0,"sectionRef":"#","url":"adguard-for-safari/solving-problems/rule-limit/","content":"","keywords":""},{"title":"Safari content blocker rule limit​","type":1,"pageTitle":"Rule limit issues","url":"adguard-for-safari/solving-problems/rule-limit/#safari-content-blocker-rule-limit","content":"AdGuard for Safari uses the Content Blocking API to apply filtering rules to pages in the Safari browser. Currently, a maximum of 150,000 rules are allowed for each content-blocking extension. AdGuard for Safari has 6 content blockers: AdGuard GeneralAdGuard PrivacyAdGuard SocialAdGuard SecurityAdGuard OtherAdGuard Custom This makes a total of 900,000 filtering rules. However, an extension can contain up to 150,000 rules. If you exceed this limit, some of the rules will not be applied. This may lead to incorrect blocking. "},{"title":"How to check if you are exceeding the rule limit​","type":1,"pageTitle":"Rule limit issues","url":"adguard-for-safari/solving-problems/rule-limit/#how-to-check-if-you-are-exceeding-the-rule-limit","content":"Open AdGuard for Safari app.Scroll down and click Content blockers.Below each content blocker, you can see the enabled filters and the number of active rules. If more than 150,000 rules are enabled in a content blocker, you may need to disable some filters or user rules from it. Go to Filters, select the problematic category, and disable the filters or user rules you don’t need. "},{"title":"1. Download the MSI​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#msi-download","content":"Download the AdGuard MSI x86 Download the AdGuard MSI x64 "},{"title":"2. Configure the settings for your network​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#settings-configuring","content":"On machines that are joined to an Active Directory domain, policy settings may also be stored in the registry under HKEY_LOCAL_MACHINE in the following path: Software\\Policies\\AdGuard\\. The only supported policy is LicenseKey. If this policy is set, AdGuard will prefer it over what user can enter in the interface. This license key will be used for checking license status. "},{"title":"3. Make sure that AdGuard servers are available​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#servers-available","content":"AdGuard connects to two hosts: api.adguard.org and filters.adtidy.org. Make sure that both servers are available. "},{"title":"4. Push the MSI out to your network​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#msi-push","content":"If you usually use SMS or other tools, use them to push out the AdGuard MSI just as you would normally do with any other installation bundle. Otherwise, you can run the MSI on the target machine directly (and silently) with this command: Msiexec /q /i AdGuard.msi If you need to roll out an update, use this command: Msiexec /q /i AdGuard.msi REINSTALL=ALL REINSTALLMODE=vomus note You must run these commands with admin privileges. If you want to install AdGuard on a Windows 7 computer, make sure that it has .NET 4 Client Profile installed: https://www.microsoft.com/en-us/download/details.aspx?id=24872 note If you have installed AdGuard for Windows from an MSI file, AdGuard will not be updated automatically. To allow manual updates: In versions released after v7.16, delete the ForbidCheckUpdates parameter or set its value to NO (case-insensitive) in the registry under HKEY_LOCAL_MACHINE\\SOFTWARE\\Adguard. In v7.16 and earlier versions, set to YES (case-insensitive) the AllowCheckUpdates parameter for the HKEY_LOCAL_MACHINE\\SOFTWARE\\Adguard key on x86 OS or HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Adguard key on x64 OS. Any other value or no value for this parameter will disable automatic updates. Please note that such installation of the application and manual updates are not recommended and can cause technical problems. "},{"title":"5. Test your installation​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#installation-test","content":"On a target machine, launch AdGuard. Open the license screen to check that it uses the one you've set. You might need to click &quot;Refresh status&quot; to make AdGuard validate the license key. "},{"title":"AdGuard for Safari doesn’t work in private tabs on macOS Sonoma","type":0,"sectionRef":"#","url":"adguard-for-safari/solving-problems/private-sonoma/","content":"","keywords":""},{"title":"How to fix​","type":1,"pageTitle":"AdGuard for Safari doesn’t work in private tabs on macOS Sonoma","url":"adguard-for-safari/solving-problems/private-sonoma/#how-to-fix","content":"Open Safari.Click Safari in the left upper corner menu.Click Settings… → Extensions.Check Allow in Private Browsing for all AdGuard extensions. If this doesn’t help and ads are still not being blocked, please contact our support at support@adguard.com. If you only have problems with a specific page or website, you can report it directly from the browser: click the AdGuard for Safari icon next to the Safari search bar, and then click Report an issue. "},{"title":"Browser Assistant","type":0,"sectionRef":"#","url":"adguard-for-windows/browser-assistant/","content":"","keywords":""},{"title":"Benefits​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#benefits","content":""},{"title":"Independence​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#independence","content":"AdGuard Browser Assistant is a browser extension, it is installed in a browser, so there is no need to wait for the userscript to be injected into the filtered web page, as it was with the preceding one. In other words, it is more autonomous from the main AdGuard app. Still, Browser Assistant needs the installed AdGuard for Windows, because there is no point in using the extension without the app. "},{"title":"Compatibility with the main app​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#compatibility-with-the-main-app","content":"If you got into the habit of using our previous AdGuard Ad Blocker extension, you might like the solution that we have developed for the new Browser Assistant. Background information: In previous versions of the AdGuard Browser Extension (before v3.5), if you had it installed along with the AdGuard for Windows app, the extension took over the functions of Assistant, stopped filtering itself and relied on the app to do this. The extension and the app worked in conjunction but sometimes the integration would fail. Some websites would stop being protected by the desktop program and be backed up only by the less powerful extension. When using the Browser Assistant, all these problems don’t matter as there can be no conflicts in essence. The role of the Browser Assistant is well-defined and it can’t hinder the functioning of the main app, so there is no need to worry. "},{"title":"Separate tab in Settings​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#separate-tab-in-settings","content":"The new Browser Assistant has its own tab in AdGuard for Windows settings, along with Stealth Mode, Browsing security, Parental Control and others. There you will find a link to download the extension for your default browser. Besides, there is a checkbox to enable the legacy Assistant.  "},{"title":"Legacy Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#legacy-assistant","content":"Legacy Assistant is the previous version of Assistant, which is a mere userscript, not a browser extension. Basically, there are two cases when you might want to pick it instead of the new Browser Assistant: The new Assistant is not available for your browser.You are used to the green shield icon and want to leave things as they were. "},{"title":"How to install AdGuard Browser Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#how-to-install-adguard-browser-assistant","content":"If you want to install the Browser Assistant for your default browser, you can do it directly from the app settings, but you also have an opportunity to install it for other browsers. AdGuard Browser Assistant is available for all popular browsers: Chrome, Firefox, Edge, Opera, and Yandex. To install the one you need (or many, it is not prohibited but even encouraged), go to our website, click the browser icon and tap the Install button. That’s it! "},{"title":"Home screen","type":0,"sectionRef":"#","url":"adguard-for-windows/features/home-screen/","content":"Home screen info 본 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 Windows용 AdGuard에 대해 다룹니다. To see how it works, download the AdGuard app AdGuard for Windows is an easy-to-use tool that blocks annoying banners, popups, video ads, and trackers. But that's not all: it helps you save traffic, load web pages faster, and protect your computer from undesirable and potentially malicious websites. AdGuard also protects you from phishing websites and keeps your kids away from inappropriate content. Once you start AdGuard for Windows, you will see the main screen of the app. Its most noticeable detail is the enable/disable protection button. Also, on this screen you can monitor blocked ads, trackers and threats statistics, find out the current version of the app or update it. Furthermore, there are four tabs in the upper right corner: Settings, Support, License, and About. Each of these is worth talking about separately.","keywords":""},{"title":"확장 프로그램","type":0,"sectionRef":"#","url":"adguard-for-windows/features/extensions/","content":"","keywords":""},{"title":"Network​","type":1,"pageTitle":"확장 프로그램","url":"adguard-for-windows/features/extensions/#network","content":"The penultimate module is dedicated to network filtering, and here you will find additional network-related options. Two of them are enabled by default: Enable traffic filtering and Filter HTTPS protocol. These are important extra precautions to better filter your web space. 대부분의 웹 사이트와 광고 네트워크는 현재 HTTPS를 사용하고 있습니다. From many sites, like youtube.com, facebook.com and twitter.com, it is impossible to remove ads without HTTPS filtering. So keep the Filter HTTPS protocol feature enabled unless you have a strong reason not to.  In this module you can check the checkbox &quot;Use AdGuard as an HTTP proxy&quot; to use AdGuard as a regular HTTP proxy which will filter all traffic passing through it. You can also enable the Filter websites with EV certificates feature. Extended Validation (EV) SSL Certificates offer a stronger safety guarantee; owners of such websites have to pass a thorough and globally standardized identity verification process defined by EV guidelines. Which is the reason why some users trust websites with such certificates and prefer not to filter them. At last, there is a section with proxy settings. There you can specify which proxy server AdGuard should use to update filters, get new versions and so on. "},{"title":"AdGuard VPN​","type":1,"pageTitle":"확장 프로그램","url":"adguard-for-windows/features/extensions/#adguard-vpn","content":"The last section is dedicated to AdGuard VPN — an ideal tool that provides security and anonymity each time you browse the Internet. You can download it by clicking the Download button or go to the AdGuard VPN website by clicking the Homepage button. How does AdGuard VPN work? Without going into technical details, we can say that VPN creates a secure encrypted tunnel between the user's computer or mobile device and a remote VPN server. In this way, data confidentiality is preserved, as well as the anonymity of the user, because a third-party observer sees the IP address of the VPN server and not the actual user's IP. What AdGuard VPN does: hides your real whereabouts and helps you stay anonymouschanges your IP address to protect your data from trackingencrypts your traffic to make it unreadable to third partieslets you configure where to use VPN and where not to (exclusions feature) To get more information about AdGuard VPN dive into the AdGuard VPN Knowledge Base. "},{"title":"Other features","type":0,"sectionRef":"#","url":"adguard-for-windows/features/others/","content":"","keywords":""},{"title":"고객 지원​","type":1,"pageTitle":"Other features","url":"adguard-for-windows/features/others/#고객-지원","content":" By clicking the Support tab you will open a dialog box through which you can report a bug, submit a feature request, or simply share your opinion of the product. "},{"title":"라이선스​","type":1,"pageTitle":"Other features","url":"adguard-for-windows/features/others/#라이선스","content":" This tab contains information about your license. Here you can: find out the license type (nightly build, beta or release), the number of devices available for simultaneous connection to AdGuard, the license expiration date;click the button to go to the license purchase page, and activate, reset or recover a license. "},{"title":"정보​","type":1,"pageTitle":"Other features","url":"adguard-for-windows/features/others/#정보","content":" In addition to information about the current version of the program, this tab provides some useful links to Licese agreement, Privacy policy, Acknowledgements, Discussions, and Version history pages. "},{"title":"Check for updates​","type":1,"pageTitle":"Other features","url":"adguard-for-windows/features/others/#check-for-updates","content":" To check for filters and userscripts updates, click the rotating arrows icon in the upper right corner of the app's main screen. "},{"title":"Tray menu​","type":1,"pageTitle":"Other features","url":"adguard-for-windows/features/others/#tray-menu","content":"To save you time navigating around AdGuard menus, many of the frequently used options and settings are available from the tray menu. To call the menu, right-click the AdGuard icon in the tray. It will offer you the following options: enable protectiondisable protection: completely or for 30 secondsgo to Settingsopen the Tools and Advanced menuscheck for filter updatescheck for app updatesto recall the last pop-up messagereach the Support and About sectionsclose AdGuard, but continue filteringexit AdGuard "},{"title":"설치 방법","type":0,"sectionRef":"#","url":"adguard-for-windows/installation/","content":"","keywords":""},{"title":"시스템 요구 사항​","type":1,"pageTitle":"설치 방법","url":"adguard-for-windows/installation/#시스템-요구-사항","content":"운영 체제: Microsoft Windows 11, 10, 8.1, 8, 7, Vista. RAM: 512 MB 이상. 디스크 여유 공간: 150 Mbytes. 브라우저: Microsoft Edge, Microsoft Internet Explorer(모든 버전), Opera, Google Chrome, Yandex.Browser, Mozilla Firefox, 등등. "},{"title":"AdGuard installation​","type":1,"pageTitle":"설치 방법","url":"adguard-for-windows/installation/#adguard-installation","content":"Microsoft Windows의 PC 또는 태블릿에서 AdGuard를 사용하려면 설치 패키지를 다운로드하고 설치하면 됩니다. 다음 단계를 따라와 보세요. AdGuard 웹사이트로 이동하여 열린 페이지에서 다운로드를 클릭합니다. When the download is finished, press the Open button shown in the Downloads bar or click the file name adguardInstaller.exe. You’ll see the User Account Control dialogue box requesting to allow the app to make changes to your PC. Click Yes. Next, choose the folder on your PC for the app to be installed to. If you do not agree with the default installation path, press Browse, select the folder for AdGuard installation in the Browse For Folder window, and confirm your choice by clicking OK. You can also install AdGuard to a new folder by clicking Make New Folder and entering its name. To create a desktop shortcut for AdGuard, check the Create a desktop shortcut box. Press Install to proceed with installation. Wait for the installation to complete and click Finish. Congratulations! You have successfully installed AdGuard on your computer. On the screen you will see the main window where you can change the app’s settings. "},{"title":"Windows용 AdGuard를 제거하는 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-for-windows/installation/#uninstall","content":""},{"title":"일반 제거 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-for-windows/installation/#일반-제거-방법","content":"If you need to uninstall or reinstall AdGuard, do the following: Microsoft Windows 10 &amp; 11: 시작을 클릭하여 시작 메뉴를 열고 설정을 선택합니다. 열리는 창에서 앱 아이콘을 클릭합니다. 앱 창의 왼쪽 목록에서 앱 및 기능을 선택합니다. 설치된 앱 목록에서 AdGuard를 선택하고 제거를 클릭합니다. 확인을 위해 열리는 대화 상자에서 제거를 클릭합니다.  For Microsoft Windows 8: Right-click the empty space in the lower left corner of the task bar and select Control Panel. 프로그램 섹션에서 프로그램 제거를 클릭합니다. 설치된 앱 목록 중에 AdGuard를 선택하고 목록 바로 위에 있는 제거 버튼을 누릅니다. 열리는 창에서 AdGuard 제거를 클릭하여 확인합니다.  For Microsoft Windows 8.1: Right-click the Start button and select Control Panel. 프로그램 섹션에서 프로그램 제거를 클릭합니다. 설치된 앱 목록 중에 AdGuard를 선택하고 목록 바로 위에 있는 제거 버튼을 누릅니다. 열리는 창에서 AdGuard 제거를 클릭하여 확인합니다. Microsoft Windows 7: 시작 메뉴를 엽니다. 검색 창에 제어판을 입력합니다. 프로그램 섹션에서 프로그램 제거를 클릭합니다. 설치된 앱 목록 중에 AdGuard를 선택하고 목록 바로 위에 있는 제거 버튼을 누릅니다. 열리는 창에서 AdGuard 제거를 클릭하여 확인합니다.  "},{"title":"고급 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-for-windows/installation/#advanced","content":"In case regular uninstall doesn't work for any reason, you can try to use an advanced method. First of all, you need to download the uninstaller tool created by our developers. Extract the archive to any folder on your PC and run the Adguard.UninstallUtility.exe file, and allow the app to make changes to your device. Then follow the instruction below: Select AdGuard Ad Blocker and Standard uninstall type, then click Uninstall.  Click OK once the warning window pops up:  Wait until uninstall is finished — there will be a phrase Uninstall complete and a prompt to restart your computer:  caution Follow the next steps only if performing the first two steps wasn’t enough for some reason. We strongly suggest contacting our support before using steps 3-4 of advanced uninstall instruction. Select AdGuard Ad Blocker and Extended uninstall type, then click Uninstall. Clcik Yes, continue in the window prompt.  Click OK once the warning window pops up:  Wait until uninstall is finished — there will be a phrase Uninstall complete and a prompt to restart your computer:  AdGuard is successfully uninstalled! "},{"title":"AdGuard 로그 수집하는 방법","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/adguard-logs/","content":"","keywords":""},{"title":"Debug logs​","type":1,"pageTitle":"AdGuard 로그 수집하는 방법","url":"adguard-for-windows/solving-problems/adguard-logs/#debug-logs","content":"Open the AdGuard settings. Go to the General Settings section, scroll down to the end of the screen and switch the Logging Level to Debug. Reproduce the issue. We strongly advise to take note of the exact time when you reproduced the issue: it will help our support team to find relevant log entries and solve the problem faster. Export the recorded logs using the Export Logs button. Save the archive to any folder. Important: after exporting the logs, set the logging level back to Standard. Debug logging level will slow down the application. Send the archive to the AdGuard support service at support@adguard.com, describe the problem and don't forget to mention the time when you reproduced the issue. "},{"title":"추적 로그​","type":1,"pageTitle":"AdGuard 로그 수집하는 방법","url":"adguard-for-windows/solving-problems/adguard-logs/#trace-logs","content":"Sometimes support team members may ask you to send trace logs. Then you will need to do the following: Stop AdGuard by right-clicking the AdGuard icon in the tray menu and choosing Exit AdGuard: Please don't leave the service running: Open the console (type cmd in the start panel). Run the application with the command C:\\&quot;Program Files&quot;\\Adguard\\Adguard.exe /trace regardless of Windows bitness if you have installed AdGuard v7.16 for Windows or later. If you have an older version of AdGuard for Windows, run the application with the command C:\\&quot;Program Files (x86)&quot;\\Adguard\\Adguard.exe /trace if you are using 64-bit Windows, and C:\\&quot;Program Files&quot;\\Adguard\\Adguard.exe /trace if you are using 32-bit. Reproduce the issue. We strongly advise to take note of the exact time when you reproduced the issue: it will help our support team to find relevant log entries and solve the problem faster. Export the recorded logs using the Export Logs button. Don't worry if the log file is large. We need to know as much detail as possible to fix your problem. "},{"title":"Settings","type":0,"sectionRef":"#","url":"adguard-for-windows/features/settings/","content":"","keywords":""},{"title":"General settings​","type":1,"pageTitle":"Settings","url":"adguard-for-windows/features/settings/#general-settings","content":"Here you can set the language and theme (Dark or Light), enable AdGuard launching at system start-up and silent automatic updates, choose the update channel and filter update check interval. Also Settings is the place to go if AdGuard for Windows is not working properly and the support team asked you to collect Debug logs.  At the very bottom of the screen you will find Advanced Settings. Changing some of them mindlessly may potentially cause problems with AdGuard's performance, break the Internet connection or compromise your security and privacy. That's why we suggest you open this section only if you are sure of what you are doing or our support team has asked you about it. If you want to know what can be set up in Advanced Setting read the dedicated article. "},{"title":"Ad Blocker​","type":1,"pageTitle":"Settings","url":"adguard-for-windows/features/settings/#ad-blocker","content":"This is the main module of AdGuard for Windows that removes ads from the websites you visit and from the apps installed on your device. To filter out advertising and privacy-threatening content such as banners, pop-ups, or trackers AdGuard uses different filters: groups of rules with a similar purpose written with a special syntax. To understand what filters are and how they work read this article.  In the Ad Blocker module you can: enable automatic activation of language-specific filters,disable search ads and self-promotion blocking,activate pre-installed filters such as AdGuard Base filter,install filters from the list or add a custom filter by clicking the Add a filter button,make changes to existing rule groups using the Filter editor button,see all the requests sent by browsers and apps installed on your computer by clicking the Filtering log button. From there you can also block or unblock any request by creating a custom rule,compose a filter from your own rules written manually, imported or created with the AdGuard Assistant extension. Before you start manually writing your own rules read our detailed syntax guide. "},{"title":"스텔스 모드​","type":1,"pageTitle":"Settings","url":"adguard-for-windows/features/settings/#스텔스-모드","content":"Many websites gather information about their visitors, such as their IP addresses, information about the browser and operating system installed, screen resolution, and even what page the user came or was redirected from. Some web pages use cookies to mark the browser and save your personal settings, user preferences, or &quot;recognize&quot; you upon your next visit. Stealth Mode safeguards your personal information from such data and statistics gathering systems.  You can flexibly adjust the work of Stealth Mode: for instance, you can prohibit the website to receive the search request you used to find it on the Internet, automatically delete both third-party and website’s own cookies, and disable location sharing in your browser that can be used to track your whereabouts. To learn everything about Stealth Mode and its many options, read this article. "},{"title":"브라우징 보안​","type":1,"pageTitle":"Settings","url":"adguard-for-windows/features/settings/#브라우징-보안","content":"Browsing security gives strong protection against malicious and phishing websites. No, AdGuard for Windows is not an antivirus. It will neither stop the download of a virus when it's already started, nor delete the already existing ones. But it will warn you if you're about to proceed to a website whose domain has been added to our &quot;untrusted sites&quot; database, or to download a file from such website. You can find more information about how this module works in the dedicated article. In this module you can enable notifications to block requests to malicious and phishing sites,activate sound notifications,agree to submit anonymous security-related info to the AdGuard server to help us keep the malicious and phishing websites database up to date.  In case you want to learn more about Browsing security, read this article. "},{"title":"DNS Protection​","type":1,"pageTitle":"Settings","url":"adguard-for-windows/features/settings/#dns-protection","content":"There are three significant reasons why you might want to explore the DNS protection settings. First, to avoid being tracked by your ISP. Every time you open a website, for example google.com, your browser sends a request to a DNS server to get the IP address of the website in return. Usually, the DNS server belongs to your ISP, which allows them to track your online activity. Second, to encrypt you DNS traffic. And the third one is to block content on DNS level.  In the DNS protection module of AdGuard for Windows you can select the DNS servers from known DNS providers, including AdGuard DNS that blocks ads and trackers, AdGuard DNS Family Protection that in addition blocks adult content, or AdGuard DNS Non-filtering that provides a secure and reliable connection, but doesn't filter anything. You can even add custom DNS servers. Also there is an option to add custom rules using DNS rule syntax. And if necessary, you can add DNS filters of your choice. "},{"title":"Parental Control​","type":1,"pageTitle":"Settings","url":"adguard-for-windows/features/settings/#parental-control","content":"There are several websites to which access should be restricted from a PC used by children. This task is accomplished by Parental Control.  The module checks the contents of web pages opened in the browser and filters those with content undesirable for children: images and texts for adults, crude language, violence, drug propaganda, etc. Parental Control settings are password-protected so that the child is not able to go round the restrictions. This module not only blocks directions to undesirable sites but can also delete the links that are inappropriate for children from the search results. In the Parental Control module you can enable the Safe search and manage the blocklist and the allowlist to customize how this option works. You can also check the Block executable files download box to prevent your child from downloading and installing software on the computer. There are two more options in the Parental Control module: you can select a specific Windows user to be protected by Parental Control and set a password to protect AdGuard settings from change.  "},{"title":"Browser Assistant​","type":1,"pageTitle":"Settings","url":"adguard-for-windows/features/settings/#browser-assistant","content":" From this tab you can easily proceed to install AdGuard Browser Assistant, which primary function is to manage filtering directly from the browser. We explained more about how to work with it and what to do if there is no Browser Assistant for your browser in the separate article. "},{"title":"Certificate-related issues","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/connection-not-trusted/","content":"","keywords":""},{"title":"Potential Security Risk error in Firefox-based browsers​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#potential-security-risk-error-in-firefox-based-browsers","content":" Old FireFox versions, as well as browsers based on them, do not trust certificates from the system storage, but only those from their local storage. Since v68, FireFox trusts the system certificates, but you still can face the &quot;Connection is untrusted&quot; error. If something like this happens, first try to click the Reinstall Certificate button — you will find it in the Network tab.  If that doesn't help, follow the instructions for manually adding the AdGuard certificate to the FireFox storage. This instruction is for Firefox browser. Names of buttons and menu items may differ in other Firefox-based browsers. Run AdGuard. Go to http://local.adguard.org/cert and click the Download button. The browser should start downloading cert.cer file. note You can also open the download page by clicking the link via the AdGuard app at Settings → Network → HTTPS filtering. ::: ![Certificate settings](https://cdn.adtidy.org/content/kb/ad_blocker/windows/solving-problems/link.jpeg)  Open your browser and then open Settings. Go to Privacy &amp; Security tab. Scroll down to Certificates and click the View Certificates button. Select Authorities tab. Click Import.... Browse the downloaded cert.cer file and click Open. Check the Trust this CA to identify websites box and then click OK. You've successfully installed AdGuard certificate. Restart the browser and the error should go away. "},{"title":"Yandex.Browser certificate warning​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#yandexbrowser-certificate-warning","content":"If you are a user of both AdGuard for Windows and Yandex.Browser you may have come across this warning:  "},{"title":"Why is this happening​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#why-is-this-happening","content":"Both AdGuard and Yandex take users' security on the Internet very seriously. Current Yandex policy is to warn their users about any certificate that is not recognized by the browser. This is not unsubstantiated, because sometimes malicious apps can inject their own certificates and use this to harm the system and steal private data. However, AdGuard also adds its certificate to the trusted ones. This leads to the warning message you have encountered. "},{"title":"How to solve the problem​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#how-to-solve-the-problem","content":"The easiest way is to click the Go to site button. This will tell Yandex.Browser to remember AdGuard certificate as a trusted one, at least for a while. Normally, you won't have to see this message anymore, but it is not beyond the realm of possibility for it to appear occasionally, for whatever reasons. In such cases, simply press the same button again (make sure it is AdGuard's certificate!). Disabling the HTTPS filtering in AdGuard will also prevent Yandex.Browser from showing this message again, but it comes with a big price: all ads that are loaded by HTTPS (including Yandex's own ads) will show up — on such websites as YouTube, Facebook, Instagram, and many more. We strongly advise against it if you want to keep the quality of ad blocking high. "},{"title":"How to create a dump file","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/dump-file/","content":"How to create a dump file :::정보 본 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 Windows용 AdGuard에 대해 다룹니다. To see how it works, download the AdGuard app ::: To diagnose the reasons for potential problems that users might encounter while using AdGuard, the support team might need the process dump file. The dump file helps developers to see the processes that were executed in the application over a given period of time. Below you can check on the instructions of how to collect the dump file on your PC. Press Ctrl + Shift + Esc and click Task Manager In the upper menu bar select Details Right-click the process that you want to create the dump file for (for example, the support team may ask you to create a dump for Adguard.exe) In the drop-down menu click Create dump file The file was created successfully! After you’ve created the dump file, please navigate to the file location. You should be prompted to open the folder containing the dump file right after its creation. Otherwise, you will be able to find it inside the %tmp% folder. The created dump file (.DMP) has the same name as the name of the process you chose in the previous steps. The file is quite large, so please compress it into an archive before sending to support. note AdGuard for Windows has two running processes (Adguard.exe and AdguardSvc.exe). So you need to create the dump file separately for each process. When you send the dump files to the support team, please also attach the AdGuard application logs so we have a better chance at solving the problem. Here you can check the instructions on how to collect the log file.","keywords":""},{"title":"Common installer errors","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/common-installer-errors/","content":"","keywords":""},{"title":"Error 5: Access Denied​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-5","content":"This error occurs when there's something wrong with permissions. There may be several different reasons why AdGuard installer doesn't have the permissions it requires to properly finish the installation process. You can try the following steps: Temporarily disable your antiviruses. Some of them may interfere with the installation, depending on the severity of their settings. Choose a different installation folder. It is possible that the current installation folder has some access restrictions. Also make sure you don't select an external drive, a virtual drive, etc. Reboot your computer. Sometimes the permission issues are temporary and can be solved by restarting the PC. "},{"title":"Error 112: Disk is full, Error 1632: Temporary folder full or inaccessible​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-112","content":"These are two different errors with very similar solutions. As their names suggest, AdGuard installer didn't find enough disk space to complete the installation. There are several things you can attempt to fix the problem: Uninstall some programs or delete unnecessary files from the drive you were trying to install AdGuard to. Download, install, and run AdwCleaner, a free piece of software by Malwarebytes. It will, among other things, clean your system from all kinds of extra &quot;leftover&quot; files that remain after incorrectly uninstall programs and such. It will help clean up some disk space. Reboot your computer. Sometimes temporary files can take up a considerable amount of disk space, and restarting your PC is the most reliable way to get rid of them. "},{"title":"Error 1601: Windows Installer is not accessible​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1601","content":"You could say this is a particular sub-case of Error 1603. The possible solutions are similar: Start and re-register Microsoft Installer service. It requires some work. 1) Press Win + R and enter services.msc. 2) Find in the list and double click Windows Installer. 3) Hit Start button under Service status and hit OK. If the service status is running, you should click Stop first and then hit Start. 4) Press Win + R, type and enter msiexec /unregister and hit Enter. 5) Press Win + R again, type and enter msiexec /regserver and hit Enter Reboot the PC and start the installation all over again. Sometimes that's enough to fix the problem. "},{"title":"Error 1602: Canceled by user​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1602","content":"If you got this error code, chances are you have interrupted the installation process manually in one way or another. What you can do is: Don't close the installer window. When the installation is complete, it will close automatically. If a dialogue window pops up during the installation, hit &quot;Yes&quot; to grant the installer the required permissions. Clicking &quot;No&quot; will cancel the installation. Don't start other processes while the installation process is going on. "},{"title":"Error 1603: Fatal error during installation​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1603","content":"The error sounds scarier than it actually is. In reality, this is a rather generic error that can have many different causes, and some of them are easily fixed. Try the following solutions: Press the Win key, search for Command Prompt and run it. There, type in sfc /scannow and press Enter. Choose a different installation folder. It is possible that the current installation folder has some access restrictions. Also make sure you don't select an external drive, a virtual drive, etc. Uninstall AdGuard using our special uninstall tool and then repeat the installation. Start and re-register Microsoft Installer service. It requires some work. 1) Press Win + R and enter services.msc. 2) Find in the list and double click Windows Installer. 3) Hit Start button under Service status and hit OK. If the service status is running, you should click Stop first and then hit Start. 4) Press Win + R, type and enter msiexec /unregister and hit Enter. 5) Press Win + R again, type and enter msiexec /regserver and hit Enter Acquire full permissions on the drive for installation. It is possible that the error 1603 occurs because you don’t have full permissions on the file location. It's also not as easy as some of the other solutions: 1) Open File Explorer, right-click the drive containing the installation location and select Properties. 2) Go to Security tab and click Edit. 3) Single-click SYSTEM and ensure that the Allow box of every item in Permissions for SYSTEM is checked (if it is checkable). Do the same check for Administrators. 4) Click OK to go back to Properties dialog. Then click Advanced. 5) Click Change Permissions. 6) On Permissions tab, double-click Administrators. 7) Select This folder, subfolders and files for Applies to field and check all the available Basic permissions. After that, hit OK. 8) Do the same operation above (from item 7) for SYSTEM. 9) Click OK all the way out. Try installing AdGuard again. "},{"title":"Error 1618: Another installation is already in progress​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1618","content":"This error occurs when there are several instances of AdGuard installer launched at the same time. What to do if you get this error: Reboot your PC and start the installer again. When you restart the computer, all ongoing processes will stop, including all copies of the installer. Don't make multiple clicks on the installer even if doesn't start right away. Sometimes it may take a few seconds to display the installer UI. "},{"title":"Error 1638: Another version of this product is already installed​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1638","content":"It's very likely that you've already installed AdGuard before. Check if AdGuard is already installed on your computer. You can do it by pressing the Win key and typing in AdGuard. Maybe there's some leftover files from a previous AdGuard installation. Uninstall AdGuard using our special uninstall tool and then repeat the installation. "},{"title":"Other errors​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#other","content":"If you've encountered an error that's not listed above, it is possible that we can solve it by ourselves. But in order to do that, we need log files from you. Please perform the following steps: Find and archive AdGuard installation logs as it is described in this article. Find and save to disk Event Viewer logs. This article explains how to do that. Please email all these files from two previous steps to the support team at support@adguard.com and describe the problem in the message body. Our tech support agents will reply to you as soon as possible. "},{"title":"Possible DNS leaks","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/dns-leaks/","content":"","keywords":""},{"title":"Bootstrap DNS address​","type":1,"pageTitle":"Possible DNS leaks","url":"adguard-for-windows/solving-problems/dns-leaks/#bootstrap-dns-address","content":"The DNS server addresses could be written as IPs or as domain names. In the case of IP addresses there are no difficulties: AdGuard forwards the DNS request directly to the server specified in the DNS protection module. However, encrypted DNS server addresses, like DoT or DoH, are most often written as domain names. In this case, to first resolve the encrypted DNS server address, AdGuard sends a DNS query to the bootstrap address, which is by default a system DNS server. This connection is what check services perceive as a leak. To eliminate this leak: go to the Advanced settingsscroll down to the List of custom bootstrap addresses sectionenter the custom bootstrap address in IP address format (you may use the list of known DNS providers)click Save "},{"title":"Fallback DNS server​","type":1,"pageTitle":"Possible DNS leaks","url":"adguard-for-windows/solving-problems/dns-leaks/#fallback-dns-server","content":"It could happen that AdGuard cannot reach the specified server because of a weak internet connection, an expiration of timeout set by default or some server related issues. In this case, it will connect to the fallback server, which is by default a system DNS server. This connection will also be considered by the check service as a leak. To eliminate this leak: go to the Advanced settingsscroll down to the Fallback servers sectioncheck the Use custom servers optionthen find the List of custom fallback servers section and enter custom fallback servers one per line or go to the Advanced settingsscroll down to the Fallback servers sectioncheck the Don’t use fallback servers option or go to the Advanced settingsscroll down to the DNS server timeout period sectionenter an arbitrary large number "},{"title":"AdGuard 설치 로그를 수집하는 방법","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/installation-logs/","content":"AdGuard 설치 로그를 수집하는 방법 :::정보 본 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 Windows용 AdGuard에 대해 다룹니다. To see how it works, download the AdGuard app ::: AdGuard 설치 중 문제가 발생하면 지원 팀에서 AdGuard 설치 로그를 수집하여 보내달라고 요청할 수 있습니다. AdGuard 설치 로그 수집 및 전송 방법은 다음과 같습니다. Select Run command in Start menu or press Win + R on the keyboard. Type in %tmp% and click OK. In the opened folder select all files starting with Adguard and add them to archive (using WinRAR or any other archiving software). Send this archive to AdGuard tech support at support@adguard.com.","keywords":""},{"title":"Known issues of AdGuard for Windows","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/known-issues/","content":"","keywords":""},{"title":"AdGuard for Windows and AdGuard VPN for Windows compatibility issues​","type":1,"pageTitle":"Known issues of AdGuard for Windows","url":"adguard-for-windows/solving-problems/known-issues/#adguard-for-windows-and-adguard-vpn-for-windows-compatibility-issues","content":"Once you install AdGuard for Windows and AdGuard VPN for Windows, they just start working together without any effort on your part. However, changing some of their default settings may cause the apps to work incorrectly when they run at the same time. There are two specific settings in AdGuard for Windows: Use redirect driver mode and Filter localhost. By default, the first is disabled, and the second is enabled. Changing any of these settings will inevitably disrupt AdGuard's filtering if both AdGuard Ad Blocker and AdGuard VPN are enabled on your device. Changing these settings is only necessary to resolve issues related to the simultaneous operation of AdGuard Ad Blocker and network-level apps such as antiviruses, VPNs, and network filters. If you come across a situation where you need to change the default state of the above settings and still want AdGuard Ad Blocker and AdGuard VPN to work simultaneously and correctly — create an issue on GitHub so we can help you personally. We are currently working on overcoming the above-listed limitations of the simultaneous work of our apps. "},{"title":"Windows 로그 수집하는 방법","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/system-logs/","content":"Windows 로그 수집하는 방법 :::정보 본 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 Windows용 AdGuard에 대해 다룹니다. To see how it works, download the AdGuard app ::: To analyze and diagnose different problems that may potentially arise, the AdGuard support service might need Windows system log files. 이 파일에는 소프트웨어에서 발생한 모든 오류에 대한 기록이 있습니다. Windows 로그를 수집하여 지원 팀에 보내는 방법을 살펴보겠습니다. Press Win + R In the window that appears type in eventvwr and click OK: Event Viewer window appears as shown in the picture. To save files that we need, do the following: Open Application: Event Viewer (Local) → Windows Logs → Application. Right-click Application and in the drop-down menu select Save All Events As... 이름과 저장할 위치를 선택하고 저장을 클릭합니다. 그다음에는 언어 설정에 대한 정보 표시를 선택합니다. You need to check the checkbox next to English. 확인을 클릭합니다. Open System: Event Viewer (Local) → Windows Logs → System. Right-click System and in the drop-down menu select Save All Events As... 저장할 위치를 선택하고 이름을 입력한 후 저장을 클릭합니다. 그다음에는 언어 설정에 대한 정보 표시를 선택합니다. 한국어 옆의 확인란을 선택하고 확인을 클릭합니다. Please send the two files that you've recently saved to support@adguard.com.","keywords":""},{"title":"이중 인증(2FA)","type":0,"sectionRef":"#","url":"general/account/2fa/","content":"","keywords":""},{"title":"이중 인증 설정 방법​","type":1,"pageTitle":"이중 인증(2FA)","url":"general/account/2fa/#이중-인증-설정-방법","content":"AdGuard 계정에 로그인하고 설정 탭으로 이동합니다.  Scroll down to Password and 2FA section and click Enable:  화면의 설명서에 따라 인증 앱을 설치하고 QR 코드를 스캔합니다.  중요 정보 인증 백업 코드를 저장하십시오. 휴대폰 분실과 같은 비상시에 인증 코드를 통해 계정을 복구할 수 있습니다. 모든 작업이 올바르게 완료되면 다음에 계정에 로그인할 때 다음과 같은 내용이 표시됩니다.  모바일 인증 앱을 사용하여 코드를 읽고 입력하세요. 이제 계정에 로그인되었습니다. 참고: 전화기의 시간이 정확하지 않으면 인증 문제가 발생할 수 있습니다. 시간을 확인하고 필요한 경우 올바른 시간을 설정하세요. "},{"title":"WFP driver","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/wfp-driver/","content":"WFP driver :::정보 본 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 Windows용 AdGuard에 대해 다룹니다. To see how it works, download the AdGuard app ::: To filter network traffic, AdGuard uses a network driver. There are two options: TDI driver and WFP driver. While WFP driver is generally preferrable and is enabled by default for all newer Windows OS versions (Windows 8 and newer), it can potentially cause compatibility problems, especially with some antiviruses. These problems and subsequent errors can be very different in each case. If you encounter a problem that you suspect might be caused by this, you can always switch to the older but more stable TDI network driver. To do so: Go to Settings → Network. Disable WFP driver as it’s done in this picture:","keywords":""},{"title":"등록 방법","type":0,"sectionRef":"#","url":"general/account/register/","content":"","keywords":""},{"title":"AdGuard 계정이란 무엇인가요?​","type":1,"pageTitle":"등록 방법","url":"general/account/register/#adguard-계정이란-무엇인가요","content":"AdGuard 계정은 AdGuard 라이선스 및 구독, 활성 기기, 구매 내역, 기본 설정 언어 및 기타 기본 설정에 대한 정보를 보관하는 사용자 계정입니다. 유효한 라이선스가 포함되어 있는 경우, 많은 AdGuard 제품을 AdGuard 계정으로 활성화할 수 있습니다. "},{"title":"계정을 만드는 방법​","type":1,"pageTitle":"등록 방법","url":"general/account/register/#계정을-만드는-방법","content":"계정을 만들려면 AdGuard 공식 웹사이트로 이동하여 화면 오른쪽 상단의 내 계정 버튼을 누르세요. 이메일 주소를 입력하고 비밀번호를 생성하면 계정이 등록됩니다. tip 라이선스를 구매할 때 이메일 주소를 입력하거나 이메일 주소에 연결된 라이선스를 선물로 받으면 계정이 자동으로 생성됩니다. 거래 또는 선물 이메일에 포함된 링크를 따라 비밀번호를 설정할 수 있습니다. 위의 방법으로도 등록할 수 있습니다. AdGuard 앱에서 직접 계정을 생성할 수도 있습니다. 로그인 또는 활성화 버튼(라이선스 섹션 또는 별도의 화면에서 찾을 수 있음)을 누르고 이메일을 입력한 후 비밀번호를 생성합니다. 계정이 생성된 후 활성화 이메일에 포함된 링크를 따라 계정을 활성화합니다. "},{"title":"소셜 네트워크를 통해 계정을 만드는 방법​","type":1,"pageTitle":"등록 방법","url":"general/account/register/#소셜-네트워크를-통해-계정을-만드는-방법","content":"소셜 네트워크를 통해 계정을 만들려면 링크를 따라 계정에 로그인하기만 하면 됩니다. 가입이 완료되면 받은 편지함을 확인하면 확인 이메일이 전송됩니다. 비밀번호를 설정하면 끝입니다! 이제 AdGuard 계정의 모든 기능을 사용할 수 있습니다. "},{"title":"AdGuard 계정으로 할 수 있는 일","type":0,"sectionRef":"#","url":"general/account/features/","content":"","keywords":""},{"title":"계정 설정 관리​","type":1,"pageTitle":"AdGuard 계정으로 할 수 있는 일","url":"general/account/features/#계정-설정-관리","content":"AdGuard 계정의 설정 섹션에서 비밀번호를 업데이트 또는 재설정하고, 이메일 주소를 변경하며, 이중 인증을 활성화할 수 있습니다. 또한 AdGuard에 저장된 귀하에 대한 정보를 확인하고 개인 계정 및 알림의 언어를 선택할 수 있습니다. 이 섹션에서는 이메일 기본 설정을 관리할 수도 있습니다. 거래 이메일 수신AdGuard 월간 소식지 수신AdGuard 특별 행사 및 프로모션 이메일 수신AdGuard에 이메일을 열었음을 알릴지 말지 설정 "},{"title":"라이선스 관리​","type":1,"pageTitle":"AdGuard 계정으로 할 수 있는 일","url":"general/account/features/#라이선스-관리","content":"라이선스 섹션에서는 라이선스 및 라이선스에 연결된 기기를 관리할 수 있습니다. AdGuard 라이선스는 연결 및 연결 해제,갱신,업그레이드,취소할 수 있습니다. 결제 세부 정보를 업데이트할 수도 있습니다. AdGuard 광고 차단 라이선스에 연결된 기기의 연결을 해제하거나 이름을 변경할 수 있습니다. 사용하지 않는 기기 옆의 십자 아이콘을 클릭하여 연결을 해제할 수 있습니다. "},{"title":"구매 내역 보기​","type":1,"pageTitle":"AdGuard 계정으로 할 수 있는 일","url":"general/account/features/#구매-내역-보기","content":"구매 내역 섹션에는 AdGuard 계정을 등록한 이메일 계정을 사용하여 구매한 모든 라이선스가 표시됩니다. 구매 날짜, 주문 ID, 결제 방법 및 구매 비용에 대한 정보도 확인할 수 있습니다. "},{"title":"고객지원 문의​","type":1,"pageTitle":"AdGuard 계정으로 할 수 있는 일","url":"general/account/features/#고객지원-문의","content":"지원 탭에는 문제를 해결하거나 AdGuard 제품에 대한 정보를 찾는 데 도움이 되는 유용한 링크가 포함되어 있습니다. 6개의 섹션으로 나뉘어 있습니다: 자주 묻는 질문, 버그 제보/기능 요청 보내기, 잘못된 차단 신고, 지원팀에 문의, 지식 창고, 토론장입니다. "},{"title":"AdGuard filters","type":0,"sectionRef":"#","url":"general/ad-filtering/adguard-filters/","content":"","keywords":""},{"title":"AdGuard filters​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#adguard-filters","content":"Base filter removes ads from websites with English content. Originally based on EasyList and modified by us. View rules Tracking Protection filter — comprehensive list of various online counters and web analytics tools. Use it to hide your actions online and avoid tracking. View rules URL Tracking filter enhances privacy by removing tracking parameters from URLs. When a user opts to block tracking parameters in Stealth Mode, this filter will be enabled automatically. View rules Social media filter removes numerous &quot;Like&quot; and &quot;Tweet&quot; buttons and other social media integrations on popular websites. View rules Annoyances filter blocks irritating elements on web pages. View rules. Includes the following AdGuard filters (all of them can be enabled separately from the Annoyances filter): Cookie Notices blocks cookie notices on web pages. View rulesPopups blocks all kinds of pop-ups that are not necessary for websites' operation. View rulesMobile App Banners blocks banners that promote mobile apps of websites. View rulesWidgets blocks third-party widgets: online assistants, live support chats, etc. View rulesOther Annoyances blocks elements that do not fall under the popular categories of annoyances. View rules Filter unblocking search ads and self-promotions unblocks ads that may be useful to users. Learn more about this filter on this page. View rules Russian filter removes ads from websites in Russian. View rules German filter removes ads from websites in German. Originally based on the EasyList Germany filter and subsequently modified by us according to the complaints from users. View rules French filter removes ads from websites in French. Originally based on the Liste FR filter and subsequently modified by us according to the complaints from users. View rules Japanese filter removes ads from websites in Japanese. Originally based on the Fanboy’s Japanese filter and subsequently modified by us according to the complaints from users. View rules Dutch filter removes ads from websites in Dutch. Originally based on the EasyList Dutch filter and subsequently modified by us according to the complaints from users. View rules Spanish/Portuguese filter removes ads from websites in Spanish and Portuguese. Originally based on the Fanboy’s Spanish/Portuguese filter and subsequently modified by us according to the complaints from users. View rules Turkish filter removes ads from websites in Turkish. Created by us according to the complaints from users. View rules Chinese filter removes ads from websites in Chinese. Originally based on the EasyList China filter and subsequently modified by us according to the complaints from users. View rules Ukrainian filter removes ads from websites in Ukrainian. Learn more about this filter on this page. View rules Experimental filter serves to test some new filtering rules that can potentially cause conflicts and mess with websites' work. In case these rules perform without any issues, they get added to main filters. View rules Mobile ads filter blocks ads on mobile devices. Contains all known mobile ad networks. View rules DNS filter — composed of several other filters (AdGuard Base filter, Social media filter, Spyware filter, Mobile ads filter, EasyList and EasyPrivacy) and simplified specifically to be better compatible with DNS-level ad blocking. This filter is used by AdGuard DNS servers to block ads and tracking. View rules "},{"title":"AdGuard Filters Policy​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#adguard-filters-policy","content":"Our filter policy defines what AdGuard filters should block and what they should not, as well as the rules for adding and removing rules from filters. Read the full text of AdGuard filter policy for detailed information. "},{"title":"Contributing to AdGuard filters​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#contributing-to-adguard-filters","content":"We are blessed with a unique community that not only loves AdGuard but also gives back. Many people volunteer in various ways to make AdGuard's user experience better for everybody. You are welcome to join the band and make a difference. We will do our part and happily reward the most active community. So, what can you do? "},{"title":"Report Issues​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#report-issues","content":"We rely on the community to let us know about issues with our filters. It helps us use our time more efficiently and keep filters constantly updated. To submit a report, please use this web reporting tool. "},{"title":"Suggest Filtering Rules​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#suggest-filtering-rules","content":"You will find many open issues in the GitHub filter repository. Each one refers to a problem with a website, such as a missed ad or a false positive. Pick an issue and suggest your own rules in the comments. AdGuard filter engineers will review your suggestions and, if approved, add your rules to AdGuard filters. Here is the official documentation on the syntax of AdGuard filtering rules. Please read it carefully: it will help you create your own filtering rules. "},{"title":"Other ways to contribute​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#other-ways-to-contribute","content":"Here is a dedicated page for people willing to contribute to AdGuard in other ways. "},{"title":"고급(로우 레벨) 설정 가이드","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"고급 설정으로 이동하는 방법​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#고급-설정으로-이동하는-방법","content":"고급 설정으로 이동하려면 기본 창에서 설정 → 일반 설정 을 클릭하고 아래로 스크롤하여 고급 설정으로 이동합니다. 또는 트레이 메뉴에서 고급 → 고급 설정... 을 선택합니다. "},{"title":"고급 설정​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#고급-설정","content":"고급 설정을 열면 다음과 같은 옵션이 표시됩니다: "},{"title":"TCP Fast Open 차단​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#tcp-fast-open-차단","content":"이 기능을 활성화하면 AdGuard가 Edge 브라우저에서 TCP 빠른 열기를 차단합니다. 설정을 적용하려면 브라우저를 다시 시작해야 합니다. "},{"title":"Encrypted ClientHello 사용​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#encrypted-clienthello-사용","content":"모든 암호화된 인터넷 연결에는 암호화되지 않은 부분이 있습니다. 이것은 연결하려는 서버의 이름이 포함된 첫 번째 패킷입니다. Encrypted Client Hello 기술은 이 문제를 해결하고 암호화되지 않은 마지막 비트의 정보를 암호화합니다. 이 기능을 사용하려면 Encrypted ClientHello 사용 옵션을 활성화하세요. It uses a local DNS proxy to look for the ECH configuration for the domain. ECH 구성이 발견되면 ClientHello 패킷이 암호화됩니다. "},{"title":"웹사이트의 인증서 투명성 확인​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#웹사이트의-인증서-투명성-확인","content":"Chrome 인증서 투명성 정책에 따라 도메인의 모든 인증서를 확인합니다. If the certificate does not comply with the Chrome Certificate Transparency Policy, AdGuard will not filter the website. 반면에 Chrome은 이 사이트를 차단합니다. "},{"title":"SSL/TLS 인증서 해지 확인 활성화​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#ssltls-인증서-해지-확인-활성화","content":"이 옵션을 활성화하면 비동기 OCSP 검사를 실행하여 웹사이트의 SSL/TLS 인증서가 해지되었는지 확인합니다. 최소 시간 제한 내에 OCSP 확인이 완료되면 AdGuard는 즉시 결과를 적용합니다. 인증서가 해지된 경우 연결을 차단하고 인증서가 유효한 경우 연결을 설정합니다. 확인에 시간이 너무 오래 걸리면 AdGuard가 연결을 설정하고 백그라운드에서 계속 확인합니다. 인증서가 해지되면 도메인에 대한 현재 및 향후 연결이 차단됩니다. "},{"title":"설정에서 AdGuard VPN 표시​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#설정에서-adguard-vpn-표시","content":"이 옵션을 활성화하면 설정에 AdGuard VPN 탭이 표시되어 앱과 제품 웹사이트를 쉽게 열 수 있습니다. "},{"title":"전체 경로를 입력하여 필터링에서 앱 제외하기​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#전체-경로를-입력하여-필터링에서-앱-제외하기","content":"특정 앱을 필터링하지 않도록 하기 위해서는 해당 앱의 전체 경로를 지정하면 해당 앱이 필터링에서 제외됩니다. 세미콜론으로 서로 다른 경로를 구분합니다. "},{"title":"AdGuard 팝업 알림 활성화​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#adguard-팝업-알림-활성화","content":"이 기능을 활성화하면 AdGuard 팝업 알림을 볼 수 있습니다. 너무 자주 표시되지 않으며 중요한 정보만 포함되어 있습니다. 트레이 메뉴를 사용하여 마지막 팝업 알림을 불러올 수도 있습니다. "},{"title":"필터 구독 URL 자동 차단​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#필터-구독-url-자동-차단","content":"AdGuard가 필터 구독 URL(예: abp:subscribe 등)을 자동으로 가로채고 사용자 정의 필터 설치 대화 상자를 열도록 하려면 이 기능을 활성화합니다. "},{"title":"Filter HTTP/3​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#filter-http3","content":"If this option is enabled, AdGuard will filter requests sent over HTTP/3 in addition to other request types. "},{"title":"리디렉션 드라이버 모드 사용​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#리디렉션-드라이버-모드-사용","content":"이 옵션을 활성화하면 AdGuard가 모든 트래픽을 가로채서 추가 필터링을 위해 로컬 프록시 서버로 리디렉션합니다. 이 기능이 활성화되지 않은 경우, AdGuard는 리디렉션 없이 모든 트래픽을 즉시 필터링합니다. 시스템은 인터넷에 연결되는 유일한 애플리케이션으로 AdGuard를 간주합니다(다른 애플리케이션은 AdGuard를 통해 라우팅됨). 단점은 시스템 방화벽의 효율성이 떨어질 수 있다는 것입니다. 장점은 이 접근 방식이 조금 더 빠르게 작동한다는 것입니다. "},{"title":"시스템 시작 시 메인 창 열기​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#시스템-시작-시-메인-창-열기","content":"이 옵션을 활성화하면 시스템이 로드된 후 기본 AdGuard 창이 열립니다. 이 설정은 설정 → 일반 설정에 있으며 실제 필터링 서비스가 실행되는지 여부에는 영향을 미치지 않습니다. "},{"title":"시스템 시작 시 필터링 활성화​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#시스템-시작-시-필터링-활성화","content":"7.12 버전부터 시스템 시작 시 AdGard 실행 옵션이 비활성화되어 있는 경우, 기본적으로 AdGard 서비스는 OS 시작 후 트래픽을 필터링하지 않습니다. 즉, AdGuard의 서비스는 '유휴' 모드에서 시작됩니다. 이 옵션을 활성화하면 앱이 실행되지 않은 상태에서도 AdGuard가 트래픽을 필터링하도록 설정할 수 있습니다. note Before v7.12, the AdGuard service started in filtering mode by default (even if the Launch AdGuard at system start-up was disabled). If you were satisfied with the old behavior, enable this option. "},{"title":"로컬 호스트 필터링​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#로컬-호스트-필터링","content":"AdGuard가 루프백 연결을 필터링하도록 하려면 확인란을 선택합니다. 이 옵션은 AdGuard VPN이 설치되어 있는 경우 항상 켜져 있으며, 그렇지 않으면 작동하지 않습니다. "},{"title":"필터링에서 지정된 IP 범위 제외​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#필터링에서-지정된-ip-범위-제외","content":"AdGuard가 특정 서브넷을 필터링하지 않도록 설정하려면 이 기능을 활성화하고 아래 필터링에서 제외되는 IP 범위 섹션에서 CIDR 표기법(예: 98.51.100.14/24)으로 IP 범위를 지정하세요. "},{"title":"HAR 기록 사용​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#har-기록-사용","content":"이 옵션은 디버깅 목적으로만 활성화해야 합니다. 확인 표시를 선택하면 AdGuard가 필터링된 모든 HTTP 요청에 대한 정보가 포함된 HAR 1.2 형식의 파일을 생성합니다. 이 파일은 Fiddler 앱으로 분석할 수 있습니다. 웹 브라우징 속도가 상당히 느려질 수 있습니다. "},{"title":"일반 HTTP 요청에 추가 공백 추가​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#일반-http-요청에-추가-공백-추가","content":"HTTP 메서드와 URL 사이에 공백을 추가하고 심층 패킷 검사를 피하기 위해 '호스트:' 필드 뒤에 공백을 제거합니다. 예를 들어, GET /foo/bar/ HTTP/1.1 Host: example.org 요청은 다음과 같이 변환됩니다. GET /foo/bar/ HTTP/1.1 Host: example.org 요청은 이 설정은 스텔스 모드에서 DP로부터 보호 옵션이 활성화된 경우에만 적용됩니다. "},{"title":"초기 TLS 패킷의 조각화 크기 조정​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#초기-tls-패킷의-조각화-크기-조정","content":"심층 패킷 검사를 피하기 위해 TCP 패킷 조각화의 크기를 지정합니다. This option only affects secured (HTTPS) traffic. 이 옵션을 활성화하면 AdGuard는 초기 TLS 패킷(ClientHello 패킷)을 두 부분으로 분할합니다. 첫 번째 부분은 지정된 길이를 가지며 두 번째 부분은 나머지 길이(전체 초기 TLS 패킷의 길이까지)를 가집니다. Valid values: 1–1500. 잘못된 크기를 지정하면 시스템에서 선택한 값이 사용됩니다. 이 설정은 스텔스 모드에서 DP로부터 보호 옵션이 활성화된 경우에만 적용됩니다. "},{"title":"일반 HTTP 조각 크기​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#일반-http-조각-크기","content":"HTTP 요청 조각화의 크기를 조정합니다. 이 옵션은 일반 HTTP 트래픽에만 영향을 줍니다. 이 옵션을 활성화하면 AdGuard는 초기 패킷을 두 부분으로 분할하여 첫 번째 패킷은 지정된 길이로, 두 번째 패킷은 전체 원본 패킷의 길이까지 나머지 부분을 차지합니다. Valid values: 1–1500. 잘못된 크기를 지정하면 시스템에서 선택한 값이 사용됩니다. 이 설정은 스텔스 모드에서 DP로부터 보호 옵션이 활성화된 경우에만 적용됩니다. "},{"title":"QUIC 보기​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#quic-보기","content":"필터링 로그에 QUIC 프로토콜 레코드를 표시할 수 있습니다. 이 옵션은 차단된 요청에 대해서만 작동합니다. "},{"title":"TCP 연결 유지 사용​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#tcp-연결-유지-사용","content":"유휴 연결을 통해 주기적으로 TCP 패킷을 전송하여 연결이 활성화되어 있는지 확인하고 NAT 시간 제한을 갱신합니다. 이 옵션은 일부 ISP가 사용하는 엄격한 NAT(네트워크 주소 변환) 설정을 우회하는 데 유용할 수 있습니다. "},{"title":"TCP 연결 유지 간격​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#tcp-연결-유지-간격","content":"킵얼라이브 프로브를 보내기 전에 유휴 기간을 초 단위로 지정할 수 있습니다. If 0 is specified, the value selected by the system will be used. note This setting only works when the Enable TCP keepalive option is enabled. "},{"title":"TCP 연결 유지 시간 초과​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#tcp-연결-유지-시간-초과","content":"Here you can specify time in seconds before sending another keepalive probe to an unresponsive peer. 0을 지정하면 시스템에서 선택한 값이 사용됩니다. note This setting only works when the Enable TCP keepalive option is enabled. "},{"title":"Java 차단​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#java-차단","content":"일부 웹사이트와 웹 서비스는 여전히 Java 플러그인을 지원합니다. Java 플러그인의 기반이 되는 API에는 심각한 보안 취약점이 있습니다. 보안을 위해 이러한 플러그인을 비활성화할 수 있습니다. 그러나 Java 차단 옵션을 사용하기로 결정하더라도 자바스크립트는 계속 활성화됩니다. "},{"title":"DNS 서버 시간 초과 기간​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#dns-서버-시간-초과-기간","content":"이 필드에서 AdGuard가 폴백 DNS 서버를 사용하기 전에 선택한 DNS 서버의 응답을 기다리는 시간(밀리초)을 지정할 수 있습니다. 이 필드를 채우지 않거나 잘못된 값을 입력하면 5000이라는 값이 사용됩니다. "},{"title":"DNS-over-HTTPS에 HTTP/3 사용​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#dns-over-https에-http3-사용","content":"선택한 업스트림이 이 프로토콜을 지원하는 경우, DNS-over-HTTPS 업스트림에 HTTP/3을 활성화하여 연결을 가속화합니다. 즉, 이 옵션을 활성화해도 모든 DNS 요청이 HTTP/3을 통해 전송된다는 보장은 없습니다. "},{"title":"폴백 DNS 업스트림 사용​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#폴백-dns-업스트림-사용","content":"Normal queries will be redirected to the fallback upstream if all DNS requests to the selected upstreams fail. "},{"title":"DNS 업스트림 쿼리를 병렬로 수행​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#dns-업스트림-쿼리를-병렬로-수행","content":"All upstreams will be queried in parallel and the first response is returned. DNS 쿼리는 병렬로 이루어지므로 이 기능을 활성화하면 인터넷 속도가 빨라집니다. "},{"title":"실패한 DNS 쿼리에 항상 응답​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#실패한-dns-쿼리에-항상-응답","content":"전달된 각 업스트림과 폴백 도메인에서 주소 확인에 실패한 경우 DNS 요청에 대한 응답은 SERVFAIL이 됩니다. "},{"title":"보안 DNS 요청 필터링 사용​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#보안-dns-요청-필터링-사용","content":"AdGuard will redirect secure DNS requests to the local DNS proxy, in addition to plain DNS requests. "},{"title":"호스트 규칙에 대한 차단 모드​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#호스트-규칙에-대한-차단-모드","content":"호스트 규칙 구문을 기반으로 DNS 규칙에 의해 차단된 도메인에 대해 AdGuard가 응답하는 방식을 선택할 수 있습니다. 'Refused' 오류로 회신'NxDomain' 오류로 회신사용자 정의 IP 주소로 회신 "},{"title":"adblock-style 규칙을 위한 차단 모드​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#adblock-style-규칙을-위한-차단-모드","content":"여기에서 adblock-style 구문을 기반으로 DNS 규칙에 의해 차단된 도메인에 AdGuard가 응답하는 방식을 선택할 수 있습니다. 'Refused' 오류로 회신'NxDomain' 오류로 회신사용자 정의 IP 주소로 회신 "},{"title":"사용자 정의 IPv4​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#사용자-정의-ipv4","content":"호스트 규칙의 차단 모드 또는 adblock-style 규칙의 차단 모드에서 사용자 정의 IP 주소를 선택한 경우, 차단된 A 요청에 대한 응답으로 이 IP 주소가 반환됩니다. IP 주소가 지정되지 않은 경우 AdGuard는 기본 'Refused' 오류로 응답합니다. "},{"title":"사용자 지정 IPv6​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#사용자-지정-ipv6","content":"호스트 규칙의 차단 모드 또는 adblock-style 규칙의 차단 모드에서 사용자 정의 IP 주소를 선택한 경우, 차단된 AAAA 요청에 대한 응답으로 이 IP 주소가 반환됩니다. IP 주소가 지정되지 않은 경우 AdGuard는 기본 'Refused' 오류로 응답합니다. "},{"title":"폴백 서버​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#폴백-서버","content":"여기에서 주 서버가 다음 섹션에서 지정한 시간 제한 기간 내에 응답하지 않을 경우, DNS 요청을 다시 라우팅할 대체 DNS 서버를 지정할 수 있습니다. 세 가지 옵션 중에서 선택할 수 있습니다. 폴백 서버를 사용하지 않음시스템 기본 서버 사용사용자 정의 서버 사용 "},{"title":"ECH 차단​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#ech-차단","content":"이 옵션을 활성화하면 AdGuard는 응답에서 암호화된 클라이언트 헬로 매개변수를 제거합니다. "},{"title":"사용자 정의 폴백 서버 목록​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#사용자-정의-폴백-서버-목록","content":"AdGuard가 사용자 정의 폴백 서버를 사용하도록 하려면 이 섹션에 한 줄에 하나씩 나열하세요. "},{"title":"사용자 정의 부트스트랩 주소 목록​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#사용자-정의-부트스트랩-주소-목록","content":"부트스트랩은 앞서 DNS 보호에서 선택한 보안 DNS 서버의 IP 주소를 가져오는 데 사용되는 중간 DNS 서버입니다. 이러한 '중간 지점'은 서버 주소를 문자로 표시하는 프로토콜(예: DNS-over-TLS)을 사용할 때 필요합니다. 이 경우 부트스트랩이 번역기 역할을 하여 문자를 시스템에서 이해할 수 있는 숫자로 변환합니다. 기본적으로 시스템 DNS DNS 리졸버가 사용되며 초기 부트스트랩 요청은 포트 53을 통해 이루어집니다. 이 방법이 적합하지 않은 경우 암호화된 DNS 서버의 주소를 확인하는 데 사용할 DNS 서버의 IP 주소를 여기에 나열하세요. 지정된 IP 주소는 나열된 순서대로 적용됩니다. 잘못된 주소를 지정하거나 주소를 전혀 지정하지 않으면 시스템 IP가 사용됩니다. "},{"title":"DNS 예외​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#dns-예외","content":"여기에 나열된 도메인에 대한 모든 DNS 요청은 앱 설정에 지정된 DNS 서버가 아닌 시스템 기본 DNS 서버로 리디렉션됩니다. 또한 이러한 요청에는 DNS 차단 규칙이 적용되지 않습니다. "},{"title":"지정된 Wi-Fi 네트워크 이름(SSID)을 DNS 필터링하지 않기​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#지정된-wi-fi-네트워크-이름ssid을-dns-필터링하지-않기","content":"DNS protection will not include Wi-Fi networks listed in this section. Wi-Fi 네트워크 이름(SSID)을 한 줄에 하나씩 지정합니다. 특정 Wi-Fi 네트워크가 이미 AdGuard Home 또는 다른 DNS 보호 시스템에 의해 보호되고 있는 경우 유용할 수 있습니다. 이 경우 DNS 요청을 다시 필터링할 필요가 없습니다. "},{"title":"How ad blocking works","type":0,"sectionRef":"#","url":"general/ad-filtering/how-ad-blocking-works/","content":"","keywords":""},{"title":"General principle​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#general-principle","content":"Filter lists, also called filters, lie at the core of any ad blocker. Filters are literally lists of rules written in a special syntax. Ad blockers can understand this complex syntax. They interpret filtering rules and perform actions on web traffic based on what the rules tell them to do: block specific elements, alter web pages in certain ways, etc.  "},{"title":"Filter lists​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#filter-lists","content":"To better understand ad blocking, it's important to know the underlying principles of how filters work. Filtering rules that make up filters are not created automatically. They are developed by filter maintainers, including professionals and volunteers, who use browser developer consoles and other tools (such as the AdGuard's filtering log) to determine which rules will block a particular ad or tracker. This description of the process is very simplistic — some ads are particularly hard to block and require multiple rules, multiple iterations, and the use of complex syntax. And even when a rule finally gets added to a filter, it doesn't mean that it stays there forever. Ads change, ways to serve the same ads on the same websites change, and the filter rules have to change, too. Sometimes rules become obsolete, a new ad appears, or a new filtering rule is needed to block the same ad. Filters are often maintained by one person, but even for a team of maintainers, it's impossible to constantly monitor the entire web. That's why many ad blockers have tools to help users easily report any filter-related issues they encounter.  AdGuard users have access to a special web reporting tool. Thanks to user complaints, filter developers can focus on correcting their filter lists and not on scouring the Internet for new and old unblocked ads. Filters can do more than just block ads. There are filters that block tracking, social media widgets, and annoyances such as cookie notices. Different users may choose different combinations of filters to match their personal preferences. There are websites like filterlists.com that are dedicated to filter lists and have huge databases. We develop and maintain our own set of filter lists that can be used with AdGuard or other ad blockers. "},{"title":"Types of filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#types-of-filtering-rules","content":"There are many types of filtering rules that serve different purposes. Depending on the ad blocker you use, and especially on your OS, some types of rules may not be supported. "},{"title":"Basic filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#basic-filtering-rules","content":"To be displayed on a web page or in an app, the ad has to be loaded from a server first. To do so, the browser or the app needs to send a web request. The most basic way of preventing an ad from appearing on your screen is to block this request so it never reaches the server, and thus there's no reply. Basically, all AdGuard Ad Blocker products can block web requests according to the active filter rules. This method is very effective at stopping the ad, but it has some drawbacks. The most obvious one is: whatever place an ad was taking up will be left empty or occupied by an ad leftover. "},{"title":"Cosmetic filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#cosmetic-filtering-rules","content":"Every web page has a Document Object Model (DOM), an HTML document containing the structure and elements of this page. As ads are also page elements, they get recorded in the DOM. Ad blockers can remove parts of the DOM, while filtering rules help them understand which parts are ads and should be removed, and which parts should be left intact. This method allows you to avoid above-mentioned blank spaces and ad leftovers, as well as perform other more complicated tasks. "},{"title":"HTML filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#html-filtering-rules","content":"In most cases, it's enough to use the above-mentioned basic and cosmetic rules to filter ads. But when it is necessary to change the HTML code of the page itself before it is loaded, you need filtering rules for HTML content. These rules allow you to specify the HTML elements to be cut out before the browser even loads the page. These rules are quite complicated and require the ad blocker to be granted certain access rights, so not all platforms support them. Currently, these rules work only in the AdGuard Firefox add-on and in the AdGuard apps for Windows, Mac, and Android. :::정보 There are other types of filtering rules, but they require more advanced technical knowledge to understand how they work. If you are interested, check out our comprehensive guide on filtering rules in the linked article. ::: "},{"title":"Search ads and self-promotion","type":0,"sectionRef":"#","url":"general/ad-filtering/search-ads/","content":"","keywords":""},{"title":"Search ads​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#search-ads","content":"Search ads are ads that you see among search query results when using online search engines, such as Google, Bing, DuckDuckGo, etc.  These ads are always contextual: they are targeted to match the keywords you used in the query. This helps you find exactly what you are searching for. Moreover, search ads (because they go through manual moderation) are often more relevant and helpful than the rest of the search results. Another argument in defense of search ads is that they are much less intrusive than many other ad formats. "},{"title":"What is websites' self-promotion?​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#what-is-websites-self-promotion","content":"In principle, when an ad on a website promotes this particular website or closely related websites, social media, and so on, such an ad is considered a self-promoting one.  Our general stance here is very similar to the EasyList policy regarding self-promotion ads. According to our filter policy, we should not block these ads; however, we should not make an exception if such an ad gets blocked by some rule 'alongside' a regular ad. Partly, this is due to ethical reasons, but mostly because such ads are rarely too intrusive and are often useful for the visitor of the website (who is supposedly interested in this website's content). By enabling 'Search ads and self-promotion', AdGuard users can unblock some of these self-promotion ads. "},{"title":"What ads are on the list?​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#what-ads-are-on-the-list","content":"When you enable 'Search ads and self-promotion', search ads from the following search engines are shown: GoogleYahooBingAskYandexDuckDuckGoStartPage As well as all self-promotional ads that satisfy our filter policy. "},{"title":"Summary​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#summary","content":"Allowing 'Search ads and self-promotion' is a 100% optional feature that may be helpful in some cases. If you don't like it, you can turn it off at any time. It does not, and never will, include any ad types or individual ads that do not fall into one of the two categories described above. "},{"title":"AdGuard 필터 정책","type":0,"sectionRef":"#","url":"general/ad-filtering/filter-policy/","content":"","keywords":""},{"title":"일반 기준​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#일반-기준","content":"이러한 기준은 모든 필터의 규칙에 동일하게 적용됩니다. 사이트별 규칙은 사이트에 충분한 트래픽이 있는 경우에만 추가됩니다. 트래픽은 공개 통계(사용 가능한 경우) 또는 소셜 네트워크의 구독자 수와 같은 간접 지표에 의해 결정됩니다. 사이트의 트래픽이 한 달에 100,000회에 도달하면 충분한 것으로 간주합니다. 인기가 많지 않은 사이트에 대한 규칙 추가를 고려하겠지만 최종 결정은 필터 개발자에게 맡기겠습니다. 트래픽이 적은 사이트도 타사 분석 및 광고 네트워크가 있는지 확인해야 합니다.콘텐츠 팜(주로 검색 결과에서 높은 가시성을 확보하고 광고 수익을 창출하는 것을 목적으로 대량의 콘텐츠를 생산하는 웹사이트)에 대한 결정은 콘텐츠의 품질에 따라 필터 개발자가 내립니다. 필터링 규칙에 대한 품질 요구 사항: 규칙은 웹사이트의 성능에 부정적인 영향을 미치지 않아야 합니다.차단 해제 규칙은 불필요한 차단이 해제되지 않도록 최대한 구체적으로 작성해야 합니다.자바스크립트 규칙은 가능한 한 적게 사용해야 하며, 규칙이 없으면 광고 차단이 불가능한 경우에만 사용해야 합니다. "},{"title":"광고 차단 필터​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#광고-차단-필터","content":""},{"title":"용어​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#용어","content":"광고 차단기는 웹페이지의 광고 및 기타 요소를 필터링, 숨기거나 차단하는 소프트웨어 또는 하드웨어 도구입니다. 광고 차단기는 웹사이트를 방문하거나 앱을 사용할 때 페이지를 더 빠르게 로드하고, 인터넷 트래픽을 덜 사용하며, 광고와 성가신 요소를 차단하고, 개인정보를 보호하도록 설계되었습니다. 필터 (또는 필터 목록)는 광고 차단기를 사용하여 콘텐츠를 필터링하고 다양한 유형의 광고 및 기타 유형의 콘텐츠를 차단하도록 설계된 필터링 규칙 집합입니다. 이러한 필터는 일반적으로 웹 브라우저, 프로그램 또는 DNS 서버 수준에서 작동합니다. 안티애드블록( )은 웹사이트나 애플리케이션에서 광고 차단을 감지하고 추적, 광고 재주입, 광고 차단기 비활성화 유도(소위 '광고 차단 벽') 등 다양한 방식으로 대응하기 위해 사용하는 기술입니다. 안티블록은 여러 유형이 있을 수 있습니다. 대안을 제공하지 않고 웹사이트 콘텐츠를 차단하는 안티애드블록: 사이트를 계속 사용하려면 사용자가 해당 사이트에서 광고 차단을 비활성화해야 합니다.광고 차단기를 계속 사용하기 위해 구독을 구매하는 등의 대체 옵션이 제공되는 '안티애드블록 벽'조치를 의무화하지 않는 정보 메시지: 사용자에게 광고 차단기를 비활성화하라는 메시지가 표시되지만, 이러한 메시지는 닫을 수 있으므로 사용자는 제한 없이 사이트를 계속 사용할 수 있습니다.광고 차단기 사용에 대응하여 대체 광고 구현: 광고 차단기가 감지되면 사이트에서 대체 광고를 도입합니다.페이월(Paywall): 콘텐츠를 부분적으로 또는 완전히 사용자에게 숨기고 액세스하려면 구독을 구매하라는 메시지를 표시하는 콘텐츠 수익화 방법입니다. "},{"title":"필터​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#필터","content":"AdGuard 광고 차단 필터에는 다음이 포함됩니다. AdGuard 베이스 필터AdGuard 모바일 광고 필터언어 원칙에 따라 구분된 지역 필터: 중국어, 네덜란드어, 프랑스어, 독일어, 일본어, 러시아어, 스페인어/포르투갈어, 터키어, 우크라이나어 "},{"title":"이러한 필터의 목적​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#이러한-필터의-목적","content":"베이스 필터는 영어 웹사이트 및 별도의 필터가 없는 웹사이트의 광고를 차단하도록 설계되었습니다. 또한 언어에 관계없이 모든 사이트에 적용되는 일반 필터링 규칙이 포함되어 있습니다.Mobile Ads filter blocks advertisements on mobile versions of websites and within mobile apps. 언어에 따른 세분화가 없습니다.지역 필터는 베이스 필터와 동일한 정책을 따르지만 특정 언어의 웹사이트로 제한됩니다. 광고 차단 필터의 목표는 인터넷에서 광고를 로드할 수 있는 웹사이트, 애플리케이션 및 특정 디바이스에서 모든 유형의 광고를 차단하는 것입니다. 배너는 웹페이지의 여러 부분에 이미지로 표시되는 광고입니다.티저는 방문자의 흥미를 유발하고(감각적인 헤드라인, 시선을 사로잡는 이미지) 배너를 클릭하도록 유도하는(클릭베이트) 텍스트 또는 그래픽 광고로, 종종 애니메이션으로 제작됩니다.텍스트 광고는 링크를 포함한 텍스트 형태의 광고입니다.모달 광고는 모달 창 형태로 현재 콘텐츠 위에 갑자기 표시되는 광고입니다.팝펀더는 페이지의 아무 곳이나 클릭하면 현재 창 아래에 별도의 창으로 열리는 광고입니다.리디렉션 광고는 사용자가 클릭 후 자동으로 다른 사이트로 리디렉션하는 메커니즘입니다.사이트 콘텐츠로 위장한 광고로, 클릭 시 프로모션 제품 또는 관련 없는 콘텐츠가 있는 페이지가 열립니다.동영상 광고는 동영상 콘텐츠 내에 삽입되거나 웹사이트 및 애플리케이션의 별도 광고 요소에 삽입되는 광고 동영상입니다.인터랙티브 광고는 사용자가 상호작용할 수 있는 광고(예: 게임 및 설문조사, 완료 시 광고 아이템이 열림)입니다.Interstitial ads — full-screen ads on mobile devices that cover the interface of the app or web browser넓은 공간을 차지하거나 배경과 대비되어 눈에 띄어 방문자의 관심을 끄는 광고(거의 식별할 수 없거나 눈에 띄지 않는 광고 제외)차단 방지 광고는 기본 광고가 차단되었을 때 사이트에 표시되는 대체 광고입니다.Bait elements that are used by multiple known adblock detection scripts to detect an ad blocker presence for different goals including changing the way ads are shown, fingerprinting, etc.Site’s own advertising, if it has been blocked by general filtering rules (see Limitations and exceptions)Anti-adblock scripts that prevent site usage (see Limitations and exceptions)멀웨어에 의해 삽입된 광고(로딩 방법 또는 재생산 단계에 대한 자세한 정보가 제공된 경우)원치 않는 마이닝은 사용자 동의 없이 암호화폐를 마이닝하는 스크립트입니다. "},{"title":"제한 및 예외​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#제한-및-예외","content":"사이트 자체의 광고는 의도적으로 차단해서는 안 됩니다. 단, 일반 필터링 규칙으로 인해 차단된 경우에는 차단을 해제해서는 안 됩니다.페이월과 같은 콘텐츠 액세스 조치는 차단되지 않습니다.다음과 같은 경우 Anti-adblock wall이 차단됩니다. 광고 차단기를 비활성화하거나 제거할 것을 적극적으로 요구하거나 웹사이트 사용을 효과적으로 막습니다.광고 차단기 사용 시 발생할 수 있는 결과에 대한 부정확하고 오해의 소지가 있는 설명이 포함되어 있습니다.차단되지 않은 광고가 모호한 출처에서 오는 경우, 방문자는 멀버타이징의 위험에 노출될 수 있습니다. 다음 기준 중 하나 이상을 충족하는 광고 차단기 탐지 메시지는 차단하지 않습니다: 웹 사이트 사용을 허용하고 상당한 양의 콘텐츠를 오버레이하지 않습니다.이 대안은 사용자의 개인정보나 보안을 위험에 빠뜨리지 않는다는 점에서 광고 차단기를 비활성화하는 대안이 될 수 있습니다.이를 통해 사용자는 웹사이트의 콘텐츠로 이동하거나 사용자의 개인정보나 보안을 위험에 빠뜨리지 않는 실현 가능한 가치 교환을 제공할 수 있습니다.일부 레거시 규칙은 이러한 기준 중 하나 이상을 충족하는 메시지를 계속 차단할 수 있습니다. 이러한 규칙이 확인되면 이 정책에 따라 처리됩니다. 마이닝 풀이 공개되어 있고 악의적인 목적으로만 사용되지 않는 경우 마이닝 풀은 차단되지 않습니다. "},{"title":"추적 보호 필터​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#추적-보호-필터","content":""},{"title":"용어​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#용어-1","content":"추적은 마케팅 목적으로 사용자와 웹사이트 및 애플리케이션과의 상호작용에 대한 데이터를 모니터링하고 수집하는 과정이며, 웹사이트 또는 애플리케이션의 작동을 분석하기 위한 목적으로 웹사이트 또는 애플리케이션의 기능에 대한 원격 측정을 수행하는 과정입니다. 이 프로세스에는 방문한 페이지, 소요 시간, 웹사이트 요소와의 상호작용(예: 클릭, 양식 제출) 및 기타 메트릭을 추적하는 것이 포함됩니다. 이를 통해 웹사이트 및 애플리케이션 소유자는 사용자 행동을 더 잘 이해하고, 기능을 최적화하며, 마케팅 전략을 조정할 수 있습니다. 추적은 성능, 사용 패턴을 모니터링하고 문제를 식별하여 개발자에게 웹사이트 또는 애플리케이션의 안정성과 품질을 개선하는 데 필요한 데이터를 제공하는 데도 사용됩니다. 수집한 데이터에서 개인의 신원을 확인할 수 없더라도 이러한 행위는 여전히 추적에 해당합니다. 추적기는 웹사이트나 애플리케이션에서 사용되는 소프트웨어로, 운영 및 방문자의 행동에 대한 정보를 수집하도록 설계되었습니다. 웹사이트 또는 애플리케이션과의 사용자 상호 작용을 추적하여 페이지 조회, 소요 시간, 클릭, 양식 제출 및 기타 이벤트에 대한 데이터를 기록합니다. 웹사이트 및 애플리케이션 소유자에게 사용자 행동 분석, 사용자 경험 개선, 콘텐츠 및 광고 최적화를 위한 도구를 제공하는 것이 목적입니다. URL 추적 매개변수는 분석 시스템에 의해 링크에 추가되거나 웹 페이지의 일부 링크에 존재하는 주소의 일부입니다. 요청이 이루어지면 이 URL 추적 매개변수는 분석 시스템 또는 웹사이트의 백엔드에서 처리되어 정보를 추출할 수 있습니다. 예를 들어 URL 추적 매개변수는 클릭 또는 광고 캠페인에 대한 정보를 전송할 수 있습니다. URL 추적 매개변수는 사기 방지 또는 봇 탐지 시스템에서도 사용할 수 있습니다. 쿠키는 웹사이트가 기기에 전송하고 저장하는 파일입니다. 이러한 파일에는 기기에서 사이트가 작동하는 데 필요하고 분석 목적으로 사용되는 다양한 정보(웹사이트에서의 방문자 활동 추적에 사용되는 고유 식별자, 광고 매개변수 등)가 포함되어 있습니다. "},{"title":"필터​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#필터-1","content":"AdGuard 추적 보호 필터에는 다음이 포함됩니다. AdGuard 추적 보호 필터AdGuard URL 추적 필터 "},{"title":"이러한 필터의 목적​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#이러한-필터의-목적-1","content":"추적 방지 필터는 사용자의 개인 데이터를 수집하는 추적기를 차단하고 사용자의 프라이버시를 개선하기 위해 설계되었습니다. What it blocks: 분석 시스템의 스크립트웹사이트 및 애플리케이션의 자체 추적 스크립트마스크된 CNAME 추적기추적 쿠키추적 픽셀브라우저의 추적 APIDetection of the ad blocker for tracking purposesGoogle 크롬의 개인정보 보호 샌드박스 기능 및 추적에 사용되는 포크(Google 토픽 API, 보호 대상 API) URL 추적 필터는 웹 주소에서 추적 매개 변수를 제거하도록 설계되었습니다. "},{"title":"제한 및 예외​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#제한-및-예외-1","content":"추적 방지 필터를 차단하면 웹사이트의 올바른 기능을 방해할 수 있는 경우 추적기를 차단해서는 안 됩니다. 사이트 사용을 방해하는 경우 봇 방지 및 사기 방지 기능을 제공합니다. 예를 들어, 사이트가 보안 문자로 방문자를 확인하려고 할 때 PerimeterX 또는 hCaptcha 차단으로 인해 문제가 발생합니다.센트리 또는 버그내그와 같은 오류 추적 시스템은 차단되지 않습니다. "},{"title":"방해 요소 필터​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#방해-요소-필터","content":"성가심 필터는 광고는 아니지만 사이트 상호 작용이나 콘텐츠 소비에 방해가 되는 요소(예: 다양한 모달 창 및 대화형 양식, 쿠키 동의 알림 및 요청, 모바일 앱 배너, 각종 위젯)를 차단하여 웹사이트의 사용성을 개선하기 위해 고안된 기능입니다. "},{"title":"용어​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#용어-2","content":"쿠키 고지는 웹사이트의 쿠키 유형과 사용을 설명하는 양식입니다. 쿠키 알림은 사용자가 웹사이트를 방문할 때 표시되며, 웹사이트가 쿠키 또는 기타 추적 기술을 사용하여 개인정보를 수집 및 사용한다는 사실을 사용자에게 알리고 수집한 정보가 공유되는 이유와 대상을 설명합니다. CMP(Consent Management Platform)는 웹사이트가 쿠키 사용 규칙을 준수할 수 있도록 지원하는 소프트웨어입니다. CMP는 사용자의 동의를 얻을 때까지 쿠키 사용을 제한하여 사용자에게 특정 쿠키를 허용하고 개인정보 설정을 관리할 수 있는 옵션을 제공합니다. Widget — a user interface element that extends the functionality of a website. 웹 위젯은 웹 페이지에 통합되며 버튼, 양식 또는 배너와 같은 대화형 요소를 포함할 수 있습니다. 다른 페이지로 이동하지 않고도 특정 서비스나 콘텐츠에 액세스할 수 있도록 사용자에게 제공할 수 있습니다. 팝업은 현재 웹 페이지 위에 표시되는 창입니다. 추가 정보, 광고, 알림 또는 데이터 입력 양식을 표시하기 위한 것입니다. 팝업은 일반적으로 페이지의 주요 콘텐츠 보기를 차단하고 닫으려면 사용자의 조치가 필요하므로 짜증을 유발할 수 있습니다. "},{"title":"필터​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#필터-2","content":"더 나은 사용자 지정을 위해 성가심 필터는 목적에 따라 구분되어 있습니다. AdGuard 쿠키 알림 필터AdGuard 팝업 필터AdGuard 모바일 앱 배너 필터AdGuard 위젯 필터AdGuard 기타 방해 요소 필터AdGuard 방해 요소 필터 — 5가지 특수 방해 요소 필터를 모두 포함하는 통합 필터 "},{"title":"이러한 필터의 목적​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#이러한-필터의-목적-2","content":"AdGuard 쿠키 알림 필터​ 이 필터는 쿠키 관리 플랫폼(CMP)의 쿠키 알림과 요청을 모두 차단하도록 설계되었습니다. 쿠키 고지 및 CMP에는 다양한 방법이 적용될 수 있습니다. 대부분의 경우 해당 스크립트를 숨기거나 차단하는 것만으로도 충분합니다. 단, 사이트의 기능 및 타사 콘텐츠 표시를 위해 쿠키 동의가 필요한 경우 다음 방법이 적용됩니다: 스크립트는 동의 요청을 우회하는 데 사용됩니다(타사 콘텐츠 로딩에 제한이 있는 사이트에서는 결정이 내려질 때까지 실제로 적용되지 않음).스크립트가 사용자가 선택한 것으로 간주하는 방식으로 사이트의 로컬 저장소에 쿠키 또는 키를 설정합니다.지정된 버튼을 클릭하고 로딩 후 10초 후에 실행을 중단하는 규칙을 사용하여 사용자 동작을 시뮬레이션합니다. 두 가지 옵션이 있습니다. 거부(기능 쿠키 제외 - CMP 시스템에 따라 다름) - 추가 분석 도구가 로드될 위험이 적으므로 선호되는 옵션입니다.수락 - 이 옵션은 다른 방법이 실패할 경우 최후의 수단으로 사용됩니다. 이 경우 사이트가 분석 도구의 사용을 추가로 확인한 다음 AdGuard 추적 보호 필터()에 의해 차단됩니다. 제한 및 예외 어떤 경우에는 규칙 추가 결정이 필터 개발자에 의해 독립적으로 이루어집니다. 대부분, 작업을 시뮬레이션할 때 선택한 사항이 사이트 기능에 영향을 미치는 경우입니다(예: 기록이 작동하지 않거나 사용자 설정이 해당 사이트에 저장되지 않을 수 있음). AdGuard 팝업 필터​ 정상적인 사이트 이용에 필요하지 않은 웹 페이지의 각종 팝업을 차단하는 필터입니다: 푸시 알림 수신 권한 요청뉴스, 프로모션 및 다양한 이벤트 수신을 위한 타사 채널(예: Google 뉴스, 텔레그램)을 포함한 뉴스, 프로모션 및 다양한 이벤트 구독을 위한 팝업 및 양식사용자가 광고 차단기를 비활성화하도록 유도하고 사용자의 개인정보를 침해하는 팝업(필터 개발자의 재량에 따라)사용자를 괴롭힐 수 있는 기타 유형의 팝업(필터 개발자의 재량에 따라) 제한 및 예외 푸시 알림은 실제 목적으로 사용되지 않는 사이트에서만 차단됩니다. 예를 들어 이메일 웹 클라이언트나 업무용으로 사용하는 도구에서는 이러한 알림이 차단되지 않습니다.위에 설명된 범주에 속하지는 않지만 사용자 경험을 방해하는 일부 팝업도 차단될 수 있습니다. 예를 들어 사이트의 등록 프롬프트 또는 사이트의 기능을 소개하는 팝업이 있습니다. 결정은 필터 개발자가 내립니다.콘텐츠에 액세스하기 위해 사용자에게 비용을 지불하도록 요청하는 콘텐츠 액세스 조치를 우회해서는 안 됩니다. AdGuard 모바일 앱 배너 필터​ This is a filter that blocks banners and popups that encourage visitors to install mobile apps. 제한 및 예외 웹사이트의 헤더나 메뉴에 있는 배너는 애니메이션이 없고 사용 가능한 공간의 상당 부분을 차지하지 않는 경우 차단되지 않습니다. 배너가 바닥글에 있는 경우 필터 개발자가 사례별로 결정합니다. 일반적으로 바닥글의 배너는 다른 요소에 비해 눈에 띄지 않고 산만하지 않습니다. AdGuard 위젯 필터​ This is a filter that blocks various widgets that are not essential for the functioning of websites or for interaction with them: 콘텐츠 추천 위젯 - 관련 기사, 유사한 웹사이트, 다양한 맞춤형 추천콘텐츠와 통합되어 있지 않고 페이지의 주요 콘텐츠가 아닌 채팅 위젯마케팅 위젯 어시스턴트 또는 봇과의 커뮤니케이션을 위한 채팅사용자에게 표시되는 제품 추천이 포함된 위젯콜백 양식 별도의 카테고리가 없지만 페이지를 시각적으로 어수선하게 만들 수 있는 기타 위젯. 예를 들어 날씨 위젯, 환율, 채용 정보, 기부금 등이 있습니다. 제한 및 예외 이 필터는 다음을 차단하지 않습니다. 댓글 섹션, 실시간 채팅 스트림 등 페이지의 콘텐츠와 밀접하게 관련된 위젯(스팸 및 유사한 콘텐츠로 가득 찬 비공식 스트림이 있는 사이트의 중재되지 않은 채팅은 예외로 함)은 제외됩니다.자체 프로모션 및 사이트별 프로모션 활동을 위한 위젯기부 위젯은 페이지의 상당 부분을 차지하고 콘텐츠와 대비되어 눈에 띄는 경우를 제외하고는 사용할 수 없습니다. 차단 여부는 필터 개발자가 결정합니다. AdGuard 기타 방해 요소 필터​ 이 필터는 다른 필터에 포함되지 않은 성가신 요소를 차단하고 다양한 조정을 적용하도록 설계되었습니다. 그 목적은 다음과 같습니다. 성가신 요소로 간주되는 경우 웹사이트의 자체 홍보(제3자로부터 상업적 보상을 받지 않고 사이트 소유자가 소유한 상품 또는 서비스를 홍보하는 모든 유형의 광고)를 차단합니다.다른 카테고리에 포함되지 않은 귀찮은 요소를 차단합니다.컨텍스트 메뉴 열기, 텍스트 선택 및 복사와 같은 페이지의 동작이 차단된 경우 해당 동작의 차단을 해제합니다.웹 사이트에서 파일을 로드할 때 서버에 의해 제어되지 않거나 방해를 받지 않는 경우 카운트다운 타이머 속도를 높입니다.필터 개발자에게 유용할 수 있는 다양한 규칙을 적용합니다 (예: 웹 디버거 탐지 차단). 제한 및 예외 이 필터에는 모든 사용자에게 적합하지 않은 규칙이 포함되어 있을 수 있습니다. 때로는 이 필터를 비활성화하는 것이 좋습니다. 이 필터에 규칙을 추가할지 여부는 필터 개발자가 규칙별로 결정합니다. "},{"title":"소셜 미디어 필터​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#소셜-미디어-필터","content":""},{"title":"필터​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#필터-3","content":"AdGuard 소셜 미디어 필터에는 다음이 포함됩니다. AdGuard 소셜미디어 필터 "},{"title":"이러한 필터의 목적​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#이러한-필터의-목적-3","content":"이 필터는 타사 웹사이트의 소셜 미디어 위젯(예: '좋아요' 및 '공유하기' 버튼, 그룹 위젯, 추천 및 이와 유사한 위젯)을 차단합니다. "},{"title":"제한 및 예외​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#제한-및-예외-2","content":"댓글, 임베드된 글, 설문조사, 소셜 미디어 로그인 위젯 등 웹사이트의 기능이나 콘텐츠의 일부인 위젯은 차단되지 않습니다. 웹사이트의 소셜 미디어 페이지로 연결되는 링크도 차단되지 않습니다. "},{"title":"기타 필터​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#기타-필터","content":"이 그룹에는 광고 차단에 필수적이지 않은 필터가 포함되어 있습니다. "},{"title":"용어​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#용어-3","content":"문맥 광고는 인터넷 페이지의 콘텐츠, 선택한 대상, 위치, 시간 또는 기타 문맥에 따라 광고가 표시되는 인터넷 광고의 한 유형입니다. 검색 광고는 방문자의 검색어에 따라 광고가 표시되는 문맥 광고의 하위 클래스입니다. 웹사이트의 자체 홍보 사이트 소유자가 소유한 상품 및 서비스를 홍보하는 웹사이트의 배너로, 제3자로부터 보상을 받지 않는 배너를 말합니다. For more details on these types of advertising, refer to the article on search ads. "},{"title":"필터​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#필터-4","content":"유용한 광고 필터AdGuard DNS 필터AdGuard 실험 필터 "},{"title":"이러한 필터의 목적​","type":1,"pageTitle":"AdGuard 필터 정책","url":"general/ad-filtering/filter-policy/#이러한-필터의-목적-4","content":"유용한 광고 필터​ 이 필터는 차단을 해제합니다. 검색 엔진 사용 시 검색 결과 내 문맥 광고(예: 구글, 빙, 얀덱스, 덕덕고)웹사이트 자체 홍보 제한 및 예외 검색 광고는 문맥에 따라 사용자의 검색어와 일치하는 경우에만 차단이 해제됩니다. 그렇지 않으면 광고가 차단된 상태로 유지됩니다.셀프 프로모션은 필터 정책을 준수하는 경우에만 차단이 해제됩니다. 필터 개발자가 차단 해제 요청을 거부할 수 있습니다.다른 광고는 차단 해제되지 않습니다. AdGuard DNS 필터​ This filter is used in AdGuard DNS. 광고 차단 필터를 대체할 수 없습니다. 제한 및 예외 광고 차단 필터와 동일합니다. AdGuard 실험 필터​ 이 필터는 웹사이트의 기능을 잠재적으로 손상시킬 수 있는 규칙을 테스트하고 디버깅하기 위한 것입니다. 특정 솔루션을 테스트할 필요가 있을 때 필터 개발자가 규칙을 추가합니다. 이 필터는 디버깅 목적으로 설계되었기 때문에 제한이 최소화되어 있습니다. 제한 및 예외 Rules should not intentionally break websites’ functionality규칙은 광고 차단을 해제하거나 정책을 위반해서는 안 됩니다. "},{"title":"Tracking filter rules statistics","type":0,"sectionRef":"#","url":"general/ad-filtering/tracking-filter-statistics/","content":"","keywords":""},{"title":"Why do we need ad filters?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#why-do-we-need-ad-filters","content":"Let's start by defining what ad filters are. Thanks to these filters, AdGuard removes ads from websites. They are manually compiled based on your complaints about ads on websites. Ad filters are an essential element of AdGuard — their quality determines the overall quality of AdGuard ad blocking. However, there is a downside. Over the years, more and more ad filters have been appearing. And the more ad filters are there, the more memory AdGuard consumes, thus slowing down the rendering of web pages. At the same time, some of the filters start to expire, gradually becoming a dead weight that has no use, only consumes memory, and slows down the program. "},{"title":"Why do we need statistics?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#why-do-we-need-statistics","content":"We want to solve the problem of outdated filtering rules once and for all. But we need your help to do so. By gathering statistics on used filtering rules, we detect and remove the rules that are no longer used. As a result, it will help all those who use AdGuard. If your computer is powerful enough, it won’t really affect you. But the difference will be very noticeable for users of low-power netbooks or tablets. "},{"title":"What kind of statistics will be sent?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#what-kind-of-statistics-will-be-sent","content":"If you enable the Send statistics for ad filters usage option, the following information is sent periodically: Extension versionBrowser type (Chrome/Firefox/Opera/Yandex.Browser/Safari).List of enabled ad filters.The list that consists of the following elements: The domain name of the websiteThe number of recent page viewsThe list of filtering rules and Filter ID which were activated on this websiteThe domain name of blocked requests is sent for URL rules The list is created based on the website's visit statistics since the last time statistical data was sent. The collected statistics will be sent periodically to our server for analysis and filter optimization. It's important to note that all the statistics we get are averaged and anonymized. We don't use these statistics for any purpose other than optimizing the filters, and we do not sell this data to third parties. You can read about it in our Privacy policy. "},{"title":"What does tracking filter rules statistics fraught with?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#what-does-tracking-filter-rules-statistics-fraught-with","content":"For the vast majority of users, the change in computer speed will not be really noticeable. However, netbook and tablet users may notice a slight slowdown. Periodically, we will send the gathered statistics to the server. The size of the transmitted data is not very large and is comparable to the size of an average web page. "},{"title":"AdGuard를 설치하는 방법","type":0,"sectionRef":"#","url":"general/how-to-install/","content":"AdGuard를 설치하는 방법 설치하려는 AdGuard 앱 또는 확장 프로그램에 따라 다음 링크 중 하나를 클릭하여 관련 지침을 따르세요. Android용 AdGuard iOS용 AdGuard Windows용 AdGuard AdGuard for Mac AdGuard 확장 프로그램 Safari용 AdGuard AdGuard 콘텐츠 차단기","keywords":""},{"title":"HTTPS 필터링: 알려진 문제","type":0,"sectionRef":"#","url":"general/https-filtering/known-issues/","content":"","keywords":""},{"title":"알려진 문제​","type":1,"pageTitle":"HTTPS 필터링: 알려진 문제","url":"general/https-filtering/known-issues/#알려진-문제","content":"HTTPS filtering in AdGuard has its drawbacks. Almost all of them are scheduled to be eliminated in the next few AdGuard versions. All the issues known to us and the ETAs on their fixes are listed below. "},{"title":"실제 인증서 확인​","type":1,"pageTitle":"HTTPS 필터링: 알려진 문제","url":"general/https-filtering/known-issues/#실제-인증서-확인","content":"The most important drawback of the HTTPS filtering mechanism is that it hides the real certificate of a website. You cannot simply check its original certificate because you can only see the one issued by AdGuard. This problem is solved in Browser Assistant. This browser extension helps you manage filtering directly from the browser and allows you to inspect the original certificate of any website. "},{"title":"인증서 투명성(Certificate Transparency)​","type":1,"pageTitle":"HTTPS 필터링: 알려진 문제","url":"general/https-filtering/known-issues/#인증서-투명성certificate-transparency","content":"Thanks to modern cryptography, browsers can usually detect malicious websites that are provisioned with forged or fake SSL certificates. However, current cryptographic mechanisms aren’t so good at detecting malicious websites if they’re provisioned with mistakenly issued certificates or certificates that have been issued by a certificate authority (CA) that’s been compromised or gone rogue. Certificate Transparency aims to remedy these certificate-based threats by making the issuance and existence of SSL certificates open to scrutiny by domain owners, CAs, and domain users. AdGuard products which use CoreLibs starting with version 1.11 will implement a policy based on Chrome Certificate Transparency Policy. "},{"title":"의견이나 제안이 있나요?​","type":1,"pageTitle":"HTTPS 필터링: 알려진 문제","url":"general/https-filtering/known-issues/#의견이나-제안이-있나요","content":"If you’d like to add something, report any errors, or ask a question, please contact us at: devteam@adguard.com. "},{"title":"피싱 및 멀웨어 보호","type":0,"sectionRef":"#","url":"general/browsing-security/","content":"","keywords":""},{"title":"How does AdGuard check websites?​​","type":1,"pageTitle":"피싱 및 멀웨어 보호","url":"general/browsing-security/#how-does-adguard-check-websites","content":"Each time you visit a website, your local client exchanges information with our backend server in the form of hashes and hash prefixes. Based on this exchange, the local client determines whether or not the website is listed in the potentially dangerous websites database. There is a difference in the scope of this check for apps and extensions. "},{"title":"In apps​","type":1,"pageTitle":"피싱 및 멀웨어 보호","url":"general/browsing-security/#in-apps","content":"AdGuard provides the best possible protection by inspecting both the pages and all objects loaded on them. AdGuard checks URLs and domain names using hash prefixes, not the full URLs, so our servers retain no information about the websites you visit and your personal information is completely safe. Our servers respond to the app’s query with a list of all possible addresses that match the hash prefix. When a potential threat is detected based on hash matches, access to that website is immediately blocked.  "},{"title":"In browser extensions​","type":1,"pageTitle":"피싱 및 멀웨어 보호","url":"general/browsing-security/#in-browser-extensions","content":"Our browser extensions can only check domain names, not full URLs. They are also unable to check subqueries. This means that if there are potentially malicious elements on the page, they will be loaded even if the page itself is from a safe domain. The extension won’t be able to protect against them. It's also important to note that the check performed is asynchronous, i.e. it happens at the same time as the page is loaded, so it’s possible that malware could be loaded as well. "},{"title":"Setting up phishing and malware protection in AdGuard products​","type":1,"pageTitle":"피싱 및 멀웨어 보호","url":"general/browsing-security/#setting-up-phishing-and-malware-protection-in-adguard-products","content":"For Windows: Activate the Browsing Security module in the Settings menu  For Mac: Enable the Security module in Preferences  For Android: Turn on Browsing Security in the Protection tab  For iOS: Although there’s no separate module, you can go to Safari protection → Filters → Security and enable the available filters. Additionally, enable DNS protection and select one of the AdGuard DNS servers  For Browser extensions: Enable Phishing and malware protection in the Settings tab. For enhanced protection, go to Filters → Security and activate available filters  For Private AdGuard DNS: Enable malware protection in Server settings under Security  "},{"title":"What we block​","type":1,"pageTitle":"피싱 및 멀웨어 보호","url":"general/browsing-security/#what-we-block","content":"We maintain two primary filters: one that protects against phishing and fraudulent websites that attempt to steal user credentials, and another that blocks access to websites known to distribute malware, which could lead to data loss, information leaks, or damage to your device. These filters also protect you from websites with various scams and fraudulent schemes. For more detailed information, refer to this Wikipedia article. "},{"title":"Maintaining our filters​","type":1,"pageTitle":"피싱 및 멀웨어 보호","url":"general/browsing-security/#maintaining-our-filters","content":"AdGuard maintains an extensive database of phishing and malware websites, and it’s updated regularly and automatically as new threats are discovered. We collect information from a variety of reliable, high-quality sources, both public and from other companies, and aggregate it into a common database of dangerous sites. We automatically analyze complaints about suspicious sites and spend a great deal of time keeping the database up-to-date, cleaning up false positives, and implementing mechanisms to prevent them in the future. "},{"title":"Want to help?​​","type":1,"pageTitle":"피싱 및 멀웨어 보호","url":"general/browsing-security/#want-to-help","content":"Any help is welcome! If you encounter a phishing or malware website, please report it to support@adguard.com. "},{"title":"False-positive responses​​","type":1,"pageTitle":"피싱 및 멀웨어 보호","url":"general/browsing-security/#false-positive-responses","content":"Occasionally, some non-malicious websites are added to AdGuard’s filters. We do our best to reduce the percentage of false positives, but they still occur. If you encounter this behavior from AdGuard, please report the false positive to our technical support at support@adguard.com. "},{"title":"If you are suspicious about a website​","type":1,"pageTitle":"피싱 및 멀웨어 보호","url":"general/browsing-security/#if-you-are-suspicious-about-a-website","content":"If you suspect that a certain website might be dangerous, check it first by using our security check tool.  "},{"title":"Local.adguard.org domain","type":0,"sectionRef":"#","url":"general/https-filtering/local-adguard-com-domain/","content":"","keywords":""},{"title":"Technical explanation​","type":1,"pageTitle":"Local.adguard.org domain","url":"general/https-filtering/local-adguard-com-domain/#technical-explanation","content":"But what's going on and why is it done? Please read the technical explanation below. AdGuard is a network-level content blocker so it cannot simply add custom JavaScript and CSS to webpages like what browser extensions do. However, doing this is crucial for quality content blocking.In order to do it AdGuard injects a &quot;content script&quot; that looks like this: &lt;script src=&quot;https://local.adguard.org/.../content-script.js&quot;&gt;. This &quot;content script&quot; takes care of cosmetic filtering, hides or removes ad content from the web pages.Connections to the IP address of the local.adguard.org domain are intercepted by AdGuard on the network level and processed locally. This is why that domain has a &quot;static&quot; IP address that does not change for years. Why do we need to use a real IP address for that? We cannot use 127.0.0.1 as the browsers won't accept it.Using some IP address from the private subnets is possible, but this solution has two downsides. First, there is a slight chance of intersecting with an existing intranet service and breaking access to it.Second, some DNS servers may consider this a DNS rebinding attack and refuse to respond to local.adguard.org. "},{"title":"Verification​","type":1,"pageTitle":"Local.adguard.org domain","url":"general/https-filtering/local-adguard-com-domain/#verification","content":"This is easy to verify. If you disable AdGuard, you'll see that it is simply impossible to establish connection to local.adguard.org since there is no server with that address. Just try opening it in your browser when AdGuard is disabled. "},{"title":"HTTPS 필터링","type":0,"sectionRef":"#","url":"general/https-filtering/what-is-https-filtering/","content":"","keywords":""},{"title":"HTTPS란 무엇인가요?​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#https란-무엇인가요","content":"HTTPS(HyperText Transfer Protocol Secure)는 보안을 강화하기 위해 암호화를 지원하는 HTTP 프로토콜의 확장입니다. 이 프로토콜은 개인 데이터, 신용 카드 정보 등과 같은 중요한 지정보를 안전하게 전송하는 데 사용됩니다. 암호화된 트래픽이 제3자에 의해 ‘엿들어지지 않도록’ 보호되므로 HTTPS를 사용하는 것이 좋습니다. 최근 HTTPS는 Google 권장을 받고 있다는 점과 무료 인증 센터 Let ’s Encrypt의 등장으로 인해 확산되고 있습니다. 아래의 그림은일반 HTTP 프로토콜과 보안 HTTPS 프로토콜의 차이점을 보여줍니다.  "},{"title":"보안 인증서란 무엇인가요?​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#보안-인증서란-무엇인가요","content":"간단히 말하면 HTTPS는 데이터 암호화를 의미합니다. 그러나 원하시는 웹 사이트와 암호화된 연결을 했는지 어떻게 확인을 할 수 있을까요? 웹 사이트가 보안 인증서가 있으면 연결이 암호화됩니다. 웹 사이트가 보안 인증서가 없거나 인증서에 잘못된 정보가 포함된 경우, 브라우저에서 보안 연결이 될 수 없습니다. 웹 사이트에서 사용하는 인증서를 브라우저에서 신뢰하는 CA(인증 기관)에서 발급받는 것이 중요합니다. 인증 기관은 SSL 인증서가 웹 사이트 소유자에게 발급되는 것을 보장합니다. "},{"title":"AdGuard가 HTTPS를 필터링해야 하는 이유는 무엇인가요?​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#adguard가-https를-필터링해야-하는-이유는-무엇인가요","content":"대부분의 웹 사이트와 광고 네트워크는 현재 HTTPS를 사용하고 있습니다. YouTube와 Facebook, Twitter가 HTTPS를 필터링하지 않고는 광고를 삭제할 수 없는 대표적인 예시입니다. "},{"title":"HTTPS 필터링은 어떻게 작동하나요?​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#https-필터링은-어떻게-작동하나요","content":"HTTPS 필터링 작업 방식이 쉬웠다면 HTTPS는 그렇게 안전하지 않을 것입니다. 브라우저가 서버에 연결하려고 하면 AdGuard는 두 개의 보안 연결을 설정하는데, 각각 브라우저나 다른 앱, 그리고 서버와 설정하는 것이 그것입니다. 브라우저는 AdGuard와 AdGuard가 생성하는 연결을 신뢰해야 합니다. 이를 위해 AdGuard는 특수 루트 인증서를 생성하여 시스템에 설치하고 필요한 경우, Firefox와 같은 일부 브라우저에도 설치합니다. 따라서 AdGuard는 보안 연결 상황을 확인하고 광고 및 추적을 차단할 수 있습니다. 아래의 그림은 이러한 과정을 알기 쉽게 보여줍니다.  "},{"title":"내 트래픽이 암호화되고 안전하나요?​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#내-트래픽이-암호화되고-안전하나요","content":"물론입니다. 원격 서버와의 연결은 암호화되고 안전하게 유지됩니다. AdGuard는 브라우저와 마찬가지로 필터링할지 여부를 결정하기 전에 서버의 인증서를 확인합니다. 그러나 HTTPS 필터링에는 단점이 있습니다. HTTPS 필터링 시 브라우저는 실제 인증서 대신 AdGuard에서 발급한 인증서를 봅니다. 그래서 저희는 연결 보안을 개선하기 위해 몇 가지 추가 조치를 취합니다. "},{"title":"금융 웹 사이트 및 민감한 개인 데이터가 있는 웹 사이트​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#금융-웹-사이트-및-민감한-개인-데이터가-있는-웹-사이트","content":"기본적으로 AdGuard는 개인 데이터가 있는 은행 웹 사이트, 결제 시스템 웹 사이트 및 웹 사이트에서 필터링하지 않습니다. 저희는 수천 개의 그러한 웹 사이트 목록을 유지합니다. 이 목록에 웹 사이트를 추가하려면 저희에게 알려주십시오. "},{"title":"EV(Extended Validation) 인증서​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#evextended-validation-인증서","content":"AdGuard는 EV 인증서를 사용하는 모든 웹 사이트를 필터링에서 제외하는 기능을 제공합니다. EV 인증서는 더 높은 수준의 보안을 의미하며 일반 인증서보다 더 많은 보증을 제공하여 웹 사이트가 사기 또는 위조 웹 사이트가 아님을 증명합니다. "},{"title":"HTTPS 필터링과 관련된 문제​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#https-필터링과-관련된-문제","content":"2017년 연구에 따르면 HTTPS 연결의 5~10%가 HTTPS 필터링을 사용하는 애플리케이션에 의해 이루어집니다. 이 HTTPS 필터링 애플리케이션 중 대부분 바이러스 백신 소프트웨어입니다. 나쁜 소식은 테스트된 26개의 바이러스 중 24개가 연결 보안 수준을 떨어뜨렸고 3분의 2가 해킹 연결에 취약하다는 것입니다. 연구원들의 결론은 인터넷 보안 커뮤니티가 보안 연결을 필터링하는 애플리케이션에 세심한주의를 기울여야 한다는 것입니다. 그리고 그러한 프로그램의 개발자는 필터링 구현의 품질에 가장 진지하게주의를 진지하게 임해야 합니다. AdGuard는 연구원들에 의해 테스트되지 않았습니다. We ran estimates according to their set of tests, and at the time of testing, we could have received the maximum score — A*. 연구원에 의해 확인되었지만 최종 평가에서 고려되지 않은 몇 가지 문제가 있습니다. AdGuard는 연구원의 결과에 전적으로 동의합니다. 또한 현재 겪고 있는 문제와 필터링 메커니즘의 품질 및 보안을 개선하기 위한 계획에 대해 알려 드리고자 합니다. 이러한 목록은 우선 순위에 따라 정렬됩니다. 위의 연구에서 발견된 대부분의 문제는 인증서 유효성 검사 메커니즘과 관련이 있습니다. 저희는 별도의 인증서 유효성 검사 라이브러리를 생성 중입니다. 또한 인증서 유효성 검사 라이브러리를 오픈 소스로 만들고 싶습니다. AdGuard의 HTTPS 필터링 단점에 대한 자세한 내용은 이 기사에서 확인할 수 있습니다. Android 7 이상에서 HTTPS 필터링 문제​ Starting from Android 7, developers have to explicitly indicate that their apps trust user-installed certificates. 이제 AdGuard는 HTTPS 트래픽을 필터링하기 위해 사용자 인증서를 설치합니다. 앱이 이 인증서를 신뢰하지 않으면 HTTPS 트래픽이 필터링되지 않습니다. HTTPS 트래픽이 필터링되지 않으면 어떻게 해야 할까요? 우선, 많은 앱(최신 앱 포함)이 여전히 사용자 인증서를 신뢰합니다. 거의 모든 브라우저는 이러한 인증서도 신뢰합니다. 이 인증서를 신뢰하지 않는 일부 브라우저가 있을 수 있지만 드문 경우입니다. 그리고 기기가 루팅된 경우, AdGuard 인증서를 시스템 저장소로 이동할 수 있습니다. 이렇게하면 특정 앱에 권한이 있는지 여부에 대해 걱정할 필요가 없습니다. HTTPS 트래픽은 이전 앱뿐 아니라 최신 앱에서도 필터링됩니다. 그러나 HPKP 또는 Expect-CT와 같은 일부 추가 보안 제한이 AdGuard에 적용됩니다. "},{"title":"HTTPS 품질을 수동으로 확인하는 방법은 무엇인가요?​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#https-품질을-수동으로-확인하는-방법은-무엇인가요","content":"특정 웹 사이트에서 HTTPS 연결 품질을 확인할 수 있습니다. 이러한 웹 사이트는 브라우저(또는 AdGuard를 사용 경우, 브라우저 + AdGuard)가 일반적인 취약점에 노출되는지 확인합니다. HTTPS를 필터링하는 프로그램을 사용하려는 경우, 다음과 같은 웹 사이트에서 연결 품질을 확인하는 것이 좋습니다. https://www.ssllabs.com/ssltest/viewMyClient.htmlhttps://www.howsmyssl.com/https://badssl.com/ "},{"title":"라이선스를 활성화하는 방법","type":0,"sectionRef":"#","url":"general/license/activation/","content":"","keywords":""},{"title":"Windows용 AdGuard 활성화 방법​","type":1,"pageTitle":"라이선스를 활성화하는 방법","url":"general/license/activation/#windows용-adguard-활성화-방법","content":"만료된 라이선스 화면에서 활성화를 클릭합니다. 또는 메인 화면의 오른쪽 상단에서 라이선스를 선택하고 활성화를 클릭합니다. 원하는 방법(계정 또는 라이선스 키)으로 라이선스를 활성화합니다. 라이선스가 이메일 주소에 연결된 경우 AdGuard 계정을 클릭하거나 이 이메일 주소와 연결된 소셜 네트워크를 선택합니다. 또는 라이선스 키를 입력할 수 있습니다. "},{"title":"Mac용 AdGuard 활성화 방법​","type":1,"pageTitle":"라이선스를 활성화하는 방법","url":"general/license/activation/#mac용-adguard-활성화-방법","content":"만료된 라이선스 화면에서 활성화를 클릭합니다. 또는 AdGuard 메뉴에서 톱니바퀴 아이콘을 클릭한 다음 라이선스를 클릭합니다. 열린 창에서 활성화를 클릭합니다. 원하는 방법(계정 또는 라이선스 키)으로 라이선스를 활성화합니다. 라이선스가 이메일 주소에 연결된 경우 AdGuard 계정을 클릭하거나 이 이메일 주소와 연결된 소셜 네트워크를 선택합니다. 또는 라이선스 키를 입력할 수 있습니다. "},{"title":"Android용 AdGuard 활성화 방법​","type":1,"pageTitle":"라이선스를 활성화하는 방법","url":"general/license/activation/#android용-adguard-활성화-방법","content":"설정을 누른 다음 라이선스를 선택합니다. 라이선스 활성화를 누릅니다. 원하는 방법(계정 또는 라이선스 키)으로 라이선스를 활성화합니다. 라이선스가 이메일 주소에 연결되어 있는 경우, 이메일로 진행을 누르거나 이 이메일 주소와 연결된 소셜 네트워크를 선택합니다. 또는 라이선스 키를 입력할 수 있습니다. "},{"title":"iOS용 AdGuard 활성화 방법​","type":1,"pageTitle":"라이선스를 활성화하는 방법","url":"general/license/activation/#ios용-adguard-활성화-방법","content":"설정을 누른 다음 라이선스를 선택합니다. 화면 오른쪽 상단에 있는 로그인 누릅니다. 이메일 주소 또는 소셜 미디어 계정을 사용하여 라이선스를 활성화합니다. "},{"title":"취소 및 환불 방법","type":0,"sectionRef":"#","url":"general/license/cancel-refund/","content":"","keywords":""},{"title":"구독을 취소하는 방법​","type":1,"pageTitle":"취소 및 환불 방법","url":"general/license/cancel-refund/#구독을-취소하는-방법","content":"AdGuard 계정에서 구독을 취소할 수 있습니다. 구독을 취소하는 방법은 다음과 같습니다. AdGuard 계정으로 이동합니다. 라이선스를 선택하세요. 더 이상 필요하지 않은 구독 아래의 구독 취소를 클릭합니다. 취소된 구독은 만료일까지 유효합니다. note App Store에서 구매한 구독은 App Store 계정 또는 기기 설정에서 관리할 수 있습니다. "},{"title":"환불 받는 방법​","type":1,"pageTitle":"취소 및 환불 방법","url":"general/license/cancel-refund/#환불-받는-방법","content":"판매 약관에 따라 구매한 AdGuard 라이선스 키는 https://adguard.com에서 100% 환불 받을 수 있습니다. 환불을 받으려면 지원 팀(support@adguard.com)에 문의하여 어떤 결제 수단을 사용했는지 알려주세요. 다음과 같은 경우 환불이 거부될 수 있습니다. 라이선스를 구매한 지 60일이 지난 경우유통업체에서 라이선스를 구매한 경우App Store에서 라이선스를 구매한 경우라이선스 키 업그레이드 또는 갱신에 대한 부분 환불을 신청한 경우 "},{"title":"구매 또는 업그레이드 방법","type":0,"sectionRef":"#","url":"general/license/payment-options/","content":"","keywords":""},{"title":"라이선스를 구매하는 방법​","type":1,"pageTitle":"구매 또는 업그레이드 방법","url":"general/license/payment-options/#purchase","content":"AdGuard 라이선스는 adguard.com에서 구매할 수 있습니다. Visa, Mastercard, Apple Pay, Google Pay, PayPal, Alipay 및 UnionPay로 결제할 수 있습니다. 또한 Bitcoin, Ethereum, Litecoin, Tether와 같은 암호화폐도 사용할 수 있습니다. iOS용 AdGuard Pro는 App Store에서 구입할 수 있습니다. 광고 차단기 라이선스는 다양한 유통업체에서도 판매됩니다. 앱 스토어 및 유통업체에서 AdGuard 제품을 구매할 수 있는 여부는 국가에 따라 다릅니다. "},{"title":"라이선스를 업그레이드하는 방법​","type":1,"pageTitle":"구매 또는 업그레이드 방법","url":"general/license/payment-options/#upgrade","content":"라이선스를 업그레이드하면 AdGuard 제품을 최대한 활용할 수 있습니다. 개인용 라이선스를 가족용 라이선스로 업그레이드하여 기기 수를 늘릴 수 있습니다.1년 구독을 평생 라이선스로 업그레이드할 수도 있습니다. AdGuard 계정에서 라이선스를 업그레이드할 수 있습니다. 라이선스를 업그레이드하려면 평생 요금제로 업그레이드 또는 기기 한도 늘리기를 클릭합니다.  "},{"title":"이전 라이선스 키","type":0,"sectionRef":"#","url":"general/license/legacy/","content":"","keywords":""},{"title":"이전 라이선스​","type":1,"pageTitle":"이전 라이선스 키","url":"general/license/legacy/#이전-라이선스","content":"이전에 아래와 같은 AdGuard 라이선스가 있었습니다. 일반 라이선스는 데스크톱 애플리케이션인 Windows용 AdGuard와 Mac용 AdGuard를 위한 것입니다. 모바일 라이선스는 모바일 앱, Android용 AdGuard 및 iOS용 AdGuard를 위한 것입니다. 프리미엄 라이선스는 데스크톱과 모바일 애플리케이션을 결합한 라이선스입니다. 일반 라이선스와 모바일 라이선스는 1~9개의 기기에서 사용할 수 있었습니다. 일반 라이선스는 컴퓨터에서만 이용할 수 있고 모바일 라이선스는 휴대폰과 태블릿에서만 사용할 수 있었습니다. 프리미엄 라이선스는 2~18개의 기기에서 사용이 가능하였습니다. 구매 시 선택한 기기 수에 따라 컴퓨터 및 휴대폰/태블릿에서 2+2, 3+3 등의 형식으로 AdGuard를 동시에 활성화할 수 있었습니다. 예를 들면, 2+2(4개의 기기용) 프리미엄 라이선스는 2대의 컴퓨터와 2대의 휴대폰/태블릿에서 사용할 수 있었습니다. 아니면 3+3(6개의 기기용) 프리미엄 라이선스를 3대의 컴퓨터와 3대의 휴대폰/태블릿에서 사용할 수 있었습니다. 일반/모바일/프리미엄 라이선스는 연간와 평생 라이선스로 구분되었습니다. 그러나 2019년 10월부터 새로운 라이선스 시스템이 도입되었습니다. 이제는 3개의 기기에서 사용할 수 있는 개인용 라이선스와 9개의 기기에서 사용할 수 있는 가족용 라이선스가 존재합니다. 예전처럼 개인용/가족용 라이선스는 연간와 평생 라이선스로 구분되었습니다. 제일 중요한 변경 사항은 새로운 라이선스를 모든 기기에서 사용할 수 있는 것입니다. 예를 들어, 개인용 라이선스는 Android, Mac 및 iOS 또는 두 대의 Windows 컴퓨터와 한 대의 Apple 태블릿에서 사용할 수 있습니다. "},{"title":"이전 라이선스 키는 어떻게 되었나요?​","type":1,"pageTitle":"이전 라이선스 키","url":"general/license/legacy/#이전-라이선스-키는-어떻게-되었나요","content":"이전 프리미엄 또는 모바일 라이선스를 가지고 있다면 과거와 동일하게 사용할 수 있습니다. 그러나 새로운 라이선스 시스템이 적용된 이후 모든 기기에서 일반 라이선스를 사용할 수 있습니다. 예를 들면, 이제는 3개의 기기용 일반 라이선스를 2대의 컴퓨터와 1대의 휴대폰에서 이용할 수 있습니다. 또한 프리미엄 라이선스는 이제 총 기기 수에 따라 개인 계정에 표시됩니다. 1+1 키는 다음과 같이 표시됩니다.  개인 계정에서 이전 라이선스는 '이전 버전’으로 표시됩니다. 이전 라이선스가 있는 경우 계정에 '이전 라이선스'라는 문구가 표시됩니다. 그러나 이러한 라이선스는 갱신 또는 업그레이드 시 자동으로 새로운 유형으로 변환됩니다. 어떤 라이선스를 새로운 유형으로 변환할 수 있는지, 어떻게 변환하는지 살펴보겠습니다. "},{"title":"이전 키 업그레이드· 갱신 방법​","type":1,"pageTitle":"이전 라이선스 키","url":"general/license/legacy/#이전-키-업그레이드-갱신-방법","content":"갱신 페이지 또는 AdGuard 계정에서 라이선스 변경이 가능합니다.  '내 라이선스'에서 특정 키에 대한 업그레이드·갱신 가능성을 확인할 수 있습니다. 구체적인 예를 살펴 보겠습니다. "},{"title":"1/2/3개의 기기용 일반/모바일 라이선스 또는 1+1 프리미엄​","type":1,"pageTitle":"이전 라이선스 키","url":"general/license/legacy/#123개의-기기용-일반모바일-라이선스-또는-11-프리미엄","content":"1/2/3개의 기기용 연간 라이선스는 갱신 시 개인용 또는 가족용 라이선스로 전환할 수 있습니다.  보호해야 하는 기기 수에 따라 라이선스를 선택하십시오. 또한 갱신하는 대신 영구 라이선스를 이용하십시오.  평생 라이선스는 갱신할 수 없으므로 새로운 유형의 라이선스로 전환 시 가족용 라이선스로 업그레이드하는 옵션만 가능합니다.  "},{"title":"4개 기기 이상의 라이선스 (최대 9개 기기 이용)​","type":1,"pageTitle":"이전 라이선스 키","url":"general/license/legacy/#4개-기기-이상의-라이선스-최대-9개-기기-이용","content":"연간 라이선스는 가족용 라이선스로 전환할 수 있습니다.  평생 라이선스가 기술적 제한으로 인해 새로운 유형 라이선스로 변경이 불가능합니다.  "},{"title":"9개 기기 이상의 라이선스​","type":1,"pageTitle":"이전 라이선스 키","url":"general/license/legacy/#9개-기기-이상의-라이선스","content":"9개 기기 이상의 라이선스로는 5+5 프리미엄 라이선스와 관리자를 통해 구매한 10대 이상 기기용 라이선스가 있습니다. 이는 매우 독특한 경우이므로 연간 라이선스를 평생 라이선스로 업그레이드하려면 partners@adguard.com으로 문의하십시오. 라이선스의 구성에 따라 개별적인 특별 제안을 제공하겠습니다. "},{"title":"라이선스를 이전하는 방법","type":0,"sectionRef":"#","url":"general/license/transfer/","content":"","keywords":""},{"title":"다른 기기로 라이선스를 이전하는 방법​","type":1,"pageTitle":"라이선스를 이전하는 방법","url":"general/license/transfer/#transfer","content":"라이선스 키는 제한된 수의 기기에서만 활성화할 수 있습니다. 허용된 최대 기기 수에서 이미 키를 사용한 경우에는 계정에서 기기 연결을 해제해야 합니다. "},{"title":"기기 연결을 해제하는 방법​","type":1,"pageTitle":"라이선스를 이전하는 방법","url":"general/license/transfer/#기기-연결을-해제하는-방법","content":"AdGuard 앱에서 라이선스 초기화 또는 로그아웃을 클릭합니다. AdGuard 계정에서 기기를 제거합니다. AdGard 계정에서 AdGuard 광고 차단기를 클릭합니다. 연결을 해제하려는 기기를 클릭합니다. 제거를 클릭합니다. 필요한 수의 기기를 삭제한 후, 새 기기에서 AdGuard 계정에 로그인할 수 있습니다. 라이선스가 새 기기에 추가됩니다. "},{"title":"다른 AdGuard 계정으로 라이선스를 이전하는 방법​","type":1,"pageTitle":"라이선스를 이전하는 방법","url":"general/license/transfer/#transferaccount","content":"이전하려는 라이선스가 포함된 AdGuard 계정으로 이동합니다. 라이선스 탭으로 이동합니다. 이전하려는 라이선스를 찾아 계정에서 연결 해제를 클릭합니다. 삭제를 클릭합니다(중요: 라이선스 키를 저장해야 함). 라이선스를 이전하려는 AdGuard 계정으로 이동합니다. 라이선스 탭으로 이동합니다. 오른쪽 상단에서 라이선스 추가를 클릭합니다. 라이선스 키를 입력합니다(3단계). 원래 계정에 액세스할 수 없는 경우, 지원 팀(support@adguard.com)으로 문의하시기 바랍니다. "},{"title":"AdGuard 라이선스란 무엇인가요?","type":0,"sectionRef":"#","url":"general/license/what-is/","content":"","keywords":""},{"title":"존재하는 AdGuard 라이선스 유형​","type":1,"pageTitle":"AdGuard 라이선스란 무엇인가요?","url":"general/license/what-is/#존재하는-adguard-라이선스-유형","content":"구매 페이지에서 다음 유형의 라이선스를 확인할 수 있습니다. 연간 구독 — 이 라이선스는 매년 자동으로 갱신되거나 수동으로 연장할 수 있습니다. 개인용 — 최대 3개의 기기가족용 — 최대 9개의 기기 평생 — 이 라이선스는 기간 제한이 없습니다. 개인용 — 최대 3개의 기기가족용 — 최대 9개의 기기 사용자가 다른 출처에서 구매하거나 무료로 받을 수 있는 라이선스도 있습니다. 평가판 라이선스는 제품의 전체 기능을 테스트할 수 있는 기간 제한이 있는 무료 라이선스입니다. Windows용 AdGuard — 14일 평가판Mac용 AdGuard — 14일 평가판Android용 AdGuard — 7일 평가판 판매업체 라이선스 및 선물받은 라이선스는 기간 제한이 있을 수도 없을 수도 있습니다. 만료일이 있는 라이선스는 수동으로만 갱신할 수 있습니다. 개인용 — 최대 3개의 기기가족용 — 최대 9개의 기기 iOS용 AdGuard Pro 라이선스는 App Store를 통해 구매 및 관리되며 동일한 Apple ID를 사용하는 iOS 및 iPadOS 기기에서만 사용할 수 있습니다. tip 더 많은 기기에서 라이선스를 사용하기 위해서 라이선스를 업그레이드할 수 있습니다. "},{"title":"AdGuard 라이선스 사용 방법​","type":1,"pageTitle":"AdGuard 라이선스란 무엇인가요?","url":"general/license/what-is/#adguard-라이선스-사용-방법","content":"기기에서 라이선스를 이용하려면 라이선스와 연결된 이메일 주소를 사용하여 AdGuard 앱에 로그인하세요. 라이선스가 아직 이메일 주소에 연결되지 않은 경우, AdGuard 계정에서 연결할 수 있습니다. 라이선스를 이메일 주소에 연결하려면 라이선스 탭을 열고 라이선스 추가를 클릭합니다. 또는 AdGuard 앱에 라이선스 키를 입력할 수 있습니다. "},{"title":"라이선스 키​","type":1,"pageTitle":"AdGuard 라이선스란 무엇인가요?","url":"general/license/what-is/#라이선스-키","content":"라이선스 키는 AdGuard 광고 차단기 라이선스를 나타내는 고유한 문자 시퀀스입니다. AdGuard 웹사이트에서 라이선스를 구매한 경우, 키는 라이선스 구매 시 사용한 이메일 주소에 자동으로 연결됩니다. 유통업체에서 라이선스를 구매한 경우, 키는 별도로 발급됩니다. 라이선스 키를 사용하여 다음을 수행할 수 있습니다. AdGuard 계정이 없는 경우, 제품에서 라이선스를 활성화할 수 있습니다.AdGuard 계정에 라이선스를 추가하고 제거할 수 있습니다. 라이선스 등록을 해제할 때 먼저 라이선스 키를 기록해두세요. 라이선스를 다시 등록하거나 다른 계정으로 이전하려면 키가 필요하기 때문입니다. "},{"title":"라이선스 키를 복구하는 방법​","type":1,"pageTitle":"AdGuard 라이선스란 무엇인가요?","url":"general/license/what-is/#라이선스-키를-복구하는-방법","content":"라이선스 키가 기억나지 않으면 AdGuard 계정을 확인하세요. 이메일 주소에 연결된 모든 라이선스가 여기에 표시됩니다. 판매업체에서 구매한 라이선스 키를 분실한 경우 support@adguard.com으로 문의하시기 바랍니다. 영수증이나 기타 구매 증빙 자료를 준비하세요. "},{"title":"스텔스 모드","type":0,"sectionRef":"#","url":"general/stealth-mode/","content":"","keywords":""},{"title":"보통​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#general","content":""},{"title":"Hide your search queries​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#searchqueries","content":"When you get directed to a website from Google, Yahoo, or any other search engine, this option hides the search query that you used to find that website. "},{"title":"Ask websites not to track you​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#donottrack","content":"Sends the Global Privacy Control and Do Not Track signals to the websites you visit. "},{"title":"Strip tracking parameters from URLs​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#strip-tracking-parameters-from-urls","content":"If you enable this option, AdGuard will strip tracking parameters like utm_* and fb_ref from pages’ URLs. "},{"title":"Tracking methods​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#tracking-methods","content":""},{"title":"Self-destruction of third-party cookies​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#3p-cookie","content":"Websites use cookies to store your information and preferences, such as the language you selected, your location, or the list of items in your shopping cart. When you return to a website, your browser sends back the cookies belonging to that website, which allows it to &quot;remember&quot; your data. Third-party cookies are those implemented by a website that is different from the one you are currently browsing. For example, cnn.com may have a Facebook &quot;Like&quot; widget on its homepage. This widget will implement a cookie that may be read later by Facebook. Some advertisers use such cookies to track what other sites you visit where their ads are placed. Set a time period (in minutes) at the end of which all third-party cookies will be destroyed. Set the timer to 0 to block them completely. caution This setting deletes all third-party cookies, including the information of your logins through social networks or other third-party services. You may have to periodically re-log in to some websites and face other cookie-related issues. To block only tracking cookies, use AdGuard Tracking Protection filter. "},{"title":"Self-destruction of first-party cookies​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#1p-cookie","content":"Set a time period (in minutes) at the end of which all cookies will be destroyed. Set the timer to 0 to block them completely. caution We do not recommend enabling this option as it may severely interfere with the work of certain websites. "},{"title":"Disable cache for third-party requests​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#3p-cache","content":"When a browser addresses a page, the server assigns an ETag to that page. This ETag is used by the browser to cache the page's contents. Upon subsequent requests, the browser sends the ETag to the corresponding server, thus letting the server learn the visitor’s identity. As long as the site's files are cached, the ETag is sent every time your browser addresses this site. If the site has embedded content from another server (such as an image or iframe), that server can track your activities without your knowledge. "},{"title":"Block third-party Authorization header​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#3p-auth","content":"&quot;Authorization&quot; header value is cached by the browser, and then is sent alongside every request to that domain. It means that it can be used for tracking purposes just like cookies. "},{"title":"Browser API​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#browser-api","content":""},{"title":"Block WebRTC​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#webrtc","content":"WebRTC (Web Real-Time Communication) is a technology that allows direct streaming of data between browsers and apps. It can let others know your true IP address, even if you use a proxy or VPN. Enabling this option can disrupt the work of certain browser applications, such as messengers, chats, cinemas, or games. "},{"title":"Block Push API​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#push","content":"The Push API enables servers to send messages to web applications regardless of the activity status of your browser. Thus, you may see notifications from various websites even if your browser is hidden in the tray or not launched. Enable this option to block the browser's Push API completely. "},{"title":"Block Location API​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#location","content":"Enabling this option will prevent the browser from sending GPS data that could be used to determine your location, modify your search results, or otherwise influence your web experience. "},{"title":"Block Flash​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#flash","content":"The Flash Player plugin has become increasingly vulnerable to such online threats as viruses and hackers; it may also significantly affect website loading time. Turning this setting on makes AdGuard block browsers' ability to detect components (such as plugins and ActiveXObject objects) that allow Flash to display content. This effectively means that browsers are unable to support Flash. "},{"title":"Block Java​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#java","content":"Some websites and web services still use the old technology to support Java plugins. The Java plugin API, which is the basis of Java plugins, has serious security flaws. For security purposes, you can disable such plugins. Nevertheless, even if you decide to use the &quot;Block Java&quot; option, JavaScript will still be enabled. "},{"title":"Miscellaneous​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#miscellaneous","content":""},{"title":"Hide Referer from third parties​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#referer","content":"Referer is an HTTP header used in browser-to-server requests. It contains the URL of the request source. When you navigate from one page to another, Referer saves the URL of the initial page. The server that hosts the destination web page often has software that parses Referer and extracts various pieces of information from it. Enabling the Hide Referer from third-parties option hides the current website from third-party sites by altering the HTTP header. You can also set an arbitrary value for Referer by entering it into the Custom Referer field. To use default Referer, leave the field blank. Note that to be able to filter traffic, AdGuard applications 'intercept' browser-to-server requests. Requests to ad, tracking, and phishing servers may be altered before sending them to the server or blocked completely. Same goes for the Hide Referer from third parties option: AdGuard intercepts HTTP(S) requests, in particular to remove or change the Referer header if this option is enabled. However, it happens only after these requests “leave” the browser. This means that if you monitor Referer inside the browser (for example, with the help of Chrome's Developer Tools), you will see the original Referer because the request hasn't reached AdGuard yet. You can use software like Fiddler to make sure that Referer gets altered correctly. On the opposite, due to the nature of all browser extensions, AdGuard Browser Extension works 'inside' the browser. It will alter the Referer right then and there, so Developer Tools will show the desired Referer for your requests. "},{"title":"Hide your User-Agent​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#useragent","content":"When you visit a website, your browser sends its information to the server. It looks like a text line that is part of an HTTP request that begins with &quot;User-Agent:&quot;. It usually includes the name and version of the browser, the operating system, and language settings. We cut User-Agent from identifying information so that advertisers cannot obtain it. You can also set an arbitrary value for User-Agent by entering it into the Custom User-Agent field. To use default User-Agent, leave the field blank. "},{"title":"Hide your IP address​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#ip","content":"Stealth Mode cannot hide your IP address. However, we can conceal it so that websites you visit will think you are a proxy. Sometimes this helps, and websites ignore your true IP address. You can set an arbitrary IP address, which you would like others to perceive as yours, by simply entering it into the corresponding field. To use the default IP address, leave the field blank. "},{"title":"Remove X-Client-Data header from HTTP requests​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#xclientdata","content":"It forbids Google Chrome from sending its version and modification information with requests to Google domains (including Double Click and Google Analytics). "},{"title":"Protect from DPI​","type":1,"pageTitle":"스텔스 모드","url":"general/stealth-mode/#dpi","content":"The Deep Packet Inspection is a system of deep analysis and filtering of traffic by packet content, as well as the accumulation of statistical data. Using this technology, ISPs have the ability to control the passing traffic and limit access to content for their clients. AdGuard can modify outgoing packet data so that the client does not fall under the DPI blocking criteria. This means that by enabling this option, users can get access to the content they want. Not all DPI systems can be bypassed at this time, but we are constantly working to improve this. The &quot;Protect from DPI&quot; feature is already implemented in AdGuard for Windows, AdGuard for Mac, and AdGuard for Android. "},{"title":"애드웨어 & 바이러스","type":0,"sectionRef":"#","url":"guides/adware/","content":"","keywords":""},{"title":"무료 바이러스 백신 유틸리티​","type":1,"pageTitle":"애드웨어 & 바이러스","url":"guides/adware/#free-antivirus","content":"여러 가지 선택지가 있으며 원하는 것을 사용할 수 있습니다. 바이러스 백신 유틸리티로 검사해도 아무것도 발견되지 않지만 컴퓨터가 여전히 의심스럽게 작동하는 경우, 여는 모든 페이지에 광고를 구현할 수 있는 애드웨어가 있는지 테스트해 보세요. "},{"title":"시스템에서 애드웨어를 삭제하는 방법​","type":1,"pageTitle":"애드웨어 & 바이러스","url":"guides/adware/#adware","content":"인터넷에서 이 문제를 해결하기 위한 많은 애플리케이션을 찾을 수 있습니다. 원하는 유틸리티를 사용할 수 있습니다. 하지만 저희는 AdwareCleaner Malwarebytes, Avast One Avast 또는 Adaware를 사용할 것을 강력히 권장합니다. 이러한 애드웨어 스캐너는 사용하기 매우 쉬우며 혼자서 처리할 수 있습니다. AdwareCleaner를 예로 들어 보겠습니다. 애플리케이션을 다운로드하고 성공적으로 설치한 후 다음 단계를 수행합니다: 애플리케이션을 시작하고 지금 스캔을 클릭합니다.  검사가 완료되면 의심스러운 항목을 검역소로 보내야 합니다.  검역소로 이동하면 시스템에서 불필요한 항목을 지울 수 있습니다. 경우에 따라서는 지우기가 완료된 후 시스템을 재부팅해야 할 수도 있습니다.  시스템이 재부팅되면 지우기가 완료됩니다. 필요한 경우 언제든지 완료된 작업에 대한 보고서를 읽을 수 있습니다.  그래도 도움이 되지 않으면 이 지침에 따라 브라우저에서 모든 확장 프로그램 및 기타 설정을 일시적으로 비활성화하세요. 설정 및 확장 프로그램을 비활성화해도 문제가 해결되지 않으면 브라우저 바로 가기를 다시 만들어 보세요. 이 페이지의 뒷부분에서는 가장 널리 사용되는 광고 확장 프로그램 중 일부를 제거하는 방법에 대해 설명합니다. "},{"title":"브라우저에서 설정 및 확장 프로그램을 비활성화하는 방법​","type":1,"pageTitle":"애드웨어 & 바이러스","url":"guides/adware/#instructions","content":"가장 널리 사용되는 브라우저의 설정 및 확장 프로그램을 비활성화하는 방법은 아래에서 확인할 수 있습니다. Google Chrome Mozilla Firefox Opera "},{"title":"브라우저 바로가기를 다시 만드는 방법​","type":1,"pageTitle":"애드웨어 & 바이러스","url":"guides/adware/#shortcuts","content":"멀웨어 및 애드웨어 프로그램은 브라우저의 바탕화면 바로가기, 작업 표시줄 및 시작 메뉴 항목을 대체하여 홈페이지를 설치하는 경우가 많습니다. 이 경우 가장 간단한 해결책은 모든 바로가기를 수동으로 삭제하고 직접 다시 만드는 것입니다. "},{"title":"유저스크립트","type":0,"sectionRef":"#","url":"general/userscripts/","content":"","keywords":""},{"title":"Recommended AdGuard scripts​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#recommended-adguard-scripts","content":"These userscripts come directly from the AdGuard developers, and we can guarantee that they are effective and safe. For some of the userscripts developed by others that we consider good and reliable, scroll down to the next section. You can also find some of the popular websites with scripts below, but remember that whenever you download a userscript from an unknown source, you expose yourself to a certain risk, as some scripts may be harmful to your computer. "},{"title":"AdGuard Extra​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#adguard-extra","content":"An extension that blocks ads in difficult cases when the usual filter-based approach is not enough. AdGuard Extra comes pre-installed with all premium AdGuard versions, so you don't need to do anything to enable it. However, if you want to use it alongside AdGuard Browser Extension or any other ad blocker, you'll need to use an additional extension. Learn more about this userscript and how to install it on GitHub.  "},{"title":"AdGuard Popup Blocker​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#adguard-popup-blocker","content":"The name speaks for itself: it blocks pop-ups — one of the most annoying types of ads on web pages. Learn more about this userscript, its key features, and how to install it on GitHub.  "},{"title":"AdGuard Assistant (legacy version)​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#adguard-assistant-legacy-version","content":"This custom extension is designed to control filtering directly from the browser page (manual blocking, exclusion of the site, etc.). note This version of Assistant is legacy and there is no point in using it on new systems, since it has been replaced with the full-fledged Browser Assistant. But the legacy Assistant might be of help if there is no Browser Assistant for your browser. If this is your case, your can learn how to install AdGuard Assistant on GitHub. "},{"title":"Disable AMP​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#disable-amp","content":"A script that is only pre-installed in AdGuard for Android. It disables AMP (Accelerated Mobile Pages) on the Google search results page. Learn more about this userscript and how to install it on GitHub.  "},{"title":"Top picks outside AdGuard​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#top-picks","content":"These userscripts are not developed by AdGuard and therefore we can't give a 100% guarantee that they are safe and/or work at all times. However, in our experience they deserve a recommendation as they've all earned their good reputation. "},{"title":"Don't track me Google​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#dont-track-me-google","content":"This script removes Google's tracking feature from the links in Google search results. It speeds up the loading of search results and allows you to right-click or tap to copy the link URL. Its source code is available on GitHub. This userscript can be downloaded from GreasyFork and installed in any AdGuard CoreLibs-based app. "},{"title":"microShield​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#microshield","content":"A userscript for people who visit Korean websites and some international websites. The microShield userscript blocks Ad-Shield advertisement and anti-adblock. Its original source code is available at asdefuser and AdShield Defuser. This userscript can be installed in AdGuard CoreLibs-based apps, Violentmonkey, Tampermonkey, and quoid/userscripts. Learn more about microShield and how to install it on GitHub. "},{"title":"Where can you get more userscripts?​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#more-userscripts","content":"As userscripts are mainly created by enthusiasts, you should be cautious when installing them. Any script from an unknown source carries a potential risk. Yet, there is a great variety of interesting scripts that, if installed carefully and responsibly, can really make using some websites more convenient. Here we will describe some of the most popular userscript catalogs. "},{"title":"Stylish (userstyles.org)​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#stylish-userstylesorg","content":"Userstyles.org is a catalog of user styles, but it allows you to load them as userscripts. Thus, any user style can be installed via AdGuard. Be careful if you decide to install an unpopular script — there's a risk it might be harmful. "},{"title":"Greasy Fork​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#greasy-fork","content":"Greasy Fork is a userscript catalog by Stylish creators. Unlike the above-mentioned userstyles.org, the scripts in this catalog undergo moderation, so their credibility is much higher. "},{"title":"OpenUserJS.org​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#openuserjsorg","content":"OpenUserJS.org is an open source userscript catalog written in nodeJS. It doesn't have moderation so stay alert to any suspicious scripts. "},{"title":"Community​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#community","content":"If you like the idea of personifying your browser with the help of userscripts, and you have any questions, you can ask them on one of these websites: StackoverflowFreeNodeReddit "},{"title":"Development​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#development","content":""},{"title":"Request license​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#request-license","content":"If you are developing your own custom script and want to test how it works with AdGuard, request a beta license key for the app. To get it, please send an email to devteam@adguard.com with the following information: Subject: Userscript author license request Body: Please tell us about the userscripts you are working on. Here is a mailto link. "},{"title":"Compatibility​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#compatibility","content":"Metadata block​ Supported properties​ @name @namespace @description @version @match @include @exclude @grant @connect @require @resource @downloadURL @updateURL @supportURL @homepageURL @homepage @website @source @run-at @noframes @icon @iconURL @defaulticon @icon64 @icon64URL  Unsupported properties​ These properties will be simply ignored by Adguard. @unwrap  Supported GM functions​ AdGuard supports both old GM_ functions and new GM4 API that use GM object. Values​ note All listed old Greasemonkey functions are deprecated but still supported. GM.info / GM_info GM.setValue / GM_setValue GM.getValue / GM_getValue GM.listValues / GM_listValues GM.deleteValue / GM_deleteValue GM.getResourceUrl / GM_getResourceURL GM.setClipboard / GM_setClipboard GM.xmlHttpRequest / GM_xmlhttpRequest GM.openInTab / GM_openInTab GM.notification unsafeWindow GM_getResourceText GM_addStyle GM_log  Here you can find more information about Greasemonkey API. "},{"title":"Example​","type":1,"pageTitle":"유저스크립트","url":"general/userscripts/#example","content":"// ==UserScript== // @name Name as shown to the user when locale is english or unknown // @name:ru Name as shown to the user when locale is russian // @description Description as shown to the user when locale is english or unknown // @description:ru Description as shown to the user when locale is russian // @icon https://myhomepage.com/myuserscript.png // @version 1.0.0.0 // @downloadURL https://dl.myhomepage.org/myuserscript.user.js // @updateURL https://dl.myhomepage.org/myuserscript.meta.js // @homepageURL https://myhomepage.com/myuserscript // @include * // @exclude *://website.com/* // @resource https://myhomepage.com/myuserscript.css // @require https://myhomepage.com/mylibrary.js // @grant property:settings // @grant GM_getValue // @grant GM_setValue // @grant GM_deleteValue // @grant GM_listValues // @grant GM_getResourceText // @grant GM_getResourceURL // @grant GM_addStyle // @grant GM_log // @grant GM_setClipboard // @grant GM_xmlhttpRequest // @grant unsafeWindow // @grant GM_info // @grant GM_openInTab // @grant GM_registerMenuCommand // @run-at document-start // ==/UserScript== !function(){( console.log(&quot;I am loaded!&quot;); )}();  "},{"title":"푸시 알림을 차단하는 방법","type":0,"sectionRef":"#","url":"guides/block-push-notifications/","content":"","keywords":""},{"title":"Google Chrome​","type":1,"pageTitle":"푸시 알림을 차단하는 방법","url":"guides/block-push-notifications/#google-chrome","content":"브라우저 오른쪽 상단에 있는 세로 점 3개를 클릭하고 설정을 선택합니다.개인정보 및 보안 → 사이트 설정 → 알림으로 이동합니다.기본 동작에서 사이트가 알림을 보내도록 허용하지 않음을 선택합니다. 또는 사용자 지정 행동에서 사이트별 설정을 관리할 수 있습니다. "},{"title":"Firefox​","type":1,"pageTitle":"푸시 알림을 차단하는 방법","url":"guides/block-push-notifications/#firefox","content":"탐색 모음 오른쪽 상단의 가로줄 세 개를 클릭한 다음 설정을 선택합니다.왼쪽 메뉴에서 개인정보 및 보안을 선택합니다.아래로 스크롤하여 권한 섹션으로 이동한 다음 알림 옆에 있는 설정 버튼을 클릭합니다.이전에 승인된 모든 웹사이트의 알림을 중지하려면 모든 웹사이트 제거를 클릭합니다. 또는 각 웹사이트에 대한 알림을 개별적으로 관리할 수도 있습니다.또한 알림 허용을 요청하는 새 요청 차단을 선택하여 모든 푸시 알림 요청을 한 번에 중지할 수도 있습니다.변경 사항 저장을 클릭합니다. "},{"title":"Safari​","type":1,"pageTitle":"푸시 알림을 차단하는 방법","url":"guides/block-push-notifications/#safari","content":"메뉴 표시줄에서 Safari → 시스템 설정을 클릭합니다.웹사이트 탭으로 이동합니다.왼쪽 사이드바에서 알림을 선택합니다.모든 요청을 차단하려면 웹사이트가 알림 전송 권한을 요청하도록 허용을 선택 취소합니다. 또는 차단하려는 각 사이트에 대해 개별적으로 거부를 선택합니다. "},{"title":"Microsoft Edge​","type":1,"pageTitle":"푸시 알림을 차단하는 방법","url":"guides/block-push-notifications/#microsoft-edge","content":"오른쪽 상단 모서리에 있는 점 3개 메뉴를 클릭하고 설정을 선택합니다.왼쪽 사이드바에서 쿠키 및 사이트 권한을 클릭합니다.아래로 스크롤하여 사이트 권한에서 알림을 클릭합니다.Microsoft Edge 내에서 모든 브라우저 알림을 차단하려면 보내기 전에 물어보기를 끕니다.또는 차단하려는 각 사이트의 차단 섹션에 도메인을 추가합니다. "},{"title":"AdGuard로 푸시 알림 차단​","type":1,"pageTitle":"푸시 알림을 차단하는 방법","url":"guides/block-push-notifications/#adguard로-푸시-알림-차단","content":"향후 유사한 광고를 피하기 위해 AdGuard 앱에서 직접 푸시 알림을 차단할 수도 있습니다. "},{"title":"Windows​","type":1,"pageTitle":"푸시 알림을 차단하는 방법","url":"guides/block-push-notifications/#windows","content":"AdGuard를 엽니다. 설정 → 스텔스 모드로 이동합니다.아래로 스크롤하여 브라우저 API 섹션으로 이동합니다.푸시 API 차단을 활성화합니다. "},{"title":"Mac​","type":1,"pageTitle":"푸시 알림을 차단하는 방법","url":"guides/block-push-notifications/#mac","content":"AdGuard를 엽니다. 설정으로 이동합니다.스텔스 모드 탭에서 브라우저 API로 이동합니다.푸시 API 차단을 활성화합니다. "},{"title":"HAR 파일을 수집하는 방법","type":0,"sectionRef":"#","url":"guides/collect-har-file/","content":"","keywords":""},{"title":"Chrome​","type":1,"pageTitle":"HAR 파일을 수집하는 방법","url":"guides/collect-har-file/#chrome","content":"Chrome에서 HAR 파일을 만들려면 다음 단계를 따르세요. 문제가 발생한 URL로 이동합니다. 아직 문제를 재현하지 마세요. 개발자 도구를 엽니다. 메뉴: 메뉴 → 기타 도구 → 개발자 도구.키보드: Mac의 경우, Ctrl+Shift+C 또는 Ctrl+Alt+I, 또는 ⌥+⌘+I. 네트워크 탭을 클릭합니다. 네트워크 탭의 왼쪽 상단에 있는 동그란 버튼을 찾아 빨간색 녹화 모드로 설정되어 있는지 확인합니다. 회색인 경우 클릭하여 빨간색으로 바꾸면 녹화가 시작됩니다. 지우기 버튼(기록 버튼 옆에 선이 그어진 원 버튼)을 사용하여 이전 활동을 모두 지웁니다. 네트워크 탭에서 로그 보존 확인란을 선택합니다. 캐시 비활성화 확인란을 선택합니다. 문제를 일으키는 단계를 재현합니다. 그리드를 마우스 오른쪽 버튼으로 클릭하고 콘텐츠가 포함된 HAR로 저장을 선택하여 세션을 .har 파일로 저장합니다. AdGuard 지원 팀(support@adguard.com)에 파일을 보내고 문제를 자세히 설명하세요. 스크린샷을 첨부하는 것도 도움이 될 수 있습니다. "},{"title":"Edge​","type":1,"pageTitle":"HAR 파일을 수집하는 방법","url":"guides/collect-har-file/#edge","content":"문제가 발생한 URL로 이동합니다. 아직 문제를 재현하지 마세요. 개발자 도구를 엽니다. 메뉴: 메뉴 → 기타 도구 → 개발자 도구.키보드: Mac의 경우, Ctrl+Shift+C 또는 Ctrl+Alt+I, 또는 ⌥+⌘+I. 네트워크 탭을 클릭합니다. 네트워크 탭의 왼쪽 상단에 있는 동그란 버튼을 찾아 빨간색 녹화 모드로 설정되어 있는지 확인합니다. 회색인 경우 클릭하여 빨간색으로 바꾸면 녹화가 시작됩니다. 지우기 버튼(기록 버튼 옆에 선이 그어진 원 버튼)을 사용하여 이전 활동을 모두 지웁니다. 네트워크 탭에서 로그 보존 확인란을 선택합니다. 캐시 비활성화 확인란을 선택합니다. 문제를 일으키는 단계를 재현합니다. 그리드를 마우스 오른쪽 버튼으로 클릭하고 콘텐츠가 포함된 HAR로 저장을 선택하여 세션을 .har 파일로 저장합니다. AdGuard 지원 팀(support@adguard.com)에 파일을 보내고 문제를 자세히 설명하세요. 스크린샷을 첨부하는 것도 도움이 될 수 있습니다. "},{"title":"Firefox​","type":1,"pageTitle":"HAR 파일을 수집하는 방법","url":"guides/collect-har-file/#firefox","content":"Firefox에서 HAR 파일을 생성하려면 다음 단계를 따르세요. 문제가 발생한 URL로 이동합니다. 아직 문제를 재현하지 마세요. 네트워크 모드에서 개발자 도구를 엽니다. 메뉴: 메뉴→웹 개발자→네트워크.키보드: Ctrl+Shift+C, 또는 ⌥+⌘+E (Mac). 네트워크 탭의 왼쪽 상단 모서리에 있는 네트워크 로깅 일시 중단/재개 버튼을 클릭합니다. 버튼이 재생 모드에 있어야 합니다. 현재 그리드에 정보가 표시되어 있는 경우, 재생/일시 중지 버튼 옆에 있는 휴지통 비우기 버튼을 클릭하여 지웁니다. 네트워크 탭에서 로그 유지 확인란을 선택합니다. 캐시 비활성화 확인란을 선택합니다. 문제를 일으키는 단계를 재현합니다. 그리드를 마우스 오른쪽 버튼으로 클릭하고 모두 HAR로 저장을 선택하여 세션을 .har 파일로 저장합니다. AdGuard 지원 팀(support@adguard.com)에 파일을 보내고 문제를 자세히 설명하세요. 스크린샷을 첨부하는 것도 도움이 될 수 있습니다. "},{"title":"Internet Explorer 11​","type":1,"pageTitle":"HAR 파일을 수집하는 방법","url":"guides/collect-har-file/#ie11","content":"Internet Explorer 11에서 HAR 파일을 생성하려면 다음 단계를 따르세요. 문제가 발생한 URL로 이동합니다. 아직 문제를 재현하지 마세요. 네트워크 모드에서 개발자 도구를 엽니다. 도구 톱니바퀴 메뉴: 개발자 도구 → 네트워크 탭.키보드: F12 → 네트워크 탭. 네트워크 탭의 왼쪽 상단 모서리에서 요청 프로파일링을 시작하는 Play 버튼과 프로파일링을 중지하는 Stop 버튼을 찾습니다. 녹화 중 재생 버튼은 회색으로 표시되고 중지 버튼은 빨간색으로 표시됩니다. 재생 모드를 켭니다. 네트워크 탭의 세션 지우기 버튼을 사용하여 아래쪽 그리드에 표시되는 세션 정보를 모두 지웁니다. 아이콘 위로 마우스를 가져가면 이름을 볼 수 있습니다. 세션 지우기 버튼은 세 줄 아이콘에 X가 표시되어 있습니다. 캐시 비활성화 확인란을 선택합니다. 문제를 일으키는 단계를 재현합니다. 네트워크 탭에서 디스크에 저장 버튼(HAR로 내보내기)을 클릭하여 세션을 .har 파일로 저장합니다. AdGuard 지원 팀(support@adguard.com)에 파일을 보내고 문제를 자세히 설명하세요. 스크린샷을 첨부하는 것도 도움이 될 수 있습니다. "},{"title":"Safari​","type":1,"pageTitle":"HAR 파일을 수집하는 방법","url":"guides/collect-har-file/#safari","content":"Safari에서 HAR 파일을 생성하려면 다음 단계를 따르세요. 화면 상단의 Safari 메뉴 표시줄에서 개발 메뉴를 확인합니다. 개발 메뉴가 표시되지 않으면 Safari→환경설정→고급으로 이동하여 켭니다.메뉴 표시줄의 개발 메뉴 표시 옆 하단에 있는 확인란을 선택합니다. 문제가 발생한 URL로 이동합니다. 아직 문제를 재현하지 마세요. 웹 인스펙터에서 네트워크 탭을 엽니다. 메뉴: 개발→웹 인스펙터 표시→네트워크.키보드: ⌥+⌘+I → 네트워크 네트워크 탭의 왼쪽에 있는 기타 필터 옵션... 메뉴의 로그 보존 확인란을 선택합니다. 네트워크 탭의 맨 오른쪽에 있는 휴지통 삭제 아이콘을 클릭하여 현재 네트워크 항목을 지웁니다. 키보드: ⌘+K 캐시 비활성화 확인란을 선택합니다. 문제를 일으키는 단계를 재현합니다. 휴지통 삭제 아이콘 옆에 있는 내보내기 아이콘을 클릭하여 세션을 .har 파일로 저장합니다. AdGuard 지원 팀(support@adguard.com)에 파일을 보내고 문제를 자세히 설명하세요. 스크린샷을 첨부하는 것도 도움이 될 수 있습니다. "},{"title":"Android​","type":1,"pageTitle":"HAR 파일을 수집하는 방법","url":"guides/collect-har-file/#android","content":"HAR 파일을 생성하려면 다음 단계를 따르세요. AdGuard를 열고 설정으로 이동합니다. 메뉴에서 고급 을 선택합니다. 로우 레벨 설정을 선택합니다. pref.har.capture를 활성화합니다 (보호 기능을 다시 시작해야 함). 문제를 재현해 주세요. 앱을 열고 필요한 작업을 수행하여 광고가 표시되도록 합니다. 이제 pref.har.capture을 다시 끕니다. 돌아가서 로그와 시스템 정보 내보내기 → 저장을 누릅니다. "},{"title":"Windows​","type":1,"pageTitle":"HAR 파일을 수집하는 방법","url":"guides/collect-har-file/#windows","content":"설정* → 일반 설정 → 고급 설정을 열고 아래로 스크롤합니다. HAR 기록 사용 확인란을 선택합니다. 문제를 재현합니다. 일반 설정 → 로그 내보내기 → 저장을 클릭합니다. 해당 확인란을 선택 취소하여 HAR 기록을 비활성화합니다. "},{"title":"Google Family Link에 HTTPS 필터링을 활성화하는 방법","type":0,"sectionRef":"#","url":"guides/family-link-certificate/","content":"Google Family Link에 HTTPS 필터링을 활성화하는 방법 Google Family Link를 사용하는 기기에서 HTTPS 필터링을 활성화하려면 다음 지침에 따라 AdGuard 인증서를 설치하세요. 만일을 대비해 백업을 만들어 둡니다. 기기에서 자녀의 계정을 삭제합니다. 자녀의 기기에서 설정 → 계정 → Google로 이동합니다.자녀의 계정을 탭하고 삭제할 수 있는 옵션이 있는지 확인합니다. 해당 옵션이 없다면 다음 단계로 진행하세요.화면 오른쪽 상단의 점 3개를 탭하고 계정을 삭제할 수 있는 옵션이 있는지 확인합니다.Follow the instructions removing the child’s account from the device AdGuard를 실행하고 CA 파일을 설치합니다. 기기에서 자녀의 계정을 복원합니다. 자녀의 기기에서 설정 → 계정 → Google → 계정 추가로 이동합니다.자녀의 계정에 로그인합니다.화면의 안내에 따라 자녀의 계정을 설정합니다.","keywords":""},{"title":"Minidump 파일을 만들어 블루스크린 오류를 수정하는 방법","type":0,"sectionRef":"#","url":"guides/minidump/","content":"","keywords":""},{"title":"Minidump 파일이란 무엇인가요?​","type":1,"pageTitle":"Minidump 파일을 만들어 블루스크린 오류를 수정하는 방법","url":"guides/minidump/#minidump-파일이란-무엇인가요","content":"Minidump 파일은 시스템 크래시의 특성에 대한 정보를 담고 있는 파일입니다. 블루스크린이 나타나기 직전에 생성되며 문제 해결에 사용할 수 있는 최소한의 유용한 정보가 포함되어 있습니다. Minidump 파일의 확장자는 보통 .dmp입니다. note Windows 10에서는 블루스크린에 중지 코드와 QR 코드가 표시됩니다. 사용자는 이 정보를 사용하여 특정 문제에 대한 정보를 인터넷에서 검색할 수 있습니다. Minidump 파일을 생성하는 옵션은 기본적으로 비활성화되어 있습니다. 따라서 이 파일을 사용하는 방법에 대해 자세히 알아보기 전에 이 파일을 활성화하는 방법을 자세히 살펴보겠습니다. "},{"title":"Minidump 파일을 생성하도록 Windows를 설정하는 방법​","type":1,"pageTitle":"Minidump 파일을 만들어 블루스크린 오류를 수정하는 방법","url":"guides/minidump/#minidump-파일을-생성하도록-windows를-설정하는-방법","content":"Even if you don’t experience any BSoD crash errors, you can still set this option — this is a general recommendation, not necessarily related to AdGuard products. Minidump 파일을 자동으로 생성하려면 아래 지침을 따르세요. Windows 검색 창에 sysdm.cpl을 입력하고 열기를 클릭합니다. 시스템 속성 제어판 메뉴 창이 화면에 나타납니다. tip Alternatively, click Settings → System → About → Advanced system settings. ::: ![시스템 속성 *mobile_border](https://cdn.adtidy.org/blog/new/c2huSystem_Properties.jpeg)  고급 탭으로 이동합니다. 시작 및 복구 섹션에서 설정을 클릭합니다. 다음 세 가지 옵션을 활성화합니다. 시스템 로그에 이벤트 기록자동 재시작디버깅 정보 기록 → 작은 메모리 덤프(256KB) 확인을 클릭하여 설정을 적용합니다. 컴퓨터를 다시 시작합니다. Minidump 파일을 성공적으로 활성화했습니다. 이제 시스템 크래시 발생 시 minidump 파일이 자동으로 생성됩니다. note 기본적으로 minidump 파일은 %SystemRoot%\\Minidump 폴더에 저장됩니다. 디렉토리 위치를 원하는 대로 변경할 수 있지만, 많은 프로그램이 기본적으로 이 위치를 찾도록 설정되어 있으므로 위치를 변경하지 않는 것이 좋습니다. "},{"title":"프록시 인증서를 설치하는 방법","type":0,"sectionRef":"#","url":"guides/proxy-certificate/","content":"","keywords":""},{"title":"인증서를 다운로드하고 설치하는 방법​","type":1,"pageTitle":"프록시 인증서를 설치하는 방법","url":"guides/proxy-certificate/#인증서를-다운로드하고-설치하는-방법","content":"트래픽을 필터링하려는 기기의 운영 체제에 따라 다음 지침 중 하나를 따르세요. "},{"title":"Windows​","type":1,"pageTitle":"프록시 인증서를 설치하는 방법","url":"guides/proxy-certificate/#windows","content":"AdGuard가 설치된 데스크톱 컴퓨터의 IP 주소를 기록해 두세요. AdGuard 보호 기능이 활성화되어 있는지 확인하세요. Windows 컴퓨터의 경우, 설정의 네트워크 탭에서 AdGuard를 HTTP 프록시로 사용 확인란을 선택합니다. Mac의 경우, 설정 → 환경설정 → 네트워크로 이동하여 HTTP 프록시를 활성화합니다. AdGuard가 설치된 동일한 컴퓨터에서 다음 링크를 따르세요: http://local.adguard.org/cert 다운로드 버튼을 클릭합니다. 다운로드가 시작되지 않으면 다른 브라우저(예: Firefox)를 사용해 보세요. 다운로드한 cert.cer 파일을 AdGuard를 통해 트래픽을 라우팅하려는 Windows 기기로 전송합니다. USB 케이블, 블루투스 또는 클라우드 서비스를 사용하여 이 작업을 수행할 수 있습니다. 해당 기기에서 Win을 누르고 컴퓨터 인증서 관리를 입력한 다음 Enter 키를 누릅니다. 인증서 — 로컬 컴퓨터 페이지에서 신뢰할 수 있는 루트 인증 기관 → 인증서 폴더를 찾습니다. 인증서 폴더를 마우스 오른쪽 버튼으로 클릭하고 모든 작업 → 가져오기를 클릭합니다. 인증서 가져오기 마법사 페이지에서 다음을 클릭합니다. 찾아보기를 클릭하여 인증서를 가져옵니다. cert.cer 인증서 파일로 이동하여 파일을 선택하고 열기를 클릭한 후 다음을 클릭합니다. 모든 인증서를 다음 스토어에 배치 확인란을 선택합니다. 인증서 저장소 필드에 신뢰할 수 있는 루트 인증 기관이 표시되는지 확인하고 다음을 클릭합니다. 마침을 클릭합니다. Win을 누른 다음 설정을 엽니다. 네트워크 &amp; 인터넷 → 프록시를 선택합니다. 자동 감지 설정 끄기. 프록시 서버 사용 탭에서 설정을 클릭합니다. 토글을 켭니다. 프록시 IP 주소에 1단계에서 기록한 데스크톱 컴퓨터의 IP 주소를 입력합니다. 포트, 데스크톱 AdGuard 앱의 네트워크 설정에서 선택한 포트를 입력합니다. 저장을 클릭합니다. "},{"title":"Mac​","type":1,"pageTitle":"프록시 인증서를 설치하는 방법","url":"guides/proxy-certificate/#mac","content":"AdGuard가 설치된 데스크톱 컴퓨터의 IP 주소를 기록해 두세요. AdGuard 보호 기능이 활성화되어 있는지 확인하세요. Windows 컴퓨터의 경우, 설정의 네트워크 탭에서 AdGuard를 HTTP 프록시로 사용 확인란을 선택합니다. Mac의 경우, 설정 → 환경설정 → 네트워크로 이동하여 HTTP 프록시를 활성화합니다. 웹 브라우저를 사용하여 이 링크를 클릭하세요: http://local.adguard.org/cert 다운로드 버튼을 클릭합니다. 다운로드가 시작되지 않으면 다른 브라우저(예: Firefox)를 사용해 보세요. 다운로드한 cert.cer 파일을 AdGuard를 통해 트래픽을 라우팅하려는 Mac 기기로 전송합니다. USB 케이블, 블루투스 또는 클라우드 서비스를 사용하여 이 작업을 수행할 수 있습니다. 다운로드한 인증서 파일을 두 번 클릭합니다. 관리자 비밀번호를 입력한 다음 키체인 수정을 클릭합니다. Spotlight(오른쪽 상단의 검색 아이콘)로 이동하여 키체인 액세스를 입력한 다음 검색 결과에서 키체인 액세스를 선택합니다. 시스템에서 추가한 인증서를 강조 표시합니다. 인증서를 우클릭하고 컨텍스트 메뉴에서 정보 가져오기를 선택합니다. 신뢰를 확장하여 인증서에 대한 신뢰 정책을 표시합니다. 보안 소켓 계층(SSL)에서 항상 신뢰를 선택합니다. 시스템 환경설정 → 네트워크를 열고 상단에서 활성 연결을 선택합니다. 세부 정보... 를 클릭하고 프록시 탭으로 이동합니다. 두 개의 확인란을 선택합니다: 웹 프록시(HTTP) 및 보안 웹 프록시(HTTPS). 서버 필드에 1단계에서 기록한 컴퓨터의 IP 주소를 입력합니다. 포트 필드에 AdGuard 데스크톱 앱의 네트워크 설정에서 선택한 포트를 입력합니다. "},{"title":"Android​","type":1,"pageTitle":"프록시 인증서를 설치하는 방법","url":"guides/proxy-certificate/#android","content":"AdGuard가 설치된 데스크톱 컴퓨터의 IP 주소를 기록해 두세요. AdGuard 보호 기능이 활성화되어 있는지 확인하세요. Windows 컴퓨터의 경우, 설정의 네트워크 탭에서 AdGuard를 HTTP 프록시로 사용 확인란을 선택합니다. Mac의 경우, 설정 → 환경설정 → 네트워크로 이동하여 HTTP 프록시를 활성화합니다. AdGuard가 설치된 컴퓨터에서 웹 브라우저를 사용하여 다음 링크를 따르세요: http://local.adguard.org/cert. 다운로드 버튼을 클릭합니다. 다운로드가 시작되지 않으면 다른 브라우저(예: Firefox)를 사용해 보세요. 다운로드한 cert.cer 파일을 AdGuard를 통해 트래픽을 라우팅하려는 Android 기기로 전송합니다. USB 케이블, 블루투스 또는 클라우드 서비스를 사용하여 이 작업을 수행할 수 있습니다. 이전에 다운로드한 cert.cer 인증서를 찾아서 탭하여 파일을 열고 지침에 따라 인증서를 설치합니다. Android 기기는 기본적으로 인증서를 신뢰하지 않으므로 경고가 표시되지만 무시해도 됩니다. 일부 휴대폰에서는 기기 비밀번호를 입력하라는 메시지가 표시될 수 있습니다. 기기 비밀번호를 입력하고 OK를 누릅니다. 인증서가 설치됩니다. 활성 Wi-Fi 네트워크의 고급 설정을 엽니다. 프록시 유형을 수동으로 변경합니다. 프록시 호스트 이름에 1단계에서 기록한 데스크톱 컴퓨터의 IP 주소를 입력합니다. 프록시 포트, AdGuard 데스크톱 앱의 네트워크 설정에서 선택한 포트를 입력합니다. "},{"title":"iOS​","type":1,"pageTitle":"프록시 인증서를 설치하는 방법","url":"guides/proxy-certificate/#ios","content":"AdGuard가 설치된 데스크톱 컴퓨터의 IP 주소를 기록해 두세요. AdGuard 보호 기능이 활성화되어 있는지 확인하세요. Windows 컴퓨터의 경우, 설정의 네트워크 탭에서 AdGuard를 HTTP 프록시로 사용 확인란을 선택합니다. Mac의 경우, 설정 → 환경설정 → 네트워크로 이동하여 HTTP 프록시를 활성화합니다. AdGuard가 설치된 컴퓨터에서 웹 브라우저를 사용하여 다음 링크를 따르세요: http://local.adguard.org/cert. 다운로드 버튼을 클릭합니다. 다운로드가 시작되지 않으면 다른 브라우저(예: Firefox)를 사용해 보세요. 다운로드한 cert.cer 파일을 AdGuard를 통해 트래픽을 라우팅하려는 iOS 기기로 전송합니다. USB 케이블, 블루투스 또는 클라우드 서비스를 사용하여 이 작업을 수행할 수 있습니다. iOS 기기에서 설정 → 프로필이 다운로드됨을 열고 오른쪽 상단에서 설치를 탭합니다. 비밀번호를 입력하고 설치를 확인합니다. 완료를 탭합니다. 설정 → 일반 → 정보 → 인증서 신뢰 설정으로 이동합니다. 옆의 스위치를 활성화합니다 Adguard Personal CA. 이제 인증서가 설치되었습니다. 해당 장치에서 활성 Wi-Fi 네트워크의 고급 설정을 엽니다. 프록시 유형을 수동으로 변경합니다. 프록시 호스트 이름에 1단계에서 기록한 컴퓨터의 IP 주소를 입력합니다. 프록시 포트, AdGuard 데스크톱 앱의 네트워크 설정에서 선택한 포트를 입력합니다. "},{"title":"버그를 신고하는 방법","type":0,"sectionRef":"#","url":"guides/report-bugs/","content":"","keywords":""},{"title":"시작하기 전에​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#시작하기-전에","content":""},{"title":"버그를 신고해야 하는 경우​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#버그를-신고해야-하는-경우","content":"최신 버전을 사용하고 있는지 확인하고, 그렇지 않은 경우 업그레이드하세요. 새 버전에서 버그가 이미 해결되었을 수 있습니다. 해당 버그가 이전에 보고된 적이 없는지 확인하세요. 공개 이슈와 비공개 이슈 모두에 주의를 기울이는 것이 좋습니다.  "},{"title":"문제를 설명하는 방법​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#문제를-설명하는-방법","content":"가능한 한 많은 세부 정보를 제공해 주시면 버그를 재현하고 수정 방법을 쉽게 파악할 수 있습니다. 버그 보고서에서 예상되는 내용은 다음과 같습니다: 앱 버전OS 버전문제를 발견한 시점문제를 발견하기 전에 무엇을 하고 있었는지 또는 앱에 어떤 일이 발생했는지 알려주세요. 재현하는 단계반복 여부 및 빈도VPN 또는 바이러스 백신 소프트웨어 사용 여부 "},{"title":"로그 수집 방법​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#로그-수집-방법","content":"각 플랫폼별 전용 문서에서 로그 수집에 대해 알아보세요. "},{"title":"버그 신고 또는 기능 요청에 투표하는 방법​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#버그-신고-또는-기능-요청에-투표하는-방법","content":"새로운 기능이나 버그 수정의 구현을 지원하려면 GitHub에서 투표할 수 있습니다. 투표하려면 이모티콘으로 반응하기만 하면 됩니다.   오른쪽 상단 모서리 또는 이슈 하단에서 리액션을 찾을 수 있습니다. "},{"title":"모든 플랫폼에 대한 지침​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#모든-플랫폼에-대한-지침","content":""},{"title":"Windows용 AdGuard​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#windows용-adguard","content":"Windows 리포지토리 에서 해당 문제가 아직 보고되지 않았는지 확인하세요. 새 이슈를 만들기 위한 페이지 를 열고 버그 신고를 선택합니다. 양식을 작성하세요. 가능하면 스크린샷이나 화면 녹화본을 첨부하세요.  "},{"title":"Mac용 AdGuard​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#mac용-adguard","content":"Mac 리포지토리 에서 해당 문제가 아직 보고되지 않았는지 확인하세요. 새 이슈를 만들기 위한 페이지를 엽니다. 양식을 작성하세요. 가능하면 스크린샷이나 화면 녹화본을 첨부하세요. "},{"title":"Android용 AdGuard​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#android용-adguard","content":"Android 리포지토리 에서 해당 문제가 아직 보고되지 않았는지 확인하세요. 새 이슈를 만들기 위한 페이지 를 열고 버그 신고를 선택합니다. 양식을 작성하세요. 가능하면 스크린샷이나 화면 녹화본을 첨부하세요. "},{"title":"iOS용 AdGuard​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#ios용-adguard","content":"iOS 리포지토리에서 해당 문제가 아직 보고되지 않았는지 확인하세요. 새 이슈를 만들기 위한 페이지 를 열고 버그 신고를 선택합니다. 양식을 작성하세요. 가능하면 스크린샷이나 화면 녹화본을 첨부하세요. "},{"title":"AdGuard 확장 프로그램​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#adguard-확장-프로그램","content":"확장 프로그램 리포지토리에서 해당 문제가 아직 보고되지 않았는지 확인하세요. 새 이슈를 만들기 위한 페이지 를 열고 버그 신고를 선택합니다. 양식을 작성하세요. 가능하면 스크린샷이나 화면 녹화본을 첨부하세요. "},{"title":"Safari용 AdGuard​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#safari용-adguard","content":"Safari 리포지토리에서 해당 문제가 아직 보고되지 않았는지 확인하세요. 새 이슈를 만들기 위한 페이지 를 열고 버그 신고를 선택합니다. 양식을 작성하세요. 가능하면 스크린샷이나 화면 녹화본을 첨부하세요. "},{"title":"웹사이트 및 앱 신고 방법","type":0,"sectionRef":"#","url":"guides/report-website/","content":"","keywords":""},{"title":"이 웹사이트에 관한 불만 사항 제출​","type":1,"pageTitle":"웹사이트 및 앱 신고 방법","url":"guides/report-website/#report","content":"note 앱 또는 AdGuard 브라우저 어시스턴트를 통해 불만 사항을 보내면 모든 정보가 자동으로 미리 채워집니다. 스크린샷을 제외하고는 직접 만들어서 첨부해야 합니다. 직접 링크를 사용하는 경우 데이터를 수동으로 입력해야 합니다. 광고가 다시 삽입되거나 웹사이트가 잘못 표시되는 것을 신고하려면 다음과 같이 해야 합니다: "},{"title":"확장 프로그램​","type":1,"pageTitle":"웹사이트 및 앱 신고 방법","url":"guides/report-website/#extension","content":"해당 아이콘을 클릭하여 브라우저 확장 프로그램 설정을 엽니다.문제 신고하기를 클릭합니다.  양식을 작성하면 GitHub에 이슈가 자동으로 생성됩니다. 문제 해결을 위한 진행 상황을 모니터링할 수 있는 링크도 제공됩니다. "},{"title":"Windows​","type":1,"pageTitle":"웹사이트 및 앱 신고 방법","url":"guides/report-website/#windows","content":"AdGuard 브라우저 어시스턴트를 열고 문제 신고하기를 누릅니다.  불만 신고 양식을 작성합니다.양식을 작성하면 GitHub에 이슈가 자동으로 생성됩니다. 문제 해결을 위한 진행 상황을 모니터링할 수 있는 링크도 제공됩니다. "},{"title":"Android​","type":1,"pageTitle":"웹사이트 및 앱 신고 방법","url":"guides/report-website/#android","content":"AdGuard 설정을 엽니다.지원을 선택한 다음 잘못된 차단 신고를 선택합니다:  양식을 작성하면 GitHub에 이슈가 자동으로 생성됩니다. 문제 해결을 위한 진행 상황을 모니터링할 수 있는 링크도 제공됩니다. "},{"title":"Mac​","type":1,"pageTitle":"웹사이트 및 앱 신고 방법","url":"guides/report-website/#mac","content":"AdGuard 브라우저 어시스턴트를 열고 문제 신고를 누릅니다.  불만 신고 양식을 작성합니다.양식을 작성하면 GitHub에 이슈가 자동으로 생성됩니다. 문제 해결을 위한 진행 상황을 모니터링할 수 있는 링크도 제공됩니다. "},{"title":"iOS​","type":1,"pageTitle":"웹사이트 및 앱 신고 방법","url":"guides/report-website/#ios","content":"AdGuard 설정을 엽니다.지원을 선택한 다음 잘못된 차단 신고를 선택합니다:  불만 신고 양식을 작성합니다.양식을 작성하면 GitHub에 이슈가 자동으로 생성됩니다. 문제 해결을 위한 진행 상황을 모니터링할 수 있는 링크도 제공됩니다. "},{"title":"양식 작성​","type":1,"pageTitle":"웹사이트 및 앱 신고 방법","url":"guides/report-website/#form","content":"note 앱 또는 AdGuard 어시스턴트를 통해 불만 사항을 보내면 모든 정보가 자동으로 미리 채워집니다. 스크린샷을 제외하고는 직접 만들어서 첨부해야 합니다. 직접 링크를 사용하는 경우 데이터를 수동으로 입력해야 합니다. 양식 작성은 제품의 유형과 버전을 자세히 설명하는 것으로 시작됩니다. 문제 유형과 타사 소프트웨어(바이러스 백신, VPN) 사용에 대한 추가 정보를 알려주세요. 문제가 발생한 페이지의 주소와 브라우저(또는 앱의 경우, 다운로드 링크)를 입력합니다. 애플리케이션 구성을 지정해야 합니다. 사용하는 필터스텔스 모드 설정(이 기능이 활성화된 경우) 문제의 본질을 파악할 수 있는 스크린샷을 제공합니다. 중요: 스크린샷이 공개되므로 개인정보(이메일, 휴대폰 번호 등)를 숨깁니다. 필터 개발자가 상황을 이해하는 데 도움이 되는 추가 정보를 알려주세요. 개발자가 추가 정보가 필요한 경우 연락할 수 있도록 GitHub의 계정을 입력합니다. 양식을 보내기 전에 각 단계를 확인합니다. 작업 진행 상황을 추적할 수 있는 링크가 제공됩니다. "},{"title":"문제 진단​","type":1,"pageTitle":"웹사이트 및 앱 신고 방법","url":"guides/report-website/#issue","content":"이 옵션은 스스로 문제를 찾고자 하는 사용자에게 적합하며, 특별한 기술이나 HTML 및 CSS에 대한 심층적인 지식이 필요하지 않습니다. 예를 들어, 어떤 웹사이트가 열리지 않거나 일부 페이지 요소가 잘못 표시되는 경우가 있습니다. 그 이유는 특정 필터/확장 기능/스텔스 모드 설정을 사용했기 때문일 수 있습니다. 이러한 문제를 진단하려면 다음 단계를 수행해야 합니다. "},{"title":"필터​","type":1,"pageTitle":"웹사이트 및 앱 신고 방법","url":"guides/report-website/#필터","content":"광고 차단기를 비활성화합니다.문제가 해결되면 모듈을 다시 활성화하고 필터를 하나씩 비활성화합니다. 이는 페이지를 손상시키는 필터를 식별하기 위한 것입니다.어떤 필터가 페이지를 손상시키는지 알아낸 경우 양식을 작성할 때 개발자에게 알려주세요(위 참조). 이 경우 초기 설정으로 돌아가는 것이 좋습니다.모든 필터를 꺼도 문제가 해결되지 않으면 @@||example.com^$document,extension 규칙을 적용합니다. example.com은 사이트 이름의 예입니다. 이를 방문 중인 사이트의 이름으로 바꿔야 합니다.문제가 해결되지 않은 경우, 스텔스 모드로 이동합니다. "},{"title":"스텔스 모드​","type":1,"pageTitle":"웹사이트 및 앱 신고 방법","url":"guides/report-website/#스텔스-모드","content":"스텔스 모드를 비활성화합니다.문제가 해결되면 모듈을 켜고 스텔스 모드의 옵션을 하나씩 끕니다. 이는 페이지를 손상시키는 필터를 감지하기 위해 수행됩니다.어떤 설정이 페이지를 손상시키는지 알아낸 경우, 양식을 작성할 때 개발자에게 알려주세요(위 참조). 이 경우 초기 설정으로 돌아가는 것이 좋습니다.문제가 해결되지 않은 경우, 확장 프로그램 섹션으로 이동합니다. "},{"title":"확장 프로그램​","type":1,"pageTitle":"웹사이트 및 앱 신고 방법","url":"guides/report-website/#확장-프로그램","content":"확장 프로그램을 비활성화합니다.문제가 해결되면 모듈을 켜고 확장 프로그램 설정을 하나씩 끕니다. 이는 어떤 설정이 페이지를 손상시키는지 확인하기 위해 수행됩니다.어떤 설정이 페이지를 손상시키는지 알아낸 경우, 양식을 작성할 때 개발자에게 알려주세요(위 참조). 이 경우 초기 설정으로 돌아가는 것이 좋습니다. "},{"title":"타사 광고 차단기​","type":1,"pageTitle":"웹사이트 및 앱 신고 방법","url":"guides/report-website/#타사-광고-차단기","content":"일부 브라우저 및 바이러스 백신 프로그램(예: Yandex 브라우저, 카스퍼스키 등)에는 광고 차단 기능이 내장되어 있습니다. 사이트 운영에 영향을 미치고 문제를 일으킬 수 있습니다. 이러한 프로그램을 사용하는 경우, 먼저 AdGuard로 인해 문제가 발생했는지 확인하세요. 이를 위해 AdGuard 필터링을 비활성화하고 문제를 재현해 보세요. 문제가 해결되지 않으면 다른 애플리케이션이나 브라우저로 인해 발생한 것일 수 있습니다. AdGuard로 인해 문제가 발생한 경우 이전 단락에서 설명한 단계를 따르세요. "},{"title":"AdGuard beta testing","type":0,"sectionRef":"#","url":"miscellaneous/contribute/beta-testing/","content":"","keywords":""},{"title":"How to become a beta tester​","type":1,"pageTitle":"AdGuard beta testing","url":"miscellaneous/contribute/beta-testing/#intro","content":"Our requirements are easy: use AdGuard, upgrade to the beta version when it becomes available, and report any bugs you notice. However, you will need a GitHub account to become our beta tester, so you may want to get that out of the way first. In any case, every single thing you need to know is gathered on a dedicated page. If you want to skip the description part and get straight to the action, you can apply here. Your application will be reviewed within 1-3 working days, and you'll get a reply via email. "},{"title":"How to report a bug​","type":1,"pageTitle":"AdGuard beta testing","url":"miscellaneous/contribute/beta-testing/#report-a-bug","content":"If you spotted a bug or just want to share your suggestion, let us know: go to GitHub, find a suitable repository, create a new issue there, and describe the bug/feature request in detail. The above method is the most preferred, but you can use others if necessary: Find us on various social media platforms, like Facebook, Reddit, etc. However, this is not the most convenient way to discuss technical matters. Email our support team from the Support tab in the app or write directly to support@adguard.com. "},{"title":"How to activate the beta key in the iOS application​","type":1,"pageTitle":"AdGuard beta testing","url":"miscellaneous/contribute/beta-testing/#ios","content":"If you have already received a beta key and it is listed in your adguard.com account, go to the app and open the license section (Get Premium). Once there, enter the credentials from your AdGuard account. After that, the premium features will become available automatically. "},{"title":"What else?​","type":1,"pageTitle":"AdGuard beta testing","url":"miscellaneous/contribute/beta-testing/#what-else","content":"There is not much more to add. You don't have to go out of your way to find bugs. You can continue using AdGuard as usual. However, if you encounter a bug, please report it. Of course, we appreciate any additional effort. Occasionally, you will receive our newsletters, keeping you informed of the latest changes in the beta (in case you missed them) and other important news. You can unsubscribe from it at any time. "},{"title":"스크린샷을 찍는 방법","type":0,"sectionRef":"#","url":"guides/take-screenshot/","content":"","keywords":""},{"title":"Android​","type":1,"pageTitle":"스크린샷을 찍는 방법","url":"guides/take-screenshot/#android","content":"Android 기기에서 스크린샷을 찍는 것은 기기 모델 및 제조업체에 따라 다양한 방법으로 수행할 수 있습니다. 일반적으로 Android의 경우 다음 버튼 조합을 누르면 됩니다. 볼륨 작게 및 전원 버튼을 동시에 누릅니다. Android 기기는 전체 화면을 캡처하여 사진으로 저장합니다. 따라서 갤러리의 스크린샷 폴더에서 스크린샷을 찾을 수 있습니다. 구형 기기의 경우, 다음 조합을 사용할 수 있습니다: 홈 과 전원을 동시에 누릅니다.뒤로 및 홈을 동시에 누릅니다. Android 8 이상에서는 화면을 90도 각도로 손으로 스와이프하여 스크린샷을 트리거하거나(삼성 기기), 세 손가락을 아래로 스와이프하는(OnePlus 기기) 등의 다른 조작을 통해 스크린샷을 찍을 수도 있습니다. 스크린샷을 찍는 옵션은 브랜드와 모델에 따라 다릅니다. 기기 설정을 확인하여 자신에게 가장 적합한 방법을 찾아보세요. 또한 기기에서 스크린샷을 찍기 위한 특별한 앱(예: Screenshot Easy, Screenshot Ultimate, Screenshot Snap 등)을 언제든지 사용할 수 있습니다. "},{"title":"iOS​","type":1,"pageTitle":"스크린샷을 찍는 방법","url":"guides/take-screenshot/#ios","content":"모든 iOS 기기(아주 오래된 기기 제외)에서 표준 도구를 사용하여 스크린샷을 찍을 수 있습니다. iOS 기기에서 스크린샷을 찍으려면 다음 조합을 사용하세요. 전원 (측면) 버튼과 홈 버튼을 동시에 눌렀다가 빠르게 놓습니다. iPhone X 이상에서 스크린샷을 찍는 방법은 다음과 같습니다. 전원 버튼과 볼륨 높이기 버튼을 동시에 눌렀다가 빠르게 놓습니다. iOS 기기는 전체 화면을 캡처하여 사진으로 저장합니다. 기본 사진 앱에서 찾을 수 있습니다. "},{"title":"Windows​","type":1,"pageTitle":"스크린샷을 찍는 방법","url":"guides/take-screenshot/#windows","content":"Windows에서 스크린샷을 찍으려면 PrtScn 버튼을 누릅니다. 일부 노트북에서는 Fn을 누른 다음 PrtScn을 눌러야 합니다. 참고: PrtScn(Print Screen) 키는 키보드에 따라 PrntScrn, PrtScn, PrtScr 또는 PrtSc 등 다르게 약칭될 수 있습니다. Windows는 전체 화면을 캡처하여 클립보드에 복사합니다. 활성 창의 스크린샷을 찍으려면 다음 단축키를 사용하세요. Alt 을 누른 상태에서 PrtScn (또는 일부 노트북에서는 Fn + Alt + PrtScn)을 누릅니다. 특정 영역의 스크린샷을 찍으려면 다음 단축키를 사용하세요. **Win + Shift + S를 누릅니다. 스크린샷을 찍으면 클립보드에 저장됩니다. 대부분의 경우, Ctrl + V 단축키를 사용하여 현재 편집 중인 문서에 붙여넣을 수 있습니다. 또는 스크린샷을 파일로 저장해야 하는 경우 기본 Paint 프로그램(또는 이미지로 작업할 수 있는 다른 앱)을 열어야 합니다. 동일한 단축키를 사용하거나 붙여넣기 버튼(일반적으로 화면 왼쪽 상단에 있음)을 클릭하여 스크린샷을 붙여넣은 다음 저장합니다. Windows 8 및 10에서는 Win + PrtScn 단축키를 사용하여 매우 빠르게 스크린샷을 찍을 수 있습니다. 이 버튼을 누르는 즉시 스크린샷이 사진 → 스크린샷 폴더에 파일로 자동 저장됩니다. 컴퓨터의 표준 프로그램 중 시작 메뉴를 통해 찾을 수 있는 Snipping Tool 이라는 스크린샷 전용 프로그램도 있습니다. 캡처 도구를 사용하면 바탕화면의 모든 영역이나 전체화면을 캡처할 수 있습니다. 이 프로그램을 사용하여 스크린샷을 찍은 후 사진을 편집하고 컴퓨터의 모든 폴더에 저장할 수 있습니다. 게다가 PicPick, Nimbus Screenshot, Screenshot Captor, Snipaste, Monosnap 등과 같이 컴퓨터에서 스크린샷을 찍기 위해 다른 앱을 사용할 수 있습니다. "},{"title":"macOS​","type":1,"pageTitle":"스크린샷을 찍는 방법","url":"guides/take-screenshot/#mac","content":"Mac에서 스크린샷을 찍으려면 다음 단축키를 사용하세요. **Cmd + Shift + 3을 길게 누릅니다. Mac은 전체 화면을 캡처하여 바탕 화면에 파일로 저장됩니다. 활성 창의 스크린샷을 찍으려면 다음 단축키를 사용하세요. ⌘ Cmd + Shift + 4 + 스페이스바를 길게 누릅니다. 포인터가 카메라 아이콘으로 변경됩니다. 창을 클릭하여 캡처합니다. 스크린샷 촬영을 취소하려면 Esc 키를 누릅니다. 특정 영역의 스크린샷을 찍으려면 다음 단축키를 사용하세요. * *⌘ Cmd + Shift + 5**를 누릅니다. 십자선을 드래그하여 필요한 영역을 선택합니다. 마우스 또는 트랙패드에서 손을 떼어 스크린샷을 찍고 Esc를 눌러 취소합니다. Touch Bar (MacBook Pro)의 스크린샷을 찍으려면 다음 단축키를 사용하세요. **⌘ Cmd + Shift + 6를 누릅니다. Mac은 전체 Touch Bar를 캡처하여 바탕화면에 파일로 저장합니다. 스크린샷을 저장하는 대신 클립보드에 복사하려면 위의 단축키 중 하나를 누른 상태에서 Ctrl 키를 함께 누르세요. 그런 다음 클립보드에 있는 스크린샷을 Cmd + V 단축키를 사용하여 현재 편집 중인 문서나 이미지에 붙여넣을 수 있습니다. 미리보기를 사용하고 스크린샷 찍기 (선택한 영역, 창 또는 전체 화면)를 선택하여 스크린샷을 찍을 수도 있습니다. 미리보기를 사용하면 스크린샷을 JPG, TIFF, PDF 및 기타 파일 형식으로 저장할 수 있습니다. "},{"title":"Credits & Acknowledgements","type":0,"sectionRef":"#","url":"miscellaneous/acknowledgements/","content":"","keywords":""},{"title":"Third-party software​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#software","content":"This is the list of libraries and other resources that really helped us with AdGuard software development process. "},{"title":"Windows용 AdGuard​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#win","content":"SQLLite database engine: sqlite.orgADO.NET provider for SQLite: system.data.sqlite.org/index.html/doc/trunk/www/index.wikiJson.NET — high-performance JSON framework for .NET: www.newtonsoft.com/jsonAvalonEdit — WPF-based text editor component: avalonedit.net "},{"title":"AdGuard for Mac​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#mac","content":"Red Sweater Software, LLC for RSVerticallyCenteredTextFieldCell component: http://www.red-sweater.com/blog/148/what-a-difference-a-cell-makesIlija Tovilo for ITProgressIndicator component: github.com/iluuu1994/ITProgressIndicatorSparkle Project for Sparkle.framework component: http://sparkle-project.orgRobbie Hanson for GCDAsyncSocket component: github.com/robbiehanson/CocoaAsyncSocketTony Million for Reachability component: github.com/tonymillion/ReachabilityAugust «Gus» Mueller for Fmdb component: github.com/ccgus/fmdbStephen F. Booth for SFBCrashReporter project: github.com/sbooth/SFBCrashReporterBartosz Janda for Acextract component: github.com/bartoszj/acextractFLOPageViewController: github.com/floschliep/FLOPageViewController "},{"title":"Android용 AdGuard​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#android","content":"Logback-android by Tony19: tony19.github.io/logback-androidOtto by Square: http://square.github.io/ottoRootTools Library by Stericson: github.com/Stericson/RootToolsMaterialDateRangePicker by Supratim Chakraborty: github.com/borax12/MaterialDateRangePickerHelloCharts by Leszek Wach: github.com/lecho/hellocharts-android "},{"title":"iOS용 AdGuard​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#ios","content":"Reachability component by Tony Million: github.com/tonymillion/ReachabilityFmdb component by August «Gus» Mueller: github.com/ccgus/fmdbNSStringPunycodeAdditions component by Nate Weaver: github.com/Wevah/Punycode-CocoaMinizip-ng library by Nathan Moinvaziri: github.com/zlib-ng/minizip-ngLottie for iOS library by Brandon Withrow: github.com/airbnb/lottie-ios "},{"title":"AdGuard 확장 프로그램​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#extension","content":"SHA256: github.com/AndersLindman/SHA256D3: github.com/d3/d3c3: github.com/c3js/c3nanobar: github.com/jacoborus/nanobarcrypto-js: github.com/brix/crypto-jsace: github.com/ajaxorg/acelodash: github.com/lodash/lodashmobx: github.com/mobxjs/mobxxstate: github.com/statelyai/xstatepunycode: github.com/mathiasbynens/punycode.jsjs-lru: github.com/rsms/js-lrutldts: github.com/remusao/tldtszod: github.com/colinhacks/zodswc: github.com/swc-project/swc "},{"title":"Safari용 AdGuard​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#safari","content":"ace: github.com/ajaxorg/aceadm-zip: github.com/cthackers/adm-zipconfig: github.com/lorenwest/node-configelectron-debug: github.com/sindresorhus/electron-debugelectron-log: github.com/megahertz/electron-logelectron-remote: github.com/electron-userland/electron-remoteelectron-simple-updater: github.com/megahertz/electron-simple-updaterelectron-store: github.com/sindresorhus/electron-storeelectron-updater: github.com/electron-userland/electron-builderi18n: github.com/mashpie/i18n-noderequest-promise: github.com/request/request-promisexmlhttprequest: github.com/driverdan/node-XMLHttpRequestaxios: github.com/axios/axiosdevtron: github.com/electron-userland/devtronelectron: github.com/electron/electronelectron-osx-sign: github.com/electron/electron-osx-signelectron-rebuild: github.com/electron/electron-rebuildfind-in-files: github.com/kaesetoast/find-in-filesgulp: github.com/gulpjs/gulpgulp-hash-creator: github.com/wahaha2012/gulp-hash-creatorrequest: github.com/request/requestrequire-dir: github.com/aseemk/requireDir "},{"title":"AdGuard Browser Assistant​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#assistant","content":"React: github.com/facebook/reactwebextension-polyfill: github.com/mozilla/webextension-polyfillreact-intl: github.com/formatjs/formatjs/tree/main/packages/react-intlmobx: github.com/mobxjs/mobxmobx-react: github.com/mobxjs/mobx-reactlodash: github.com/lodash/lodashnanoid: github.com/ai/nanoidreact-modal: github.com/reactjs/react-modalclassnames: github.com/JedWatson/classnamesbabel: github.com/babel/babelaxios: github.com/axios/axioscrx: github.com/oncletom/crxeslint: github.com/eslint/eslintjest: github.com/facebook/jestpostcss: github.com/postcss/postcssweb-ext: github.com/mozilla/web-extwebpack: github.com/webpack/webpack "},{"title":"CoreLibs​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#corelibs","content":"BoringSSL: github.com/google/boringssl/blob/master/LICENSEbrotli: github.com/google/brotli/blob/master/LICENSEChromium: github.com/chromium/chromium/blob/master/LICENSEDetours: github.com/microsoft/Detours/blob/main/LICENSE.mdeDistantObject: github.com/google/eDistantObject/blob/master/LICENSEFF/FFOS libs by Simon Zolin: github.com/stsaz/ffbase/blob/master/README.mdGoogle test: github.com/google/googletest/blob/master/LICENSEhttp-parser: github.com/nodejs/http-parser/blob/master/LICENSE-MITjsmn: github.com/zserge/jsmn/blob/master/LICENSEklib: github.com/attractivechaos/klib/blob/master/khash.hlibevent: github.com/libevent/libevent/blob/master/LICENSELibreSSL: github.com/libressl-portable/openbsd/blob/master/src/lib/libssl/LICENSElwIP: lwip.wikia.com/wiki/Licenseminiz: github.com/richgel999/miniz/blob/master/LICENSEnghttp2: github.com/nghttp2/nghttp2/blob/master/COPYINGPCRE2: www.pcre.org/licence.txtSQLite: www.sqlite.org/copyright.htmlzlib: zlib.net/zlib_license.html "},{"title":"Special thanks​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#testers","content":"Also a huge thanks and gratitude to all beta testers and other engaged users, whose help in finding/eliminating all the bugs, translating AdGuard and moderating our communities was priceless. Special thanks to: ag_bug_finder — beta tester of AdGuard for WindowsAikatsui — active contributor to AdGuard HomeAndy Kleinert (AndyKl) — translator and proofreader to German in CrowdinBigDargon — contributed the hostsVN project as a source to the list of AdGuard DNSBlaz — started as a filter contributor and now working at AdGuardBoo Berry — Telegram group moderatorbuuuuuuu190 — beta testerclarke — beta testerdartrax — beta testerdja2k — beta testerEduardo Addad de Oliveira (eduardoaddad) — translator and proofreader to Portuguese and Portuguese, Brazilian in Crowdinfabjazz — beta testerGörkem Emrah Güler (gork7777) — translator and proofreader to Turkish in Crowdinhanschke — beta testeriDjay — outstanding beta tester of AdGuard for iOSImre Kristoffer Eilertsen (DandelionSprout) — maintainer of &quot;Dandelion Sprout’s Nordic Filters&quot; that are included in all AdGuard toolsIONIL — translator and proofreader to Hebrew in Crowdinitabmedia — beta testerkirasam — beta testerkrystian3w — very active filter contributorlancelot.moon — translator and proofreader to Chinese Traditional in Crowdin, beta testerLord Ami — beta testerLukas Novotny (novas78) — translator and proofreader to Czech in Crowdinmalware1 — beta testermilder — beta testerNicos18 — beta testerOizaro — translator and proofreader to Italian in CrowdinOleg Chashko — very active beta tester of AdGuard for SafariOskari Lavinto (olavinto) — translator and proofreader to Finnish in Crowdinouzbed — beta testerPentagramTr — filter contributor, namely, he has brought a lot of new things to the Turkish filterPeter Hubinsky (hubak) — translator and proofreader to Slovak in CrowdinPiQuark6046 — filter contributorrickyoh — beta testerRonin427 — beta testerSanjay Nand — beta testersaturnotaku — beta testersteve1209 — beta testerstreetwolf — beta testersuperlex — helps us with scriptlets, filters, and AdGuard for SafariTayTayTheKiller — beta testerTPS — bug finder, filter contributorYuki2718 — actively contributes to AdGuard filterszznosar — active beta tester focused on AdGuard for iOSSergey Zozulya (sviperz) — active member of our Telegram group, beta tester  We also want to thank the xda-developers users. Thank you for your helpful feedback! We always appreciate comments from our users, especially constructive ones. You can always contact us to share your thoughts about AdGuard, request new features, and submit bugs. Join the AdGuard Subreddit, Xda-developers Forum or visit our page on GitHub. "},{"title":"AdGuard의 번역가 ·교정자 되기","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/become-translator/","content":"","keywords":""},{"title":"교정자가 되는 방법​","type":1,"pageTitle":"AdGuard의 번역가 ·교정자 되기","url":"miscellaneous/contribute/translate/become-translator/#proofreaders","content":"AdGuard에는 각 언어별로 프루프리더(이전에는 모더레이터라고 함)가 있습니다. 그리고 활동적인 번역가는 프루프리더가 될 수 있습니다. 교정자는 주로 무엇을 하나요? 교정자가 하는 일: 고품질 번역을 승인하고 잘못된 번역을 비승인합니다. 번역의 관련성을 관리합니다. 해당 언어로 번역과 관련된 댓글에 응답합니다. Every year, the best proofreaders receive gifts from AdGuard. 물론, 활동적인 번역가들에게도 보상이 제공됩니다. AdGuard의 보상 시스템에 대해 자세히 알아보세요. "},{"title":"Contribute to AdGuard filters","type":0,"sectionRef":"#","url":"miscellaneous/contribute/filters/","content":"","keywords":""},{"title":"Filtering rules​","type":1,"pageTitle":"Contribute to AdGuard filters","url":"miscellaneous/contribute/filters/#filtering-rules","content":"As you probably know, AdGuard uses filtering rules to block ads, and these rules are combined into thematic blocking filters, like AdGuard Base filter, Mobile ads filter, etc. Read more about how ad blocking works. Websites constantly change the way they embed ads, and we add new rules to our filters to keep them effective. Filter engineers are working on creating new rules, but we always welcome the help and support of volunteers. "},{"title":"How to start​","type":1,"pageTitle":"Contribute to AdGuard filters","url":"miscellaneous/contribute/filters/#how-to-start","content":"However, working with blocking filters requires specific skills. If you have them and know how to create rules, then head straight to our AdGuard Filters repository on GitHub. There you will find a lot of open issues, each one referencing a problem with some website problem — a missed ad, a false positive, etc. Choose any and suggest your own rules in comments. AdGuard filter engineers will review your suggestions, and if they find them appropriate, your rules will be added to AdGuard filters. If you are not yet familiar with our filtering rule syntax, or maybe need a refresher, you'll find the basics about the syntax in our Knowledge base. "},{"title":"Rewards​","type":1,"pageTitle":"Contribute to AdGuard filters","url":"miscellaneous/contribute/filters/#rewards","content":"If you have suggested several filtering rules and some of them were approved, then it's time for you to get a reward. Send us a message at st@adguard.com with your GitHub account name, and you'll get a free AdGuard license key. As for the exact number of rules you need to get approved to become eligible, there are no hard rules. This task is not easy, so anything north of 5 should be enough. "},{"title":"Guidelines and recommendations","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/guidelines/","content":"Guidelines and recommendations There are several things we'd like you to know before you start translating. It will not only save your time and effort, but also ensure that we are on the same page in terms of the meaning of phrases being translated. Once you open our page on Crowdin, choose any project you need and select your language. You'll also be able to switch between languages even after opening certain product folders. Choose any of available product folders and select a file — now you can start translating. note You can also change the Crowdin interface language by clicking the Settings icon in the top right corner of the page. In the opened window scroll down to the UI language tab. Open it, choose a language and click Change. The following guidelines will help you through the process. You can filter translations by clicking this button and selecting any offered option. Easily move between the files of the project. Pay attention to the glossary terms highlighted with a dotted line in a source phrase. Usually, they are special words (like brand names) that should not be translated. You can suggest your translation for translatable terms in the AdGuard Glossary project. In Crowdin, strings can have notes that make it easier to understand and translate phrases. Look for them in the &quot;Context&quot; field of the source string. Note that source strings may also have screenshots in the Context section. They help to understand the context and convey the exact meaning. tip You can request context by clicking the &quot;REQUEST&quot; button. ::: ![crowdin *border](https://cdn.adtidy.org/public/Adguard/kb/en/ag-translations/request.png) In addition to suggesting new translations, you can also leave comments on strings. Use comments to let us know about mistakes in the source text or existing translations, make notes, or ask questions. If you see a comment left on your translation — try to respond to it. There's also a Discussions tab on the main project page that conveniently allows you to see all the comments for the specific language in this project. Crowdin provides a very useful and convenient tool called Translation Memory. With its help, you can find the previously made translations of the same words and phrases and reuse them in your translations. Once you join a project by clicking the &quot;Join&quot; button, you will see the Tasks tab on the project page, where the tasks for specific project files get created. Please pay attention to them: they usually have a higher priority. Sometimes you can find phrases with plural forms. Please be especially attentive when translating such phrases. You can read how to translate plural forms here. Using proper plural forms is extremely important: please ask us in the comments if anything is unclear. Please do not write directly to the project managers and proofreaders listed in the Project info. If you have questions about translations, you can always ask our proofreaders or admins through comments. Also, you can send an email to translate@adguard.com or ask a question in the Telegram chat. The Admins will answer you as soon as possible.","keywords":""},{"title":"AdGuard translation program","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/program/","content":"AdGuard translation program Disclaimer: you can ask us any questions about translating AdGuard by sending an email to translate@adguard.com or by joining our Telegram chat. When it comes to translations, we at AdGuard always heavily rely on volunteers. We now use the Crowdin platform to manage translations of our products. So this is the place for anyone who wants to contribute to AdGuard by translating any of our products. If you want to be among the volunteers who help us translate AdGuard, please read the information on how to become our translator and how we collaborate with them.","keywords":""},{"title":"Plural forms","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/plural-forms/","content":"","keywords":""},{"title":"What do plural forms mean?​","type":1,"pageTitle":"Plural forms","url":"miscellaneous/contribute/translate/plural-forms/#plurals","content":"Nouns in different languages can have several plural word forms. Their usage depends on the number of things you are talking about. For instance, English words have two word forms when speaking about something in the singular, like 'one star', and in the plural — 'two stars'. It doesn’t matter if you say five, twenty six or even five hundred thirty two stars — the ending 's' will remain the same. But some languages can contain only one or many plural forms. In contrast to English, the Polish language has three plural forms of nouns. One of them is used when speaking about something in the singular, another form is used in the plural but with numbers ending in 2–4, excluding 12–14, and the third form — for words with other numbers in front of them. Let’s take a look at this picture. Here you can see the groups of numerals which determine a word form when standing in front of it.  Let’s draw a small parallel between English and Polish for better understanding:  The English version: The Polish equivalents: 1. form — It takes one hour. 1. form — Zajmuje to godzinę. 2. form — It takes two hours. 2. form — Zajmuje to dwie godziny. 3. form — It takes five hours. 3. form — Zajmuje to pięć godzin.  Now it is clear that the Polish 'godzinę' (hour) has three different forms, whereas the English word changes its form with given numbers only twice. Except for Polish, there are a lot of other languages that have three plural forms and more, such as Russian, Serbian, Slovak, Czech etc. But not all of them obey the same rule. That's why it's so important to know how many plurals your language has, and how to use them correctly. "},{"title":"Where can you learn about the number of plural forms?​","type":1,"pageTitle":"Plural forms","url":"miscellaneous/contribute/translate/plural-forms/#where-to-learn","content":"When you are faced with a translation that requires the use of plurals, you may not be able to realize right away how many word forms your language contains. Here are some sources of information you can use. Localization Guide contains a wide list of languages. The number of plural forms for different languages is shown this way: nplurals=2, nplurals=4 and so on. The numeral after the Equals sign = means the number of plural forms of the respective language. Also, you can get information about plural forms in the Unicode Common Locale Data Repository (CLDR). The CLDR Plural Rules indicate an additional word form for decimal numbers (1.5; 2.3; 100.1…), but we don’t use them in AdGuard translations. "},{"title":"Plurals in AdGuard translations​","type":1,"pageTitle":"Plural forms","url":"miscellaneous/contribute/translate/plural-forms/#translations","content":"First of all, we want to mention that not every AdGuard translation requires the use of plural forms. Currently, we have 4 types of strings on Crowdin that involve the use of plurals. Let's take a closer look at them. "},{"title":"1. Phrases with string keys ending in .singular, .dual, .plural​","type":1,"pageTitle":"Plural forms","url":"miscellaneous/contribute/translate/plural-forms/#1type","content":" Most of them are represented in the AdGuard for Windows project and consist of only one or two words: days;extensions;hours Please pay attention to the string keys of such phrases and to the &quot;Context&quot; field where you can see some important notes about plurals. The string keys may contain Singular, Dual, Plural words (ex.FormatDayDeclensionDual). In this case, you should leave the appropriate plural form as it is specified in the key. "},{"title":"2. Strings with singular and plural nouns separated by commas​","type":1,"pageTitle":"Plural forms","url":"miscellaneous/contribute/translate/plural-forms/#2type","content":"This kind of strings is mostly concentrated in the AdGuard for Android project. Please look at the example:  If there are 3 plural forms of nouns in your language (like in Polish), please write all plural forms separated by commas. hour, hours — godzinę, godziny, godzin In case a noun has only 2 forms, there is no need to write the same form twice (typically only for this type of strings with plurals!). However, it won't be a mistake if you repeat the form twice. "},{"title":"3. Strings that use the Crowdin-developed pattern​","type":1,"pageTitle":"Plural forms","url":"miscellaneous/contribute/translate/plural-forms/#3type","content":"This is the most user-friendly scheme of translating strings with plurals. Crowdin suggests to users that they translate the certain amount of phrases with different plural forms. If your language provides only one plural form, then you will see only one phrase to translate. If three or more forms, Crowdin will provide you with the string divided into other two or three strings to translate. For example:  Please be attentive when translating these strings and approving them. If you have no idea what the &quot;Other&quot; field means, then just paste the same form as it is in the &quot;Many&quot; field. The translations of &quot;Many&quot; and &quot;Other&quot; fields can be the same. "},{"title":"4. Strings with templates separated by the vertical bar sign​","type":1,"pageTitle":"Plural forms","url":"miscellaneous/contribute/translate/plural-forms/#4type","content":"This is the most complicated type of AdGuard strings which is mostly used in the AdGuard Websites project. Pay close attention to a vertical bar sign between the sentences and %count% placeholders in original phrases — this will help you identify phrases where translations require the use of plural forms.  Now, let’s imagine — you are faced with such a string: Standard license for %count% computer | Standard license for %count% computers. What should you know to translate it correctly? Let's call the sentences which are divided by a vertical bar sign &quot;templates&quot;, because actually they serve as templates for phrases with different numbers. Coming back to the example, as the English language includes only two forms, there should be two templates respectively: Standard license for *%count%* computer | Standard license for *%count%* computers where template 1 is Standard license for %count% computer, and template 2 is Standard license for %count% computers Another important thing you should pay your attention to is %count% placeholders that, as usual, take place before the words they define. Instead of %count% here will appear different numbers depending on which templates are being chosen. In a situation with another language that has, let’s say, three plural forms, there should be three templates with two vertical bar signs between them. For example, when we translate the above mentioned phrase into Slovak, that according to the rule of Localization Guide has three word forms, the correct translation will look so: **Štandartná licencia pre *%count%* počítač | Štandartná licencia pre *%count%* počítače | Štandartná licencia pre *%count%* počítačov**  In this case, we see three templates which contain three forms of the word &quot;počítač&quot; (computer) in Slovak. If we ignore one of the forms and use only two templates for Slovak instead of three, the system won’t be able to take an appropriate template for certain numbers and, as a result, we will have grammar mistakes in sentences, like in English: Standard license for 5 computer. Always use as many forms as there are in your language, even when the word itself has fewer word forms. For example, the Serbian word 'računar' (computer) has only two forms. But there are 3 plural forms in Serbian.  Thus, the translation from English into Serbian should be: **Standardna licenca za *%count%* računar | Standardna licenca za *%count%* računara | Standardna licenca za *%count%* računara** Although it is obvious that the last two templates have no differences, it is very important to keep the rule: The number of templates should reflect the number of plural forms of the respective language!(typically for this type of strings with plurals). "},{"title":"Short summary​","type":1,"pageTitle":"Plural forms","url":"miscellaneous/contribute/translate/plural-forms/#summury","content":"When translating AdGuard projects pay your close attention to phrases which require the use of plural forms. While first three types of such strings are more or less easy to perform, the fourth type demands more vigilance. And again: if you come across an original phrase with two important elements: the vertical bar sign and %count% placeholders, please do the following: Refer to the plural rule of a language you translate into; The number of your templates should be consistent with the number of plural forms your language includes, even in cases some words have fewer forms themselves. Two plural forms — two templates in translations; five plural forms — five templates, etc. Do not forget to use a vertical bar sign between templates as it is represented in original strings; Do not translate, fill in or delete %count% placeholders. By following these simple rules you will help AdGuard developers avoid a lot of unnecessary complications during the localization process. "},{"title":"How to prioritize the translations of Crowdin files","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/translation-priority/","content":"How to prioritize the translations of Crowdin files There are five major AdGuard projects on Crowdin — AdGuard Applications, AdGuard Websites, AdGuard Ad Blocker Knowledge base, AdGuard VPN Knowledge Base, and AdGuard DNS Knowledge Base. We do not have clear guidelines on which files or products of the AdGuard Applications project to start with. Just choose any product you like. There are just a couple of things we want to mention: You can see the app only in those languages for which all translations are completed in Crowdin;We recommend translating the descriptions for app stores in the second place, because without the translation of products themselves, the descriptions won't be needed. The situation is different in the AdGuard Websites project. Languages can be added to the site even if a full set of translations is not available. However, this depends on which files have already been translated. That's why we recommend that you start with the most important files — they are listed below: AdGuard Ad Blocker website critical.resxauth.resxwelcome.resx AdGuard VPN website critical.resxauth.resx AdGuard DNS website critical.resxauth.resx Adding new strings as well as updating existing ones in these files requires special attention from the project translators and proofreaders. In addition to websites, there is a file for translating transactional emails in the AdGuard Websites project. Newly added strings in this file also have a high translation priority.","keywords":""},{"title":"Reward system","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/rewards/","content":"","keywords":""},{"title":"Here’s how our reward system works​","type":1,"pageTitle":"Reward system","url":"miscellaneous/contribute/translate/rewards/#heres-how-our-reward-system-works","content":"For the first one-year AdGuard license, you need to translate 500 words. For the second license, you need 1,000 words, i.e. 1,500 words altogether. All subsequent licenses require an additional 1,500 words per license. For the first one-year AdGuard VPN subscription, you need to translate 2,500 words. All subsequent subscriptions or renewals require an additional 2,500 words per subscription.  Just send us a request to translate@adguard.com and you’ll get the license as a token of our gratitude. Besides, the most active translators may receive proofreader status in the future, should they express such an intention, and that promises even more good stuff. Every year we present gifts with the AdGuard logo to our active proofreaders. If you want to become one of them, please write to translate@adguard.com. "},{"title":"Updating the Knowledge base","type":0,"sectionRef":"#","url":"miscellaneous/contribute/updating-knowledge-base/","content":"","keywords":""},{"title":"How to suggest a change or write a new article​","type":1,"pageTitle":"Updating the Knowledge base","url":"miscellaneous/contribute/updating-knowledge-base/#suggest-change","content":"You can suggest changes to current articles and add new ones to our Knowledge base using the functionality of GitHub mentioned above. If you are unfamiliar with principles of working with the platform, start by reading GitHub documentation. Once you are ready to start, work in the KnowledgeBase repository. All texts in our Knowledge base are written in Markdown markup language. Keep this in mind when editing or writing articles. Follow this link to learn more about Markdown syntax. The Knowledge base website is built using Docusaurus 2 — a modern static website generator. When suggesting changes or additions, take into account that all documents must comply with the principles of the platform. You can read about them in Docusaurus Guides. You can deploy this Knowledge base locally on your computer to preview the changes you suggest. Detailed instructions on how to do this can be found in the README file on this Knowledge base's GitHub page. "},{"title":"Translating articles​","type":1,"pageTitle":"Updating the Knowledge base","url":"miscellaneous/contribute/updating-knowledge-base/#translate-adguard","content":"Translation of the existing articles of the Knowledge base is carried out on the Crowdin platform. All the details about translations and working with Crowdin can be found in the dedicated article of the AdGuard Ad Blocker Knowledge base. When working on AdGuard Knowledge base articles, you may meet strings containing plural forms that you should translate with extra attention. In a separate article, we described in detail the difficulties that can arise when translating strings with plural forms and gave extensive instructions on how to work with them on the Crowdin platform. "},{"title":"Working on open issues​","type":1,"pageTitle":"Updating the Knowledge base","url":"miscellaneous/contribute/updating-knowledge-base/#working-on-open-issues","content":"Sometimes there exist open tasks related to updating the Knowledge base. You can help us speed up their completion the same way you would suggest any other changes to the Knowledge base. Choose any issue that you find appealing and start working on it. If you have any questions — you can ask them right in the comments to that issue. "},{"title":"Writing about AdGuard","type":0,"sectionRef":"#","url":"miscellaneous/contribute/writing-about-adguard/","content":"Writing about AdGuard If you like AdGuard and want to spread the word and share your thoughts about it on social media or on a personal blog or website, this article may interest you. After sharing your experience, email pr@adguard.com and include a link to your post. The authors of the most well-written reviews will receive a free AdGuard license key. It doesn't matter if your website's audience is small or large; we value every effort. Please note that your review should be around 300 to 500 words. If you are planning to make a video about AdGuard or do anything else offbeat, please let us know in advance to avoid any possible misunderstandings. The same applies if your plan includes the use of the AdGuard logo, banners, or other visual elements. The contact email address remains the same: pr@adguard.com.","keywords":""},{"title":"How to create your own ad filters","type":0,"sectionRef":"#","url":"general/ad-filtering/create-own-filters/","content":"","keywords":""},{"title":"Comments​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#comments","content":"Any line that starts with an exclamation mark is a comment. In the list of rules it is displayed in gray color. AdGuard will ignore this line, so you can write anything you want. Comments are usually placed above the rules and used to describe what a rule does. For example: ! This is the comment. Below this line, there is an actual filtering rule. ||example.org^  "},{"title":"Examples​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#examples","content":""},{"title":"Blocking by domain name​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#blocking-by-domain-name","content":" This rule blocks: http://example.org/ad1.gifhttp://subdomain.example.org/ad1.gifhttps://ads.example.org:8000/ This rule does not block: http://ads.example.org.us/ad1.gifhttp://example.com/redirect/http://ads.example.org/ By default, such rules do not work for document requests. This means that the ||example.org^ rule will block a request made to example.org when you try to navigate to this domain from another website, but if you type example.org into the address bar and try to navigate to it, the website will open. To block the document request, you will need to use a rule with the $document modifier: ||example.org^$document. "},{"title":"Blocking exact address​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#blocking-exact-address","content":" This rule blocks: http://example.org/ This rule does not block: https://example.org/banner/img "},{"title":"Basic rule modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rule-modifiers","content":"Filtering rules support numerous modifiers that allow you to fine-tune the rule behavior. Here is an example of a rule with some simple modifiers.  This rule blocks: http://example.org/script.js if this script is loaded from example.com. This rule does not block: https://example.org/script.js if this script is loaded from example.org.https://example.org/banner.png because it is not a script. "},{"title":"Unblocking an address​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#unblocking-an-address","content":" This rule unblocks: http://example.org/banner.png even if there is a blocking rule for this address. Blocking rules with $important modifier can override exceptions. "},{"title":"Unblocking an entire website​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#unblocking-an-entire-website","content":" This rule unblocks It disables all cosmetic rules on example.com.It unblocks all requests sent from this website even if there is are blocking rules matching these requests. "},{"title":"Cosmetic rule​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-rule","content":" Cosmetic rules are based on using a special language named CSS, which every browser understands. Basically, it adds a new CSS style to the website which purpose is to hide particular elements. You can learn more about CSS in general here. AdGuard extends CSS and lets filters developers handle much more complicated cases. However, to use these extended rules, you need to be fluent in regular CSS. Popular CSS selectors Name\tCSS selector\tDescriptionID selector\t#banners\tMatches all elements with id attribute equal to banners. Class selector\t.banners\tMatches all elements with class attribute containing banners. Attribute selector\tdiv[class=&quot;banners&quot;]\tMatches all div elements with class attribute exactly equal to banners. Attribute substring selector\tdiv[class^=&quot;advert1&quot;]\tMatches all div elements which class attribute starts with the advert1 string. Attribute substring selector\tdiv[class$=&quot;banners_ads&quot;]\tMatches all div elements which class attribute ends with the banners_ads string. Attribute substring selector\ta[href^=&quot;http://example.com/&quot;]\tMatches all links that are loaded from http://example.com/ domain. Attribute selector\ta[href=&quot;http://example.com/&quot;]\tMatches all links to exactly the http://example.com/ address.  "},{"title":"Restrictions and limitations​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#restrictions-and-limitations","content":""},{"title":"Trusted filters​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#trusted-filters","content":"Some rules can be used only in trusted filters. This category includes: filter lists created by the AdGuard team,custom filter lists installed as trusted,user rules. "},{"title":"AdGuard 콘텐츠 차단기​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#adguard-콘텐츠-차단기","content":"AdGuard Content Blocker is an extension for Samsung and Yandex browsers that can be installed from Google Play. It is not to be confused with the fully functional AdGuard for Android that can only be downloaded from our website. Unfortunately, AdGuard Content Blocker capabilities are limited by what the browsers allow and they only support an old Adblock Plus filters syntax: Basic blocking rules with the following modifiers: $domain, $third-party, content-type modifiers.Basic exception rules with the following modifiers: $document, $elemhide.Basic element hiding rules with no extended CSS support. Because of the limitations above AdGuard Content Blocker will not be mentioned in the compatibility notes. "},{"title":"Basic rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules","content":"The most simple rules are so-called Basic rules. They are used to block requests to specific URLs. Or to unblock it, if there is a special marker &quot;@@&quot; at the beginning of the rule. The basic principle for this type of rules is quite simple: you have to specify the address and additional parameters that limit or expand the rule scope. Sub-requests Basic rules for blocking requests are applied only to sub-requests. That means they will not block the loading of the page unless it is explicitly specified with a $document modifier. Response status Browser detects a blocked request as completed with an error. Rule length Rules shorter than 4 characters are considered incorrect and will be ignored. "},{"title":"Basic rule syntax​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-syntax","content":" rule = [&quot;@@&quot;] pattern [ &quot;$&quot; modifiers ] modifiers = [modifier0, modifier1[, ...[, modifierN]]]  pattern — an address mask. Every request URL is collated to this mask. In the template, you can also use the special characters described below. Note that AdGuard truncates URLs to a length of 4096 characters in order to speed up matching and avoid issues with ridiculously long URLs.@@ — a marker that is used in rules of exception. To turn off filtering for a request, start your rule with this marker.modifiers — parameters that &quot;clarify&quot; the basic rule. Some of them limit the rule scope and some can completely change they way it works. "},{"title":"Special characters​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-special-characters","content":"* — a wildcard character. It is used to represent any set of characters. This can also be an empty string or a string of any length.|| — an indication to apply the rule to the specified domain and its subdomains. With this character, you do not have to specify a particular protocol and subdomain in address mask. It means that || stands for http://*., https://*., ws://*., wss://*. at once.^ — a separator character mark. Separator character is any character, but a letter, a digit, or one of the following: _ - . %. In this example separator characters are shown in bold: http://example.com/?t=1&amp;t2=t3. The end of the address is also accepted as separator.| — a pointer to the beginning or the end of address. The value depends on the character placement in the mask. For example, a rule swf| corresponds to http://example.com/annoyingflash.swf , but not to http://example.com/swf/index.html. |http://example.org corresponds to http://example.org, but not to http://domain.com?url=http://example.org. note |, ||, ^ can only be used with rules that have a URL pattern. For example, ||example.com##.advert is incorrect and will be ignored by the blocker. Visual representation We also recommend to get acquainted with the Adblock Plus filter cheatsheet, for better understanding of how such rules should be made. "},{"title":"Regular expressions support​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#regexp-support","content":"If you want even more flexibility in making rules, you can use Regular expressions instead of a default simplified mask with special characters. Performance Rules with regular expressions work more slowly, therefore it is recommended to avoid them or to limit their scope to specific domains. If you want a blocker to determine a regular expression, the pattern has to look like this: pattern = &quot;/&quot; regexp &quot;/&quot;  For example, /banner\\d+/$third-party this rule will apply the regular expression banner\\d+ to all third-party requests. Exclusion rule with regular expression looks like this: @@/banner\\d+/. Compatibility AdGuard Safari and AdGuard for iOS do not fully support regular expressions because of Content Blocking API restrictions (look for &quot;The Regular expression format&quot; section). "},{"title":"Wildcard support for TLD (top-level domains)​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#wildcard-for-tld","content":"Wildcard characters are supported for TLDs of the domains in patterns of cosmetic, HTML filtering and JavaScript rules. For cosmetic rules, e.g. example.*##.banner, multiple domains are matched due to the part .*, i.e. example.com, sub.example.net, example.co.uk, etc. For basic rules the described logic is applicable only for the domains specified in $domain modifier, e.g. ||*/banners/*$image,domain=example.*. Compatibility In AdGuard for Windows, Mac, Android, and AdGuard Browser Extension rules with wildcard .* match any public suffix (or eTLD). But for AdGuard for Safari and iOS the supported list of top-level domains is limited due to Safari limitations. Rules with wildcard for TLD are not supported by AdGuard Content Blocker. "},{"title":"Basic rule examples​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rule-examples","content":"||example.com/ads/* — a simple rule, which corresponds to addresses like http://example.com/ads/banner.jpg and even http://subdomain.example.com/ads/otherbanner.jpg. ||example.org^$third-party — this rule blocks third-party requests to example.org and its subdomains. @@||example.com$document — general exception rule. It completely disables filtering for example.com and all subdomains. There is a number of modifiers which can be used in exception rules. For more details, please follow the link below. "},{"title":"Basic rule modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rule-modifiers","content":"Basic modifiersContent-type modifiersException modifiers note The features described in this section are intended for experienced users. They extend capabilities of &quot;Basic rules&quot;, but in order to use them you need to have a basic understanding of the way your browser works. You can change the behavior of a &quot;basic rule&quot; by using additional modifiers. Modifiers should be located in the end of the rule after a $ sign and be separated by commas. Example: ||domain.com^$popup,third-party  "},{"title":"Basic modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-basic-modifiers","content":"The following modifiers are the most simple and frequently used. Basically, they just limit the scope of rule application. Modifier \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tiOS용 AdGuard\tSafari용 AdGuard\tAdGuard 콘텐츠 차단기$app\t✅\t❌\t❌\t❌\t❌\t❌ $denyallow\t✅\t✅\t✅\t✅\t✅\t❌ $domain\t✅\t✅\t✅\t✅ *\t✅ *\t✅ $header\t✅\t⏳\t⏳\t❌\t❌\t❌ $important\t✅\t✅\t✅\t✅\t✅\t❌ $match-case\t✅\t✅\t✅\t✅\t✅\t✅ $method\t✅\t✅\t✅\t❌\t❌\t❌ $popup\t✅ *\t✅\t✅\t✅ *\t✅ *\t❌ $third-party\t✅\t✅\t✅\t✅\t✅\t✅ $to\t✅\t✅\t✅\t❌\t❌\t❌ note ✅ — fully supported✅ * — supported, but reliability may vary or limitations may occur; check the modifier description for more details⏳ — feature that has been implemented or is planned to be implemented but is not yet available in any product❌ — not supported $app​ This modifier lets you narrow the rule coverage down to a specific application (or a list of applications). This might be not too important on Windows and Mac, but this is very important on mobile devices where some of the filtering rules must be app-specific. Android — use the app package name, e.g. org.example.app.Windows — use the process name, e.g. chrome.exe.Mac — use the bundle ID or the process name, e.g. com.google.Chrome. For Mac, you can find out the bundle ID or the process name of the app by viewing the respective request details in the Filtering log. Examples ||baddomain.com^$app=org.example.app — a rule to block requests that match the specified mask and are sent from the org.example.app Android app.||baddomain.com^$app=org.example.app1|org.example.app2 — the same rule but it works for both org.example.app1 and org.example.app2 apps. If you want the rule not to be applied to certain apps, start the app name with the ~ sign. ||baddomain.com^$app=~org.example.app — a rule to block requests that match the specified mask and are sent from any app except for the org.example.app.||baddomain.com^$app=~org.example.app1|~org.example.app2 — same as above, but now two apps are excluded: org.example.app1 and org.example.app2. Restrictions Apps in the modifier value cannot have a wildcard, e.g. $app=com.*.music. Rules with such modifier are considered invalid. Compatibility Only AdGuard for Windows, Mac, Android are technically capable of using rules with $app modifier.On Windows the process name is case-insensitive starting with AdGuard for Windows with CoreLibs v1.12 or later. $denyallow​ $denyallow modifier allows to avoid creating additional rules when it is needed to disable a certain rule for specific domains. $denyallow matches only target domains and not referrer domains. Adding this modifier to a rule is equivalent to excluding the domains by the rule's matching pattern or to adding the corresponding exclusion rules. To add multiple domains to one rule, use the | character as a separator. Examples This rule: *$script,domain=a.com|b.com,denyallow=x.com|y.com  is equivalent to this one: /^(?!.*(x.com|y.com)).*$/$script,domain=a.com|b.com  or to the combination of these three: *$script,domain=a.com|b.com @@||x.com$script,domain=a.com|b.com @@||y.com$script,domain=a.com|b.com  Restrictions The rule's matching pattern cannot target any specific domains, e.g. it cannot start with ||.Domains in the modifier value cannot be negated, e.g. $denyallow=~x.com, or have a wildcard TLD, e.g. $denyallow=x.*. The rules which violate these restrictions are considered invalid. Compatibility Rules with $denyallow modifier are not supported by AdGuard for iOS, Safari, and AdGuard Content Blocker. $domain​ $domain limits the rule scope to requests made from the specified domains and their subdomains (as indicated by the Referer HTTP header). Syntax The modifier is a list of one or more expressions separated by the | symbol, each of which is matched against a domain in a particular way depending on its type (see below). domains = [&quot;~&quot;] entry_0 [&quot;|&quot; [&quot;~&quot;] entry_1 [&quot;|&quot; [&quot;~&quot;]entry_2 [&quot;|&quot; ... [&quot;|&quot; [&quot;~&quot;]entry_N]]]] entry_i = ( regular_domain / any_tld_domain / regexp )  regular_domain — a regular domain name (domain.com). Corresponds the specified domain and its subdomains. It is matched lexicographically.any_tld_domain — a domain name ending with a wildcard character as a public suffix, e.g. for example.* it is co.uk in example.co.uk. Corresponds to the specified domain and its subdomains with any public suffix. It is matched lexicographically.regexp — a regular expression, starts and ends with /. The pattern works the same way as in the basic URL rules, but the characters /, $, and | must be escaped with \\. :::정보 Rules with $domain modifier as regular_domain or any_tld_domain are supported by all AdGuard products. ::: Examples Just $domain: ||baddomain.com^$domain=example.org blocks requests that match the specified mask, and are sent from domain example.org or its subdomains.||baddomain.com^$domain=example.org|example.com — the same rule, but it works for both example.org and example.com. If you want the rule not to be applied to certain domains, start a domain name with ~ sign. $domain and negation ~: ||baddomain.com^$domain=example.org blocks requests that match the specified mask and are sent from the example.org domain or its subdomains.||baddomain.com^$domain=example.org|example.com — the same rule, but it works for both example.org and example.com.||baddomain.com^$domain=~example.org blocks requests matching the pattern sent from any domain except example.org and its subdomains.||baddomain.com^$domain=example.org|~foo.example.org blocks requests sent from example.org and its subdomains, except the subdomain foo.example.org.||baddomain.com^$domain=/(^\\|.+\\.)example\\.(com\\|org)\\$/ blocks requests sent from example.org and example.com domains and all their subdomains.||baddomain.com^$domain=~a.com|~b.*|~/(^\\|.+\\.)c\\.(com\\|org)\\$/ blocks requests sent from any domains, except a.com, b with any public suffix (b.com, b.co.uk, etc.), c.com, c.org, and their subdomains. $domain modifier matching target domain: In some cases the $domain modifier can match not only the referrer domain, but also the target domain. This happens when all the following conditions are met: The request has the document content typeThe rule pattern does not match any particular domainsThe rule pattern does not contain regular expressionsThe $domain modifier contains only excluded domains, e.g. $domain=~example.org|~example.com The following predicate should be satisfied to perform a target domain matching: 1 AND ((2 AND 3) OR 4)  That is, if the modifier $domain contains only excluded domains, then the rule does not need to meet the second and third conditions to match the target domain against the modifier $domain. If some of the conditions above are not met but the rule contains $cookie or $csp modifier, the target domain will still be matched. If the referrer matches a rule with $domain that explicitly excludes the referrer domain, then the rule will not be applied even if the target domain also matches the rule. This affects rules with $cookie and $csp modifiers, too. Examples *$cookie,domain=example.org|example.com will block cookies for all requests to and from example.org and example.com.*$document,domain=example.org|example.com will block all requests to and from example.org and example.com. In the following examples it is implied that requests are sent from http://example.org/page (the referrer) and the target URL is http://targetdomain.com/page. page$domain=example.org will be matched, as it matches the referrer domain.page$domain=targetdomain.com will be matched, as it matches the target domain and satisfies all requirements mentioned above.||*page$domain=targetdomain.com will not be matched, as the pattern ||*page may match specific domains, e.g. example.page.||*page$domain=targetdomain.com,cookie will be matched because the rule contains $cookie modifier despite the pattern ||*page may match specific domains./banner\\d+/$domain=targetdomain.com will not be matched as it contains a regular expression.page$domain=targetdomain.com|~example.org will not be matched because the referrer domain is explicitly excluded. $domain modifier limitations​ Restrictions Safari does not support the simultaneous use of allowed and disallowed domains, so rules like ||baddomain.com^$domain=example.org|~foo.example.org will not work in AdGuard for iOS and AdGuard for Safari. Compatibility Rules with regular expressions in the $domain modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.11 or later. In AdGuard for Windows, Mac and Android with CoreLibs v1.12 or later the $domain modifier can be alternatively spelled as $from. $header​ The $header modifier allows matching the HTTP response having a specific header with (optionally) a specific value. Syntax $header &quot;=&quot; h_name [&quot;:&quot; h_value] h_value = string / regexp  where: h_name — required, an HTTP header name. It is matched case-insesitively.h_value — optional, an HTTP header value matching expression, it may be one of the following: string — a sequence of characters. It is matched against the header value lexicographically;regexp — a regular expression, starts and ends with /. The pattern works the same way as in the basic URL rules, but the characters /, $ and , must be escaped with \\. The modifier part, &quot;:&quot; h_value, may be omitted. In that case, the modifier matches the header name only. Examples ||example.com^$header=set-cookie:foo blocks requests whose responses have the Set-Cookie header with the value matching foo literally.||example.com^$header=set-cookie blocks requests whose responses have the Set-Cookie header with any value.@@||example.com^$header=set-cookie:/foo\\, bar\\$/ unblocks requests whose responses have the Set-Cookie header with value matching the foo, bar$ regular expression.@@||example.com^$header=set-cookie unblocks requests whose responses have a Set-Cookie header with any value. Compatibility Rules with the $header modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.11 or later. $important​ The $important modifier applied to a rule increases its priority over rules without the identical modifier. Even over basic exception rules. Go to rules priorities for more details. Examples ! blocking rule will block all requests despite of the exception rule ||example.org^$important @@||example.org^  ! if the exception rule also has `$important` modifier, it will prevail and requests won't be blocked ||example.org^$important @@||example.org^$important  $match-case​ This modifier defines a rule which applies only to addresses that match the case. Default rules are case-insensitive. Examples */BannerAd.gif$match-case — this rule will block http://example.com/BannerAd.gif, but not http://example.com/bannerad.gif. Compatibility Rules with the $match-case are supported by AdGuard for iOS and AdGuard for Safari with SafariConverterLib v2.0.43 or later. All other products already support this modifier. $method​ This modifier limits the rule scope to requests that use the specified set of HTTP methods. Negated methods are allowed. The methods must be specified in all lowercase characters, but are matched case-insensitively. To add multiple methods to one rule, use the vertical bar | as a separator. Examples ||evil.com^$method=get|head blocks only GET and HEAD requests to evil.com.||evil.com^$method=~post|~put blocks any requests to evil.com except POST or PUT.@@||evil.com$method=get unblocks only GET requests to evil.com.@@||evil.com$method=~post unblocks any requests to evil.com except POST. Restrictions Rules with mixed negated and not negated values are considered invalid. So, for example, the rule ||evil.com^$method=get|~head will be rejected. Compatibility Rules with $method modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.12 or later and AdGuard Browser Extension for Chrome, Firefox, and Edge with TSUrlFilter v2.1.1 or later. $popup​ AdGuard will try to close the browser tab with any address that matches a blocking rule with this modifier. Please note that not all the tabs can be closed. Examples ||domain.com^$popup — if you try to go to http://domain.com/ from any page in the browser, a new tab in which specified site has to be opened will be closed by this rule. Compatibility $popup modifier works best in AdGuard Browser Extension.In AdGuard for Safari and iOS, $popup rules simply block the page right away.In AdGuard for Windows, Mac, and Android, $popup modifier may not detect a popup in some cases and it will not be blocked. $popup modifier applies the document content type with a special flag which is passed to a blocking page. Blocking page itself can do some checks and close the window if it is really a popup. Otherwise, page should be loaded. It can be combined with other request type modifiers, such as $third-party and $important.Rules with $popup modifier are not supported by AdGuard Content Blocker. $third-party​ A restriction of third-party and own requests. A third-party request is a request from a different domain. For example, a request to example.org from domain.com is a third-party request. note To be considered as such, a third-party request should meet one of the following conditions: Its referrer is not a subdomain of the target domain or vice versa. For example, a request to subdomain.example.org from example.org is not a third-party requestIts Sec-Fetch-Site header is set to cross-site Examples $third-party: ||domain.com^$third-party — this rule applies to all domains, except domain.com and its subdomains. An example of a third-party request: http://example.org/banner.jpg. If there is a $~third-party modifier, the rule is only applied to the requests that are not from third parties. Which means, they have to be sent from the same domain. $~third-party: ||domain.com$~third-party — this rule is applied exclusively to domain.com. Example of a non third-party request: http://domain.com/icon.ico. note You may use a shorter name (alias) instead of using the full modifier name: $3p. $to​ $to limits the rule scope to requests made to the specified domains and their subdomains. To add multiple domains to one rule, use the | character as a separator. Examples /ads$to=evil.com|evil.org blocks any request to evil.com or evil.org and their subdomains with a path matching /ads./ads$to=~not.evil.com|evil.com blocks any request to evil.com and its subdomains, with a path matching /ads, except requests to not.evil.com and its subdomains./ads$to=~good.com|~good.org blocks any request with a path matching /ads, except requests to good.com or good.org and their subdomains. Restrictions $denyallow can not be used together with $to. It can be expressed with inverted $to: $denyallow=a.com|b.com is equivalent to $to=~a.com|~b.com. Compatibility Rules with the $to modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.12 or later and AdGuard Browser Extension with TSUrlFilter v2.1.3 or later. "},{"title":"Content-type modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#content-type-modifiers","content":"There is a set of modifiers, which can be used to limit the rule's application area to certain type of content. These modifiers can also be combined to cover, for example, both images and scripts. Compatibility There is a big difference in how AdGuard determines the content type on different platforms. For AdGuard Browser Extension, content type for every request is provided by the browser. AdGuard for Windows, Mac, and Android use the following method: first, the apps try to determine the type of the request by the Sec-Fetch-Dest request header or by the filename extension. If the request is not blocked at this stage, the type will be determined using the Content-Type header at the beginning of the server response. Examples of content-type modifiers ||example.org^$image — corresponds to all images from example.org.||example.org^$script,stylesheet — corresponds to all the scripts and styles from example.org.||example.org^$~image,~script,~stylesheet — corresponds to all requests to example.org except for the images, scripts and styles. Modifier \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tiOS용 AdGuard\tSafari용 AdGuard\tAdGuard 콘텐츠 차단기$document\t✅\t✅\t✅\t✅\t✅\t❌ $font\t✅\t✅\t✅\t✅\t✅\t✅ $image\t✅\t✅\t✅\t✅\t✅\t✅ $media\t✅\t✅\t✅\t✅\t✅\t✅ $object\t✅\t✅\t✅\t✅\t✅\t✅ $other\t✅\t✅\t✅\t✅\t✅\t❌ $ping\t✅ *\t✅\t✅\t❌\t❌\t✅ $script\t✅\t✅\t✅\t✅\t✅\t✅ $stylesheet\t✅\t✅\t✅\t✅\t✅\t✅ $subdocument\t✅ *\t✅\t✅\t✅\t✅\t❌ $websocket\t✅\t✅\t✅\t✅ *\t✅ *\t✅ $xmlhttprequest\t✅\t✅\t✅\t✅\t✅\t✅ $webrtc 🚫\t❌\t❌\t❌\t❌\t❌\t❌ $object-subrequest 🚫\t❌\t❌\t❌\t❌\t❌\t❌ note ✅ — fully supported✅ * — supported, but reliability may vary or limitations may occur; check the modifier description for more details❌ — not supported🚫 — removed and no longer supported $document​ The rule corresponds to the main frame document requests, i.e. HTML documents that are loaded in the browser tab. It does not match iframes, there is a $subdocument modifier for these. By default, AdGuard does not block the requests that are loaded in the browser tab (e.g. &quot;main frame bypass&quot;). The idea is not to prevent pages from loading as the user clearly indicated that they want this page to be loaded. However, if the $document modifier is specified explicitly, AdGuard does not use that logic and prevents the page load. Instead, it responds with a &quot;blocking page&quot;. If this modifier is used with an exclusion rule (@@), it completely disables blocking on corresponding pages. It is equivalent to using $elemhide, $content, $urlblock, $jsinject, $extension modifiers simultaneously. Examples @@||example.com^$document completely disables filtering on all pages at example.com and all subdomains. ||example.com^$document blocks HTML document request to example.com with a blocking page. ||example.com^$document,redirect=noopframe redirects HTML document request to example.com to an empty html document. ||example.com^$document,removeparam=test removes test query parameter from HTML document request to example.com. ||example.com^$document,replace=/test1/test2/ replaces test1 with test2 in HTML document request to example.com. note You may use a shorter name (alias) instead of using the full modifier name: $doc. $font​ The rule corresponds to requests for fonts, e.g. .woff filename extension. $image​ The rule corresponds to images requests. $media​ The rule corresponds to requests for media files — music and video, e.g. .mp4 files. $object​ The rule corresponds to browser plugins resources, e.g. Java or Flash. $other​ The rule applies to requests for which the type has not been determined or does not match the types listed above. $ping​ The rule corresponds to requests caused by either navigator.sendBeacon() or the ping attribute on links. Compatibility AdGuard for Windows, Mac, and Android often cannot accurately detect navigator.sendBeacon(). Using $ping is not recommended in the filter lists that are supposed to be used by CoreLibs-based AdGuard products. Rules with $ping modifier are not supported by AdGuard for Safari and iOS. $script​ The rule corresponds to script requests, e.g. javascript, vbscript. $stylesheet​ The rule corresponds to CSS files requests. note You may use a shorter name (alias) instead of using the full modifier name: $css. $subdocument​ The rule corresponds to requests for built-in pages — HTML tags frame and iframe. Examples ||example.com^$subdocument blocks built-in page requests (frame and iframe) to example.com and all its subdomains anywhere.||example.com^$subdocument,domain=domain.com blocks built-in page requests (frame и iframe) to example.com (and its subdomains) from domain.com and all its subdomains. note You may use a shorter name (alias) instead of using the full modifier name: $frame. Compatibility In AdGuard for Windows, Mac, and Android subdocuments are being detected by the Sec-Fetch-Dest header if it is present. Otherwise, some main pages may be treated as subdocuments. Rules with $subdocument modifier are not supported by AdGuard Content Blocker. $websocket​ The rule applies only to WebSocket connections. Compatibility $websocket modifier is supported in all AdGuard products except AdGuard Content Blocker. As for AdGuard for Safari and AdGuard for iOS, it's supported on devices with macOS Monterey (version 12) and iOS 16 or higher. $xmlhttprequest​ The rule applies only to ajax requests (requests sent via javascript object XMLHttpRequest). note You may use a shorter name (alias) instead of using the full modifier name: $xhr. Compatibility AdGuard for Windows, Mac, Android when filtering older browsers cannot accurately detect this type and sometimes detects it as $other or $script. They can only reliably detect this content type when filtering modern browsers that support Fetch metadata request headers. $object-subrequest (removed)​ Removal notice $object-subrequest modifier is removed and is no longer supported. Rules with it are considered as invalid. The rule corresponds to requests by browser plugins (it is usually Flash). $webrtc (removed)​ Removal notice This modifier is removed and is no longer supported. Rules with it are considered as invalid. If you need to suppress WebRTC, consider using the nowebrtc scriptlet. The rule applies only to WebRTC connections. Examples ||example.com^$webrtc,domain=example.org blocks webRTC connections to example.com from example.org.@@*$webrtc,domain=example.org disables the RTC wrapper for example.org. "},{"title":"Exception rules modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#exception-modifiers","content":"Exception rules disable the other basic rules for the addresses to which they correspond. They begin with a @@ mark. All the basic modifiers listed above can be applied to them and they also have a few special modifiers. Visual representation We recommend to get acquainted with the Adblock Plus filter cheatsheet, for better understanding of how exception rules should be made. Modifier \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tiOS용 AdGuard\tSafari용 AdGuard\tAdGuard 콘텐츠 차단기$content\t✅\t❌\t✅\t❌\t❌\t❌ $elemhide\t✅\t✅\t✅\t✅\t✅\t✅ $extension\t✅\t❌\t❌\t❌\t❌\t❌ $jsinject\t✅\t✅\t✅\t✅\t✅\t❌ $stealth\t✅\t✅\t✅\t❌\t❌\t❌ $urlblock\t✅\t✅\t✅\t✅ *\t✅ *\t❌ $genericblock\t✅\t✅\t✅\t✅ *\t✅ *\t❌ $generichide\t✅\t✅\t✅\t✅\t✅\t✅ $specifichide\t✅\t✅\t✅\t❌\t❌\t❌ note ✅ — fully supported✅ * — supported, but reliability may vary or limitations may occur; check the modifier description for more details❌ — not supported $content​ Disables HTML filtering, $hls, $replace, and $jsonprune rules on the pages that match the rule. Examples @@||example.com^$content disables all content modifying rules on pages at example.com and all its subdomains. $elemhide​ Disables any cosmetic rules on the pages matching the rule. Examples @@||example.com^$elemhide disables all cosmetic rules on pages at example.com and all subdomains. note You may use a shorter name (alias) instead of using the full modifier name: $ehide. $extension​ Disables specific userscripts or all userscripts for a given domain. Syntax $extension[=&quot;userscript_name1&quot;[|&quot;userscript_name2&quot;[|&quot;userscript_name3&quot;[...]]]]  userscript_name(i) stands for a specific userscript name to be disabled by the modifier. The modifier can contain any number of userscript names or none. In the latter case the modifier disables all the userscripts. Userscript names usually contain spaces or other special characters, which is why you should enclose the name in quotes. Both single (') and double (&quot;) ASCII quotes are supported. Multiple userscript names should be separated with a pipe (|). However, if a userscript name is a single word without any special characters, it can be used without quotes. You can also exclude a userscript by adding a ~ character before it. In this case, the userscript will not be disabled by the modifier. $extension=~&quot;userscript name&quot;  note When excluding a userscript, you must place ~ outside the quotes. If a userscript's name includes quotes (&quot;), commas (,), or pipes (|), they must be escaped with a backslash (\\). $extension=&quot;userscript name\\, with \\&quot;quote\\&quot;&quot;  Examples @@||example.com^$extension=&quot;AdGuard Assistant&quot; disables the AdGuard Assistant userscript on example.com website.@@||example.com^$extension=MyUserscript disables the MyUserscript userscript on example.com website.@@||example.com^$extension='AdGuard Assistant'|'Popup Blocker' disables both AdGuard Assistant and Popup Blocker userscripts on example.com website.@@||example.com^$extension=~&quot;AdGuard Assistant&quot; disables all user scripts on example.com website, except AdGuard Assistant.@@||example.com^$extension=~&quot;AdGuard Assistant&quot;|~&quot;Popup Blocker&quot; disables all user scripts on example.com website, except AdGuard Assistant and Popup Blocker.@@||example.com^$extension no userscript will work on webpages on example.com.@@||example.com^$extension=&quot;AdGuard \\&quot;Assistant\\&quot;&quot; disables the AdGuard &quot;Assistant&quot; userscript on example.com website. Compatibility Only AdGuard for Windows, Mac, Android are technically capable of using rules with $extension modifier.Rules with $extension modifier with specific userscript name are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.13 or later. $jsinject​ Forbids adding of javascript code to the page. You can read about scriptlets and javascript rules further. Examples @@||example.com^$jsinject disables javascript on pages at example.com and all subdomains. $stealth​ Disables the Stealth Mode module for all corresponding pages and requests. Syntax $stealth [= opt1 [| opt2 [| opt3 [...]]]]  opt(i) stand for certain Stealth Mode options disabled by the modifier. The modifier can contain any number of options (see below) or none. In the latter case the modifier disables all the Stealth Mode features. The list of the available modifier options: searchqueries disables Hide your search queries optiondonottrack disables Ask websites not to track you option3p-cookie disables Self-destructing third-party cookies option1p-cookie disables Self-destructing first-party cookies option3p-cache disables Disable cache for third-party requests option3p-auth disables Block third-party Authorization header optionwebrtc disables Block WebRTC optionpush disables Block Push API optionlocation disables Block Location API optionflash disables Block Flash optionjava disables Block Java optionreferrer disables Hide Referer from third parties optionuseragent disables Hide your User-Agent optionip disables Hide your IP address optionxclientdata disables Remove X-Client-Data header from HTTP requests optiondpi disables Protect from DPI option Examples @@||example.com^$stealth disables Stealth Mode for example.com (and subdomains) requests, except for blocking cookies and hiding tracking parameters (see below).@@||domain.com^$script,stealth,domain=example.com disables Stealth Mode only for script requests to domain.com (and its subdomains) on example.com and all its subdomains.@@||example.com^$stealth=3p-cookie|dpi disables blocking third-party cookies and DPI fooling measures for example.com. note Blocking cookies and removing tracking parameters is achieved by using rules with the $cookie, $urltransform and $removeparam modifiers. Exception rules that contain only the $stealth modifier will not do these things. If you want to completely disable all Stealth mode features for a given domain, you must include all three modifiers: @@||example.org^$stealth,removeparam,cookie. Restrictions Modifier options must be lowercase, i.e. $stealth=DPI will be rejected.Modifier options cannot be negated, i.e. $stealth=~3p-cookie will be rejected. Compatibility Stealth Mode is available in AdGuard for Windows, Mac, and Android, and AdGuard Browser Extension. All other products will ignore the rules with $stealth modifier.Rules with $stealth modifier with specific options are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.10 or later. $urlblock​ Disables blocking of all requests sent from the pages matching the rule and disables all $cookie rules. Examples @@||example.com^$urlblock — any requests sent from the pages at example.com and all subdomains are not going to be blocked. Compatibility In AdGuard for iOS and AdGuard for Safari, rules with $urlblock work as $document exclusion — unblock everything. Rules with $urlblock modifier are not supported by AdGuard Content Blocker. Generic rules​ Before we can proceed to the next modifiers, we have to make a definition of generic rules. The rule is generic if it is not limited to specific domains. Wildcard character * is supported as well. For example, these rules are generic: ###banner *###banner #@#.adsblock *#@#.adsblock ~domain.com###banner ||domain.com^ ||domain.com^$domain=~example.com  And these are not: domain.com###banner ||domain.com^$domain=example.com  $genericblock​ Disables generic basic rules on pages that correspond to exception rule. Examples @@||example.com^$genericblock disables generic basic rules on any pages at example.com and all subdomains. Compatibility In AdGuard for iOS and AdGuard for Safari, rules with $genericblock work as $document exclusion — unblock everything. Rules with $genericblock modifier are not supported by AdGuard Content Blocker. $generichide​ Disables all generic cosmetic rules on pages that correspond to the exception rule. Examples @@||example.com^$generichide disables generic cosmetic rules on any pages at example.com and its subdomains. note You may use a shorter name (alias) instead of using the full modifier name: $ghide. specifichide​ Disables all specific element hiding and CSS rules, but not general ones. Has an opposite effect to $generichide. Examples @@||example.org^$specifichide disables example.org##.banner but not ##.banner. note You may use a shorter name (alias) instead of using the full modifier name: $shide. note All cosmetic rules — not just specific ones — can be disabled by $elemhide modifier. Compatibility Rules with $specifichide modifier are not supported by AdGuard for iOS, AdGuard for Safari, and AdGuard Content Blocker. "},{"title":"Advanced capabilities​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#advanced-modifiers","content":"These modifiers are able to completely change the behavior of basic rules. Modifier \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tiOS용 AdGuard\tSafari용 AdGuard\tAdGuard 콘텐츠 차단기$all\t✅\t✅\t✅\t✅\t✅\t❌ $badfilter\t✅\t✅\t✅\t✅\t✅\t❌ $cookie\t✅\t✅\t✅\t❌\t❌\t❌ $csp\t✅\t✅\t✅\t❌\t❌\t❌ $hls\t✅\t❌\t❌\t❌\t❌\t❌ $inline-font\t✅\t✅\t✅\t❌\t❌\t❌ $inline-script\t✅\t✅\t✅\t❌\t❌\t❌ $jsonprune\t✅\t❌\t❌\t❌\t❌\t❌ $xmlprune\t✅\t❌\t❌\t❌\t❌\t❌ $network\t✅\t❌\t❌\t❌\t❌\t❌ $permissions\t✅\t⏳\t⏳\t❌\t❌\t❌ $redirect\t✅\t✅\t✅\t❌\t❌\t❌ $redirect-rule\t✅\t✅\t✅\t❌\t❌\t❌ $referrerpolicy\t✅\t❌\t❌\t❌\t❌\t❌ $removeheader\t✅\t✅\t✅\t❌\t❌\t❌ $removeparam\t✅\t✅\t✅\t❌\t❌\t❌ $replace\t✅\t❌\t✅\t❌\t❌\t❌ $urltransform\t✅\t❌\t❌\t❌\t❌\t❌ noop\t✅\t✅\t✅\t✅\t✅\t❌ $empty 👎\t✅\t✅\t✅\t❌\t❌\t❌ $mp4 👎\t✅\t✅\t✅\t❌\t❌\t❌ note ✅ — fully supported✅ * — supported, but reliability may vary or limitations may occur; check the modifier description for more details⏳ — feature that has been implemented or is planned to be implemented but is not yet available in any product❌ — not supported👎 — deprecated; still supported but will be removed in the future $all​ $all modifier is made of all content-types modifiers and $popup. E.g. rule ||example.org^$all is converting into rule: ||example.org^$document,subdocument,font,image,media,object,other,ping,script,stylesheet,websocket,xmlhttprequest,popup  This modifier cannot be used as an exception with the @@ mark. Compatibility Rules with $all modifier are not supported by AdGuard Content Blocker. $badfilter​ The rules with the $badfilter modifier disable other basic rules to which they refer. It means that the text of the disabled rule should match the text of the $badfilter rule (without the $badfilter modifier). Examples ||example.com$badfilter disables ||example.com||example.com$image,badfilter disables ||example.com$image@@||example.com$badfilter disables @@||example.com||example.com$domain=domain.com,badfilter disables ||example.com$domain=domain.com Rules with $badfilter modifier can disable other basic rules for specific domains if they fulfill the following conditions: The rule has a $domain modifierThe rule does not have a negated domain ~ in $domain modifier value In that case, the $badfilter rule will disable the corresponding rule for domains specified in both the $badfilter and basic rules. Please note that wildcard-TLD logic works here as well. Examples /some$domain=example.com|example.org|example.io is disabled for example.com by /some$domain=example.com,badfilter/some$domain=example.com|example.org|example.io is disabled for example.com and example.org by /some$domain=example.com|example.org,badfilter/some$domain=example.com|example.org and /some$domain=example.io are disabled completely by /some$domain=example.com|example.org|example.io,badfilter/some$domain=example.com|example.org|example.io is disabled completely by /some$domain=example.*,badfilter/some$domain=example.* is disabled for example.com and example.org by /some$domain=example.com|example.org,badfilter/some$domain=example.com|example.org|example.io is NOT disabled for example.com by /some$domain=example.com|~example.org,badfilter because the value of $domain modifier contains a negated domain Compatibility Rules with $badfilter modifier are not supported by AdGuard Content Blocker. $cookie​ The $cookie modifier completely changes rule behavior. Instead of blocking a request, this modifier makes AdGuard suppress or modify the Cookie and Set-Cookie headers. Multiple rules matching a single request In case if multiple $cookie rules match a single request, we will apply each of them one by one. Syntax $cookie [= name[; maxAge = seconds [; sameSite = strategy ]]]  where: name — optional, string or regular expression to match cookie name.seconds — number of seconds for current time to offset the expiration date of cookie.strategy — string for Same-Site strategy to make cookie use. For example, ||example.org^$cookie=NAME;maxAge=3600;sameSite=lax  every time AdGuard encounters a cookie called NAME in a request to example.org, it will do the following: Set its expiration date to current time plus 3600 secondsMakes the cookie use Same-Site &quot;lax&quot; strategy. Escaping special characters If regular expression name is used for matching, two characters must be escaped: comma , and dollar sign $. Use backslash \\ escape each of them. For example, escaped comma looks like this: \\,. Examples ||example.org^$cookie blocks all cookies set by example.org; this is an equivalent to setting maxAge=0$cookie=__cfduid blocks CloudFlare cookie everywhere$cookie=/__utm[a-z]/ blocks Google Analytics cookies everywhere||facebook.com^$third-party,cookie=c_user prevents Facebook from tracking you even if you are logged in There are two methods to deactivate $cookie rules: the primary method involves using an exception marked with @@ — @@||example.org^$cookie. The alternative method employs a $urlblock exception (also included under the $document exception alias — $elemhide,jsinject,content,urlblock,extension). Here's how it works: @@||example.org^$cookie unblocks all cookies set by example.org@@||example.org^$urlblock unblocks all cookies set by example.org and disables blocking of all requests sent from example.org@@||example.org^$cookie=concept unblocks a single cookie named concept@@||example.org^$cookie=/^_ga_/ unblocks every cookie that matches the regular expression Restrictions $cookie rules support three types of modifiers: $domain, $~domain, $important, $third-party, and $~third-party. Compatibility Rules with $cookie modifier are not supported by AdGuard Content Blocker, AdGuard for iOS, and AdGuard for Safari. $csp​ This modifier completely changes the rule behavior. If it is applied to a rule, the rule will not block the matching request. Response headers will be modified instead. :::정보 In order to use this type of rules, it is required to have the basic understanding of the Content Security Policy security layer. ::: For the requests matching a $csp rule, we will strengthen response security policy by enhancing the content security policy, similar to the content security policy of the $csp modifier contents. $csp rules are applied independently from any other rule type. Only document-level exceptions can influence it (see the examples section), but no other basic rules. Multiple rules matching a single request In case if multiple $csp rules match a single request, we will apply each of them. Syntax $csp value syntax is similar to the Content Security Policy header syntax. $csp value can be empty in the case of exception rules. See examples section below. Examples ||example.org^$csp=frame-src 'none' blocks all frames on example.org and its subdomains.@@||example.org/page/*$csp=frame-src 'none' disables all rules with the $csp modifier exactly matching frame-src 'none' on all the pages matching the rule pattern. For instance, the rule above.@@||example.org/page/*$csp disables all the $csp rules on all the pages matching the rule pattern.||example.org^$csp=script-src 'self' 'unsafe-eval' http: https: disables inline scripts on all the pages matching the rule pattern.@@||example.org^$document or @@||example.org^$urlblock disables all the $csp rules on all the pages matching the rule pattern. Restrictions There are a few characters forbidden in the $csp value: ,, $.$csp rules support limited list of modifiers: $domain, $important, $subdocument.Rules with report-* directives are considered invalid. Compatibility Rules with $csp modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and AdGuard for Safari. $hls​ $hls rules modify the response of a matching request. They are intended as a convenient way to remove segments from HLS playlists (RFC 8216). note The word &quot;segment&quot; in this document means either a &quot;Media Segment&quot; or a &quot;playlist&quot; as part of a &quot;Master Playlist&quot;: $hls rules do not distinguish between a &quot;Master Playlist&quot; and a &quot;Media Playlist&quot;. Syntax ||example.org^$hls=urlpattern removes segments whose URL matches the URL pattern urlpattern. The pattern works just like the one in basic URL rules, however, the characters /, $ and , must be escaped with \\ inside urlpattern.||example.org^$hls=/regexp/options removes segments where the URL or one of the tags (for certain options, if present) is matched by the regular expression regexp. Available options are: t — instead of testing the segment's URL, test each of the segment's tags against the regular expression. A segment with a matching tag is removed;i — make the regular expression case-insensitive. The characters /, $ and , must be escaped with \\ inside regexp. Exceptions Basic URL exceptions shall not disable rules with $hls modifier. They can be disabled as described below: @@||example.org^$hls disables all $hls rules for responses from URLs matching ||example.org^.@@||example.org^$hls=text disables all $hls rules with the value of the $hls modifier equal to text for responses from URLs matching ||example.org^. tip $hls rules can also be disabled by $document, $content and $urlblock exception rules. note When multiple $hls rules match the same request, their effect is cumulative. Examples ||example.org^$hls=\\/videoplayback^?*&amp;source=dclk_video_ads removes all segments with the matching URL.||example.org^$hls=/\\/videoplayback\\/?\\?.*\\&amp;source=dclk_video_ads/i achieves more or less the same with a regular expression instead of a URL pattern.||example.org^$hls=/#UPLYNK-SEGMENT:.*\\,ad/t removes all segments which have the matching tag. Anatomy of an HLS playlist A quick summary of the specification: An HLS playlist is a collection of text linesA line may be empty, a comment (starts with #), a tag (also starts with #, can only be recognized by name) or a URLA URL line is called a &quot;segment&quot;Tags may apply to a single segment, i.e. the first URL line after the tag, to all segments following the tag and until the tag with the same name, or to the whole playlist Some points specific to the operation of $hls rules: When a segment is removed, all of the tags that apply only to that segment are also removedWhen there is a tag that applies to multiple segments, and all of those segments are removed, the tag is also removedSince there is no way to recognize different kinds of tags by syntax, we recognize all of the tags specified by the RFC, plus some non-standard tags that we have seen in the field. Any lines starting with # and not recognized as a tag are passed through without modification, and are not matched against the rulesTags will not be matched if they apply to the entire playlist, and $hls rrules cannot be used to remove them, as these rule types are intended for segment removals. If you know what you are doing, you can use $replace rules to remove or rewrite just a single tag from the playlist An example of a transformation done by the rules: Original response #EXTM3U #EXT-X-TARGETDURATION:10 #EXTINF,5 preroll.ts #UPLYNK-SEGMENT:abc123,ad #UPLYNK-KEY:aabb1122 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #UPLYNK-SEGMENT:abc123,segment #UPLYNK-KEY:ccdd2233 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #EXT-X-ENDLIST  Applied rules ||example.org^$hls=preroll ||example.org^$hls=/#UPLYNK-SEGMENT:.*\\,ad/t  Modified response #EXTM3U #EXT-X-TARGETDURATION:10 #UPLYNK-SEGMENT:abc123,segment #UPLYNK-KEY:ccdd2233 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #EXT-X-ENDLIST  Restrictions $hls rules are only allowed in trusted filters.$hls rules are compatible with the modifiers $domain, $third-party, $app, $important, $match-case, and $xmlhttprequest only.$hls rules only apply to HLS playlists, which are UTF-8 encoded text starting with the line #EXTM3U. Any other response will not be modified by these rules.$hls rules do not apply if the size of the original response is more than 10 MB. Compatibility Rules with the $hls modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.10 or later. $inline-script​ The $inline-script modifier is designed to block inline JavaScript embedded into the web page, using Content Security Policy (CSP). It improves security and privacy by preventing application of inline ads or potentially malicious scripts. The rule ||example.org^$inline-script is converting into the CSP-syntax rule: ||example.org^$csp=script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:  $inline-font​ The $inline-font modifier is designed to block inline fonts embedded into the web page, using Content Security Policy (CSP). It improves security and privacy by preventing application of inline fonts that could be used for data collection and fingerprinting. The rule ||example.org^$inline-font is converting into the CSP-syntax rule: ||example.org^$csp=font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:  $jsonprune​ $jsonprune rules modify the response to a matching request by removing JSON items that match a modified JSONPath expression. They do not modify responses which are not valid JSON documents. In AdGuard for Windows, Mac, and Android with CoreLibs v1.11 or later, $jsonprune also supports modifying JSONP (padded JSON) documents. Syntax ||example.org^$jsonprune=expression removes items that match the modified JSONPath expression expression from the response. Due to the way rule parsing works, the characters $ and , must be escaped with \\ inside expression. The modified JSONPath syntax has the following differences from the original: Script expressions are not supportedThe supported filter expressions are: ?(has &lt;key&gt;) — true if the current object has the specified key?(key-eq &lt;key&gt; &lt;value&gt;) — true if the current object has the specified key, and its value is equal to the specified value?(key-substr &lt;key&gt; &lt;value&gt;) — true if the specified value is a substring of the value of the specified key of the current object Whitespace outside of double- or single-quoted strings has no meaningBoth double- and single-quoted strings can be usedExpressions ending with .. are not supportedMultiple array slices can be specified in square brackets There are various online tools that make working with JSONPath expressions more convenient: https://www.site24x7.com/tools/jsonpath-finder-validator.html https://jsonpathfinder.com/ https://jsonpath.com/ Keep in mind, though, that all JSONPath implementations have unique features/quirks and are subtly incompatible with each other. Exceptions Basic URL exceptions shall not disable rules with the $jsonprune modifier. They can be disabled as described below: @@||example.org^$jsonprune disables all $jsonprune rules for responses from URLs matching ||example.org^.@@||example.org^$jsonprune=text disables all $jsonprune rules with the value of the $jsonprune modifier equal to text for responses from URLs matching ||example.org^. $jsonprune rules can also be disabled by $document, $content and $urlblock exception rules. note When multiple $jsonprune rules match the same request, they are sorted in lexicographical order, the first rule is applied to the original response, and each of the remaining rules is applied to the result of applying the previous one. Examples ||example.org^$jsonprune=\\$..[one\\, &quot;two three&quot;] removes all occurrences of the keys &quot;one&quot; and &quot;two three&quot; anywhere in the JSON document. Input { &quot;one&quot;: 1, &quot;two&quot;: { &quot;two three&quot;: 23, &quot;four five&quot;: 45 } }  Output { &quot;two&quot;: { &quot;four five&quot;: 45 } }  ||example.org^$jsonprune=\\$.a[?(has ad_origin)] removes all children of a that have an ad_origin key. Input { &quot;a&quot;: [ { &quot;ad_origin&quot;: &quot;https://example.org&quot;, &quot;b&quot;: 42 }, { &quot;b&quot;: 1234 } ] }  Output { &quot;a&quot;: [ { &quot;b&quot;: 1234 } ] }  ||example.org^$jsonprune=\\$.*.*[?(key-eq 'Some key' 'Some value')] removes all items that are at nesting level 3 and have a property &quot;Some key&quot; equal to &quot;Some value&quot;. Input { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: {&quot;Some key&quot;: &quot;Some value&quot;}, &quot;d&quot;: {&quot;Some key&quot;: &quot;Other value&quot;}}}, &quot;e&quot;: {&quot;f&quot;: [{&quot;Some key&quot;: &quot;Some value&quot;}, {&quot;Some key&quot;: &quot;Other value&quot;}]} }  Output { &quot;a&quot;: {&quot;b&quot;: {&quot;d&quot;: {&quot;Some key&quot;: &quot;Other value&quot;}}}, &quot;e&quot;: {&quot;f&quot;: [{&quot;Some key&quot;: &quot;Other value&quot;}]} }  Nested JSONPath expressions In AdGuard for Windows, Mac and Android with CoreLibs v1.11 or later, JSONPath expressions may be used as keys in filter expressions. ||example.org^$jsonprune=\\$.elems[?(has &quot;\\$.a.b.c&quot;)] removes all children of elems which have a property selectable by the JSONPath expression $.a.b.c. Input { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}}, &quot;k&quot;: &quot;v&quot; }, { &quot;d&quot;: {&quot;e&quot;: {&quot;f&quot;: 123}}, &quot;k1&quot;: &quot;v1&quot; } ] }  Output { &quot;elems&quot;: [ { &quot;d&quot;: {&quot;e&quot;: {&quot;f&quot;: 123}}, &quot;k1&quot;: &quot;v1&quot; } ] }  ||example.org^$jsonprune=\\$.elems[?(key-eq &quot;\\$.a.b.c&quot; &quot;abc&quot;)] removes all children of elems which have a property selectable by the JSONPath expression $.a.b.c with a value equal to &quot;abc&quot;. Input { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}}, }, { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: &quot;abc&quot;}} } ] }  Output { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}} } ] }  Restrictions $jsonprune rules are only compatible with these modifiers: $domain, $third-party, $app, $important, $match-case, and $xmlhttprequest.$jsonprune rules do not apply if the size of the original response is greater than 10 MB. Compatibility Rules with the $jsonprune modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.10 or later. $xmlprune​ $xmlprune rules modify the response to a matching request by removing XML items that match an XPath 1.0 expression. The expression must return a node-set. $xmlprune rules do not modify responses which are not well-formed XML documents. Syntax ||example.org^$xmlprune=expression removes items that match the XPath expression expression from the response. Due to the way rule parsing works, the characters $ and , must be escaped with \\ inside expression. Exceptions Basic URL exceptions shall not disable rules with the $xmlprune modifier. They can be disabled as described below: @@||example.org^$xmlprune disables all $xmlprune rules for responses from URLs matching ||example.org^.@@||example.org^$xmlprune=text disables all $xmlprune rules with the value of the $xmlprune modifier equal to text for responses from URLs matching ||example.org^. $xmlprune rules can also be disabled by $document, $content and $urlblock exception rules. note When multiple $xmlprune rules match the same request, they are applied in lexicographical order. Examples ||example.org^$xmlprune=/bookstore/book[position() mod 2 = 1] removes odd-numbered books from the bookstore. Input &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;bookstore&gt; &lt;book category=&quot;cooking&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Everyday Italian&lt;/title&gt; &lt;author&gt;Giada De Laurentiis&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;30.00&lt;/price&gt; &lt;/book&gt; &lt;book category=&quot;children&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Harry Potter&lt;/title&gt; &lt;author&gt;J K. Rowling&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;29.99&lt;/price&gt; &lt;/book&gt; &lt;book category=&quot;web&quot;&gt; &lt;title lang=&quot;en&quot;&gt;XQuery Kick Start&lt;/title&gt; &lt;author&gt;James McGovern&lt;/author&gt; &lt;author&gt;Per Bothner&lt;/author&gt; &lt;author&gt;Kurt Cagle&lt;/author&gt; &lt;author&gt;James Linn&lt;/author&gt; &lt;author&gt;Vaidyanathan Nagarajan&lt;/author&gt; &lt;year&gt;2003&lt;/year&gt; &lt;price&gt;49.99&lt;/price&gt; &lt;/book&gt; &lt;book category=&quot;web&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Learning XML&lt;/title&gt; &lt;author&gt;Erik T. Ray&lt;/author&gt; &lt;year&gt;2003&lt;/year&gt; &lt;price&gt;39.95&lt;/price&gt; &lt;/book&gt; &lt;/bookstore&gt;  Output &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;bookstore&gt; &lt;book category=&quot;children&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Harry Potter&lt;/title&gt; &lt;author&gt;J K. Rowling&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;29.99&lt;/price&gt; &lt;/book&gt; &lt;book category=&quot;web&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Learning XML&lt;/title&gt; &lt;author&gt;Erik T. Ray&lt;/author&gt; &lt;year&gt;2003&lt;/year&gt; &lt;price&gt;39.95&lt;/price&gt; &lt;/book&gt; &lt;/bookstore&gt;  ||example.org^$xmlprune=/bookstore/book[year = 2003] removes books from the year 2003 from the bookstore. Input &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;bookstore&gt; &lt;book category=&quot;cooking&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Everyday Italian&lt;/title&gt; &lt;author&gt;Giada De Laurentiis&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;30.00&lt;/price&gt; &lt;/book&gt; &lt;book category=&quot;children&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Harry Potter&lt;/title&gt; &lt;author&gt;J K. Rowling&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;29.99&lt;/price&gt; &lt;/book&gt; &lt;book category=&quot;web&quot;&gt; &lt;title lang=&quot;en&quot;&gt;XQuery Kick Start&lt;/title&gt; &lt;author&gt;James McGovern&lt;/author&gt; &lt;author&gt;Per Bothner&lt;/author&gt; &lt;author&gt;Kurt Cagle&lt;/author&gt; &lt;author&gt;James Linn&lt;/author&gt; &lt;author&gt;Vaidyanathan Nagarajan&lt;/author&gt; &lt;year&gt;2003&lt;/year&gt; &lt;price&gt;49.99&lt;/price&gt; &lt;/book&gt; &lt;book category=&quot;web&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Learning XML&lt;/title&gt; &lt;author&gt;Erik T. Ray&lt;/author&gt; &lt;year&gt;2003&lt;/year&gt; &lt;price&gt;39.95&lt;/price&gt; &lt;/book&gt; &lt;/bookstore&gt;  Output &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;bookstore&gt; &lt;book category=&quot;cooking&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Everyday Italian&lt;/title&gt; &lt;author&gt;Giada De Laurentiis&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;30.00&lt;/price&gt; &lt;/book&gt; &lt;book category=&quot;children&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Harry Potter&lt;/title&gt; &lt;author&gt;J K. Rowling&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;29.99&lt;/price&gt; &lt;/book&gt; &lt;/bookstore&gt;  ||example.org^$xmlprune=//*/@* removes all attributes from all elements. Input &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;bookstore location=&quot;cy&quot;&gt; &lt;book category=&quot;cooking&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Everyday Italian&lt;/title&gt; &lt;author&gt;Giada De Laurentiis&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;30.00&lt;/price&gt; &lt;/book&gt; &lt;/bookstore&gt;  Output &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;bookstore&gt; &lt;book&gt; &lt;title&gt;Everyday Italian&lt;/title&gt; &lt;author&gt;Giada De Laurentiis&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;30.00&lt;/price&gt; &lt;/book&gt; &lt;/bookstore&gt;  Restrictions $xmlprune rules are only compatible with these modifiers: $domain, $third-party, $app, $important, $match-case, and $xmlhttprequest.$xmlprune rules do not apply if the size of the original response is greater than 10 MB. Compatibility Rules with the $xmlprune modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.15 or later. $network​ This is basically a Firewall-like rule allowing to fully block or unblock access to a specified remote address. $network rules match IP addresses only! You cannot use them to block or unblock access to a domain.To match an IPv6 address, you have to use the collapsed syntax, e.g. use [2001:4860:4860::8888]$network instead of [2001:4860:4860:0:0:0:0:8888]$network.An allowlist $network rule makes AdGuard bypass data to the matching endpoint, hence there will be no further filtering at all.If the IP part starts and ends with / character, it is treated as a regular expression. We recommend to get acquainted with this article for better understanding of regular expressions. Restrictions The $network modifier can only be used in rules together with the $app and $important modifiers, and not with any other modifiers. Examples 174.129.166.49:3478^$network blocks access to 174.129.166.49:3478 (but not to 174.129.166.49:34788).[2001:4860:4860::8888]:443^$network blocks access to [2001:4860:4860::8888]:443.174.129.166.49$network blocks access to 174.129.166.49:*.@@174.129.166.49$network makes AdGuard bypass data to the endpoint. No other rules will be applied./.+:3[0-9]{4}/$network blocks access to any port from 30000 to 39999./8.8.8.(:?8|4)/$network blocks access to both 8.8.8.8 and 8.8.8.4. Compatibility Only AdGuard for Windows, Mac, and Android are technically capable of using rules with $network modifier. $permissions​ This modifier completely changes the rule behavior. If it is applied to a rule, the rule will not block the matching request. Response headers will be modified instead. :::정보 In order to use this type of rules, it is required to have a basic understanding of the Permissions Policy security layer. ::: For the requests matching a $permissions rule, AdGuard strengthens response's permissions policy by adding an additional permission policy equal to the $permissions modifier contents. $permissions rules are applied independently from any other rule type. Only document-level exceptions can influence it (see the examples section), but no other basic rules. Syntax $permissions value syntax is similar to the Permissions-Policy header syntax with one exception: comma that separates several features MUST be escaped — see examples below. The list of the available directives is available here. $permissions value can be empty in the case of exception rules — see examples below. Examples ||example.org^$permissions=autoplay=() disallows autoplay media requested through the HTMLMediaElement interface across example.org.@@||example.org/page/*$permissions=autoplay=() disables all rules with the $permissions modifier exactly matching autoplay=() on all the pages matching the rule pattern. For instance, the rule above. It is important to note that the exception rule only takes effect in the case of an exact value match. For example, if you want to disable the rule $permissions=a=()\\,b=(), you need exception rule @@$permissions=a=()\\,b=(), and not @@$permissions=b=()\\,a=(), nor @@$permissions=b=() because b=()\\,a=() or b=() does not match with a=()\\,b=().@@||example.org/page/*$permissions disables all the $permissions rules on all the pages matching the rule pattern.$domain=example.org|example.com,permissions=storage-access=()\\, camera=() disallows using the Storage Access API to request access to unpartitioned cookies and using video input devices across example.org and example.com.For better compatibility, we also support pipe-separated values for $permissions modifier: $permissions=storage-access=()|camera=().@@||example.org^$document or @@||example.org^$urlblock disables all the $permission rules on all the pages matching the rule pattern. note $permissions rules only take effect for main frame and sub frame requests. This means they are applied when a page is loaded or when an iframe is loaded. note If there are multiple $permissions rules that match the same request, multiple Permissions-Policy headers will be added to the response for each rule with their $permissions value. So if you have two rules: ||example.org^$permissions=autoplay=() and ||example.org^$permissions=geolocation=()\\,camera=() that match the same request, the response will contain two Permissions-Policy headers: autoplay=() and geolocation=()\\,camera=(). Limitations Firefox ignores the Permissions-Policy header. For more information, see this issue. Restrictions Characters forbidden in the $permissions value: $$permissions is compatible with three types of modifiers: $domain, $important, and $subdocument Compatibility Rules with the $permissions modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.11 or later. $redirect​ AdGuard is able to redirect web requests to a local &quot;resource&quot;. Syntax AdGuard uses the same filtering rule syntax as uBlock Origin. Also, it is compatible with ABP $rewrite=abp-resource modifier. $redirect is a modifier for the basic filtering rules so rules with this modifier support all other basic modifiers like $domain, $third-party, $script, etc. The value of the $redirect modifier must be the name of the resource that will be used for redirection. Disabling $redirect rules​ ||example.org/script.js$script,redirect=noopjs — this rule redirects all requests to example.org/script.js to the resource named noopjs.||example.org/test.mp4$media,redirect=noopmp4-1s — this rule redirects all requests to example.org/test.mp4 to the resource named noopmp4-1s.@@||example.org^$redirect will disable all $redirect rules for URLs that match ||example.org^.@@||example.org^$redirect=nooptext will disable all rules with $redirect=nooptext for any request that matches ||example.org^. More information on redirects and their usage is available on GitHub. Priorities of $redirect rules​ $redirect rules have higher priority than regular basic blocking rules. This means that if there is a basic blocking rule, the $redirect rule will override it. Allowlist rules with @@ mark have higher priority than $redirect rules. If a basic rule with the $important modifier and the $redirect rule matches the same URL, the latter is overridden unless it's also marked as $important. In short: $important &gt; @@ &gt; $redirect &gt; basic rules. Go to rules priorities for more details. Compatibility Rules with $redirect modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and AdGuard for Safari.$redirect in uBlock Origin supports specifying priority, e.g. $redirect=noopjs:42. AdGuard does not support it and instead just discards the priority postfix. $redirect-rule​ This is basically an alias to $redirect since it has the same &quot;redirection&quot; values and the logic is almost similar. The difference is that $redirect-rule is applied only in the case when the target request is blocked by a different basic rule. Go to rules priorities for more details. Negating $redirect-rule works exactly the same way as for regular $redirect rules. Even more than that, @@||example.org^$redirect will negate both $redirect and $redirect-rule rules. Examples ||example.org/script.js ||example.org^$redirect-rule=noopjs  In this case, only requests to example.org/script.js will be &quot;redirected&quot; to noopjs. All other requests to example.org will be kept intact. Compatibility Rules with $redirect-rule modifier are not supported by AdGuard Content Blocker, AdGuard for iOS, and AdGuard for Safari. $referrerpolicy​ These rules allow overriding of a page's referrer policy. Responses to matching requests will have all of their Referrer-Policy headers replaced with a single header with the value equal to the matching rule's modifier value. If the response carries an HTML document with a &lt;meta name=&quot;referrer&quot;... tag, the content attribute of the tag will also be replaced with the modifier value. An exception rule with a modifier value disables the blocking rule with the same modifier value. An exception rule without a modifier value disables all matched referrer-policy rules. If a request matches multiple $referrerpolicy rules not disabled by exceptions, only one of them (it is not specified which one) is applied. $referrerpolicy rules without specified content-type modifiers apply to $document and $subdocument content types. Examples ||example.com^$referrerpolicy=unsafe-url overrides the referrer policy for example.com with unsafe-url.@@||example.com^$referrerpolicy=unsafe-url disables the previous rule.@@||example.com/abcd.html^$referrerpolicy disables all $referrerpolicy rules on example.com/abcd.html. Compatibility Rules with the $referrerpolicy modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.12 or later. $removeheader​ Rules with $removeheader modifier are intended to remove headers from HTTP requests and responses. The initial motivation for this rule type is to be able to get rid of the Refresh header which is often used to redirect users to an undesirable location. However, this is not the only case where this modifier can be useful. Just like $csp, $redirect, $removeparam, and $cookie, this modifier exists independently, rules with it do not depend on the regular basic rules, i.e. regular exception or blocking rules will not affect it. By default, it only affects response headers. However, you can also change it to remove headers from HTTP requests as well. Syntax Basic syntax ||example.org^$removeheader=header-name removes a response header called header-name||example.org^$removeheader=request:header-name removes a request header called header-name $removeheader is case-insensitive, but we suggest always using lower case. Negating $removeheader This type of rules works pretty much the same way it works with $csp and $redirect modifiers. Use @@ to negate $removeheader: @@||example.org^$removeheader negates all $removeheader rules for URLs that match ||example.org^.@@||example.org^$removeheader=header negates the rule with $removeheader=header for any request matching ||example.org^. $removeheader rules can also be disabled by $document and $urlblock exception rules. But basic exception rules without modifiers will not do that. For example, @@||example.com^ will not disable $removeheader=p for requests to example.com, but @@||example.com^$urlblock will. note In case of multiple $removeheader rules matching a single request, we will apply each of them one by one. Examples ||example.org^$removeheader=refresh removes Refresh header from all HTTP responses returned by example.org and its subdomains. ||example.org^$removeheader=request:x-client-data removes X-Client-Data header from all HTTP requests. Next block of rules removes Refresh and Location headers from all HTTP responses returned by example.org save for requests to example.org/path/*, for which no headers will be removed: ||example.org^$removeheader=refresh ||example.org^$removeheader=location @@||example.org/path/$removeheader  Restrictions This type of rules can be used only in trusted filters. In order to avoid compromising the security $removeheader cannot remove headers from the list below: access-control-allow-originaccess-control-allow-credentialsaccess-control-allow-headersaccess-control-allow-methodsaccess-control-expose-headersaccess-control-max-ageaccess-control-request-headersaccess-control-request-methodorigintiming-allow-originallowcross-origin-embedder-policycross-origin-opener-policycross-origin-resource-policycontent-security-policycontent-security-policy-report-onlyexpect-ctfeature-policyorigin-isolationstrict-transport-securityupgrade-insecure-requestsx-content-type-optionsx-download-optionsx-frame-optionsx-permitted-cross-domain-policiesx-powered-byx-xss-protectionpublic-key-pinspublic-key-pins-report-onlysec-websocket-keysec-websocket-extensionssec-websocket-acceptsec-websocket-protocolsec-websocket-versionp3psec-fetch-modesec-fetch-destsec-fetch-sitesec-fetch-userreferrer-policycontent-typecontent-lengthacceptaccept-encodinghostconnectiontransfer-encodingupgrade $removeheader rules are only compatible with $domain, $third-party, $app, $important, $match-case, and content type modifiers such as $script and $stylesheet. The rules which have any other modifiers are considered invalid and will be discarded. Compatibility Rules with $removeheader modifier are supported by AdGuard for Windows, Mac, and Android, and AdGuard Browser Extension for Chrome, Firefox, and Edge. $removeparam​ note $queryprune is an alias of $removeparam. Since $queryprune is deprecated, avoid using it and use $removeparam instead. Rules with $removeparam modifier are intended to strip query parameters from requests' URLs. Please note that such rules are only applied to GET, HEAD, OPTIONS, and sometimes POST requests. $removeparam rules that do not have any content type modifiers will match only requests where content type is document. Syntax Basic syntax $removeparam=param removes query parameter with the name param from URLs of any request, e.g. a request to http://example.com/page?param=1&amp;another=2 will be transformed into http://example.com/page?another=2. Compatibility Rules with $removeparam modifier are supported by AdGuard for Windows, Mac and, Android with CoreLibs v1.7 or later and AdGuard Browser Extension v3.6 or later. Regular expressions You can also use regular expressions to match query parameters and/or their values: $removeparam=/regexp/[options] — removes query parameters that matches the regexp regular expression from URLs of any request. Unlike basic syntax, it means &quot;remove query parameters normalized to a name=value string which match the regexp regular expression&quot;. [options] here is the list of regular expression options. At the moment, the only supported option is i which makes matching case-insensitive. Escaping special characters Do not forget to escape special characters like ,, / and $ in the regular expressions. Use \\ character for that purpose. For example, an escaped comma should look like this: \\,. note Regexp-type rules target both name and value of the parameter. To minimize mistakes, it is safer to start every regexp with /^ unless you specifically target parameter values. We will try to detect and ignore unescaped $ automatically using a simple rule of thumb — it is not an options delimiter if all three are true: It looks like $/There is another slash character / to the left of itThere is another unescaped dollar sign $ to the left of that slash character Remove all query parameters Specify naked $removeparam to remove all query parameters: ||example.org^$removeparam — removes all query parameters from URLs matching ||example.org^. Inversion Use ~ to apply inversion: $removeparam=~param — removes all query parameters with the name different from param.$removeparam=~/regexp/ — removes all query parameters that do not match the regexp regular expression. Negating $removeparam This sort of rules work pretty much the same way it works with $csp and $redirect modifiers. Use @@ to negate $removeparam: @@||example.org^$removeparam negates all $removeparam rules for URLs that match ||example.org^.@@||example.org^$removeparam=param negates the rule with $removeparam=param for any request matching ||example.org^.@@||example.org^$removeparam=/regexp/ negates the rule with $removeparam=/regexp/ for any request matching ||example.org^. Multiple rules matching a single request In the case when multiple $removeparam rules match a single request, each of them will be applied one by one. Examples $removeparam=/^(utm_source|utm_medium|utm_term)=/ $removeparam=/^(utm_content|utm_campaign|utm_referrer)=/ @@||example.com^$removeparam  With these rules some UTM parameters will be stripped out from any request, except that requests to example.com will not be stripped at all, e.g. http://google.com/page?utm_source=s&amp;utm_referrer=fb.com&amp;utm_content=img will be transformed to http://google.com/page, but http://example.com/page?utm_source=s&amp;utm_referrer=fb.com&amp;utm_content=img will not be affected by the blocking rule. $removeparam=utm_source removes utm_source query parameter from all requests. $removeparam=/utm_.*/ removes all utm_* query parameters from URL queries of any request, e.g. a request to http://example.com/page?utm_source=test will be transformed to http://example.com/page. $removeparam=/^utm_source=campaign$/ removes utm_source query parameter with the value equal to campaign. It does not touch other utm_source parameters. Negating one $removeparam rule and replacing it with a different rule $removeparam=/^(gclid|yclid|fbclid)=/ @@||example.com^$removeparam=/^(gclid|yclid|fbclid)=/ ||example.com^$removeparam=/^(yclid|fbclid)=/  With these rules, Google, Yandex, and Facebook Click IDs will be removed from all requests. There is one exception: Google Click ID (gclid) will not be removed from requests to example.com. Negating $removeparam for all parameters $removeparam=/^(utm_source|utm_medium|utm_term)=/ $removeparam=/^(utm_content|utm_campaign|utm_referrer)=/ @@||example.com^$removeparam  With these rules, specified UTM parameters will be removed from any request save for requests to example.org. $removeparam rules can also be disabled by $document and $urlblock exception rules. But basic exception rules without modifiers do not do that. For example, @@||example.com^ will not disable $removeparam=p for requests to example.com, but @@||example.com^$urlblock will. Restrictions Rules with $removeparam modifier can be used only in trusted filters.$removeparam rules are compatible with basic modifiers, content-type modifiers, and with $important and $app modifiers. Rules with any other modifiers are considered invalid and will be discarded. Compatibility Rules with $removeparam modifier are supported by AdGuard for Windows, Mac, and Android and AdGuard Browser Extension for Chrome, Firefox, and Edge.$removeparam syntax for regular expressions is supported by AdGuard Browser Extension v4.0 and AdGuard for Windows, Mac, and Android with CoreLibs v1.8 or later.POST request types are supported only by AdGuard for Windows, Mac, and Android with CoreLibs v1.10 or later, and AdGuard Browser Extension with TSWebExtension v0.4.6 or later. $replace​ This modifier completely changes the rule behavior. If it is applied, the rule will not block the request. The response is going to be modified instead. You will need some knowledge of regular expressions to use $replace modifier. Features $replace rules apply to any text response, but will not apply to binary (media, image, object, etc.).$replace rules do not apply if the size of the original response is more than 10 MB.$replace rules have a higher priority than other basic rules (including exception rules). So if a request corresponds to two different rules one of which has the $replace modifier, this rule will be applied.Document-level exception rules with $content or $document modifiers do disable $replace rules for requests matching them.Other document-level exception rules ($generichide, $elemhide or $jsinject modifiers) are applied alongside $replace rules. It means that you can modify the page content with a $replace rule and disable cosmetic rules there at the same time. $replace value can be empty in the case of exception rules. See examples section for further information. Multiple rules matching a single request In case if multiple $replace rules match a single request, we will apply each of them. The order is defined alphabetically. Syntax In general, $replace syntax is similar to replacement with regular expressions in Perl. replace = &quot;/&quot; regexp &quot;/&quot; replacement &quot;/&quot; modifiers  regexp — a regular expression.replacement — a string that will be used to replace the string corresponding to regexp.modifiers — a regular expression flags. For example, i — insensitive search, or s — single-line mode. In the $replace value, two characters must be escaped: comma , and dollar sign $. Use backslash \\ for it. For example, an escaped comma looks like this: \\,. Examples ||example.org^$replace=/(&lt;VAST[\\s\\S]*?&gt;)[\\s\\S]*&lt;\\/VAST&gt;/\\$1&lt;\\/VAST&gt;/i  There are three parts in this rule: regexp — (&lt;VAST(.|\\s)*?&gt;)(.|\\s)*&lt;\\/VAST&gt;;replacement — \\$1&lt;\\/VAST&gt; where $ is escaped;modifiers — i for insensitive search. You can see how this rule works here: http://regexr.com/3cesk Multiple $replace rules ||example.org^$replace=/X/Y/||example.org^$replace=/Z/Y/@@||example.org/page/*$replace=/Z/Y/ Both rule 1 and 2 will be applied to all requests sent to example.org.Rule 2 is disabled for requests matching ||example.org/page/, but rule 1 still works! Disabling $replace rules @@||example.org^$replace will disable all $replace rules matching ||example.org^.@@||example.org^$document or @@||example.org^$content will disable all $replace rules originated from pages of example.org including the page itself. Restrictions Rules with $replace modifier can be used only in trusted filters. Compatibility Rules with $replace modifier are supported by AdGuard for Windows, Mac, and Android and AdGuard Browser Extension for Firefox. Such rules do not work in extensions for other browsers because they are unable to modify content on the network level. urltransform​ The $urltransform rules allow you to modify the request URL by replacing the text matched by the regular expression. Features $urltransform rules apply to any request URL text.$urltransform rules can also modify the query part of the URL.$urltransform will not be applied if the original URL is blocked by other rules.$urltransform will be applied before $removeparam rules. The $urltransform value can be empty for exception rules. Multiple rules matching a single request If multiple $urltransform rules match a single request, we will apply each of them. The order is defined alphabetically. Syntax $urltransform syntax is similar to replacement with regular expressions in Perl. urltransform = &quot;/&quot; regexp &quot;/&quot; replacement &quot;/&quot; modifiers  regexp — a regular expression.replacement — a string that will be used to replace the string corresponding to regexp.modifiers — a regular expression flags. For example, i — insensitive search, or s — single-line mode. In the $urltransform value, two characters must be escaped: the comma , and the dollar sign $. Use the backslash character \\ for this. For example, an escaped comma looks like this: \\,. Examples ||example.org^$urltransform=/(pref\\/).*\\/(suf)/\\$1\\$2/i  There are three parts in this rule: regexp — (pref\\/).*\\/(suf);replacement — \\$1\\$2 where $ is escaped;modifiers — i for insensitive search. Multiple $urltransform rules ||example.org^$urltransform=/X/Y/||example.org^$urltransform=/Z/Y/@@||example.org/page/*$urltransform=/Z/Y/ Both rule 1 and 2 will be applied to all requests sent to example.org.Rule 2 is disabled for requests matching ||example.org/page/, but rule 1 still works! Re-matching rules after transforming the URL If the $urltransform rule is applied to a request, all the rules will be re-evaluated against the new URL. E.g., with the following rules: ||example.com^$urltransform=/firstpath/secondpath/ ||example.com/secondpath^  the request to https://example.com/firstpath will be blocked before it is sent. However, $urltransform rules will not be re-applied in this case to avoid infinite recursion, e.g., with the following rules: ||example.com/firstpath^$urltransform=/firstpath/secondpath/ ||example.com/secondpath^$urltransform=/secondpath/firstpath/  the request to https://example.com/fisrtpath will be transformed to https://example.com/secondpath and the second rule will not be applied. Disabling $urltransform rules @@||example.org^$urltransform will disable all $urltransform rules matching ||example.org^.@@||example.org^$urltransform=/Z/Y/ will disable the rule with $urltransform=/Z/Y/ for any request matching ||example.org^. $urltransform rules can also be disabled by $document and $urlblock exception rules. But basic exception rules without modifiers do not do that. For example, @@||example.com^ will not disable $urltransform=/X/Y/ for requests to example.com, but @@||example.com^$urlblock will. Restrictions Rules with the $urltransform modifier can be used only in trusted filters. Compatibility Rules with the $urltransform modifier are supported by AdGuard for Windows, AdGuard for Mac, and AdGuard for Android with CoreLibs v1.15 or later. noop​ noop modifier does nothing and can be used solely to increase rules' readability. It consists of a sequence of underscore characters (_) of any length and can appear in a rule as many times as needed. Examples ||example.com$_,removeparam=/^ss\\\\$/,_,image ||example.com$replace=/bad/good/,___,~third-party  Compatibility Rules with noop modifier are not supported by AdGuard Content Blocker. $empty (deprecated)​ Deprecation notice This modifier is deprecated in favor of the $redirect modifier. Rules with $empty are still supported and being converted into $redirect=nooptext now but the support shall be removed in the future. Usually, blocked requests look like a server error to browser. If you use $empty modifier, AdGuard will emulate a blank response from the server with200 OK status. Examples ||example.org^$empty returns an empty response to all requests to example.org and all subdomains. Compatibility Rules with $empty modifier are not supported by AdGuard Content Blocker, AdGuard for iOS, and AdGuard for Safari. $mp4 (deprecated)​ Deprecation notice This modifier is deprecated in favor of the $redirect modifier. Rules with $mp4 are still supported and being converted into $redirect=noopmp4-1s,media now but the support shall be removed in the future. As a response to blocked request AdGuard returns a short video placeholder. Examples ||example.com/videos/$mp4 blocks all video downloads from ||example.com/videos/* and changes the response to a video placeholder. Compatibility Rules with $mp4 modifier are not supported by AdGuard Content Blocker, AdGuard for iOS, and AdGuard for Safari. "},{"title":"Rule priorities​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#rule-priorities","content":"Each rule has its own priority, which is necessary when several rules match the request and the filtering engine needs to select one of them. Priority is measured by a positive integer. Collisions When two rules with the same priority match the same request, it depends on the filtering engine implementation which one will be selected. :::정보 The concept of rule priorities becomes increasingly important in light of Manifest V3 as the existing rules need to be converted to declarativeNetRequest rules. ::: Priority calculation​ To calculate priority, we've categorized modifiers into different groups. These groups are ranked based on their priority, from lowest to highest. A modifier that significantly narrows the scope of a rule adds more weight to its total priority. Conversely, if a rule applies to a broader range of requests, its priority decreases. It's worth noting that there are cases where a single-parameter modifier has a higher priority than multi-parameter ones. For instance, in the case of $domain=example.com|example.org, a rule that includes two domains has a slightly broader effective area than a rule with one specified domain, therefore its priority is lower. The base priority of any rule is 1. If the calculated priority is a floating-point number, it will be rounded up to the smallest integer greater than or equal to the calculated priority. Compatibility The concept of priority has been introduced in TSUrlFilter v2.1.0 and CoreLibs v1.13. Before that AdGuard didn't have any special priority computation algorithm and collisions handling could be different depending on AdGuard product and version.AdGuard for iOS, Safari, and AdGuard Content Blocker rely on the browsers implementation and they cannot follow the rules specified here. note Modifier aliases (1p, 3p, etc.) are not included in these categories, however, they are utilized within the engine to compute the rule priority. Basic modifiers, the presence of each adds 1 to the priority​ $app with negated applications using ~,$denyallow,$domain with negated domains using ~,$match-case,$method with negated methods using ~,$third-party,$to,restricted content-types with ~. When dealing with a negated domain, app, method, or content-type, we add 1 point for the existence of the modifier itself, regardless of the quantity of negated domains or content-types. This is because the rule's scope is already infinitely broad. Put simply, by prohibiting multiple domains, content-types, methods or apps, the scope of the rule becomes only minimally smaller. Defined content-type modifiers, defined methods, defined headers, $all, $popup, specific exceptions​ All allowed content types: $document,$font,$image,$media,$object,$other,$ping,$script,$stylesheet,$subdocument,$websocket,$xmlhttprequest; This also includes rules that implicitly add all content types: $all; Or rules that implicitly add the modifier $document: $popup; Or some specific exceptions that implicitly add $document,subdocument: $content,$elemhide,$extension,$genericblock,$generichide,$jsinject,$specifichide,$urlblock; Or allowed methods via $method. Or rules with $header. The presence of any content-type modifiers adds (50 + 50 / N), where N is the number of modifiers present, for example: ||example.com^$image,script will add 50 + 50 / 2 = 50 + 25 = 75 to the total weight of the rule. The $all also belongs to this category, because it implicitly adds all content type modifiers, e.g., $document,subdocument,image,script,media,&lt;etc&gt; + $popup. The $popup also belongs to this category, because it implicitly adds the modifier $document. Similarly, specific exceptions add $document,subdocument. If there is a $method modifier in the rule with allowed methods it adds (50 + 50 / N), where N is the number of methods allowed, for example: ||example.com^$method=GET|POST|PUT will add 50 + 50 / 3 = 50 + 16.6 = 67 to the total weight of the rule. If there is a $header modifier in the rule it adds 50. $domain or $app with allowed domains or applications​ Specified domains through $domain or specified applications through $app add 100 + 100 / N, where N is the number of modifier values for example: ||example.com^$domain=example.com|example.org|example.net will add 100 + 100 / 3 = 134.3 = 135 or ||example.com^$app=org.example.app1|org.example.app2 will add 100 + 100 / 2 = 151 or ||example.com^$domain=example.com,app=org.example.app1|org.example.app2 will add 100 + 100/1 ($domain part) and 100 + 100/2 ($app part), totaling 350. Modifier values that are regexps or tld will be interpreted as normal entries of the form example.com and counted one by one, for example: ||example.com^$domain=example.* will add 100 + 100 / 1 = 200 or ||example.com^$domain=example.*|adguard.* will add 100 + 100 / 2 = 150. $redirect rules​ $redirect,$redirect-rule. Each of which adds 10^3 to rule priority. Specific exceptions​ $content,$elemhide,$extension,$genericblock,$generichide,$jsinject,$specifichide,$urlblock; Each of which adds 10^4 to the priority. As well as exception with $document modifier: because it's an alias for $elemhide,content,jsinject,urlblock,extension. It will add 10^4 for each modifier from the top list, 10^4 * 5 in total. In addition, each of these exceptions implicitly adds the two allowed content-type modifiers $document,subdocument. Allowlist rules​ Modifier @@ adds 10^5 to rule priority. $important rules​ Modifier $important adds 10^6 to rule priority. Rules for which there is no priority weight​ Other modifiers, which are supposed to perform additional post- or pre-processing of requests, do not add anything to the rules priority. note The $replace modifier takes precedence over all blocking rules of categories 1-3, as well as exception rules from categories 3-5, except $content, because an exception with the $content modifier overrides all $replace rules. Examples​ ||example.com^ Weight of the rule without modifiers: 1. ||example.com^$match-case Rule weight: base weight + weight of the modifier from category 1: 1 + 1 = 2. ||example.org^$removeparam=p Rule weight: base weight + 0, since $removeparam is not involved in the priority calculation: 1 + 0 = 1. ||example.org^$document,redirect=nooptext Rule weight: base weight + allowed content type, category 3 + $redirect from category 6: 1 + (100 + 100 / 1) + 1000 = 1201. @@||example.org^$removeparam=p,document Rule weight: base weight + allowlist rule, category 5 + 0 because $removeparam is not involved in the priority calculation + allowed content type, category 2: 1 + 10000 + 0 + (50 + 50 / 1) = 10101. @@||example.com/ad/*$domain=example.org|example.net,important Rule weight: base weight + allowlist rule, category 5 + important rule, category 7 + allowed domains, category 3: 1 + 10000 + 1000000 + (100 + 100 / 2) = 1010152. @@||example.org^$document without additional modifiers is an alias for @@||example.com^$elemhide,content,jsinject,urlblock,extension Rule weight: base weight + specific exceptions, category 4 + two allowed content types (document and subdocument), category 2: 1 + 10000 * 4 + (50 + 50 / 2) = 40076. *$script,domain=a.com,denyallow=x.com|y.com Rule weight: base weight + allowed content type, category 2 + allowed domain, category 3 + denyallow, category 1: 1 + (50 + 50/1) + (100 + 100 / 1) + 1 = 303. ||example.com^$all — alias to ||example.com^$document,subdocument,image,script,media,etc. + $popup Rule weight: base weight + popup (category 1) + allowed content types (category 2): 1 + 1 + (50 + 50/12) = 55. "},{"title":"Non-basic rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-rules","content":"However, basic rules may not be enough to block ads. Sometimes you need to hide an element or change part of the HTML code of a web page without breaking anything. The rules described in this section are created specifically for this purpose. Categories \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tiOS용 AdGuard\tSafari용 AdGuard\tAdGuard 콘텐츠 차단기Element hiding\t✅\t✅\t✅\t✅\t✅\t✅ CSS rules\t✅\t✅\t✅\t✅\t✅\t❌ Extended CSS\t✅\t✅\t✅\t✅\t✅\t❌ HTML filtering\t✅\t❌\t✅\t❌\t❌\t❌ JavaScript\t✅\t✅\t✅\t✅\t✅\t❌ Scriptlets\t✅\t✅\t✅\t✅\t✅\t❌ note ✅ — fully supported❌ — not supported "},{"title":"Cosmetic rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-rules","content":":::정보 Work with non-basic rules requires the basic knowledge of HTML and CSS. So, if you want to learn how to make such rules, we recommend to get acquainted with this documentation. ::: "},{"title":"Element hiding rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-elemhide-rules","content":"Element hiding rules are used to hide the elements of web pages. It is similar to applying { display: none; } style to selected element. Element hiding rules may operate differently depending on the platform. Syntax​  rule = [domains] &quot;##&quot; selector domains = [domain0, domain1[, ...[, domainN]]]  selector — CSS selector, defines the elements to be hidden.domains — domain restriction for the rule. If you want to limit the rule application area to certain domains, just enter them separated with commas. For example: example.org,example.com##selector. This rule will be also applied to all subdomains of example.org and example.com. If you want the rule not to be applied to certain domains, start a domain name with ~ sign. For example: ~example.org##selector. You can use both approaches in a single rule. For example, example.org,~subdomain.example.org##domain will work for example.org and all subdomains, except subdomain.example.org. note Element hiding rules are not dependent on each other. If there is a rule example.org##selector in the filter and you add ~example.org##selector both rules will be applied independently. Examples example.com##div.textad — hides a div with the class textad at example.com and all subdomains.example.com,example.org###adblock — hides an element with attribute id equals adblock at example.com, example.org and all subdomains.~example.com##.textad — hides an element with the class textad at all domains, except example.com and its subdomains. 제한 Safari does not support both permitted and restricted domains. So the rules like example.org,~foo.example.org##.textad are invalid in AdGuard for Safari. Exceptions Exceptions can disable some rules on particular domains. They are very similar to usual exception rules, but instead of ## you have to use #@#. For example, there is a rule in filter: ##.textad  If you want to disable it for example.com, you can create an exception rule: example.com#@#.textad  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. It will completely disable matching CSS elemhide rule on ALL domains: #@#.textad  The same can be achieved by adding this rule: *#@#.textad  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. "},{"title":"CSS rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-css-rules","content":"Sometimes, simple hiding of an element is not enough to deal with advertising. For example, blocking an advertising element can just break the page layout. In this case AdGuard can use rules that are much more flexible than hiding rules. With these rules you can basically add any CSS styles to the page. Syntax  rule = [domains] &quot;#$#&quot; selector &quot;{&quot; style &quot;}&quot; domains = [domain0, domain1[, ...[, domainN]]]  selector — CSS selector, that defines the elements we want to apply the style to.domains — domain restriction for the rule. Same principles as in element hiding rules.style — CSS style, that we want to apply to selected elements. Examples example.com#$#body { background-color: #333!important; }  This rule will apply a style background-color: #333!important; to the body element at example.com and all subdomains. Exceptions Just like with element hiding, there is a type of rules that disable the selected CSS style rule for particular domains. Exception rule syntax is almost the same, you just have to change #$# to #@$#. For example, there is a rule in filter: #$#.textad { visibility: hidden; }  If you want to disable it for example.com, you can create an exception rule: example.com#@$#.textad { visibility: hidden; }  We recommend to use this kind of exceptions only if it is not possible to change the CSS rule itself. In other cases it is better to change the original rule, using domain restrictions. Restrictions Styles that lead to loading any resource are forbidden. Basically, it means that you cannot use any &lt;url&gt; type of value in the style. Compatibility CSS rules are not supported by AdGuard Content Blocker. CSS rules may operate differently depending on the platform. "},{"title":"Extended CSS selectors​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#extended-css-selectors","content":"제한Pseudo-class :has()Pseudo-class :contains()Pseudo-class :matches-css()Pseudo-class :matches-attr()Pseudo-class :matches-property()Pseudo-class :xpath()Pseudo-class :nth-ancestor()Pseudo-class :upward()Pseudo-class :remove() and pseudo-property removePseudo-class :is()Pseudo-class :not()Pseudo-class :if-not() (removed) CSS 3.0 is not always enough to block ads. To solve this problem AdGuard extends CSS capabilities by adding support for the new pseudo-elements. We have developed a separate open-source library for non-standard element selecting and applying CSS styles with extended properties. The idea of extended capabilities is an opportunity to match DOM elements with selectors based on their own representation (style, text content, etc.) or relations with other elements. There is also an opportunity to apply styles with non-standard CSS properties. Application area Extended selectors can be used in any cosmetic rule, whether they are element hiding rules or CSS rules. Compatibility Rules with extended CSS selectors are not supported by AdGuard Content Blocker. Syntax Regardless of the CSS pseudo-classes you are using in the rule, you can use special markers to force applying these rules by ExtendedCss. It is recommended to use these markers for all extended CSS cosmetic rules so that it was easier to find them. The syntax for extended CSS rules: #?# — for element hiding, #@?# — for exceptions#$?# — for CSS rules, #@$?# — for exceptions We strongly recommend using these markers any time when you use an extended CSS selector. Examples example.org#?#div:has(&gt; a[target=&quot;_blank&quot;][rel=&quot;nofollow&quot;]) — this rule blocks all div elements containing a child node that has a link with the attributes [target=&quot;_blank&quot;][rel=&quot;nofollow&quot;]. The rule applies only to example.org and its subdomains.example.com#$?#h3:contains(cookies) { display: none!important; } — this rule sets the style display: none!important to all h3 elements that contain the word cookies. The rule applies only to example.com and all its subdomains.example.net#?#.banner:matches-css(width: 360px) — this rule blocks all .banner elements with the style property width: 360px. The rule applies only to example.net and its subdomains.example.net#@?#.banner:matches-css(width: 360px) — this rule will disable the previous rule. You can apply standard CSS selectors using the ExtendedCss library by using the rule marker #?#, e.g. #?#div.banner. Learn more about how to debug extended selectors. note Some pseudo-classes do not require selector before it. Still adding the universal selector * makes an extended selector easier to read, even though it has no effect on the matching behavior. So selector #block :has(&gt; .inner) works exactly like #block *:has(&gt; .inner) but second one is more obvious. Pseudo-class names are case-insensitive, e.g. :HAS() works as :has(). Still the lower-case names are used commonly. ExtendedCss Limitations​ CSS comments and at-rules are not supported. Specific pseudo-class may have its own limitations: :has(), :xpath(), :nth-ancestor(), :upward(), :is(), :not(), and :remove(). Pseudo-class :has()​ Draft CSS 4.0 specification describes the :has() pseudo-class. Unfortunately, it is not yet supported by all popular browsers. note Rules with the :has() pseudo-class must use the native implementation of :has() if they use ## marker and if it is possible, i.e. with no other extended selectors inside. To force applying of ExtendedCss rules with :has(), use #?#/#$?# marker explicitly. Compatibility with other pseudo-classes Synonyms :-abp-has() is supported by ExtendedCss for better compatibility. Removal notice :if() is no longer supported as a synonym for :has(). Syntax [target]:has(selector)  target — optional, standard or extended CSS selector, can be skipped for checking any elementselector — required, standard or extended CSS selector The pseudo-class :has() selects the target elements that fit to the selector. Also the selector can start with a combinator. A selector list can be set in selector as well. In this case all selectors in the list are being matched for now. In the future it will be fixed for &lt;forgiving-relative-selector-list&gt; as argument. :has() limitations​ Usage of the :has() pseudo-class is restricted for some cases (2, 3): disallow :has() inside the pseudos accepting only compound selectors;disallow :has() after regular pseudo-elements. Native :has() pseudo-class does not allow :has(), :is(), :where() inside :has() argument to avoid increasing the :has() invalidation complexity (case 1). But ExtendedCss did not have such limitation earlier and filter lists already contain such rules, so we have not added this limitation to ExtendedCss and allow to use :has() inside :has() as it was possible before. To use it, just force ExtendedCss usage by setting #?#/#$?# rule marker. Native implementation does not allow any usage of :scope inside the :has() argument ([1], [2]). Still, there are some such rules in filter lists: div:has(:scope a) which we continue to support by simply converting them to div:has(&gt; a), as it used to be done previously. Examples div:has(.banner) selects all div elements which include an element with the banner class: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;span class=&quot;banner&quot;&gt;inner element&lt;/span&gt; &lt;/div&gt;  div:has(&gt; .banner) selects all div elements which include an banner class element as a direct child of div: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;p class=&quot;banner&quot;&gt;child element&lt;/p&gt; &lt;/div&gt;  div:has(+ .banner) selects all div elements preceding banner class element which immediately follows the div and both are children of the same parent: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected&lt;/div&gt; &lt;p class=&quot;banner&quot;&gt;adjacent sibling&lt;/p&gt; &lt;span&gt;Not selected&lt;/span&gt;  div:has(~ .banner) selects all div elements preceding banner class element which follows the div but not necessarily immediately and both are children of the same parent: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected&lt;/div&gt; &lt;span&gt;Not selected&lt;/span&gt; &lt;p class=&quot;banner&quot;&gt;general sibling&lt;/p&gt;  div:has(span, .banner) selects all div elements which include both span element and banner class element: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;span&gt;child span&lt;/span&gt; &lt;p class=&quot;banner&quot;&gt;child .banner&lt;/p&gt; &lt;/div&gt;  Old syntax Backward compatible syntax for :has() is supported but not recommended. Pseudo-class :contains()​ The :contains() pseudo-class principle is very simple: it allows to select the elements that contain specified text or which content matches a specified regular expression. Regexp flags are supported. note The :contains() pseudo-class uses the textContent element property for matching, not the innerHTML. Compatibility with other pseudo-classes Synonyms :-abp-contains() and :has-text() are supported for better compatibility. Syntax [target]:contains(match)  target — optional, standard or extended CSS selector, can be skipped for checking any elementmatch — required, string or regular expression for matching element textContent. Regular expression flags are supported. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div id=&quot;match&quot;&gt;Selected as IT contains &quot;banner&quot;&lt;/div&gt; &lt;div&gt;Not selected &lt;div class=&quot;banner&quot;&gt;&lt;/div&gt;&lt;/div&gt;  the element div#match can be selected by any of these extended selectors: ! plain text div:contains(banner) ! regular expression div:contains(/as .* banner/) ! regular expression with flags div:contains(/it .* banner/gi)  note Only the div with id=match is selected because the next element does not contain any text, and banner is a part of code, not a text. Old syntax Backward compatible syntax for :contains() is supported but not recommended. Pseudo-class :matches-css()​ The :matches-css() pseudo-class allows to match the element by its current style properties. The work of the pseudo-class is based on using the Window.getComputedStyle() method. Syntax [target]:matches-css([pseudo-element, ] property: pattern)  target — optional, standard or extended CSS selector, can be skipped for checking any elementpseudo-element — optional, valid standard pseudo-element, e.g. before, after, first-line, etc.property — required, a name of CSS property to check the element forpattern — required, a value pattern that is using the same simple wildcard matching as in the basic url filtering rules OR a regular expression. For this type of matching, AdGuard always does matching in a case-insensitive manner. In the case of a regular expression, the pattern looks like /regexp/. Special characters escaping and unescaping For non-regexp patterns (,),[,] must be unescaped, e.g. :matches-css(background-image:url(data:*)). For regexp patterns \\ should be escaped, e.g. :matches-css(background-image: /^url\\\\(&quot;data:image\\\\/gif;base64.+/). Examples For such DOM: &lt;!-- HTML code --&gt; &lt;style type=&quot;text/css&quot;&gt; #matched::before { content: &quot;Block me&quot; } &lt;/style&gt; &lt;div id=&quot;matched&quot;&gt;&lt;/div&gt; &lt;div id=&quot;not-matched&quot;&gt;&lt;/div&gt;  the div elements with pseudo-element ::before and with specified content property can be selected by any of these extended selectors: ! string pattern div:matches-css(before, content: block me) ! string pattern with wildcard div:matches-css(before, content: block*) ! regular expression pattern div:matches-css(before, content: /block me/)  Restrictions Regexp patterns do not support flags. Compatibility Obsolete pseudo-classes :matches-css-before() and :matches-css-after() are no longer recommended but still are supported for better compatibility. Old syntax Backward compatible syntax for :matches-css() is supported but not recommended. Pseudo-class :matches-attr()​ The :matches-attr() pseudo-class allows selecting an element by its attributes, especially if they are randomized. Syntax [target]:matches-attr(&quot;name&quot;[=&quot;value&quot;])  target — optional, standard or extended CSS selector, can be skipped for checking any elementname — required, simple string or string with wildcard or regular expression for attribute name matchingvalue — optional, simple string or string with wildcard or regular expression for attribute value matching Escaping special characters For regexp patterns &quot; and \\ should be escaped, e.g. div:matches-attr(class=/[\\\\w]{5}/). Examples div:matches-attr(&quot;ad-link&quot;) selects the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; ad-link=&quot;1random23-banner_240x400&quot;&gt;&lt;/div&gt;  div:matches-attr(&quot;data-*&quot;=&quot;adBanner&quot;) selects the element div#target2: &lt;!-- HTML code --&gt; &lt;div id=&quot;target2&quot; data-1random23=&quot;adBanner&quot;&gt;&lt;/div&gt;  div:matches-attr(*unit*=/^click$/) selects the element div#target3: &lt;!-- HTML code --&gt; &lt;div id=&quot;target3&quot; random123-unit094=&quot;click&quot;&gt;&lt;/div&gt;  *:matches-attr(&quot;/.{5,}delay$/&quot;=&quot;/^[0-9]*$/&quot;) selects the element #target4: &lt;!-- HTML code --&gt; &lt;div&gt; &lt;inner-random23 id=&quot;target4&quot; nt4f5be90delay=&quot;1000&quot;&gt;&lt;/inner-random23&gt; &lt;/div&gt;  Restrictions Regexp patterns do not support flags. Pseudo-class :matches-property()​ The :matches-property() pseudo-class allows selecting an element by matching its properties. Syntax [target]:matches-property(&quot;name&quot;[=&quot;value&quot;])  target — optional, standard or extended CSS selector, can be skipped for checking any elementname — required, simple string or string with wildcard or regular expression for element property name matchingvalue — optional, simple string or string with wildcard or regular expression for element property value matching Escaping special characters For regexp patterns &quot; and \\ must be escaped, e.g. div:matches-property(prop=/[\\\\w]{4}/). note Regexp patterns are supported in name for any property in chain, e.g. prop./^unit[\\\\d]{4}$/.type. Examples An element with such properties: divProperties = { id: 1, check: { track: true, unit_2random1: true, }, memoizedProps: { key: null, tag: 12, _owner: { effectTag: 1, src: 'ad.com', }, }, };  can be selected by any of these extended selectors: div:matches-property(check.track) div:matches-property(&quot;check./^unit_.{4,8}$/&quot;) div:matches-property(&quot;check.unit_*&quot;=true) div:matches-property(memoizedProps.key=&quot;null&quot;) div:matches-property(memoizedProps._owner.src=/ad/)  For filters maintainers To check properties of a specific element, do the following: Inspect the page element or select it in Elements tab of browser DevToolsRun console.dir($0) in Console tab Restrictions Regexp patterns do not support flags. Pseudo-class :xpath()​ The :xpath() pseudo-class allows selecting an element by evaluating an XPath expression. Syntax [target]:xpath(expression)  target- optional, standard or extended CSS selectorexpression — required, valid XPath expression :xpath() limitations​ target can be omitted so it is optional. For any other pseudo-class that would mean &quot;apply to all DOM nodes&quot;, but in case of :xpath() it just means &quot;apply to the whole document&quot;, and such applying slows elements selecting significantly. That's why rules like #?#:xpath(expression) are limited to looking inside the body tag. For example, rule #?#:xpath(//div[@data-st-area=\\'Advert\\']) is parsed as #?#body:xpath(//div[@data-st-area=\\'Advert\\']). Extended selectors with defined target as any selector — *:xpath(expression) — can still be used but it is not recommended, so target should be specified instead. Works properly only at the end of selector, except for pseudo-class :remove(). Examples :xpath(//*[@class=&quot;banner&quot;]) selects the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; class=&quot;banner&quot;&gt;&lt;/div&gt;  :xpath(//*[@class=&quot;inner&quot;]/..) selects the element div#target2: &lt;!-- HTML code --&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt;  Pseudo-class :nth-ancestor()​ The :nth-ancestor() pseudo-class allows to lookup the nth ancestor relative to the previously selected element. subject:nth-ancestor(n)  subject — required, standard or extended CSS selectorn — required, number &gt;= 1 and &lt; 256, distance to the needed ancestor from the element selected by subject Syntax subject:nth-ancestor(n)  subject — required, standard or extended CSS selectorn — required, number &gt;= 1 and &lt; 256, distance to the needed ancestor from the element selected by subject :nth-ancestor() limitations​ The :nth-ancestor() pseudo-class is not supported inside the argument of the :not() pseudo-class. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot;&gt; &lt;div class=&quot;child&quot;&gt;&lt;/div&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div&gt; &lt;div&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  .child:nth-ancestor(1) selects the element div#target1, div[class=&quot;inner&quot;]:nth-ancestor(3) selects the element div#target2. Pseudo-class :upward()​ The :upward() pseudo-class allows to lookup the ancestor relative to the previously selected element. Syntax subject:upward(ancestor)  subject — required, standard or extended CSS selectorancestor — required, specification for the ancestor of the element selected by subject, can be set as: number &gt;= 1 and &lt; 256 for distance to the needed ancestor, same as :nth-ancestor()standard CSS selector for matching closest ancestor :upward() limitations​ The :upward() pseudo-class is not supported inside the argument of the :not() pseudo-class. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; data=&quot;true&quot;&gt; &lt;div class=&quot;child&quot;&gt;&lt;/div&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div&gt; &lt;div&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  .inner:upward(div[data]) selects the element div#target1, .inner:upward(div[id]) selects the element div#target2, .child:upward(1) selects the element div#target1, .inner:upward(3) selects the element div#target2. Pseudo-class :remove() and pseudo-property remove​ Sometimes, it is necessary to remove a matching element instead of hiding it or applying custom styles. In order to do it, you can use the :remove() pseudo-class as well as the remove pseudo-property. Pseudo-class :remove() can be placed only at the end of a selector. Syntax ! pseudo-class selector:remove() ! pseudo-property selector { remove: true; }  selector — required, standard or extended CSS selector :remove() and remove limitations​ The :remove() pseudo-class is limited to work properly only at the end of selector. For applying the :remove() pseudo-class to any element, the universal selector * should be used. Otherwise such extended selector may be considered as invalid, e.g. .banner &gt; :remove() is not valid for removing any child element of banner class element, so it should look like .banner &gt; *:remove(). If the :remove() pseudo-class or the remove pseudo-property is used, all style properties are ignored except for the debug pseudo-property. Examples div.banner:remove() div:has(&gt; div[ad-attr]):remove() div:contains(advertisement) { remove: true; } div[class]:has(&gt; a &gt; img) { remove: true; }  note Rules with the remove pseudo-property must use #$?# marker: $ for CSS-style rule syntax, ? for ExtendedCss syntax. Pseudo-class :is()​ The :is() pseudo-class allows to match any element that can be selected by any of selectors passed to it. Invalid selectors are skipped and the pseudo-class deals with valid ones with no error thrown. Our implementation of the native :is() pseudo-class. Syntax [target]:is(selectors)  target — optional, standard or extended CSS selector, can be skipped for checking any elementselectors — forgiving selector list of standard or extended selectors. For extended selectors, only compound selectors are supported, not complex. :is() limitations​ Rules with the :is() pseudo-class must use the native implementation of :is() if rules use ## marker and it is possible, i.e. with no other extended selectors inside. To force applying ExtendedCss rules with :is(), use #?#/#$?# marker explicitly. If the :is() pseudo-class argument selectors is an extended selector, due to the way how the :is() pseudo-class is implemented in ExtendedCss v2.0, it is impossible to apply it to the top DOM node which is html, i.e. #?#html:is(&lt;extended-selectors&gt;) does not work. So if target is not defined or defined as the universal selector *, the extended pseudo-class applying is limited to html's children, e.g. rules #?#:is(...) and #?#*:is(...) are parsed as #?#html *:is(...). Please note that there is no such limitation for a standard selector argument, i.e. #?#html:is(.locked) works fine. Complex selectors with extended pseudo-classes are not supported as selectors argument for :is() pseudo-class, only compound ones are allowed. Check examples below for more details. Examples #container *:is(.inner, .footer) selects only the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;container&quot;&gt; &lt;div data=&quot;true&quot;&gt; &lt;div&gt; &lt;div id=&quot;target1&quot; class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  Due to limitations :is(*:not([class]) &gt; .banner)' does not work but :is(*:not([class]):has(&gt; .banner)) can be used instead of it to select the element div#target2: &lt;!-- HTML code --&gt; &lt;span class=&quot;span&quot;&gt;text&lt;/span&gt; &lt;div id=&quot;target2&quot;&gt; &lt;p class=&quot;banner&quot;&gt;inner paragraph&lt;/p&gt; &lt;/div&gt;  Pseudo-class :not()​ The :not() pseudo-class allows to select elements which are not matched by selectors passed as argument. Invalid argument selectors are not allowed and error is to be thrown. Our implementation of the :not() pseudo-class. Syntax [target]:not(selectors)  target — optional, standard or extended CSS selector, can be skipped for checking any elementselectors — list of standard or extended selectors :not() limitations​ Rules with the :not() pseudo-class must use the native implementation of :not() if rules use ## marker and it is possible, i.e. with no other extended selectors inside. To force applying ExtendedCss rules with :not(), use #?#/#$?# marker explicitly. If the :not() pseudo-class argument selectors is an extended selector, due to the way how the :not() pseudo-class is implemented in ExtendedCss v2.0, it is impossible to apply it to the top DOM node which is html, i.e. #?#html:not(&lt;extended-selectors&gt;) does not work. So if target is not defined or defined as the universal selector *, the extended pseudo-class applying is limited to html's children, e.g. rules #?#:not(...) and #?#*:not(...) are parsed as #?#html *:not(...). Please note that there is no such limitation for a standard selector argument, i.e. #?#html:not(.locked) works fine. The :not() is considered as a standard CSS pseudo-class inside the argument of the :upward() pseudo-class because :upward() supports only standard selectors. &quot;Up-looking&quot; pseudo-classes which are :nth-ancestor() and :upward() are not supported inside selectors argument for :not() pseudo-class. Examples #container &gt; *:not(h2, .text) selects only the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;container&quot;&gt; &lt;h2&gt;Header&lt;/h2&gt; &lt;div id=&quot;target1&quot;&gt;&lt;/div&gt; &lt;span class=&quot;text&quot;&gt;text&lt;/span&gt; &lt;/div&gt;  Pseudo-class :if-not() (removed)​ Removal notice The :if-not() pseudo-class is removed and is no longer supported. Rules with it are considered as invalid. This pseudo-class was basically a shortcut for :not(:has()). It was supported by ExtendedCss for better compatibility with some filters subscriptions. "},{"title":"Cosmetic rules priority​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-rules-priority","content":"The way element hiding and CSS rules are applied is platform-specific. In AdGuard for Windows, Mac, and Android, we use a stylesheet injected into the page. The priority of cosmetic rules is the same as any other websites' CSS stylesheet. But there is a limitation: element hiding and CSS rules cannot override inline styles. In such cases, it is recommended to use extended selectors or HTML filtering. In AdGuard Browser Extension, the so called &quot;user stylesheets&quot; are used. They have higher priority than even the inline styles. Extended CSS selectors use JavaScript to work and basically add an inline style themselves, therefore they can override any style. "},{"title":"HTML filtering rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#html-filtering-rules","content":"In most cases, the basis and cosmetic rules are enough to filter ads. But sometimes it is necessary to change the HTML-code of the page itself before it is loaded. This is when you need filtering rules for HTML content. They allow to indicate the HTML elements to be cut out before the browser loads the page. Compatibility HTML filtering rules are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser Extension for Firefox. Such rules do not work in extensions for other browsers because they are unable to modify content on network level. "},{"title":"Syntax​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#syntax-1","content":" selector = [tagName] [attributes] [pseudoClasses] combinator = &quot;&gt;&quot; rule = [domains] &quot;$$&quot; selector *(combinator selector) domains = [domain0, domain1[, ...[, domainN]]] attributes = &quot;[&quot; name0 = value0 &quot;]&quot; &quot;[&quot; name1 = value2 &quot;]&quot; ... &quot;[&quot; nameN = valueN &quot;]&quot; pseudoClasses = pseudoClass *pseudoClass pseudoClass = &quot;:&quot; pseudoName [ &quot;(&quot; pseudoArgs &quot;)&quot; ]  tagName — name of the element in lower case, for example, div or script.domains — domain restriction for the rule. Same principles as in element hiding rule syntax.attributes — a list of attributes that limit the selection of elements. name — attribute name, value — substring, that is contained in attribute value.pseudoName — the name of a pseudo-class.pseudoArgs — the arguments of a function-style pseudo-class.combinator — an operator that works similarly to the CSS child combinator: that is, the selector on the right of the combinator will only match an element whose direct parent matches the selector on the left of the combinator. "},{"title":"Examples​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#examples-2","content":"HTML code: &lt;script data-src=&quot;/banner.js&quot;&gt;&lt;/script&gt;  Rule: example.org$$script[data-src=&quot;banner&quot;]  This rule removes all script elements with the attribute data-src containing the substring banner. The rule applies only to example.org and all its subdomains. "},{"title":"Special attributes​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#special-attributes","content":"In addition to usual attributes, which value is every element checked for, there is a set of special attributes that change the way a rule works. Below there is a list of these attributes: tag-content​ Deprecation notice This special attribute may become unsupported in the future. Prefer using the :contains() pseudo-class where it is available. This is the most frequently used special attribute. It limits selection with those elements whose innerHTML code contains the specified substring. You must use &quot;&quot; to escape &quot;, for instance: $$script[tag-content=&quot;alert(&quot;&quot;this is ad&quot;&quot;)&quot;] For example, take a look at this HTML code: &lt;script type=&quot;text/javascript&quot;&gt; document.write('&lt;div&gt;banner text&lt;/div&gt;&quot; /&gt;'); &lt;/script&gt;  Following rule will delete all script elements with a banner substring in their code: $$script[tag-content=&quot;banner&quot;]  Limitations The tag-content special attribute must not appear in a selector to the left of a &gt; combinator. wildcard​ Deprecation notice This special attribute may become unsupported in the future. Prefer using the :contains() pseudo-class where it is available. This special attribute works almost like tag-content and allows you to check the innerHTML code of the document. Rule will check if HTML code of the element fits to the search pattern. You must use &quot;&quot; to escape &quot;, for instance: $$script[wildcard=&quot;&quot;banner&quot;&quot;] For example: $$script[wildcard=&quot;*banner*text*&quot;] It checks if the element code contains the two consecutive substrings banner and text. Limitations The wildcard special attribute must not appear in a selector to the left of a &gt; combinator. max-length​ Deprecation notice This special attribute may become unsupported in the future. Prefer using the :contains() pseudo-class with a regular expression where it is available. Specifies the maximum length for content of HTML element. If this parameter is set and the content length exceeds the value, a rule does not apply to the element. Default value If this parameter is not specified, the max-length is considered to be 8192. For example: $$div[tag-content=&quot;banner&quot;][max-length=&quot;400&quot;]  This rule will remove all the div elements, whose code contains the substring banner and the length of which does not exceed 400 characters. Limitations The max-length special attribute must not appear in a selector to the left of a &gt; combinator. min-length​ Deprecation notice This special attribute may become unsupported in the future. Prefer using the :contains() pseudo-class with a regular expression where it is available. Specifies the minimum length for content of HTML element. If this parameter is set and the content length is less than preset value, a rule does not apply to the element. For example: $$div[tag-content=&quot;banner&quot;][min-length=&quot;400&quot;]  This rule will remove all the div elements, whose code contains the substring banner and the length of which exceeds 400 characters. Limitations The min-length special attribute must not appear in a selector to the left of a &gt; combinator. "},{"title":"Pseudo-classes​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#pseudo-classes","content":":contains()​ Syntax​ :contains(unquoted text)  or :contains(/reg(ular )?ex(pression)?/)  Compatibility :-abp-contains() and :has-text() are synonyms for :contains(). Compatibility The :contains() pseudo-class is supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.13 or later. Requires that the inner HTML of the element contains the specified text or matches the specified regular expression. Limitations A :contains() pseudo-class must not appear in a selector to the left of a &gt; combinator. "},{"title":"Exceptions​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#exceptions","content":"Similar to hiding rules, there is a special type of rules that disable the selected HTML filtering rule for particular domains. The syntax is the same, you just have to change $$ to $@$. For example, there is a rule in filter: $$script[tag-content=&quot;banner&quot;]  If you want to disable it for example.com, you can create an exception rule: example.com$@$script[tag-content=&quot;banner&quot;]  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. $@$script[tag-content=&quot;banner&quot;]  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. "},{"title":"JavaScript rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#javascript-rules","content":"AdGuard supports a special type of rules that allows you to inject any javascript code to websites pages. We strongly recommend using scriptlets instead of JavaScript rules whenever possible. JS rules are supposed to help with debugging, but as a long-time solution a scriptlet rule should be used. Syntax rule = [domains] &quot;#%#&quot; script  domains — domain restriction for the rule. Same principles as in element hiding rules.script — arbitrary javascript code in one string. Examples example.org#%#window.__gaq = undefined; executes the code window.__gaq = undefined; on all pages at example.org and all subdomains. Exceptions Similar to hiding rules, there is a special type of rules that disable the selected javascript rule for particular domains. The syntax is the same, you just have to change #%# to #@%#. For example, there is a rule in filter: #%#window.__gaq = undefined;  If you want to disable it for example.com, you can create an exception rule: example.com#@%#window.__gaq = undefined;  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. #@%#window.__gaq = undefined;  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. Restrictions JavaScript rules can be used only in trusted filters. Compatibility JavaScript rules are not supported by AdGuard Content Blocker. "},{"title":"Scriptlet rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#scriptlets","content":"Scriptlet is a JavaScript function that provides extended capabilities for content blocking. These functions can be used in a declarative manner in AdGuard filtering rules. note AdGuard supports a lot of different scriptlets. In order to achieve cross-blocker compatibility, we also support syntax of uBO and ABP. Syntax rule = [domains] &quot;#%#//scriptlet(&quot; scriptletName arguments &quot;)&quot;  scriptletName — required, a name of the scriptlet from AdGuard's Scriptlets libraryarguments — optional, a list of string arguments (no other types of arguments are supported) Examples example.org#%#//scriptlet(&quot;abort-on-property-read&quot;, &quot;alert&quot;)  This rule will be applied to example.org and subdomains pages and will execute the abort-on-property-read scriptlet with the alert parameter. Learn more about how to debug scriptlets. More information about scriptlets can be found on GitHub. Compatibility Scriptlet rules are not supported by AdGuard Content Blocker. "},{"title":"Trusted scriptlets​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#trusted-scriptlets","content":"Trusted scriptlets are scriptlets with extended functionality. It means the same syntax and restrictions. Trusted scriptlet names are prefixed with trusted-, e.g. trusted-set-cookie, to be easily distinguished from common scriptlets. note Trusted scriptlets are not compatible with other ad blockers except AdGuard. Restrictions Trusted scriptlets rules can be used only in trusted filters. Compatibility Trusted scriptlets rules are not supported by AdGuard Content Blocker. Learn more about how to debug scriptlets. More information about trusted scriptlets can be found on GitHub. "},{"title":"Modifiers for non-basic type of rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-rules-modifiers","content":"Each rule can be modified using the modifiers described in the following paragraphs. Syntax {#non-basic-rules-modifiers-syntax} rule = &quot;[$&quot; modifiers &quot;]&quot; [rule text] modifiers = modifier0[, modifier1[, ...[, modifierN]]]  modifier — set of the modifiers described below.rule text — a rule to be modified. For example, [$domain=example.com,app=test_app]##selector. In the modifiers values, the following characters must be escaped: [, ], ,, and \\ (unless it is used for the escaping). Use \\ to escape them. For example, an escaped bracket looks like this: \\]. Modifier \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tiOS용 AdGuard\tSafari용 AdGuard\tAdGuard 콘텐츠 차단기$app\t✅\t❌\t❌\t❌\t❌\t❌ $domain\t✅\t✅\t✅\t✅\t✅\t❌ $path\t✅\t✅\t✅\t✅\t✅\t❌ $url\t✅\t⏳\t⏳\t❌\t❌\t❌ note ✅ — fully supported⏳ — feature that has been implemented or is planned to be implemented but is not yet available in any product❌ — not supported "},{"title":"$app​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-app-modifier","content":"$app modifier lets you narrow the rule coverage down to a specific application or a list of applications. The modifier's behavior and syntax perfectly match the corresponding basic rules $app modifier. Examples [$app=org.example.app]example.com##.textad hides a div with the class textad at example.com and all subdomains in requests sent from the org.example.app Android app.[$app=~org.example.app1|~org.example.app2]example.com##.textad hides a div with the class textad at example.com and all subdomains in requests sent from any app except org.example.app1 and org.example.app2.[$app=com.apple.Safari]example.org#%#//scriptlet('prevent-setInterval', 'check', '!300') applies scriptlet prevent-setInterval only in Safari browser on Mac.[$app=org.example.app]#@#.textad disables all ##.textad rules for all domains while using org.example.app. Compatibility Such rules with $app modifier are supported by AdGuard for Windows, Mac, and Android. "},{"title":"$domain​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-domain-modifier","content":"$domain modifier limits the rule application area to a list of domains and their subdomains. The modifier's behavior and syntax perfectly match the corresponding basic rules $domain modifier. Examples [$domain=example.com]##.textad — hides a div with the class textad at example.com and all subdomains.[$domain=example.com|example.org]###adblock — hides an element with attribute id equals adblock at example.com, example.org and all subdomains.[$domain=~example.com]##.textad — this rule hides div elements of the class textad for all domains, except example.com and its subdomains. There are 2 ways to specify domain restrictions for non-basic rules: the &quot;classic&quot; way is to specify domains before rule mask and attributes: example.com##.textad;the modifier approach is to specify domains via $domain modifier: [$domain=example.com]##.textad. But rules with mixed style domains restriction are considered invalid. So, for example, the rule [$domain=example.org]example.com##.textad will be ignored. Compatibility Such rules with $domain modifier are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser Extension for Chrome, Firefox, Edge. "},{"title":"$path​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-path-modifier","content":"$path modifier limits the rule application area to specific locations or pages on websites. Syntax $path [&quot;=&quot; pattern]  pattern — optional, a path mask to which the rule is restricted. Its syntax and behavior are pretty much the same as with the pattern for basic rules. You can also use special characters, except for ||, which does not make any sense in this case (see examples below). If pattern is not set for $path, rule will apply only on the main page of website. $path modifier matches the query string as well. $path modifier supports regular expressions in the same way basic rules do. Examples [$path=page.html]##.textad hides a div with the class textad at /page.html or /page.html?&lt;query&gt; or /sub/page.html or /another_page.html[$path=/page.html]##.textad hides a div with the class textad at /page.html or /page.html?&lt;query&gt; or /sub/page.html of any domain but not at /another_page.html[$path=|/page.html]##.textad hides a div with the class textad at /page.html or /page.html?&lt;query&gt; of any domain but not at /sub/page.html[$path=/page.html|]##.textad hides a div with the class textad at /page.html or /sub/page.html of any domain but not at /page.html?&lt;query&gt;[$path=/page*.html]example.com##.textad hides a div with the class textad at /page1.html or /page2.html or any other path matching /page&lt;...&gt;.html of example.com[$path]example.com##.textad hides a div with the class textad at the main page of example.com[$domain=example.com,path=/page.html]##.textad hides a div with the class textad at page.html of example.com and all subdomains but not at another_page.html[$path=/\\\\/(sub1|sub2)\\\\/page\\\\.html/]##.textad hides a div with the class textad at both /sub1/page.html and /sub2/page.html of any domain (please note the escaped special characters) Compatibility Rules with $path modifier are not supported by AdGuard Content Blocker. "},{"title":"$url​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-url-modifier","content":"$url modifier limits the rule application area to URLs matching the specified mask. Syntax url = pattern  where pattern is pretty much the same as pattern of the basic rules assuming that some characters must be escaped. The special characters and regular expressions are supported as well. Examples [$url=||example.com/content/*]##div.textad hides a div with the class textad at addresses like https://example.com/content/article.html and even https://subdomain.example.com/content/article.html.[$url=||example.org^]###adblock hides an element with attribute id equal to adblock at example.org and its subdomains.[$url=/\\[a-z\\]+\\\\.example\\\\.com^/]##.textad hides div elements of the class textad for all domains matching the regular expression [a-z]+\\.example\\.com^. Compatibility Rules with the $url modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.11 or later. "},{"title":"Information for filters maintainers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#information-for-filters-maintainers","content":"If you maintain a third-party filter that is known to AdGuard, you might be interested in the information presented in this section. Please note that hints will be applied to registered filters only. The filter is considered to be registered and known by AdGuard, if it is present in the known filters index. If you want your filter to be registered, please file an issue to AdguardFilters repo. "},{"title":"Preprocessor directives​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#preprocessor-directives","content":"We provide preprocessor directives that can be used by filters maintainers to improve compatibility with different ad blockers and provide: including a fileapplying rules conditionally by ad blocker typecontent blocker specifying for rules applying in Safari note Any mistake in a preprocessor directive will lead to AdGuard failing the filter update in the same way as if the filter URL was unavailable. Preprocessor directives can be used in the user rules or in the custom filters. Including a file​ The !#include directive allows to include contents of a specified file into the filter. It supports only files from the same origin to make sure that the filter maintainer is in control of the specified file. The included file can also contain pre- directives (even other !#include directives). Ad blockers should consider the case of recursive !#include and implement a protection mechanism. Syntax !#include file_path  where file_path is a same origin absolute or relative file path to be included. The files must originate from the same domain but may be located in a different folder. If included file is not found or unavailable, the whole filter update should fail. Same-origin limitation should be disabled for local custom filters. Examples Filter URL: https://example.org/path/filter.txt ! Valid (same origin): !#include https://example.org/path/includedfile.txt ! ! Valid (relative path): !#include /includedfile.txt !#include ../path2/includedfile.txt ! ! Invalid (another origin): !#include https://domain.com/path/includedfile.txt  Conditions​ Filters maintainers can use conditions to supply different rules depending on the ad blocker type. A conditional directive beginning with an !#if directive must explicitly be terminated with an !#endif directive. Conditions support all basic logical operators. There are two possible scenarios: When an ad blocker encounters an !#if directive and no !#else directive, it will compile the code between !#if and !#endif directives only if the specified condition is true. If there is an !#else directive, the code between !#if and !#else will be compiled if the condition is true; otherwise, the code between !#else and !#endif will be compiled. note Whitespaces matter. !#if is a valid directive, while !# if is not. Syntax !#if (conditions) rules_list !#endif  or !#if (conditions) true_conditions_rules_list !#else false_conditions_rules_list !#endif  where: !#if (conditions) — start of the block when conditions are trueconditions — just like in some popular programming languages, preprocessor conditions are based on constants declared by ad blockers. Authors of ad blockers define on their own what exact constants they declare. Possible values: adguard always declared; shows maintainers that this is one of AdGuard products; should be enough in 95% of casesproduct-specific constants for cases when you need a rule to work (or not work — then ! should be used before constant) in a specific product only: adguard_app_windows — AdGuard for Windowsadguard_app_mac — AdGuard for Macadguard_app_android — AdGuard for Androidadguard_app_ios — AdGuard for iOSadguard_ext_safari — AdGuard for Safariadguard_ext_chromium — AdGuard Browser Extension for Chrome (and chromium-based browsers, e.g. new Microsoft Edge)adguard_ext_firefox — AdGuard Browser Extension for Firefoxadguard_ext_edge — AdGuard Browser Extension for Edge Legacyadguard_ext_opera — AdGuard Browser Extension for Operaadguard_ext_android_cb — AdGuard Content Blocker for mobile Samsung and Yandex browsersext_ublock — special case; this one is declared when a uBlock version of a filter is compiled by the FiltersRegistrycap_html_filtering — products that support HTML filtering rules: AdGuard for Windows, AdGuard for Mac, and AdGuard for Android !#else — start of the block when conditions are falserules_list, true_conditions_rules_list, false_conditions_rules_list — lists of rules!#endif — end of the block Examples ! for all AdGuard products except AdGuard for Safari !#if (adguard &amp;&amp; !adguard_ext_safari) ||example.org^$third-party domain.com##div.ad !#endif  ! directives even can be combined !#if (adguard_app_android) !#include /androidspecific.txt !#endif  !#if (adguard &amp;&amp; !adguard_ext_safari) ! for all AdGuard products except AdGuard for Safari ||example.org^$third-party domain.com##div.ad !#else ! for AdGuard for Safari only ||subdomain.example.org^$third-party !#endif  Compatibility The !#else directive is supported by the FiltersDownloader v1.1.20 or later. It is already supported for filter lists compiled by the FiltersRegistry, but it still may not be supported by AdGuard products when adding a filter list with !#else as a custom one. The following products will support it in the mentioned versions or later: AdGuard for Windows, Mac, and Android with CoreLibs v1.13;AdGuard Browser Extension v4.2.208;AdGuard v1.11.16 for Safari. Safari affinity​ Safari's limit for each content blocker is 150,000 active rules. But in AdGuard for Safari and AdGuard for iOS, we've split the rules into 6 content blockers, thus increasing the rule limit to 900,000. Here is the composition of each content blocker: AdGuard General — Ad Blocking, Language-specificAdGuard Privacy — PrivacyAdGuard Social — Social Widgets, AnnoyancesAdGuard Security — SecurityAdGuard Other — OtherAdGuard Custom — Custom User rules and allowlist are added to every content blocker. caution The main disadvantage of using multiple content blockers is that rules from different blockers are applied independently. Blocking rules are not affected by this, but unblocking rules may cause problems. If a blocking rule is in one content blocker and an exception is in another, the exception will not work. Filter maintainers use !#safari_cb_affinity to define Safari content blocker affinity for the rules inside of the directive block. Syntax !#safari_cb_affinity(content_blockers) rules_list !#safari_cb_affinity  where: !#safari_cb_affinity(content_blockers) — start of the blockcontent_blockers — comma-separated list of content blockers. Possible values: general — AdGuard General content blockerprivacy — AdGuard Privacy content blockersocial — AdGuard Social content blockersecurity — AdGuard Security content blockerother — AdGuard Other content blockercustom — AdGuard Custom content blockerall — special keyword that means that the rules must be included into all content blockers rules_list — list of rules!#safari_cb_affinity — end of the block Examples ! to unhide specific element which is hidden by AdGuard Base filter: !#safari_cb_affinity(general) example.org#@#.adBanner !#safari_cb_affinity  ! to allowlist basic rule from AdGuard Tracking Protection filter: !#safari_cb_affinity(privacy) @@||example.org^ !#safari_cb_affinity  "},{"title":"Hints​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#hints","content":"&quot;Hint&quot; is a special comment, instruction to the filters compiler used on the server side (see FiltersRegistry). Syntax !+ HINT_NAME1(PARAMS) HINT_NAME2(PARAMS)  Multiple hints can be applied. NOT_OPTIMIZED hint​ For each filter, AdGuard compiles two versions: full and optimized. Optimized version is much more lightweight and does not contain rules which are not used at all or used rarely. Rules usage frequency comes from the collected filter rules statistics. But filters optimization is based on more than that — some filters have specific configuration. This is how it looks like for Base filter: &quot;filter&quot;: AdGuard Base filter, &quot;percent&quot;: 30, &quot;minPercent&quot;: 20, &quot;maxPercent&quot;: 40, &quot;strict&quot;: true  where: filter — filter identifierpercent — expected optimization percent ~= (rules count in optimized filter) / (rules count in original filter) * 100minPercent — lower bound of percent valuemaxPercent — upper bound of percent valuestrict — if percent &lt; minPercent OR percent &gt; maxPercent and strict mode is on then filter compilation should fail, otherwise original rules must be used In other words, percent is the &quot;compression level&quot;. For instance, for the Base filter it is configured to 40%. It means that optimization algorithm should strip 60% of rules. Eventually, here are the two versions of the Base filter for AdGuard Browser Extension: full: https://filters.adtidy.org/extension/chromium/filters/2.txtoptimized: https://filters.adtidy.org/extension/chromium/filters/2_optimized.txt If you want to add a rule which should not be removed at optimization use the NOT_OPTIMIZED hint: !+ NOT_OPTIMIZED ||example.org^  And this rule will not be optimized only for AdGuard for Android: !+ NOT_OPTIMIZED PLATFORM(android) ||example.org^  PLATFORM and NOT_PLATFORM hints​ Used to specify the platforms to apply the rules. List of existing platforms and links to Base filter, for example, for each of them: windows — AdGuard for Windows — https://filters.adtidy.org/windows/filters/2.txt mac — AdGuard for Mac — https://filters.adtidy.org/mac_v2/filters/2.txt android — AdGuard for Android — https://filters.adtidy.org/android/filters/2.txt ios — AdGuard for iOS — https://filters.adtidy.org/ios/filters/2.txt ext_chromium — AdGuard Browser Extension for Chrome — https://filters.adtidy.org/extension/chromium/filters/2.txt ext_chromium_mv3 — AdGuard Browser Extension for Chrome MV3 — https://filters.adtidy.org/extension/chromium-mv3/filters/2.txt ext_ff — AdGuard Browser Extension for Firefox — https://filters.adtidy.org/extension/firefox/filters/2.txt ext_edge — AdGuard Browser Extension for Edge — https://filters.adtidy.org/extension/edge/filters/2.txt ext_opera — AdGuard Browser Extension for Opera — https://filters.adtidy.org/extension/opera/filters/2.txt ext_safari — AdGuard for Safari — https://filters.adtidy.org/extension/safari/filters/2.txt ext_android_cb — AdGuard Content Blocker — https://filters.adtidy.org/extension/android-content-blocker/filters/2.txt ext_ublock — uBlock Origin — https://filters.adtidy.org/extension/ublock/filters/2.txt Examples This rule will be available only in AdGuard for Windows, Mac, Android: !+ PLATFORM(windows,mac,android) ||example.org^  Except for AdGuard for Safari, AdGuard Content Blocker, and AdGuard for iOS, this rule is available on all platforms: !+ NOT_PLATFORM(ext_safari, ext_android_cb, ios) ||example.org^  "},{"title":"How to debug filtering rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#how-to-debug-filtering-rules","content":"It may be possible to create simple filtering rules &quot;in your head&quot; but for anything even slightly more complicated you will need additional tools to debug and iterate them. There are tools to assist you with that. You can use DevTools in Chrome and its analogs in other browsers but most AdGuard products provide another one — Filtering log. "},{"title":"Filtering log​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#filtering-log","content":"Filtering log is an advanced tool that will be helpful mostly to filter developers. It lists all web requests that pass through AdGuard, gives you exhaustive information on each of them, offers multiple sorting options, and has other useful features. Depending on which AdGuard product you are using, Filtering log can be located in different places. In AdGuard for Windows, you can find it in the Ad Blocker tab or via the tray menuIn AdGuard for Mac, it is located in Settings → Advanced → Filtering logIn AdGuard for Android, you can find it under Statistics → Recent activity. Recent activity can also be accessed from the AssistantIn AdGuard Browser Extension, it is accessible from the Miscellaneous settings tab or by right-clicking the extension icon. Only Chromium- and Firefox-based web browsers show applied element hiding rules (including CSS, ExtCSS) and JS rules and scriptlets in their Filtering logs note In AdGuard for iOS and AdGuard for Safari, Filtering log does not exist because of the way content blockers are implemented in Safari. AdGuard does not see the web requests and therefore cannot display them. "},{"title":"Selectors debugging mode​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#selectors-debug-mode","content":"Sometimes, you might need to check the performance of a given selector or a stylesheet. In order to do it without interacting with JavaScript directly, you can use a special debug style property. When ExtendedCss meets this property, it enables the debugging mode either for a single selector or for all selectors, depending on the debug value. Open the browser console while on a web page to see the timing statistics for selector(s) that were applied there. Debugging mode displays the following stats as object where each of the debugged selectors are keys, and value is an object with such properties: Always printed: selectorParsed — text of eventually parsed selectortimings — list of DOM nodes matched by the selector appliesCount — total number of times that the selector has been applied on the pageappliesTimings — time that it took to apply the selector on the page, for each of the instances that it has been applied (in milliseconds)meanTiming — mean time that it took to apply the selector on the pagestandardDeviation — standard deviationtimingsSum — total time it took to apply the selector on the page across all instances Printed only for remove pseudos: removed — flag to signal if elements were removed Printed if elements are not removed: matchedElements — list of DOM nodes matched by the selectorstyleApplied — parsed rule style declaration related to the selector Examples Debugging a single selector: When the value of the debug property is true, only information about this selector will be shown in the browser console. #$?#.banner { display: none; debug: true; }  Enabling global debug: When the value of the debug property is global, the console will display information about all extended CSS selectors that have matches on the current page, for all the rules from any of the enabled filters. #$?#.banner { display: none; debug: global; }  Testing extended selectors without AdGuard ExtendedCss can be executed on any page without using any AdGuard product. In order to do that you should copy and execute the following code in a browser console: !function(e,t,d){C=e.createElement(t),C.src=d,C.onload=function(){alert(&quot;ExtendedCss loaded successfully&quot;)},s=e.getElementsByTagName(t)[0],s?s.parentNode.insertBefore(C,s):(h=e.getElementsByTagName(&quot;head&quot;)[0],h.appendChild(C))}(document,&quot;script&quot;,&quot;https://AdguardTeam.github.io/ExtendedCss/extended-css.min.js&quot;);  Alternatively, install the ExtendedCssDebugger userscript. Now you can now use the ExtendedCss from global scope, and run its method query() as Document.querySelectorAll(). Examples const selector = 'div.block:has=(.header:matches-css(after, content: Ads))'; // array of HTMLElements matched the `selector` is to be returned ExtendedCss.query(selector);  "},{"title":"Debugging scriptlets​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#debug-scriptlets","content":"If you are using AdGuard Browser Extension and want to debug a scriptlet or a trusted scriptlet rule, you can get additional information by opening the Filtering log. In that case, scriptlets will switch to debug mode and there will be more information in the browser console. The following scriptlets are especially developed for debug purposes: debug-current-inline-scriptdebug-on-property-readdebug-on-property-writelog-addEventListenerlog-on-stack-tracelog-evallog The following scriptlets also may be used for debug purposes: json-pruneprevent-fetchprevent-requestAnimationFrameprevent-setIntervalprevent-setTimeoutprevent-window-open with specified replacement parameterprevent-xhrtrusted-replace-fetch-responsetrusted-replace-xhr-response "},{"title":"Compatibility tables legend​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#compatibility-tables-legend","content":""},{"title":"Product shortcuts​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#what-product","content":"CoreLibs apps — AdGuard for Windows, AdGuard for Mac, and AdGuard for AndroidAdGuard for Chromium — AdGuard Browser Extension for Chrome and other Chromium-based browsers such as Microsoft Edge, OperaAdGuard for Firefox — AdGuard Browser Extension for FirefoxAdGuard for iOS — AdGuard for iOS and AdGuard Pro for iOS (for mobile Safari browser)AdGuard for Safari — AdGuard for desktop Safari browser AdGuard Content Blocker — Content Blocker for Android mobile browsers: Samsung Internet and Yandex Browser "},{"title":"Compatibility shortcuts​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#what-compatibility","content":"note ✅ — fully supported✅ * — supported, but reliability may vary or limitations may occur; check the modifier description for more details🧩 — may already be implemented in nightly or beta versions but is not yet supported in release versions⏳ — feature that has been implemented or is planned to be implemented but is not yet available in any product❌ — not supported👎 — deprecated; still supported but will be removed in the future🚫 — removed and no longer supported "}]