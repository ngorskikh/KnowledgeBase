[{"title":"Integration mode (legacy)","type":0,"sectionRef":"#","url":"adguard-browser-extension/integration-mode/","content":"","keywords":""},{"title":"What is the integration mode?​","type":1,"pageTitle":"Integration mode (legacy)","url":"adguard-browser-extension/integration-mode/#what-is-the-integration-mode","content":"In older versions of AdGuard Browser Extension, if you had it installed along with one of the AdGuard desktop apps (AdGuard for Windows or AdGuard for Mac), the extension took upon itself the functions of AdGuard Assistant — a tool that helped manage the filtering right from the web page. At the same time, the ad blocking itself was completely under of the desktop app's control, the extension and its settings played no role in that. The problem was, in some cases the app and the extension would hamper each other’s work. Some websites would stop being protected by the desktop program and were backed up only by the extension which has less possibilities. Thus, starting with AdGuard Browser Extension v3.5, the integration mode was removed. Instead, the new AdGuard Browser Assistant was implemented. "},{"title":"AdGuard Browser Assistant​","type":1,"pageTitle":"Integration mode (legacy)","url":"adguard-browser-extension/integration-mode/#adguard-browser-assistant","content":" AdGuard Browser Assistant is a new browser extension that works and feels just like the integration mode but much lighter, without redundant functions, and doesn't interfere with the desktop apps. You can read more about Browser Assistant for Windows or Mac, or download it from our website. AdGuard Browser Assistant is available in all major browsers. "},{"title":"How to install","type":0,"sectionRef":"#","url":"adguard-browser-extension/installation/","content":"","keywords":""},{"title":"How to install AdGuard Browser Extension for Google Chrome or Chromium browsers​","type":1,"pageTitle":"How to install","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-google-chrome-or-chromium-browsers","content":"Open the extension's page in Chrome Web Store and click Add to Chrome.  In the opened dialog box, click Add extension.  "},{"title":"How to install AdGuard Browser Extension for Opera​","type":1,"pageTitle":"How to install","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-opera","content":"Open the page addons.opera.com.  Click Add to Opera. "},{"title":"How to install AdGuard Browser Extension for Firefox​","type":1,"pageTitle":"How to install","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-firefox","content":"Open the page addons.mozilla.org.  Click Add to Firefox. "},{"title":"How to install AdGuard Browser Extension for Yandex Browser​","type":1,"pageTitle":"How to install","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-yandex-browser","content":"Click the browser settings button in the upper right corner of the browser, then choose Add-ons in the drop-down menu. Scroll down to find AdGuard, then click Install.  "},{"title":"How to install AdGuard Browser Extension for Microsoft Edge​","type":1,"pageTitle":"How to install","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-microsoft-edge","content":"Find AdGuard Browser Extension in the Edge Add-ons store and click Get.  In the opened dialog window, press Add extension.  Alternatively, you can install AdGuard Browser Extension for Edge from the Chrome Web Store. Open its web page in your Edge browser and select Allow extensions from other stores on the banner at the top of the page.  In the opened dialog box, click Allow.  Click Add to Chrome.  In the opened dialog window, click Add extension to install AdGuard Browser Extension.  "},{"title":"How to install AdGuard Browser Extension for Safari​","type":1,"pageTitle":"How to install","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-safari","content":"AdGuard for Safari is not a browser extension in a common sense. You can read more about it in a dedicated article. Or you can download the installation file directly from this page. "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-browser-extension/overview/","content":"","keywords":""},{"title":"Availability​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#br-extension","content":"AdGuard Browser Extension is available for most major browsers. You can easily find it in your browser’s online store or on our official website.  note We have a standalone extension for Safari. Since the release of Safari 13, most of the ad-blocking extensions have experienced huge issues and many of them stopped functioning. We had to develop a separate extension for Safari that has some differences in comparison with the extension described in this article. Do not forget that the functionality of each extension is strictly limited by the browser’s capabilities. So if you want to get full-fledged protection, consider installing a standalone program for your computer. There's a reason why. "},{"title":"Ad blocking​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#adblocker","content":"Blocking ads is clearly the key functionality of any ad blocker, and AdGuard is not an exception. The extension will successfully block ads on any page in your browser. Ad blocking is based on so-called filter lists, or simply filters. Filters can be enabled or disabled in your extension's settings. You can customize ad blocking by activating specific filters. "},{"title":"Filters​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#filters","content":"In essence, filter lists are sets of rules written in a special language. Your ad blocker interpretes the rules and implements them. As a result, you stop seeing ads on your webpages.  All filters are grouped according to their role. For example, there are categories for ad-blocking filters, privacy protection filters, social media-related filters, etc. You can enable either individual filters or the entire group at once.  Custom filters​ While the features of other filter groups are more or less predictable, there is a group called Custom that may raise additional questions.  In this tab, you can add filters that are not present in the extension by default. There are plenty of publicly available filters on the Internet. Moreover, you can create and add your own filters. In fact, you can build any set of filters and customize ad blocking the way you like. To add a filter, just click Add custom filter, enter the URL or the file path of the filter you want to be added and click Next.  "},{"title":"User rules​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#user-rules","content":"User rules is another tool that helps you customize the blocking of ads.  There are several ways to add new rules. The most straightforward is to just type a rule in, but it requires some knowledge of the rule syntax. You can import a ready-to-use filter list from a text file as well. Make sure that different rules are separated by line breaks. Note that importing a ready-to-use filter list is better done in the Custom filters tab. Besides, you can export your own filtering rules. This option is good for transferring your list of rules between browsers or devices. When you add a website to the Allowlist (more on that below) or use the Assistant tool for hiding an element on the page, a corresponding rule is also saved in User rules. "},{"title":"Allowlist​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#allowlist","content":"The allowlist is used to exclude certain websites from filtering. Blocking rules are not applied to the websites on the list.  The allowlist can be inverted, too: you can unblock ads everywhere except on the websites added to this list. To do that, activate the Invert allowlist option.  You can also import and export existing allowlists. It is useful, for instance, if you want to apply the same allowing rules in each of your browsers. "},{"title":"Stealth Mode​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#stealth-mode","content":"Stealth Mode aims to ensure the protection of sensitive personal data from online trackers and fraudsters.  In Stealth Mode, you can prevent a website from seeing the search queries from you used to find it on the Internet, automatically delete third-party and website’s own cookies, etc. A separate article is devoted to all these features. note Some of the Stealth Mode options available in full-fledged apps are not present in the browser extensions due to technical restrictions. "},{"title":"Other features and options​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#other","content":"Apart from the large key modules of AdGuard Browser Extension, there are several more specific features that can be configured in the General and Additional settings tabs of the extension settings. "},{"title":"General​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#general","content":"In the General tab, you can allow search ads and the self-promotion of websites, enable the automatic activation of language-specific filters, indicate the filters update interval, etc.  Besides, here you can enable Phishing and malware protection. You can save your settings configuration by clicking the Export settings button. The settings will be saved as a .json file. To upload the previously saved settings configuration, use the Import settings function. You can even use it to quickly switch between different settings profiles or even to transfer settings configurations between different browsers. "},{"title":"Additional settings​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#misc","content":"The Additional settings section contains a range of various settings that are related to the ad blocking process and application usability.  From this tab, you can activate optimized filters, enable notifications about extension updates, open the Filtering log, or clear the statistics of blocked ads and trackers. Besides, you can opt to help us with the development of filters by sending the statistics on applied rules: which ones are triggered, on which websites, and how often. This option is disabled by default as we do not collect user data without consent. Yet, if you enable it, all data will be strictly anonymized. "},{"title":"About​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#about","content":"In the About section, you can find infos about the current version, links to the EULA and Privacy policy, and to the repository of the Browser extension on GitHub.  "},{"title":"Extension’s main menu​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#main-menu","content":"The extension's main page can be accessed by clicking on the extension's icon on the toolbar of your browser.  On the main page, you can hide any element on any page manually (a corresponding rule will be added to the User rules), open the Filtering log to view the complete information about your browser's traffic and block requests on the go, or look at a website’s security report. Besides, you can submit a complaint about any website (for example, if there are missed ads on the page, our filter engineers will review the report and fix the problem) and see the statistics on applied blocking rules. All web requests made by the browser are displayed in the Filtering log, along with detailed information about each request. The Filtering log makes it easy, for example, to monitor requests blocked by AdGuard Browser Extension. Besides, it allows you to block any request or add a previously blocked request to Allowlist in two clicks. The Filtering log also offers you a wide variety of options for sorting web requests, which can be helpful when creating your own filtering rules. You can open the Filtering log by selecting the corresponding item in the main menu, or from the settings page (in the &quot;Additional settings&quot; tab). By clicking the icons in the top right corner of the extension's main menu, you can open the extension settings or pause the protection. "},{"title":"AdGuard Browser Extension vs. standalone apps​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#comparison","content":"The main advantage of AdGuard standalone programs over browser extensions is that the programs can block ads in every browser and in almost all apps. You may use different browsers at the same time, the app will filter ads and online threats in all of them equally well. The second difference is that the possibilities of extension-based ad blockers are strictly limited by browser guidelines. The browser extensions have to conform to the policies of the browsers, where ad blocking might be restricted. Thus, some types of filtering rules are not supported by the extensions. The functionality of the desktop apps is not limited, so they have a better filtering quality. Whereas AdGuard Browser Extension is free and easy to install, and has filters to block ads and fight online threats, the full-fledged apps are more powerful and have a list of advanced features. See all the differences in the comparative table below.  1 – within browser restrictions and only in the browser where it is installed; 2 – the extension is unable to detect requests from other extensions. If a malicious or tracking extension sends a request to its server to show you ads or track your activity, AdGuard Browser Extension will not be able to block that request; 3 – not all types of ads and threats can be blocked by browser extensions due to certain browser limitations. Some elements may get to the page and slow down the loading process. Besides, unlike browser-based ad blockers, the AdGuard app blocks ads before they are loaded to the browser. This saves traffic and speeds up page loading. "},{"title":"설치 방법","type":0,"sectionRef":"#","url":"adguard-content-blocker/installation/","content":"설치 방법 info 삼성 인터넷 브라우저 혹은 Yandex 브라우저만 안전하게 보호할 수 있는 AdGuard 콘텐츠 차단기에 대해 다룹니다. 기기 전체를 보호하려면, AdGuard 앱을 다운로드하세요. The application is available in five stores: Google Play, Samsung Galaxy store, Huawei AppGallery, Aptoide, and F-Droid. To install AdGuard Content Blocker from Google Play, search AdGuard Content Blocker and tap Install. note AdGuard Content Blocker works in two browsers: Yandex Browser and Samsung Internet Browser. After the installation is completed, tap Open to run the app. If you have a supported browser installed on your device, the app will ask you to enable AdGuard. If you don't have a supported browser, you will be prompted to choose and install one. After the browser is installed, you can start AdGuard Content Blocker to block ads and trackers in it.","keywords":""},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-content-blocker/overview/","content":"Features overview info 삼성 인터넷 브라우저 혹은 Yandex 브라우저만 안전하게 보호할 수 있는 AdGuard 콘텐츠 차단기에 대해 다룹니다. 기기 전체를 보호하려면, AdGuard 앱을 다운로드하세요. AdGuard has two Android apps: AdGuard for Android and AdGuard Content Blocker. AdGuard for Android has a much wider range of functionality: it blocks ads, trackers, and annoyances in browsers and apps, uses filters as well as domain-level ad blocking, and supports user rules. AdGuard Content Blocker has a limited functionality. Full-fledged ad blockers can’t be introduced to Google Play due to the policy of the store. Google Play has banned &quot;apps that block or interfere with another app displaying ads&quot;. Thus, AdGuard for Android can be downloaded on AdGuard's official website only. As an alternative, Google offers to developers the Content blocking API. The API has strict limitations and is currently supported by two browsers: Yandex Browser and Samsung Internet browser. Many complex filtering rules supported in other AdGuard products don't work with this API. AdGuard Content Blocker was designed to fit the Google Play policy framework. Compared to other AdGuard products, AdGuard Content Blocker has less ad blocking capabilities: AdGuard Content Blocker works only in browsers that support the content blocking technology. Currently, there are two: Yandex Browser and Samsung Internet browser.Within the existing technology, the functionality of AdGuard Content Blocker is limited: for example it cannot block ads and trackers in apps or other browsers, has no filtering log and doesn't support filtering at the domain level. However, AdGuard Content Blocker has 35 filters that allow you to block ads, trackers, and annoyances in two supported browsers. You can also customize ad blocking by selecting appropriate language-specific filters or adding user rules. AdGuard Content Blocker is a free open-source software. Its source code is available on GitHub. For a better and more customizable ad blocking experience, try using the full-fledged Android app. AdGuard for Android can be downloaded from our website.","keywords":""},{"title":"설치 방법","type":0,"sectionRef":"#","url":"adguard-for-android/installation/","content":"","keywords":""},{"title":"시스템 요구 사항​","type":1,"pageTitle":"설치 방법","url":"adguard-for-android/installation/#시스템-요구-사항","content":"OS version: Android 7.0 or higher RAM: 2 GB 이상 Free disk space: 500 MB "},{"title":"설치 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-for-android/installation/#설치-방법","content":"대부분의 Android 기반 앱은 Google Play에서 다운로드할 수 있지만 Google은 Google Play를 통한 네트워크 수준 광고 차단기(다른 앱의 광고를 차단하는 앱)를 배포하는 것을 금지하기 때문에 Google Play에서 AdGuard 광고 차단 앱이 없습니다. AdGuard 블로그에서 Google 제한 정책에 대한 자세한 내용을 확인하실 수 있습니다. 그래서 Android용 AdGuard는 수동으로만 설치할 수 있습니다. 휴대폰에서 앱을 사용하려면 다음 단계를 수행하세요. Download the app on your device. Here are a few ways you can do this: head over to our website and tap the Download buttonstart the browser and type in the following URL: https://adguard.com/apkor scan this QR code Allow installing apps from unknown sources. Once the file download is complete, tap Open in the notification. A popup will appear. Tap Settings, navigate to Install unknown apps, and grant permission for the browser you've used to download the file. This guide is for Android 8+. If you have an older OS version, before downloading the apk file, go to Settings and select Additional settings in System &amp; Device. Enable Unknown sources and tap OK in the system warning window. Install the app. Once the browser has obtained the necessary permissions, the system will ask you if you want to install the AdGuard app. Tap Install. You will then be asked to read AdGuard's License Agreement and Privacy Policy. You can also participate in product development. To do this, check the boxes for Send crash reports automatically and Send technical and interaction data. Then tap Continue. Create a local VPN. In order to filter all traffic directly on your device and not route it through a remote server, AdGuard needs to establish a VPN connection. Enable HTTPS filtering. It is not a mandatory option, however, we advice to turn it on for the best ad-blocking quality. If your device is running Android 7–9, you'll be prompted to install a root certificate and configure HTTPS filtering after the local VPN setup. After you tap Install now, a prompt will appear asking you to authenticate the certificate installation with a password or fingerprint. If you have Android 10+ on your device, then after creating a local VPN, you will see the main app screen with a snack bar at the bottom: tap Enable and follow the instructions on the next screen. "},{"title":"AdGuard 제거 및 재설치​","type":1,"pageTitle":"설치 방법","url":"adguard-for-android/installation/#adguard-제거-및-재설치","content":"If you need to reinstall AdGuard on your mobile device, first delete it by opening Settings and choosing Apps (Android 7) or Apps &amp; notifications (Android 8+). Find AdGuard in the list of installed apps and press Uninstall.  To reinstall the app, repeat the actions described in the Installation section. "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-android/overview/","content":"","keywords":""},{"title":"Protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#protection","content":"This screen combines all features of AdGuard’s protection: Ad blockingTracking protectionAnnoyance blockingDNS protectionFirewallBrowsing SecurityIntegration with AdGuard VPN More on each feature below. "},{"title":"Ad blocking​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#ad-blocking","content":"The feature blocks ads by applying ad-blocking and language-specific filters. To learn about the mechanism of ad blocking, you can read a dedicated article. Basic protection effectively blocks ads on most websites. For more customized ad blocking, you can: Enable appropriate language-specific filters — they contain filtering rules for blocking ads on websites in specific languages Add websites to allowlist — these websites won't be filtered by AdGuard Create user rules — AdGuard will apply them on specified websites. Learn how to create your own user rules  "},{"title":"Tracking protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#tracking-protection","content":"Tracking protection (formerly Stealth Mode) prevents websites from gathering information about you, such as your IP addresses, information about your browser and operating system, screen resolution, and the page you came or were redirected from. It can also block cookies that websites use to mark the browser and save your personal settings, user preferences, or recognize you upon your next visit.  There are three pre-configured protection levels. Here’s what features they have enabled: Standard a. Block trackers. This setting protects against online counters and web analytics tools using AdGuard’s Tracking Protection filter b. Ask websites not to track you. This setting sends the Global Privacy Control and Do Not Track requests to the websites you visit, asking web apps to disable tracking of your activity c. Remove X-Client-Data header. This setting prevents Google Chrome from sending its version and modification info to Google domains (including Double Click and Google Analytics) High a. Block trackers b. Remove tracking parameters from URLs. This setting strips tracking parameters like utm_* and fb_ref from page URLs using the AdGuard URL Tracking filter c. Hide your search queries d. Ask websites not to track you e. Self-destruction of third-party cookies. This setting limits the time to live of third-party cookies to 180 min f. Remove X-Client-Data header Ultimate a. Block trackers b. Remove tracking parameters from URLs c. Hide your search queries d. Ask websites not to track you e. Self-destruction of third-party cookies f. Block WebRTC. This setting blocks WebRTC, a technology that allows direct streaming of data between browsers and apps and can let others know your true IP address, even if you use a proxy or VPN g. Block Push API. This setting prevents websites from sending you notifications, regardless of the activity status of your browser h. Block Location API. This setting prevents browsers from detecting your GPS data i. Hide Referer from third parties. This setting hides the HTTP header that contains the URL of the initial page and changes it into the default or the specified one. You can set your custom referer in the respective field j. Hide your User-Agent. This setting removes identifying information from the User-Agent header that usually includes the name and version of the browser, the operating system, and language settings k. Remove X-Client-Data header You can fine-tune Tracking protection by selecting the Custom protection level. Learn more about other Tracking protection settings "},{"title":"Annoyance blocking​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#annoyance-blocking","content":"This feature is based on AdGuard's annoyance filters and allows you to block popups, online assistant windows, cookie notifications, prompts to download mobile apps, and similar annoyances. Learn more about annoyance filters  "},{"title":"DNS protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#dns-protection","content":"DNS protection allows you to filter DNS requests with the help of a selected DNS server, DNS filters, and user rules: Some DNS servers have blocklists that help block DNS requests to potentially harmful domains In addition to DNS servers, AdGuard can filter DNS requests on its own using a special DNS filter. It contains a large list of ad and tracking domains — requests to them are rerouted to a blackhole server You can also block and unblock domains by creating user rules. You might need to consult our article about DNS filtering rule syntax  DNS server​ In this section, you can select a DNS server to resolve DNS requests, block ads and trackers, and encrypt DNS traffic. Tap a server to read its full description and select a protocol. If you didn't find the desired server, you can add it manually: Click Add DNS server and enter the server address (or addresses) Alternatively, you can select a DNS server from the list of known DNS providers and click Add to AdGuard next to it If you're using a private AdGuard DNS server, you can add it to AdGuard from the dashboard By default, Automatic DNS is selected. It sets a DNS server based on your AdGuard and device settings. If you have integration with AdGuard VPN or another SOCKS5 proxy enabled, it connects to AdGuard DNS Non-filtering or any other server you specify. In all other cases, it connects to the DNS server selected in your device settings. DNS filters​ This section allows you to add custom DNS filters and DNS filtering rules. You can find more filters at filterlists.com. "},{"title":"Firewall​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#firewall","content":"This feature helps manage Internet access for specific apps installed on your device and for the device in general.  Global firewall rules​ This section allows you to control Internet access for the entire device.  These rules apply to all apps on your device unless you've set custom rules for them. Custom firewall rules​ In this section, you can control Internet access for specific apps — block the ones you don’t find trustworthy, or, on the contrary, unblock the ones you want to use despite global firewall rules. Open Custom firewall rules. Under Apps with custom rules, tap Add app. Select the app for which you want to set individual rules. In Available custom rules, select the ones you want to configure and tap the &quot;+&quot; icon. The rules will now appear in Applied custom rules. If you need to block a specific type of connection, toggle the switch to the left. If you want to allow it, leave the switch enabled. Custom rules override global ones: any changes you make in Global firewall rules will not affect this app. To delete a rule or app from Custom rules, swipe it to the left. "},{"title":"Quick actions​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#quick-actions","content":"Quick actions are based on the requests from Recent activity (which can be found in Statistics). This section shows which apps have recently connected to the Internet.  If you see an app that shouldn't be using the Internet at all or an app that you haven't used recently, you can block its access on the fly. "},{"title":"Browsing Security​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#browsing-security","content":"Browsing Security protects you from visiting phishing and malicious websites. It also warns you about potential malware.  If you're about to visit a dangerous website, Browsing Security will show you the following warning:  Please note that AdGuard for Android is not an antivirus program. It neither stops viruses from downloading nor deletes already downloaded ones. To fully protect your device, we recommend using AdGuard in conjunction with an antivirus tool. Browsing Security is safe: AdGuard does not know what websites you visit. It uses hash prefixes instead of URLs to check website security. "},{"title":"Integration with AdGuard VPN​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#integration-with-adguard-vpn","content":"AdGuard for Android creates a local VPN to filter traffic. Thus, other VPN apps cannot be used while AdGuard for Android is running. However, both AdGuard and AdGuard VPN apps have Integrated modes that let you use them together. In this mode, AdGuard VPN acts as an outbound proxy server through which AdGuard routes its traffic. This allows AdGuard to create a VPN interface and block ads and trackers locally, while AdGuard VPN routes all traffic through a remote server. If you disable AdGuard VPN, AdGuard will stop using it as an outbound proxy. If you disable AdGuard, AdGuard VPN will route traffic through its own VPN interface. If you have AdGuard Ad Blocker and install AdGuard VPN, the Ad Blocker app will detect it and enable Integration with AdGuard VPN automatically. The same happens in reverse. Note that if you've enabled integration, you won't be able to manage app exclusions and connect to DNS servers from the AdGuard VPN app. You can specify apps to be routed through your VPN tunnel via Settings → Filtering → Network → Proxy → Apps operating through proxy. To select a DNS server, open AdGuard → DNS protection → DNS server. "},{"title":"App management​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#app-management","content":"This section allows you to manage permissions and filtering settings for all apps installed on your device.  By clicking an app you can manage its settings: Route its traffic through AdGuardBlock ads and trackers in this app (Filter app content)Filter its HTTPS traffic (for non-browser apps, it requires installing AdGuard's CA certificate into the system store, available on rooted devices)Route it through your specified proxy server or AdGuard VPN in the Integration mode  From the context menu, you can also access the app's stats.  "},{"title":"Problem-free and problematic apps​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#problem-free-and-problematic-apps","content":"By default, only problem-free apps are routed through AdGuard and filtered. These are the apps that still work properly when filtering is enabled. Problematic apps, such as Download Manager, radio, system apps with UID 1000 and 1001 (for example, Google Play services) may work incorrectly when routed through AdGuard. That's why you may see the following warning when trying to route or filter all apps:  To ensure proper operation of all apps installed on your device, we strongly recommend that you route only problem-free apps through AdGuard. You can see the full list of apps not recommended for filtering in Settings → General → Advanced → Low-level settings → Protection → Excluded apps. "},{"title":"Statistics​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#statistics","content":"This feature gives you a complete picture of what is happening with the traffic on your device: how many requests are being sent and to which companies, how much data is being uploaded and downloaded, what requests are being blocked, and more.  The stats are categorized into different sections. "},{"title":"Requests​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#requests","content":"This section shows the number of blocked ads, trackers, and the total number of requests for the selected time period: 24 hours, 7 days, 30 days, or all time. You can also filter requests by data type: mobile data, Wi-Fi, or all data combined. Recent activity, formerly known as Filtering log, shows the last 10,000 requests processed by AdGuard. Tap Customize to filter requests by status (regular, blocked, modified, or allowlisted) or origin (first-party or third-party). You can tap a request to view its details and add a blocking or unblocking rule. "},{"title":"Data usage​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#data-usage","content":"This section shows the amount of downloaded, uploaded, and saved traffic for the selected time period and data type. Tap saved, uploaded, or downloaded to view the graph of data usage over time. "},{"title":"Apps​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#apps","content":"This section displays stats for all apps installed on your device. You can sort apps by the number of blocked ads or trackers or by the number of sent requests. Tap View all apps to expand the list of your apps, sorted by the number of ads, trackers, or requests.  If you tap an app, you can see its full stats: the requests it sends and the domains and companies it reaches out to. "},{"title":"Companies​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#companies","content":"This section displays companies that your device reaches out to. What does it mean? AdGuard detects the domains your device sends requests to and determines which companies they belong to. A database of companies can be found on GitHub. "},{"title":"DNS statistics​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#dns-statistics","content":"This section shows data about the requests handled by DNS protection. You can see the total number of requests sent and how many were blocked by AdGuard in figures and graphs. You'll also find statistics on the amount of traffic saved, downloaded, and uploaded. "},{"title":"Battery usage​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#battery-usage","content":"This section displays statistics on the device resources used by AdGuard during the last 24 hours. The data may differ from your device settings. This happens because the system attributes the traffic of filtered apps to AdGuard. Thus, the device shows that AdGuard consumes more resources than it actually does. Read more about battery and traffic consumption issues "},{"title":"Settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#settings","content":""},{"title":"General​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#general","content":"This section helps you manage the appearance and behavior of the app: you can set the color theme and language, manage notifications, and more. If you want to help the AdGuard team detect app crashes and research usability, you can enable Auto-report crashes and Send technical and interaction data.  Under App and filter updates, you can configure automatic filter updates and select an app update channel. Choose Release for more stability and Beta or Nightly for early access to new features.  Advanced settings​ Automation allows you to manage AdGuard via tasker apps. Watchdog helps protect AdGuard from being disabled by the system (read more about Android's battery save mode). The value you enter will be the interval in seconds between watchdog checks. Logging level defines what data about the app's operation should be logged. By default, the app collects the data about its events. The Debug level logs more events — enable it if asked by the AdGuard team to help them get a better understanding of the problem. Read more about collecting and sending logs  The Low-level settings section is for expert users. Read more about low-level settings  "},{"title":"Filtering​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#filtering","content":"This section allows you to manage HTTPS filtering settings, filters, and userscripts, and set up a proxy server.  Network​ HTTPS filtering​ To block ads and trackers on most websites and in most apps, AdGuard needs to filter their HTTPS traffic. Read more about HTTPS filtering Security certificates​ To manage encrypted traffic, AdGuard installs its CA certificate on your device. It's safe: the traffic is filtered locally and AdGuard verifies the security of the connection. On older versions of Android, the certificate is installed automatically. On Android 11 and later, you need to install it manually. Installation instructions The CA certificate in the user store is enough to filter HTTPS traffic in browsers and some apps. However, there are apps that only trust certificates from the system store. To filter HTTPS traffic there, you need to install AdGuard's CA certificate into the system store. Instructions HTTPS-filtered apps​ This section contains the list of apps for which AdGuard filters HTTPS traffic. Please note that the setting can be applied for all apps only if you have CA certificates both in the user store and in the system store. HTTPS-filtered websites​ This setting allows you to manage websites for which AdGuard should filter HTTPS traffic. HTTPS filtering allows AdGuard to filter the content of requests and responses, but we never collect or store this data. However, to increase security, we exclude websites that contain potentially sensitive information from HTTPS filtering. You can also add websites that you consider necessary to exclusions by selecting one of the modes: Exclude specific websites from HTTPS filteringFilter HTTPS traffic only on the websites added to exclusions By default, we also do not filter websites with Extended Validation (EV) certificates, such as financial websites. If needed, you can enable the Filter websites with EV certificates option. Proxy​ You can set up AdGuard to route all your device's traffic through your proxy server. How to set up an outbound proxy In this section, you can also set up a third-party VPN to work with AdGuard, if your VPN provider allows it. Under Apps operating through proxy, you can select apps that will route their traffic through your specified proxy. If you have Integration with AdGuard VPN enabled, this setting plays the role of AdGuard VPN's app exclusions: it allows you to specify apps to be routed through the AdGuard VPN tunnel. Routing mode​ This section allows you to select the traffic filtering method. Local VPN filters traffic through a locally created VPN. This is the most reliable mode. Due to Android restrictions, it is also the only system-wide traffic filtering method available on non-rooted devices. note The Local VPN mode doesn't allow AdGuard to be used simultaneously with other VPNs. To use another VPN with AdGuard, you need to reconfigure it to work in proxy mode and set up an outbound proxy in AdGuard. For AdGuard VPN, this is done automatically with the help of the Integrated mode. Automatic proxy is an alternative traffic routing method that does not require the use of a VPN. One significant advantage is that it can be run in parallel with a VPN. This mode requires root access. Manual proxy involves setting up a proxy server on a specific port, which can then be configured in Wi-Fi settings. This mode requires root access for Android 10 and above. Filters​ AdGuard blocks ads, trackers, and annoyances by applying rules from its filters. Most features from the Protection section are powered by AdGuard filters. If you enable Basic protection, it will automatically turn on the AdGuard Base filter and AdGuard Mobile Ads filter. And vice versa: if you turn off both filters, Basic protection will also be disabled.  Filters enabled by default are enough for normal AdGuard operation. However, if you want to customize ad blocking, you can use other AdGuard or third-party filters. To do this, select a category and enable the filters you'd like. To add a custom filter, tap Custom filters → Add custom filter and enter its URL or file path. note If you activate too many filters, some websites may work incorrectly. Read more about filters Userscripts​ Userscripts are mini-programs written in JavaScript that extend the functionality of one or more websites. To install a userscripts, you need a special userscript manager. AdGuard has such a functionality and allows you to add userscripts by URL or from file.  AdGuard Extra​ AdGuard Extra is a custom userscript that prevents websites from bypassing ad blockers and re-inserting blocked ads. "},{"title":"License​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#license","content":"In this section, you can find information about your license and manage it: Buy an AdGuard license to activate the full version's featuresLog in to your AdGuard account or enter the license key to activate your licenseSign up to activate your 7-day trial period if you haven't used it yetRefresh the license status if you have recently extended its validityOpen the AdGuard account to manage your license thereReset your license – for example, if you've reached device limit for this license and want to apply another one  "},{"title":"Support​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#support","content":"Use this section if you have any questions or suggestions regarding AdGuard for Android. We recommend consulting FAQ or this knowledge base before contacting support.  If you notice a missed ad, please report it via Report incorrect blocking. For unusual app behavior, select Report a bug. If possible, describe your problem in detail and add app logs. How to describe an issue For your suggestions, use Request a feature. note GitHub is an alternative way to report bugs and suggest new features. Instructions and repository links "},{"title":"Free vs full version​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#free-vs-full-version","content":"AdGuard for Android has a free and a paid version. Paid features extend AdGuard's capabilities: Ad blocking in apps allows you to block ads in non-browser apps. You can specify apps for filtering in App management note AdGuard uses its own ad-free media player to block ads in YouTube videos. To open the media player, open the YouTube app and share a video with AdGuard. This feature is free. Tracking protection increases your privacy by blocking tracking requests, online counters, UTM tags, analytics systems, and more. Back to Tracking protection Browsing Security warns you if you're about to visit a potentially dangerous website. Back to Browsing Security Custom filters and user rules allow you to add your own filtering rules and third-party filters to fine-tune ad blocking. Back to filters Userscripts allow you to use AdGuard Extra to bypass ad blocker bans and install other userscripts to extend your browser's functionality. Back to userscripts You can get access to these features by purchasing a license. How to activate the license "},{"title":"Rooted vs non-rooted devices​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#rooted-vs-non-rooted-devices","content":"Due to additional security measures of Android apps, some AdGuard features are only available on rooted devices. Here's the list of them: HTTPS filtering in most apps requires installing a CA certificate into the system store, as most apps do not trust certificates in the user store. Installing a certificate into the system store is only possible on rooted devicesThe Automatic proxy routing mode requires root access due to Android's limitations on system-wide traffic filteringThe Manual proxy routing mode requires root access on Android 10 and above as it's no longer possible to determine the name of the app associated with a connection filtered by AdGuard "},{"title":"배터리 및 트래픽 소비 문제","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/battery/","content":"","keywords":""},{"title":"자체 배터리 사용 통계 화면​","type":1,"pageTitle":"배터리 및 트래픽 소비 문제","url":"adguard-for-android/solving-problems/battery/#자체-배터리-사용-통계-화면","content":"You can access it by navigating to Statistics → Battery usage.  Inside you will find a chart that shows the AdGuard battery resource consumption within the last 24 hours, with an option to get more detailed hour-to-hour data by tapping on the chart. 또한 데이터의 숫자 분석과 간단한 기술 설명도 있습니다. "},{"title":"AdGuard는 실제로 얼마나 많은 배터리를 소비합니까?​","type":1,"pageTitle":"배터리 및 트래픽 소비 문제","url":"adguard-for-android/solving-problems/battery/#adguard는-실제로-얼마나-많은-배터리를-소비합니까","content":"First, let us lay down a bit of theory and links with necessary data. Android derives traffic consumption judging on so-called Power Profile, which is given by every manufacturer: https://source.android.com/devices/tech/power/values.html Main part of Power Profile is a set of values in mAh which define battery consumption for every component of the device: https://source.android.com/devices/tech/power/values.html For example, from the table above: wifi.active= 31mA additional consumption in mAh caused by WiFi data exchange. radio.active= 100-300mA additional consumption in mAh caused by data exchange over Mobile network. cpu.active= 100-200mA additional consumption in mAh caused by CPU work. AdGuard by itself almost doesn't consume any traffic, so for the sake of evaluating battery resource consumption let's get rid of 'Mobile/WiFi packets' and stcik to 'CPU'. Formula to calculate the consumption: &quot;CPU TIME (ms)&quot; X &quot;cpu.active&quot; / (60 60 1000) = &quot;POWER USE mAh&quot; Let's put real numbers into this formula. Let's take CPU total from the second screenshot and convert into milliseconds: 506000 A coefficient cpu.active for 2GHz will be roughly equal to 225mAh Final result: 506000 225 / (60 60 * 1000) = 31,625mAh "},{"title":"결론​","type":1,"pageTitle":"배터리 및 트래픽 소비 문제","url":"adguard-for-android/solving-problems/battery/#결론","content":"Real consumption is several times less than it is shown in Android statistics. Instead of 220mAh it should be somewhere around 31-40mAh. On the other hand, browser's consumption should be not 66mAh, but ~200mAh. "},{"title":"How to protect AdGuard from being disabled by the system","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/background-work/","content":"","keywords":""},{"title":"Asus​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#asus","content":"Information on Asus devices is still far from being exhaustive so there may be more issues than listed here. We're going to update this part of the article when we know more. The main source of potential problems with background work on Asus devices is associated with the optimization app called Power Master. It is pre-installed and has pretty aggressive default settings, e.g. to block apps from starting and to kill background tasks when your screen turns off. To make sure apps background processing works, set up the following: Go to Mobile Manager → PowerMaster → Settings (or Battery-saving options) → Uncheck Clean up in suspend Go to Mobile Manager → PowerMaster → Settings (or Battery-saving options) → Uncheck Auto-deny apps from auto starting Alternatively, instead of unchecking Auto-deny apps from auto starting entirely, you can go to Settings → Battery-saving options → Auto-start manager → AdGuard and uncheck it. "},{"title":"Xiaomi​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#xiaomi","content":"Xiaomi (and especially MIUI) devices are among the most troublesome ones when it comes to background work. They are known to limit background processes and have non-standard permissions with a lack of proper documentation to top it off. Sometimes apps just don't work right on Xiaomi phones and there's little that can be done about that. Below are some actions you might attempt to perform if you run into any trouble regarding AdGuard's background work on various Xiaomi devices. "},{"title":"MIUI 12.0.8+​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-1208","content":"To let your AdGuard app run successfully in the background, do the following: In Settings → Apps → Manage apps → scroll down to locate AdGuard, set Autostart to &quot;On&quot;.  Scroll down to Battery saver, tap it, and set to &quot;No restrictions&quot;.  In Other Permissions, set all possible permissions to &quot;On&quot; Run the Security app. Tap on the Gear icon at the top-right corner of the screen.  Tap Boost speed in Feature Settings.  Tap Lock apps.  In the Lock apps screen, set the toggle switch for the AdGuard app to On.  That’s all! You’ve successfully pinned the AdGuard app. "},{"title":"MIUI 12​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-12","content":"Go to Settings → Apps → Manage apps → AdGuard.  Set Autostart to &quot;On&quot;Set all possible permissions in Other Permissions to &quot;On&quot;Set Battery saver to No restrictions  Now launch the active apps manager by swiping up from the bottom of the screen and look for the AdGuard app.  Tap and hold it until a special menu pops up. Select a lock icon.  The lock icon should appear above the app window.  "},{"title":"MIUI 10-11​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-10-11","content":"To let your app run successfully in the background, configure its settings as follows: Set Autostart to &quot;On&quot;  Settings → Battery &amp; performance → switch-off Battery saver function  Then open App battery saver settings → AdGuard → No restrictions  "},{"title":"All models​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#all-models","content":"The following steps should be performed on any Xiaomi device that keeps killing the AdGuard app: Power management​ Please enable: Settings → Advanced Settings → Battery manager → set Power plan to PerformanceDevice Settings → Advanced Settings → Battery Manager → Protected apps — AdGuard needs to be ProtectedDevice Settings → Apps → AdGuard → Battery → Power-intensive prompt and Keep running after screen offSettings → Additional Settings → Battery &amp; Performance → Manage apps’ battery usage and here: Switch Power Saving Modes to &quot;Off&quot;Choose the following options: Saving Power in The Background → Choose apps → AdGuard → Background Settings → No restrictions App battery saver​ Set Security → Battery → App Battery Saver → AdGuard to No restriction App pinning​ To set up AdGuard's background work for Xiaomi devices you should pay attention to Battery and Permissions. Tap the Recent tasks button and swipe AdGuard down to make options visible (as shown on the screenshot): Tap on the lock icon. This will stop Xiaomi from closing AdGuard automatically. It should look like this: Go to Battery Select the battery saver app Find and select AdGuard Set up the following Background settings: Go to Permissions Select Autostart Make sure that autostart function is enabled for AdGuard: "},{"title":"Samsung​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#samsung","content":"On many Samsung devices, any app that is unused for 3 days will not be able to start from background. You should turn off Adaptive battery and Put apps to sleep options wherever possible to prevent that. Note that after an app or OS update, these settings often revert to their default values and will need to be turned off again. "},{"title":"Android 11+​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-11","content":"On Android 11, Samsung will prevent apps (including AdGuard) from working in background by default unless you exclude them from battery optimizations. To make sure AdGuard will not get killed in the background: Lock AdGuard in Recent Open Recent apps.Find AdGuard.Long-press the icon of the AdGuard app. To keep AdGuard working properly: Go to Settings → Apps → AdGuard → Battery → Optimize battery usage In the drop-down menu, select All. Then find AdGuard on the list and set the state for it to Don’t optimize (on some models, there may be a switch that you need to toggle off). On some devices, the relevant setting may be named differently and be located in other places. Among the possible paths is: Settings → Apps → (⁝) menu → Special Access → Optimize battery usage → Find AdGuard on the list and uncheck it Disable automatic optimization. To do so: Open Battery → (⁝) menu → Choose Automation → Toggle off all of the settings there Again, the exact path may differ, for example on some devices you should go to: Phone Settings → Device care → Tap the (⁝) 3-dot menu → Advanced → Disable Auto optimization and Optimize settings If your phone has it, disable Adaptive battery: Open phone Settings → Battery → More battery settings → Toggle off Adaptive battery Disable Sleeping apps (the exact name of this setting and the path to it may vary depending on the device): Open phone Settings → Battery → Background usage limits → Disable Put unused apps to sleep "},{"title":"Android 9 & 10​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-9--10","content":"Go to Phone settings → Device care → Tap on the Battery item → (⁝) 3-dot menu → Settings and uncheck Put unused apps to sleep and Auto-disable unused apps. Check that Phone settings → Apps → Sleep as Android → Battery → Background restriction is set to App can use battery in background for AdGuard. Remove AdGuard from Sleeping apps. To do that: Go to Phone settings → Device care Tap Battery Tap the 3-dot menu → Settings Tap Sleeping apps Wake up AdGuard using the trashcan icon "},{"title":"Old Samsung devices​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#old-samsung-devices","content":"For early Samsung devices, there is no huge need for setting up the background operation, but if in your case the AdGuard app is getting closed or disappears from the recent tasks after a while, do the following: Tap the Recent tasks button, tap the Additional settings icon. It should look like this: Tap Lock Apps: Tap on the lock icon "},{"title":"Huawei​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei","content":"Huawei and their Android customization EMUI belongs to the most troublesome on the market with respect to non-standard background process limitations. On default settings, virtually all apps that work in background will face problems and ultimately break. "},{"title":"App Launch on some EMUI 8, 9 and 10 devices (Huawei P20, Huawei P20 Lite, Huawei Mate 10…)​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#app-launch-on-some-emui-8-9-and-10-devices-huawei-p20-huawei-p20-lite-huawei-mate-10","content":"This feature may or may not be available for all devices or may be labeled differently. Go to phone Settings → Battery → App launch Turn off Manage all automatically Set AdGuard to Manage manually and enable all toggles. Disable Startup manager that prevents apps from running automatically after the phone starts up. Go to Settings → All → Startup manager → Toggle AdGuard off Also for reliable background processes you may need to uninstall PowerGenie as detailed below. "},{"title":"EMUI 9+ devices and PowerGenie​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#emui-9-devices-and-powergenie","content":"note On phones with EMUI 9+ (Android P+) there is a task killer app called PowerGenie which forces to quit all apps not whitelisted by Huawei and does not give users any configuration options. See below how to uninstall it. Huawei is extremely inventive in breaking apps on their devices. In addition to all the non-standard power management measures described below, they introduced a task killer app built right into EMUI 9 on Android Pie. It is called PowerGenie and it kills all apps that are not on its whitelist. You cannot add custom apps on their pre-defined whitelist. This means there is no other way to achieve proper app functionality on Huawei than uninstalling PowerGenie. Unfortunately, this is a system app that can only be fully uninstalled using ADB (Android Debug Bridge). Source XDA forum. You need to: It is not confirmed, but it might be possible to just disable PowerGenie in Phone settings → Apps. If this setting is present in your device's settings, you may skip the following steps. However, it would need to be re-applied every time you reboot your device. If there is no such setting, follow this instruction: Install ADB on your computer; Connect your phone with a data cable; Enable Developer options; Enable USB debugging within Developer options on your phone; Run the following commands on your computer: adb shell pm uninstall --user 0 com.huawei.powergenie adb shell pm uninstall -k --user 0 com.huawei.android.hwaps If AdGuard keeps getting killed, also try running adb shell pm stopservice hwPfwService "},{"title":"EMUI 6+ devices (and some EMUI 5 devices)​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#emui-6-devices-and-some-emui-5-devices","content":"Phone settings → Advanced Settings → Battery manager → Power plan set to Performance;Phone Settings → Advanced Settings → Battery Manager → Protected apps — set AdGuard as Protected;Phone Settings → Apps → Your app → Battery → Power-intensive prompt [uncheck] and Keep running after screen off [check];Phone settings → Apps → Advanced (At the bottom) → Ignore optimizations → Press Allowed → All apps → Find AdGuard on the list and set to Allow. Huawei P9 Plus​ Open device settings → Apps → Settings → Special access → choose Ignore battery optimization → select Allow for AdGuard. "},{"title":"Huawei P20, Huawei Honor 9 Lite and Huawei Mate 9 Pro​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei-p20-huawei-honor-9-lite-and-huawei-mate-9-pro","content":"Open device settings → Battery → App launch → set AdGuard to Manage manually and make sure everything is turned on. "},{"title":"Huawei P20, Huawei P20 Lite, Huawei Mate 10​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei-p20-huawei-p20-lite-huawei-mate-10","content":"Phone settings → Battery → App launch → set AdGuard to Manage manually and make sure everything is turned on. Also for reliable background processes you may need to uninstall PowerGenie as described above. "},{"title":"Early Huawei​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#early-huawei","content":"Old Huawei devices are the easiest to set up, it is enough to perform two simple steps to lock AdGuard in the background so it won't be terminated by battery saving or background killer process. Tap the Recent tasks button: Tap on the lock icon: Besides, to set up the background work of AdGuard more effectively, you should open device settings and do the following: Go to Settings → open Battery Manager → set Power plan to Performance;Then choose Protected apps in the Battery Manager and check if AdGuard is Protected;Go to Apps in the main settings and click AdGuard there → choose Battery → enable Power-intensive prompt and Keep running after screen is off;Then in the Apps section open Settings (at the bottom) → Special access → choose Ignore battery optimization → press Allowed → All apps → find AdGuard on the list and set it to Deny. "},{"title":"Meizu​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#meizu","content":"Meizu has almost the same approach to the background process limitations as Huawei and Xiaomi. So you can avoid disabling the background work of AdGuard and any other app by adjusting the following settings: Go to Advanced Settings → open Battery Manager → set Power plan to Performance;Then choose Protected apps in the Battery Manager and check if AdGuard is Protected;Go to Apps section and click AdGuard there → choose Battery → enable Power-intensive prompt and Keep running after screen is off. "},{"title":"Nokia​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia","content":"Nokia devices running Android 9+ have The Evenwell Power saver disabled, which was the main culprit for killing bacground processes. If AdGuard still gets killed on your Nokia phone, check out the legacy instruction. "},{"title":"Nokia 1 (Android Go)​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia-1-android-go","content":"Install ADB on your computer; Connect your phone with a data cable; Enable Developer options; Enable USB debugging within Developer options on your phone; Uninstall the com.evenwell.emm package via the following adb commands: adb shell pm uninstall --user 0 com.evenwell.emm "},{"title":"Nokia 3.1 and 5.1​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia-31-and-51","content":"On these devices there is a task killer called DuraSpeed that terminates all background apps. It can't be uninstalled or disabled by regular means. These actions require ADB, and even then, when disabled, DuraSpeed will re-enable itself on reboot. You need a tasker app like MacroDroid for automatic DuraSpeed's disabling. Install ADB on your computer; Connect your phone with a data cable; Enable Developer options; Enable USB debugging within Developer options on your phone; Grant MacroDroid (or your choice of automation app) the ability to write to the global settings store by entering this command: adb shell pm grant com.arlosoft.macrodroid android.permission.WRITE_SECURE_SETTINGS Create a task triggered at Device Boot that performs the following: System Setting: type Global, name setting.duraspeed.enabled, value -1System Setting: type System, name setting.duraspeed.enabled, value -1System Setting: type Global, name setting.duraspeed.enabled, value 0System Setting: type System, name setting.duraspeed.enabled, value 0 note You need both Global and System type settings. The screenshot shows only Global as an example. ::: "},{"title":"Other Nokia models​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#other-nokia-models","content":"Go to phone Settings → Apps → See all apps. Tap on the right top corner menu → Show system. Find Power saver app on the list, select it and tap Force close. It will remain stopped for a while but will restart at some point. From now on, AdGuard should work normally and use the standard Android battery optimizations until Power Saver restarts. An alternative, more permanent solution for more tech-savvy users: Install ADB on your computer; Connect your phone with a data cable; Enable Developer options; Enable USB debugging within Developer options on your phone; Uninstall the com.evenwell.powersaving.g3 package via the following adb commands: adb shell pm uninstall --user 0 com.evenwell.powersaving.g3 "},{"title":"Oppo​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#oppo","content":"Sometimes background services are being killed (including accessibility services, which then need re-enabling) when you turn the screen off. So far, a workaround for this is: Go to Security Centre → tap Privacy Permissions → Startup manager and allow AdGuard app to run in background. Other solutions: Pin AdGuard to the recent apps screenEnable AdGuard in the app list inside the security app’s &quot;startup manager&quot; and &quot;floating app list&quot; (com.coloros.safecenter / com.coloros.safecenter.permission.Permission)Turn off battery optimizations "},{"title":"OnePlus​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#oneplus","content":"Devices with OxygenOS on board are the most problematic, with its OS-specific cache cleaning and free RAM, including OS optimization. In addition, OxygenOS can interrupt the AdGuard's work if you do not use it for a while. To avoid these unwanted consequences, follow these steps. "},{"title":"Locking the app​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#locking-the-app","content":"Go to Settings Battery → Battery optimization Find AdGuard Tap on it and select Don't optimize option Tap Done to save Open recent apps menu (as showed on this screenshot): Lock AdGuard app: caution On some OnePlus phones there is also a thing called App Auto-Launch and Deep Optimization which essentially prevents apps from working in the background. Please disable it for AdGuard. "},{"title":"Battery optimization​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#battery-optimization","content":"Open device settings → Battery → Battery optimization → switch to the All apps list (top menu) → choose AdGuard → activate Don’t optimize Open device settings → Battery → Battery Optimization → (⁝) three-dot menu → Advanced Optimization → Disable Deep Optimization "},{"title":"App Auto-Launch​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#app-auto-launch","content":"App Auto-Launch (on some OnePlus phones) essentially prevents apps from working in the background. Please disable it for AdGuard. "},{"title":"Enhanced / Advanced optimization​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#enhanced--advanced-optimization","content":"For OnePlus 6 and above: Open System settings → Battery → Battery optimization → (⁝) three-dot menu → Advanced optimizationDisable Deep optimization / Adaptive BatteryDisble Sleep standby optimization. OnePlus tries to learn when you are usually asleep, and in those times it will then disable the phone’s network connections. This setting will prevent push notifications from being delivered. For OnePlus below 6: Turn off System settings → Battery → Battery optimization → (⁝) three-dot menu → Enhanced optimization. "},{"title":"Recent apps clearing behaviour​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#recent-apps-clearing-behaviour","content":"Normally when you swipe an app away, it won’t close. On OnePlus this may however work in a different way. Recent app clear behaviour manager might be set up in a way that swiping the app to close will kill it. To return it to the &quot;normal&quot; mode: Go to Settings → Advanced → Recent app management → Switch to Normal clear "},{"title":"Sony​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#sony","content":"Sony was the first mobile OS developer to introduce non-standard background process optimization. It is called Stamina mode and it instantly breaks all background processes if enabled. To solve this: Go to Settings → Battery → Disable STAMINA mode  On Android 11+, on the same screen with STAMINA mode, there is a setting called Adaptive battery, you should disable it too. You also need to be set AdGuard as Excepted from Power-saving feature: System settings ​→ Apps &amp; Notifications ​→ Advanced ​→ Special app access ​→ Power saving feature → Switch AdGuard to Excepted "},{"title":"Wiko​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#wiko","content":"Wiko devices are problematic in terms of non-standard background process optimizations. To let AdGuard work in background, do the following: Go to Phone Assistant → Battery → turn off Eco ModeGo back and go to Manual modeTap on the Gear icon on top right → Background apps whitelist → Select AdGuard "},{"title":"Android stock devices Pixel/Nexus/Essential​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-stock-devices-pixelnexusessential","content":"Android stock OS normally does not conflict with apps working in the background, but if you are facing any issues you will need to switch on the Always-on VPN mode. Go to Settings → Network and Internet Tap VPN and choose AdGuard Set up Always-on VPN mode "},{"title":"Known compatibility issues with Android apps","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/compatibility-issues/","content":"","keywords":""},{"title":"VPN apps​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#vpn-apps","content":"Other VPN apps are incompatible with AdGuard running in the Local VPN filtering mode since you cannot have two active VPNs at the same time. To solve this problem we suggest you: use AdGuard VPN — it has Integrated mode that allows two apps to operate seamlesslyuse AdGuard in Local HTTP Proxy mode caution On Android 10 and later, the 'manual' HTTP proxy mode is no longer supported. configure your VPN app to to act as an outbound proxy and set up a local outbound proxy using the parameters from the third-party app. To do this, a third-party VPN app must support SOCKS4/SOCKS5 mode. For example, AdGuard can be automatically configured with 'Orbot: Proxy with Tor'. "},{"title":"Private DNS​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#private-dns","content":"The Private DNS feature was introduced in Android Pie. Before version Q, Private DNS didn't break AdGuard DNS filtering logic and the DNS forwarding through AdGuard worked normally. But starting from version Q, the presence of Private DNS forces apps to redirect traffic through the system resolver instead of AdGuard. See Android devs blog for more details. To solve the problem with Private DNS, use the $network rule Some device manufacturers keep Private DNS settings hidden and set 'Automatic' mode as a default one. Thus, disabling Private DNS is impossible but we can make the system think that the upstream is not valid by blocking it with a $network rule. For instance, if the system uses Google DNS by default, we can add rules |8.8.4.4^$network and |8.8.8.8^$network to block Google DNS. "},{"title":"Unsupported browsers​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#unsupported-browsers","content":""},{"title":"UC Browsers: UC Browser, UC Browser for x86, UC Mini, UC Browser HD​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#uc-browsers-uc-browser-uc-browser-for-x86-uc-mini-uc-browser-hd","content":"To be able to filter HTTPS traffic, AdGuard requires the user to add a certificate to the device's trusted user certificates. Unfortunately, UC-family browsers don't trust user certificates, so AdGuard cannot perform HTTPS filtering there. To solve this problem, move the certificate to the system certificate store caution Requires root access. "},{"title":"Dolphin Browser: Dolphin Browser, Dolphin Browser Express​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#dolphin-browser-dolphin-browser-dolphin-browser-express","content":"AdGuard cannot filter its traffic when operating in Manual proxy mode because this browser ignores system proxy settings. Use the Local VPN filtering mode to solve this problem "},{"title":"Opera mini: Opera mini, Opera mini with Yandex​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#opera-mini-opera-mini-opera-mini-with-yandex","content":"Opera mini drives traffic through a compression proxy by default and AdGuard is not able to decompress and filter it at the same time. There is no solution at this moment "},{"title":"Puffin Browser: Puffin Browser, Puffin Browser Pro​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#puffin-browser-puffin-browser-puffin-browser-pro","content":"Puffin Browser drives traffic through a compression proxy by default and AdGuard is not able to decompress and filter it at the same time. There is no solution at this moment "},{"title":"HAR 파일 수집 방법","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/har/","content":"","keywords":""},{"title":"HAR 파일이란 무엇인가요?​","type":1,"pageTitle":"HAR 파일 수집 방법","url":"adguard-for-android/solving-problems/har/#har-파일이란-무엇인가요","content":"HAR(HTTP ARchive) 형식은 웹 브라우저와 사이트 간의 상호 작용을 로깅하기 위한 JSON 형식의 아카이브 파일로, 브라우저가 불러오는 웹 페이지에 대한 자세한 정보를 내보내는 데 이용되는 HTTP 트랜잭션에 대한 보관 데이터를 정의합니다. HAR 파일 형식에 대한 자세한 내용은 softwareishard.com에서 확인하실 수 있습니다. "},{"title":"HAR 파일 수집 방법​","type":1,"pageTitle":"HAR 파일 수집 방법","url":"adguard-for-android/solving-problems/har/#har-파일-수집-방법","content":"간혹 재생산하기 어려운 특정 광고를 차단하기 위해 HAR 파일 분석이 필요합니다. HAR 파일을 수집하려면 다음 단계를 따르십시오. Open AdGuard and go to Settings (⚙ icon in the lower right corner).Tap General →Advanced → Low-level settings.Scroll down and activate Capture HAR in the Filtering section.Open the app and perform the necessary actions to reproduce the problem.Turn Capture HAR off.Go back to Advanced.Tap Export logs and system info → Allow (if necessary) → Save. .har 파일을 AdGuard 지원 팀에 보내 주세요. note Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message. "},{"title":"How to analyze HAR files​","type":1,"pageTitle":"HAR 파일 수집 방법","url":"adguard-for-android/solving-problems/har/#how-to-analyze-har-files","content":"다음은 HAR 파일을 분석하기 위한 몇 가지 소스입니다. HTTP 아카이브 뷰어 마스터는 HAR 분석기 도구로, HTTP 추적 도구로 생성 된 HTTP 아카이브 (HAR) 로그 파일을 시각화합니다.Fiddler는 웹 디버깅 프록시로, 컴퓨터와 인터넷 간의 모든 HTTP(S) 트래픽을 캡처, 검사, 모니터링하고 모의 요청을 수행하고 네트워크 문제를 진단할 수 있습니다. "},{"title":"Moving CA certificate to System store on rooted devices","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/","content":"","keywords":""},{"title":"How to install AdGuard's Certificate to System store (on a rooted device)​","type":1,"pageTitle":"Moving CA certificate to System store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#how-to-install-adguards-certificate-to-system-store-on-a-rooted-device","content":"Enable HTTPS filtering in AdGuard for Android and save AdGuard's certificate to the User store (use this instruction if needed) From AdGuard for Android v4.1 and after users can install two certificates to the User store, which will help to filter websites in Chrome browser. Go to AdGuard app → Menu (≡) → Settings → Network → HTTPS filtering → Security certificate → tap “Copy to the system store” That is enough for older versions of Magisk. However, if you have a newer version, you will get this message: Unable to copy the certificate to the system store. Try using “AdGuard Certificate” module. In that case, proceed to steps below: Go to Magisk → Settings Enable Zygisk Download the .zip file (of “AdGuard Certificate” module) from the latest release on GitHub Go to Magisk → Modules → Install from storage and select the downloaded .zip file Reboot If a new version of &quot;AdGuard certificate&quot; module comes out, repeat steps 3-7 to update the module. The module does its work during the system boot. If your AdGuard certificate changes, you'll have to reboot the device for the new certificate to be copied to the system store. "},{"title":"Bromite browser​","type":1,"pageTitle":"Moving CA certificate to System store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#bromite-browser","content":"note In order for the Bromite browser to work properly, in addition to the steps mentioned above, you need to set &quot;Allow user certificates&quot; in chrome://flags to &quot;Enabled&quot; state. "},{"title":"Chrome and Chromium-based browsers​","type":1,"pageTitle":"Moving CA certificate to System store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#chrome-and-chromium-based-browsers","content":"Long story short, you will have no problems with HTTPS filtering in Chrome and Chromium-based browsers on rooted devices, if you use &quot;AdGuard Certificate&quot; module. Here is a bit more detailed explanation: Chrome (and subsequently many other Chromium-based browsers) has recently started requiring CT logs for CA certs found in the System store. &quot;AdGuard Certificate&quot; module copies AdGuard's CA certificate from the User store to the System store. It also contains a Zygisk module that reverts any modifications done by Magisk for certain browsers. This way the browsers only find AdGuard’s certificate in the User store and don’t complain about the missing CT log, while other apps continue to use the same certificate from the System store. "},{"title":"Firefox 브라우저의 인증서 신뢰 문제","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/firefox-certificates/","content":"","keywords":""},{"title":"Method 1​","type":1,"pageTitle":"Firefox 브라우저의 인증서 신뢰 문제","url":"adguard-for-android/solving-problems/firefox-certificates/#method-1","content":"note 이 방법은 Firefox Nightly 90.0a1 이상 버전에서만 사용될 수 있습니다. Firefox의 베타 및 일반 버전이 v90에 도달하면 이 방법을 해당 버전에도 적용할 수 있습니다. Firefox Nightly가 AdGuard 인증서를 신뢰하도록 하려면 다음 단계를 따르십시오. Run the browser. Go to Settings → About Firefox. Tap the Firefox logo five times. Navigate to Settings → Secret Settings. Toggle Use third party CA certificates. "},{"title":"Method 2​","type":1,"pageTitle":"Firefox 브라우저의 인증서 신뢰 문제","url":"adguard-for-android/solving-problems/firefox-certificates/#method-2","content":"note This method will only work on rooted devices. Install and configure adb; On the Windows platform, Samsung owners may need to install this utility. Activate the developer mode and enable USB debugging: Open the Settings app on your phone;Go to System section (last item in the settings menu). In this section, find the sub-item About phone;Tap the Build number line 7 times. After that, you will receive a notification that You are now a developer (If necessary, enter an unlock code for the device);Open System Settings → Developer Options → Scroll down and enable USB debugging → Confirm debugging is enabled in the window Allow USB debugging after reading the warning carefully. Install the Firefox browser (release version); Open the AdGuard settings (gear icon in the bottom right corner) → Filtering → Network → HTTPS filtering → Security certificate → Instructions for Firefox → Install for old versions; Open the folder data/data/org.mozilla.firefox/files/mozilla using adb shell su and cd data/data/..., then browse to the folder named xxxxxxx.default and memorize its name; In the specified folder we are interested in two files: cert9.dbkey4.db We need to move these files to a folder of the browser where the security certificate issue occurred: data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyy.default. The full command will look like this: adb shell sucp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxxx.default/cert9.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.defaultcp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxxx.default/key4.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.default In case you received the system notification permission denied, you should first move the specified files to the permission-free directory. And after that you should move them to the necessary folder in your Firefox browser. The full command should look something like this: adb shell sucp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxx.default/cert9.db sdcard/Downloadcp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxx.default/key4.db sdcard/Downloadcp -R sdcard/Download/cert9.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.defaultcp -R sdcard/Download/key4.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.default If adb shell su does not work, you should try adb shell initially, and then su. "},{"title":"How to collect debug logs","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/log/","content":"","keywords":""},{"title":"Collecting debug log​","type":1,"pageTitle":"How to collect debug logs","url":"adguard-for-android/solving-problems/log/#collecting-debug-log","content":"디버그 로그를 수집하여 저희에게 보내려면 다음 단계를 수행하십시오. Go to Settings → General → Advanced.Tap Logging level and set it to Debug.Reproduce the problem and try to remember the exact time it occurred.Wait a while, then return to Settings and choose the Support tab. Tap Report a bug and complete the required fields. Don't forget to check the Send app logs and system info checkbox. Finally tap Send. If you're interested in following the resolution of your issue and engaging in a dialogue with the developers, we recommend that you take the following steps after completing the first three: Wait a while, then return to the Advanced screen and export logs via Export logs and system info. Then report a bug on GitHub by following these instructions.After creating an issue on GitHub, send the log file to devteam@adguard.com. Include the time of the bug and attach a link to your issue or its number (it appears as #number next to the title). Alternatively, you can upload the log file to Google Drive and send it to devteam@adguard.com. Add the file link to your GitHub issue "},{"title":"How to get system logs","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/logcat/","content":"","keywords":""},{"title":"기기에서 버그 보고서 받기​","type":1,"pageTitle":"How to get system logs","url":"adguard-for-android/solving-problems/logcat/#기기에서-버그-보고서-받기","content":"기기에서 직접 버그 보고서를 받으려면 다음을 수행하십시오. Be sure you have Developer options enabled. In Developer options, tap Take bug report. Select the type of bug report you want and tap Report. note After a moment, you will see a notification that the bug report is ready (see Figure 2). ::: ![Bug report *mobile](https://cdn.adtidy.org/public/Adguard/kb/newscreenshots/En/Android3.1/bugreporteen.png)  To share the bug report, tap the notification. Send this log to our support team. note Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message to support. ::: "},{"title":"Capture a bug report via Logcat​","type":1,"pageTitle":"How to get system logs","url":"adguard-for-android/solving-problems/logcat/#capture-a-bug-report-via-logcat","content":"On devices with Android 7 and below, it is not possible to send a bug report automatically. Then you can capture it manually via Logcat — a standard Android command-line tool that dumps a log of system messages. Follow this instruction: Part #1: prepare the device Switch device to the developer mode. To do this: go to Settings → About → tap Build Number 7 times. Go to Developer Options. Enable USB debugging. Increase Logger buffer sizes to 4 MB per log buffer. 4 MB should be enough for storing the logs we need until you're able to do the second part (getting the log from the device); Part #2: reproduce the problem It is important to reproduce the problem after you're done with the first part. Reproduce the problem. Remember/write down the date and time of reproduction and include it in the email to our support later. Part #3: get the log Connect your device to a PC with a USB cable. Download Android SDK Platform Tools. Choose the appropriate download link for your OS from the Downloads section. Once you tap the link, a ZIP file will be downloaded. You can extract the ADB (Android Debug Bridge) files from the ZIP file and store them wherever you want. Test whether ADB is working properly: connect your Android device to your computer using a USB cable, open the Command Prompt, PowerShell or Terminal and run the following command: adb devices An example of a successful result: Then run the following command (insert the relevant path): adb logcat -v threadtime -d &gt; C:\\Program Files\\platform-tools\\logs.txt Email the created txt file as well as the time the problem was reproduced (from part #2) to our support team at support@adguard.com. "},{"title":"Alternative way for ROOT users​","type":1,"pageTitle":"How to get system logs","url":"adguard-for-android/solving-problems/logcat/#alternative-way-for-root-users","content":"Download and run Logcat. Choose Record in the menu. Choose a name for a log file or just press OK. Now you can press Home button, CatLog will continue recording the log in background. Reproduce the issue. Open CatLog and press Stop record in the menu. Send this log to our support team. note Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message to support. "},{"title":"Low Level Settings guide","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"How to reach the Low-level settings​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#how-to-reach-the-low-level-settings","content":"caution Changing Low-level settings can cause problems with the performance of AdGuard, may break the Internet connection or compromise your security and privacy. You should only open this section if you are sure of what you are doing or our support-team has asked you about it. To go to Low-level settings, open the AdGuard app and tap the gear icon in the lower right corner of the screen. Then choose General → Advanced → Low-level settings. "},{"title":"Low-level settings​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#low-level-settings","content":"For AdGuard v4.0 for Android we've completely redesigned the low-level settings: divided them into thematic blocks, made them clearer, added validation of entered values and other safety valves, got rid of some settings, and added others. "},{"title":"DNS protection​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#dns-protection","content":"Fallback upstreams​ Here you can specify the fallback DNS resolver(s) to be used if the configured server is unavailable. There are three options: Automatic DNS, None, and Custom DNS. If no fallback server is specified, the Automatic DNS — the system DNS or AdGuard DNS — will be used. None means no fallback at all. Selecting Custom DNS allows you to list IPv4 and IPv6 server addresses to use as upstreams. Fallback domains​ Here you can list domains that will be forwarded directly to fallback upstreams if they exist. Detect search domains​ If this option is enabled, AdGuard will detect search domains and automatically forward them to fallback upstreams. Bootstrap upstreams​ Bootstrap DNS for DoH, DoT, and DoQ servers. The Automatic DNS - the system DNS or AdGuard DNS - is used by default. By selecting Custom DNS, you can list IPv4 and IPv6 server addresses to use as bootstrap upstreams. adblock-style 규칙을 위한 차단 모드​ Here you can specify the response type for domains blocked by DNS rules based on adblock rule syntax (for instance, ||example.org^). Respond with REFUSED (default)Respond with NXDOMAINRespond with Custom IP address (IPv4 and IPv6 addresses can be specified here) 호스트 규칙에 대한 차단 모드​ Here you can specify the response type for domains blocked by DNS rules based on hosts rule syntax (for instance, &lt;ip&gt; &lt;domain&gt; 0.0.0.0 example.com). Respond with REFUSEDRespond with NXDOMAINRespond with Custom IP address (IPv4 and IPv6 addresses can be specified here) – default DNS request timeout​ 이 필드에서 AdGuard가 폴백 DNS 서버를 사용하기 전에 선택한 DNS 서버의 응답을 기다리는 시간(밀리초)을 지정할 수 있습니다. 이 필드를 채우지 않거나 잘못된 값을 입력하면 5000이라는 값이 사용됩니다. Blocked response TTL​ Here you can specify the TTL (time to live) value that will be returned in response to a blocked request. DNS cache size​ Here you can specify the maximum number of cached responses. Default value is 1000. ECH blocking​ If enabled, AdGuard strips Encrypted Client Hello parameters from DNS responses. Ignore unavailable outbound proxy​ Enable this feature to make AdGuard send DNS requests directly if the outbound proxy is unavailable. Try HTTP/3 for DNS-over-HTTPS upstreams​ By default, all DNS requests for DNS-over-HTTPS are sent via HTTP/2 protocol. If enabled, AdGuard uses HTTP/3 to speed up DNS query resolution for DoH upstreams. SERVFAIL failure response​ Once enabled, AdGuard sends a SERVFAIL response to the client if all upstreams, including fallback ones, fail to reply. When this setting is disabled, no response is sent to the client. Use fallback for non-fallback domains​ Enable this feature if you want AdGuard to use fallback upstream for all domains. Otherwise, fallback upstream will only be used for fallback domains and search domains if the corresponding option is enabled. Validate DNS upstreams​ Enable to make AdGuard test DNS upstreams before adding or updating custom DNS servers. "},{"title":"Filtering​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#filtering","content":"Capture HAR​ Here you can enable HAR file capture. Use it only for debugging purposes! If the setting is enabled, AdGuard will create a directory named &quot;har&quot; inside the app cache directory. It contains information about all filtered HTTP requests in HAR 1.2 format and can be analyzed with the Fiddler program. "},{"title":"HTTPS filtering​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#https-filtering","content":"Encrypted Client Hello​ 모든 암호화된 인터넷 연결에는 암호화되지 않은 부분이 있습니다. 이것은 연결하려는 서버의 이름이 포함된 첫 번째 패킷입니다. Encrypted Client Hello 기술은 이 문제를 해결하고 암호화되지 않은 마지막 비트의 정보를 암호화합니다. To benefit from it, enable the Encrypted Client Hello option. It uses a local DNS proxy to look for the ECH configuration for the domain. ECH 구성이 발견되면 ClientHello 패킷이 암호화됩니다. OCSP checking​ Once enabled, this option runs asynchronous OCSP checks to check whether the website’s SSL certificate is revoked. If the OCSP check is completed within the minimum timeout, AdGuard will immediately block the connection if the certificate is revoked or establish the connection if the certificate is valid. If the verification takes too long, AdGuard will establish a connection and continue checking the certificate in the background. If it is revoked, current and future connections to the domain will be blocked. Redirect DNS-over-HTTPS requests​ IF enabled, DNS-over-HTTPS requests will be redirected to the DNS Protection module. We recommend disabling fallback upstreams and use only encrypted DNS servers to maintain privacy. "},{"title":"Outbound Proxy​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#outbound-proxy","content":"Show the Filter DNS requests setting​ When this feature is enabled, the string Filter DNS requests appears in the Settings ➝ Filtering ➝ Network ➝ Proxy ➝ Proxy server ➝ Add proxy server section with the switch next to it. By toggling the switch, you can enable filtering of DNS requests passing through the proxy. "},{"title":"Protection​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#protection","content":"Port ranges​ Here you can specify port ranges that should be filtered. Log removed HTML events​ If enabled, AdGuard records blocked HTML elements in the filtering log. Scriplet debugging​ If you need to activate debugging of scriptlets, enable this feature. Then there will be messages in the browser log that some scriplet rules have been applied. Excluded apps​ Here you can list package names and UIDs that you want to exclude from AdGuard protection. QUIC bypass packages​ Here you can specify package names for which AdGuard should bypass QUIC traffic. Reconfigure Automatic proxy when network changes​ Enable this setting if you want the protection to restart to reconfigure the automatic proxy settings when the device connects to another network. The state of this setting affects operation only if the current routing mode is Automatic proxy. IPv6 filtering​ If enabled, AdGuard filters IPv6 networks if an IPv6 network interface is available. IPv4 ranges excluded from filtering​ Filtering for IPv4 ranges, listed in this section, will be disabled. IPv6 ranges excluded from filtering​ Filtering for IPv6 ranges, listed in this section, will be disabled. TCP keepalive for outgoing sockets​ If enabled, AdGuard sends a keepalive probe after the specified time period to ensure that the TCP connection is alive. Here you can specify the TCP keepalive idle time before starting keepalive probes and time between keepalive probes for an unresponsive peer. After a system-defined number of unsuccessful attempts to get a response from the server, the system automatically closes the TCP connection. "},{"title":"Local VPN settings​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#local-vpn-settings","content":"Recovery delay for revoked VPN​ Here you can set the time of a delay in milliseconds before AdGuard tries to restore VPN protection after it has been revoked by a third-party VPN app or by deleting the VPN profile. The default value is 5000 ms. Reschedule delay for revoked VPN recovery​ Here you can set the time of a delay in milliseconds before AdGuard reschedules the restoration of VPN protection after it has been revoked by a third-party VPN app or by deleting the VPN profile. The default value is 5000 ms. MTU​ Here you can set the maximum transmission unit (MTU) of the VPN interface. The recommended range is 1500-1900 bytes. Restore VPN automatically​ If enabled, this feature automatically re-enables AdGuard’s local VPN after it has been turned off due to network absence, tethering, or low-power mode. Packet capture (PCAP)​ If enabled, AdGuard will create the special file name timestamp.pcap (for instance, 1682599851461.pcap). It contains all network packets transferred through the VPN. This file is located in the app cache directory and can be analyzed with the Wireshark program. Include Wi-Fi gateway in VPN routes​ If you want the gateway IP addresses to be added to VPN routes when on Wi-Fi, enable this feature. IPv4 address​ Here you can enter the IP address that will be used to create a TUN interface. By default, it is 172.18.11.218. Forcibly route LAN IPv4​ When enabled, AdGuard filters all LAN connections, including local IPv4 network traffic, even if the Route all LAN IPv4 connections option is enabled. Route all LAN IPv4 connections​ Once enabled, AdGuard excludes LAN connections from filtering for simple networks. May not work for complex networks. Works only with the Forcibly route LAN IPv4 option disabled. IPv6 address​ Here you can enter the IP address that will be used to create a TUN interface. By default, it is 2001:db8:ad:0:ff::. "},{"title":"Miscellaneous​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#miscellaneous","content":"Detect Samsung Pay​ Korean users may encounter issues with Samsung Pay when AdGuard is enabled. Activate this feature to pause AdGuard's protection and use the Samsung Pay app seamlessly. "},{"title":"Сertificate installation issues on devices with Android 11+","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/manual-certificate/","content":"Сertificate installation issues on devices with Android 11+ info 이 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 Android용 AdGuard에 대해 다룹니다. 어떻게 동작하는지 알고 싶으시다면 AdGuard 앱을 다운로드해 보세요. To be able to filter HTTPS traffic (which is extremely important as most ads use HTTPS), AdGuard needs to install a certificate into your device's user storage. On older versions of Android OS this was done automatically, but on Android 11 and later users have to install it manually. If you experience issues during the manual certificate installation (for example, you installed the certificate, but the application keeps ignoring it), you can follow one of the solutions below. Restart AdGuard.Try to install the correct certificate (AdGuard Personal CA) one more time. If you still encounter a problem and can't install the certificate, please contact our support team at support@adguard.com.","keywords":""},{"title":"Problems caused by multiple user profiles","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/multiple-user-profiles/","content":"","keywords":""},{"title":"Problems caused by multiple user profiles​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#problems-caused-by-multiple-user-profiles","content":"On Android 9 and later, if AdGuard is installed for more than one user profile on your device, you may encounter problems when uninstalling the app. When you uninstall AdGuard from one user profile, the app will still appear on the app list, but you won't be able to uninstall or reinstall it. This happens because AdGuard is installed for a different user profile on the device. If you try to reinstall AdGuard after an unsuccessful removal attempt, you will see the error message &quot;You can't install the app on your device&quot;. To solve this problem, you need to uninstall the application for all users: go to Settings → All apps → AdGuard. Tap the three-dot menu in the top right corner and select Uninstall for all users.  "},{"title":"제한 모드 상태에서 프로필 사용으로 인한 문제​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#제한-모드-상태에서-프로필-사용으로-인한-문제","content":"Android 7 이상 운영 체제를 실행하는 휴대폰, 태블릿 또는 TV 사용자는 제한 모드 프로필 사용 시 문제를 겪을 수 있습니다. 제한 모드 프로파일을 사용하는 경우 VPN을 사용하는 다른 응용 프로그램과 마찬가지로 AdGuard의 VPN 트래픽 필터링 선택에 제한이 발생합니다. 결과적으로 AdGuard가 로컬 VPN 모드에서 보호를 실행할 수 없게 됩니다. 또한 듀얼 앱/듀얼 메신저 프로필을 사용할 때 이 문제가 발생할 수 있습니다. 해당 문제를 해결하는 방법은 다음과 같습니다. "},{"title":"솔루션​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#솔루션","content":"문제를 해결하는 세 가지 방법이 있습니다. "},{"title":"옵션 1: ADB를 사용하여 AdGuard에 권한 부여​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#옵션-1-adb를-사용하여-adguard에-권한-부여","content":"note This approach is available starting from AdGuard v3.5 nightly 6. 이전 버전을 사용하면 여기에서 Nightly 버전 다운로드가 가능합니다. Activate the developer mode and enable USB debugging: Open the Settings app phone;Go to System section (last item in the settings menu). In this section, find the sub-item About phone;Tap the Build number line 7 times. After that, you will receive a notification that You are now a developer (If necessary, enter an unlock code for the device);Open System Settings → Developer Options → Scroll down and enable USB debugging → Confirm debugging is enabled in the window Allow USB debugging after reading the warning carefully. note 어려움이나 추가 질문이있는 경우 여기에서 자세한 지침을 확인할 수 있습니다. ::: Install and configure adb; On the Windows platform, Samsung owners may need to install this utility. USB 케이블을 사용하여 ADB를 설치한 컴퓨터 또는 노트북에 기기를 연결합니다. PC에서 명령줄을 엽니다. Windows를 사용하는 경우 cmd.exemacOS를 사용하는 경우 터미널 adb shell pm grant com.adguard.android android.permission.INTERACT_ACROSS_USERS 명령을 입력하고 엔터를 누릅니다. "},{"title":"옵션 2: 제한된 사용자 계정 삭제​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#옵션-2-제한된-사용자-계정-삭제","content":"Android 기기에서 사용자 계정을 관리하는 방법은 여기에서 확인할 수 있습니다. note In some cases restricted user accounts are created implicitly and cannot be removed. 제한된 사용자 계정이 암묵적으로 생성되어 삭제할 수 없습니다. 이러한 경우 문제를 해결하는 방법은 아래에서 확인할 수 있습니다. "},{"title":"옵션 3: 로컬 HTTP 프록시 모드에서 AdGuard 사용 (루트 필요)​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#옵션-3-로컬-http-프록시-모드에서-adguard-사용-루트-필요","content":"To enable this mode, open AdGuard Settings → Network → Filtering method → Local HTTP proxy "},{"title":"LG 및 삼성 기기​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#lg-및-삼성-기기","content":"LG 또는 삼성 휴대폰 소유자도 비슷한 문제를 맞닥트릴 수 있습니다. 이 경우 제한된 프로필을 자동으로 생성하는 듀얼 앱/듀얼 메신저 기능을 사용하기 때문에 해당 문제가 발생합니다. 문제를 해결하려면 이 기능을 비활성화해야 합니다. "},{"title":"Samsung​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#samsung","content":"설정을 엽니다.고급을 누릅니다.아래로 스크롤해 듀얼 메신저를 누릅니다.모든 앱을 선택 취소합니다.5분 동안 기기를 잠금 상태로 유지합니다.화면 잠금을 해제하고 VPN 프로필을 다시 생성합니다. "},{"title":"LG​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#lg","content":"설정을 엽니다.일반 탭을 선택합니다.아래로 스크롤한 다음 듀얼 앱를 누릅니다.목록에서 모든 응용 프로그램을 제거합니다.기기를 재부팅합니다. "},{"title":"How to use Samsung Pay with AdGuard in South Korea","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/samsungpay-with-adguard-in-south-korea/","content":"How to use Samsung Pay with AdGuard in South Korea info 이 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 Android용 AdGuard에 대해 다룹니다. 어떻게 동작하는지 알고 싶으시다면 AdGuard 앱을 다운로드 해 보세요. A number of users have encountered an issue where Samsung Pay does not work while AdGuard is running. This issue occurs almost exclusively on devices registered in South Korea. What is causing this issue? Sometimes Samsung Pay does not work on devices with VPN services running, and AdGuard is one of these apps. By default, AdGuard uses Local VPN to filter traffic. As a consequence, users had to disable AdGuard when making payments with Samsung Pay. This can now be avoided with the new Detect Samsung Pay feature. When this option is enabled, the AdGuard app is paused whenever the user opens the Samsung Pay app and resumes when the app is closed. To enable Detect Samsung Pay, follow these steps: Go to Settings → General → Advanced→ Low-level settings Scroll to Detect Samsung Pay and move the slider to the right Tap Allow permissions and give AdGuard permission to collect your data We don't collect any personal data, we just need statistics about how Samsung Pay is working to make the Detect Samsung Pay feature work. Once you enable this feature, AdGuard will send you notifications as shown in the screenshot. note This feature will work only if the Local VPN filtering mode is chosen in AdGuard settings. If another mode is being used, Samsung Pay will function without any interruptions.","keywords":""},{"title":"How to setup outbound proxy","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/outbound-proxy/","content":"","keywords":""},{"title":"Proxy configuration examples​","type":1,"pageTitle":"How to setup outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#proxy-configuration-examples","content":"In this article we give examples of how to set up some of the most popular proxies to work with AdGuard. "},{"title":"Tor와 함께 AdGuard를 사용하는 방법​","type":1,"pageTitle":"How to setup outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#tor와-함께-adguard를-사용하는-방법","content":"Open AdGuard and go to Settings → Filtering → Network → Proxy. Download &quot;Orbot: Proxy with Tor&quot; directly from Google Play or by tapping Integrate with Tor and then Install. Orbot을 열고 애플리케이션의 메인 화면에서 시작 버튼을 누릅니다. Go back to the Proxy screen of AdGuard. Tor와 통합 버튼을 누릅니다. All the required fields will be pre-filled: 필드\t값프록시 유형\tSOCKS4 또는 SOCKS5 프록시 호스트\t127.0.0.1 프록시 포트\t9050 Or you can tap Proxy server → Add proxy server, enter these values manually, and set Orbot as a default proxy. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. Now AdGuard will forward all traffic through Orbot. If you disable Orbot, Internet connection will be unavailable until you disable outbound proxy settings in AdGuard. "},{"title":"PIA(Private Internet Access)와 함께 AdGuard를 사용하는 방법​","type":1,"pageTitle":"How to setup outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#piaprivate-internet-access와-함께-adguard를-사용하는-방법","content":"Here we presume that you are already a PIA VPN client and have it installed on your device. Open AdGuard and go to Settings → Filtering → Network → Proxy → Proxy server. 프록시 서버 추가 버튼을 누르고 다음 데이터를 입력합니다. 필드\t값프록시 유형\tSOCKS5 프록시 호스트\tproxy-nl.privateinternetaccess.com 프록시 포트\t1080 You also need to fill out the Username/Password fields. To do so, log in to the Client Control Panel on the PIA website. Click the Generate Password button under the Generate PPTP/L2TP/SOCKS Password section. A username starting with &quot;x&quot; and a random password will be shown. Use them to fill out the Proxy username and Proxy password fields in AdGuard. Tap Save and select. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. "},{"title":"TorGuard와 함께 AdGuard를 사용하는 방법​","type":1,"pageTitle":"How to setup outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#torguard와-함께-adguard를-사용하는-방법","content":"Here we presume that you are already a TorGuard client and have it installed on your device. Open AdGuard and go to Settings → Filtering → Network → Proxy → Proxy server. 프록시 서버 추가 버튼을 누르고 다음 데이터를 입력합니다. 필드\t값프록시 유형\tSOCKS5 프록시 호스트\tproxy.torguard.org or proxy.torguard.io 프록시 포트\t1080 or 1085 or 1090 For Username and Password fields, enter your proxy username and proxy password you have chosen at TorGuard signup. Tap Save and select. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. "},{"title":"NordVPN과 함께 AdGuard를 사용하는 방법​","type":1,"pageTitle":"How to setup outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#nordvpn과-함께-adguard를-사용하는-방법","content":"Open AdGuard and go to Settings → Filtering → Network → Proxy → Proxy server. 프록시 서버 추가 버튼을 누르고 다음 데이터를 입력합니다. 필드\t값프록시 유형\tSOCKS5 프록시 호스트\tany server from this list 프록시 포트\t1080 For Username and Password fields, enter your NordVPN Username and Password. Tap Save and select. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. "},{"title":"Shadowsock과 함께 AdGuard를 사용하는 방법​","type":1,"pageTitle":"How to setup outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#shadowsock과-함께-adguard를-사용하는-방법","content":"Here we presume that you have already configured a Shadowsocks server and a client on your device. note You should remove Shadowsocks app from filtering before setting up the process (App management → Shadowsocks → Route traffic through AdGuard) to avoid infinite loops and drops. Open AdGuard and go to Settings → Filtering → Network → Proxy → Proxy server. Tap the Add proxy server and fill in the fields: 필드\t값프록시 유형\tSOCKS5 프록시 호스트\t127.0.0.1 프록시 포트\t1080 Tap Save and select. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. "},{"title":"How to use AdGuard with Clash​","type":1,"pageTitle":"How to setup outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#how-to-use-adguard-with-clash","content":"Here we presume that you are already a Clash client and have it installed on your device. Open Clash and go to Settings → Network → Route System Traffic and toggle the switch. This will set Clash to proxy mode. Open AdGuard and go to App management. Choose Clash For Android and disable Route traffic through AdGuard. This will eliminate traffic looping. Then go to Settings → Filtering → Network → Proxy → Proxy server. Tap Add proxy server and fill in the fields: 필드\t값프록시 유형\tSOCKS5 프록시 호스트\t127.0.0.1 프록시 포트\t7891 "},{"title":"제한​","type":1,"pageTitle":"How to setup outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#제한","content":"There is a factor that can prevent certain traffic from being routed through the outgoing proxy. AdGuard will only re-route traffic that goes through it. Basically, it means apps that have Ad blocking flag enabled in the Apps Management tab. "},{"title":"Certificate installation in a Secure folder","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/secure-folder/","content":"Certificate installation in a Secure folder info 이 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 Android용 AdGuard에 대해 다룹니다. 어떻게 동작하는지 알고 싶으시다면 AdGuard 앱을 다운로드 해 보세요. If you install AdGuard to the Secure folder on your Android (this applies mainly to Samsung devices), you may face some difficulties when installing the HTTPS certificate. The thing is, the Secure folder has its own space where the certificates are stored. However, if you do everything according to the regular certificate installation instructions (described here), the certificate will be installed into the main memory and will play no role for your ad blocker in the Secure folder. To solve this problem and install the certificate for your AdGuard for Android into the Secure folder's storage, please follow these instructions instead: After installing the app and connecting the local VPN, tap ENABLE next to the HTTPS filtering is off message.Tap Next → Next → Save it now → Save certificate.Save the certificate (at this stage, you can rename it to make it easier to locate it later, which you will need to do).After the Installation instructions popup appears, DO NOT tap Open Settings.Minimize the app and go to the Secure folder.Tap the three-dot menu and go to Settings → Other security settings.Tap Security certificates → Install from device storage → CA certificate → Install anywayConfirm installation with your graphic key/password/fingerprint.Find and select the previously saved certificate, then tap Done.Return to the AdGuard app and navigate back to the main screen. You may have to swipe and restart the app to get rid of the HTTPS filtering is off message.끝! The certificate has been installed.","keywords":""},{"title":"How to block ads in the YouTube app","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/youtube-ads/","content":"","keywords":""},{"title":"Watch YouTube in the AdGuard app​","type":1,"pageTitle":"How to block ads in the YouTube app","url":"adguard-for-android/solving-problems/youtube-ads/#watch-youtube-in-the-adguard-app","content":" Open the YouTube app and start the video you want to watch. Tap the Share button. Select AdGuard from the list of apps. That's it! A new window with the video will open where you'll be able to watch it without being interrupted by ads. "},{"title":"Watch YouTube in a browser​","type":1,"pageTitle":"How to block ads in the YouTube app","url":"adguard-for-android/solving-problems/youtube-ads/#watch-youtube-in-a-browser","content":"Alternatively, you can also watch YouTube in a browser and there will be no ads if you have AdGuard installed and enabled. "},{"title":"설치 방법","type":0,"sectionRef":"#","url":"adguard-for-ios/installation/","content":"","keywords":""},{"title":"시스템 요구 사항​","type":1,"pageTitle":"설치 방법","url":"adguard-for-ios/installation/#시스템-요구-사항","content":""},{"title":"iPhone​","type":1,"pageTitle":"설치 방법","url":"adguard-for-ios/installation/#iphone","content":"iOS 11.2 이상 "},{"title":"iPad​","type":1,"pageTitle":"설치 방법","url":"adguard-for-ios/installation/#ipad","content":"iPadOS 11.2 이상 "},{"title":"iPod touch​","type":1,"pageTitle":"설치 방법","url":"adguard-for-ios/installation/#ipod-touch","content":"iOS 11.2 이상 "},{"title":"iOS용 AdGuard 설치 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-for-ios/installation/#ios용-adguard-설치-방법","content":"iOS용 AdGuard는 App Store에서 다운로드할 수 있는 무료 앱입니다. To install it on your device, open the App Store and tap the Search icon on the bottom of the screen.  Type adguard in the search bar and tap the string adGuard which will be among search results.  On the opened page of the App Store tap GET under the string AdGuard - adblock&amp;privacy and then tap INSTALL. 설치를 완료하려면 Apple ID 로그인 및 암호를 입력하고 설치가 완료될 때까지 기다리십시오.  "},{"title":"iOS용 AdGuard Pro 설치 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-for-ios/installation/#ios용-adguard-pro-설치-방법","content":"AdGuard Pro는 프리미엄 기능을 제공하는 iOS용 AdGuard의 유료 버전입니다. To install it on your device run the App Store application and tap the Search icon on the bottom of the screen.  Type adguard in the search form, and then tap the string adGuard pro - adblock which will be shown among search results.  On the opened page of the App Store tap the button with the cost of the license under the string AdGuard Pro - adblock, and then tap BUY. 설치를 완료하려면 Apple ID 로그인 및 암호를 입력하고 설치가 완료될 때까지 기다리십시오.  라이선스는 개인 AdGuard 계정에서 사용자 자격 증명을 입력하여 활성화 할 수 있습니다. 이를 위해서 사용자는 하나 추가의 예비 라이선스 키가 있어야 합니다. "},{"title":"How to automate AdGuard for Android","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/tasker/","content":"","keywords":""},{"title":"AdGuard interface​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#adguard-interface","content":"There are a lot of tasker apps out there, for example Tasker, AutomateIt etc. AdGuard provides an interface that allows these apps to setup various automation rules.  Thanks to this interface, any app can send a special message (called &quot;intent&quot;) that contains the name of the action and some additional data, if needed. AdGuard will look at this intent and perform the required actions. "},{"title":"Security concerns​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#security-concerns","content":"Wouldn't it be a bit dangerous, you might ask — to let some random apps manage what AdGuard does? It would, and that's why a password is sent along with the intent. This password will be generated by AdGuard automatically, but you can, of course, change it at any time. "},{"title":"Available actions​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#available-actions","content":"So, ready to get your hands dirty? Here are actions that, when included in the intent, will be understood by AdGuard: start starts the protection, no extra data is needed; stop stops the protection, no extra data required; pause pauses the protection. The difference between this and stop is that a notification will appear that restarts the protection when you tap it. No extra data required; update checks for available filter and app updates, no additional data is needed;  dns_filtering turns DNS filtering on and off. Requires an extra flag: enable:true or enable:false enables or disables DNS filtering, accordingly.  dns_server switches between DNS servers, you need to include additional data: server:adguard dns switches to AdGuard DNS server; note The full list of supported provider names can be found inside AdGuard DNS settings under the &quot;Custom DNS settings&quot;. server:custom switches to the previously added server named custom; server:tls://dns.adguard.com creates a new server and switches to it if the previously added servers and providers don't contain a server with the same address. Otherwise, it switches to the respective server. You can add server addresses as IP ( regular DNS), sdns://… (DNSCrypt or DNS-over-HTTPS), https://… (DNS-over-HTTPS) or tls://... (DNS-over-TLS); server:1.1.1.1, tls://1.1.1.1 creates a server with comma separated addresses and switches to it. When adding a server via server:1.1.1.1, tls://1.1.1.1, the previously added server is removed. server:system resets DNS settings to default system DNS servers.  proxy_state enables/disables the outbound proxy. Requires an extra flag: enable:true or enable:false activates or deactivates the outbound proxy, accordingly.  proxy_default sets the proxy from the list of previously added ones as default or creates a new one if server has not been added before. You need to specify additional data: server:[name] where [name] is the name of the outbound proxy from the list. Or you can configure server parameters manually: server:[type=…&amp;host=…&amp;port=…&amp;username=…&amp;password=…&amp;udp=…&amp;trust=…]. proxy_remove removes the proxy server from the list of previously added ones. server:[name] where [name] is the name of the outbound proxy from the list. Or you can configure remove parameters manually: server:[type=…&amp;host=…&amp;port=…&amp;username=…&amp;password=…&amp;udp=…&amp;trust=…]. Compulsory parameters: [type] — proxy server type: HTTP;SOCKS4;SOCKS5;HTTPS_CONNECT. [host] — outbound proxy domain or IP address; [port] — outbound proxy port (integer number from 1 to 65535); Optional parameters: [login and password] — only if proxy requires it. This data is ignored when setting up SOCKS4; [udp] applied only on SOCKS5 server type and include option UDP through SOCKS5. It is necessary to set true or false value; [trust] applies for HTTPS_CONNECT server type only and include option Trust any certificates. It is necessary to set true or false value. Example setting by name: server:MyServer manually settings: server:host=1.2.3.4&amp;port=80&amp;type=SOCKS5&amp;username=foo&amp;password=bar&amp;udp=true  Don't forget to include the password as an extra and mention package name and class! You need to do so for every intent! Extra: password:******* Package name: com.adguard.android Class: com.adguard.android.receiver.AutomationReceiver note Before v4.0 the class was called com.adguard.android.receivers.AutomationReceiver but then we changed its name to com.adguard.android.receiver.AutomationReceiver. If you used this feature, please pay attention and use the new name. "},{"title":"Execution without notification​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#execution-without-notification","content":"To perform a task without showing a toast, add an additional EXTRA quiet: true "},{"title":"Example​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#example","content":" "},{"title":"Safari에서 YouTube 광고를 차단하는 방법","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/block-youtube-ads/","content":"","keywords":""},{"title":"Safari에서 YouTube 광고를 차단하는 방법​","type":1,"pageTitle":"Safari에서 YouTube 광고를 차단하는 방법","url":"adguard-for-ios/solving-problems/block-youtube-ads/#safari에서-youtube-광고를-차단하는-방법","content":"안타깝게도 기술적인 제한으로 인해 YouTube 앱에서 광고를 차단하는 것이 불가능합니다. 그러나 Safari에서 YouTube를 열면 광고를 차단할 수 있습니다. Safari에서 광고를 차단하는 확장 기능(iOS용 AdGuard v4.2부터 사용 가능)을 개발했습니다. iOS용 AdGuard을 4.2 버전으로 업데이트하면 이 확장 기능이 자동으로 설치됩니다. 이 확장 기능은 광고뿐만 아니라 iPad에서 차단된 후 남아 있는 자리 표시자를 제거합니다. 또한 이제는 YouTube 동영상들이 자동으로 시청됩니다.  Safari에서 YouTube 광고를 차단하는 확장을 활성화하려면 다음 단계를 따르세요. Safari에서 youtube.com을 열기공유 버튼을 누르기'(AdGuard를 통해) YouTube 광고 차단'을 클릭 이제 광고없는 YouTube를 시청할 수 있습니다! 참고: 페이지 새로고침하면 확장 기능을 다시 실행해야 합니다. tip 가끔 AdGuard 확장 기능이 표시되지 않을 수 있습니다. 표시되지 않는 경우, 지침을 다시 따르거나 기기를 다시 시작하십시오. "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-ios/overview/","content":"","keywords":""},{"title":"Features​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#features","content":"AdGuard and AdGuard Pro for iOS offer lots of features for blocking ads, trackers and creating user rules, both in Safari and on network level. "},{"title":"Content blockers​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#content-blockers","content":"Content blockers serve as 'containers' for filtering rules that do the actual job of blocking ads and tracking. AdGuard for iOS contains six content blockers: General, Privacy, Social, Security, Custom, and Other. Previously Apple only allowed each content blocker to contain a maximum of 50K filtering rules, but with iOS 15 release the upper limit has moved to 150K rules. All content blockers, their statuses, which thematic filters they currently include, and a total number of used filtering rules can be found on the respective screen in Advanced settings (tap the gear icon at the bottom right → General → Advanced settings → Content blockers).  tip Keep all content blockers enabled for the best filtering quality. "},{"title":"Filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#filters","content":"Content blockers' work is based on filters, also sometimes referred to as filter lists. Each filter is a list of filtering rules. If you have an enabled ad blocker when browsing, it constantly checks the visited pages and elements on them against these filtering rules, and blocks anything that matches. Rules are developed to block ads, trackers, and more. All filters are grouped into thematic categories. To see the full list of these categories (not to be confused with content blockers), open the Protection section by tapping the shield icon, then go to Safari protection → Filters.  There are eight of them, each category unites several filters that serve and share a common purpose, i.e. blocking ads, social media widgets, cookie notices, protecting the user from online scams. To decide which filters suit your needs, read their descriptions and navigate by the labels (ads, privacy, recommended, etc.). note More enabled filters does not guarantee that there will be less ads. A large number of various filters enabled simultaneously reduces the quality of ad blocking. Custom filters category is empty by default for users to add there their filters by URL. You can find filters on the Internet or even try to create one by yourself. "},{"title":"User rules​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#user-rules","content":"Here you can add new rules — either by entering them manually, or by using the AdGuard manual blocking tool in Safari. Use this tool to customize Safari filtering without adding an entire filter list. Learn how to create your own ad filters. But please note that many of them won't work in Safari on iOS.  "},{"title":"Allowlist​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#allowlist","content":"The third section of the Safari protection screen. If you want to disable ad blocking on a certain website, Allowlist will be of help. It allows you to add domains and subdomains to exlcusions. AdGuard for iOS has an Import/Export feature, so the allowlist from one device can be easily transferred to another. "},{"title":"DNS protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#dns-protection","content":"DNS protection module enhances your privacy by encrypting your DNS traffic. Unlike with Safari content blocking, DNS protection works system-wide, i.e. beyond Safari, in apps and other browsers. You have to enable this module before you're able to use it. You can do this on the home screen by tapping the shield icon at the top of the screen, or by going to the Protection → DNS protection tab. note To be able to manage DNS settings, AdGuard apps require establishing a local VPN. It will not route your traffic through any remote servers. Nevertheless, the system will ask you to confirm access permission. "},{"title":"DNS implementation​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#dns-implementation","content":" This section has two options: AdGuard and Native implementation. Basically, these are two methods of setting up DNS. In Native implementation, the DNS is handled by the system and not the app. This means that AdGuard doesn't have to create a local VPN. Sadly, this will not help you circumvent system restrictions and use AdGuard alongside other VPN-based applications — if any VPN is enabled, native DNS is ignored. Consequently, you won't be able to filter traffic locally or to use our brand new DNS-over-QUIC protocol (DoQ). "},{"title":"DNS servers​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#dns-servers","content":"The first section you'll see on the DNS Protection screen is DNS server. It shows the currently selected DNS server and encryption type. To change either, tap the button to enter the DNS server screen.  Servers differ by their speed, employed protocol, trustworthiness, logging policy, etc. By default, AdGuard will suggest several DNS servers from among the most popular ones (including AdGuard DNS). Tap any to change the encryption type (if such option is provided by the server's owner) or to view the server's homepage. We added labels such as No logging policy, Ad blocking, Security to help you make a choice. In addition, at the bottom of the screen there is an option to add a custom DNS server. It supports regular, DNSCrypt, DNS-over-HTTPS, DNS-over-TLS, and DNS-over-QUIC servers. "},{"title":"Network settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#network-settings","content":" Users can also handle their DNS security on the Network settings screen. Filter mobile data and Filter Wi-Fi enable or disable DNS protection for the respective network types. Further down, at Wi-Fi exceptions, you can exclude particular Wi-Fi networks from DNS protection (for example, you might want to exclude your home network if you use AdGuard Home). "},{"title":"DNS filtering​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#dns-filtering","content":"DNS filtering allows you to customize your DNS traffic by enabling AdGuard DNS filter, adding custom DNS filters, and using the DNS blocklist/allowlist. How to access: Protection icon (the shield icon in the bottom menu bar) → DNS protection → DNS filtering  DNS filters​ Similar to filters that work in Safari, DNS filters are sets of rules written according to special syntax. AdGuard will monitor your DNS traffic and block requests that match one or more rules. You can use filters such as AdGuard DNS filter or add hosts files as filters. Multiple filters can be added simultaneously. To know how to do it, get acquainted with this exhaustive manual. Allowlist and Blocklist​ On top of DNS filters, you can have targeted impact on DNS filtering by adding single domains to Blocklist or to Allowlist. Blocklist even supports the same DNS syntax, and both of them can be imported and exported, just like Allowlist in Safari content blocking. "},{"title":"Advanced protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#advanced-protection","content":"In iOS 15 Apple has added the support for Safari Web Extensions, and we in turn added a new Advanced protection module to AdGuard for iOS. It allows AdGuard to apply advanced filtering rules, such as CSS rules, CSS selectors, and scriptlets, and therefore to deal even with the complex ads, such as YouTube ads.  To enable Advanced protection, open the Protection tab by tapping the second left icon at the bottom of the screen, select the Advanced protection module, activate the feature by toggling the switch slider, and follow the instructions below. note The Advanced protection only works on iOS 15 and later versions. If you are using earlier versions of iOS, you will see the YouTube ad blocking module in the app instead of the Advanced protection.  "},{"title":"Compatibility with AdGuard VPN​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#compatibility","content":"In most cases, the ad blocker and the VPN application cannot work together, simply because there are certain system limitations. Nevertheless we've managed to find a solution to befriend AdGuard VPN and AdGuard Ad Blocker. For your convenience we've added the AdGuard VPN block to the Protection section, so you can easily switch between two apps. "},{"title":"Assistant​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#assistant","content":" Assistant is a tool that helps you manage filtering in Safari right from the browser without switching back to the app. To see it, do the following: open Safari and tap the arrow-in-a-box symbol. Then scroll down to AdGuard/AdGuard Pro (depending on the app you use) and tap it to fetch a window with several options: Enable on this page. Turn the switch off to add the current domain to the Allowlist.Block an element on this page. Tap it to enter the 'Element blocking' mode: choose any element on the page, adjust the size by tapping 'plus' or 'minus', preview if necessary and then tap the checkmark icon to confirm. The selected element will be hidden from the page and a corresponding rule will be added to User rules. Remove or disable it there to revert the change.Report an issue on this page. Opens a web reporting tool that will help you send a report to our support team in just a few taps. Use it if you noticed a missed ad or an incorrect blocking on the page. tip On iOS 15 devices, the Assistant features are available through AdGuard Safari Web Extension, which enhances the capabilities of AdGuard for iOS and allows you to take advantage of iOS 15. With this web extension, AdGuard can apply advanced filter rules and, as a result, block more ads. "},{"title":"Activity​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#activity","content":"This is the 'information hub' of AdGuard's DNS protection suite. You can quickswitch to it by tapping the third icon in the row at the screen bottom. N.b. this screen is only seen when DNS protection is enabled.  This is where AdGuard displays statistics about the device's DNS requests, such as total number, number of blocked requests and data saved by blocking them. AdGuard can display the statistics for a day, a week, a month or in total. Below is the Recent activity feed. AdGuard stores the last 1500 DNS requests that have originated on your device and shows their attributes such as protocol type and target domain. note AdGuard does not send this information anywhere. It is 100% local and does not leave your device. Tap any request to view more details. There will also be buttons to add the request to Blocklist/Allowlist in one tap.  Above the activity feed, there are Most active and Most blocked companies. Tap each to see data based on the last 1500 requests. "},{"title":"Statistics​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#statistics","content":"Aside from the Activity screen, you can find global statistics on the home screen and on widgets. "},{"title":"Low-level settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#low-level-settings","content":" To open the Low-level settings, go to Settings → General → (Enable Advanced mode if it's off) → Advanced settings → Low-level settings. For the most part, the settings in this section are best left untouched: only use them if you're sure about what you're doing, or if the support team has asked for them. But some settings could be changed without any risk. "},{"title":"Block IPv6​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#blockipv6","content":"For any DNS query sent to get an IPv6 address, our app returns an empty response (as if this IPv6 address does not exist). Now there is an option not to return IPv6 addresses. At this point the description of this function becomes too technical: configuring or disabling IPv6 is the exclusive domain of advanced users. Presumably, if you are one of them, it will be good to know that we now have this feature, if not — there is no need to dive into it. "},{"title":"Bootstrap and Fallback servers​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#bootstrap-fallback","content":"Fallback is a backup DNS server. If you chose a DNS server and something happened to it, a fallback is needed to set the backup DNS server until the main server responds. With Bootstrap, it’s a little more complicated. For AdGuard for iOS to use a custom secure DNS server, our app needs to get its IP address first. For this purpose, the system DNS is used by default, but sometimes this is not possible for various reasons. In such cases, Bootstrap could be used to get the IP address of the selected secure DNS server. Here are two examples to illustrate when a custom Bootstrap server might help: When a system default DNS server does not return the IP address of a secure DNS server and it is not possible to use a secure one.When our app and third-party VPN are used simultaneously and it is not possible to use System DNS as a Bootstrap. "},{"title":"Other features​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#other-features","content":"While Safari content blocking and DNS protection are indisputably two major modules of AdGuard/AdGuard Pro, there are some other minor features that don't fall into either of them directly but still can be useful and are worth knowing about. Dark theme   Residing right at the top of Settings → General screen, this setting allows you to switch between dark and light themes. Widgets  AdGuard supports widgets that provide quick access to Safari content blocking and DNS protection switches, and also show global requests stats. Auto-update over Wi-Fi only If this setting is enabled, AdGuard will use only Wi-Fi for background filter updates. Invert the Allowlist An alternative mode for Safari filtering, it unblocks ads everywhere except for the specified websites from the list. Disabled by default. Advanced mode Advanced mode unlocks Advanced settings. We don't recommend messing with those, unless you know what you're doing or you have consulted with technical support first. Reset statistics Clears all statistical data, such as number of requests, etc. Reset settings This option will reset all your settings. Support Use this option to contact support, report a missed ad (although we advise to use the Assistant or AdGuard's Safari Web extension for your own convenience), export logs or to make a feature request. About Contains the current version of the app and an assortment of rarely needed options and links. "},{"title":"FaceTime과의 호환성 문제를 해결하는 방법","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/facetime-compatibility-issues/","content":"FaceTime과의 호환성 문제를 해결하는 방법 info 이 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 iOS용 AdGuard에 대해 다룹니다. 어떻게 동작하는지 알고 싶으시다면 AdGuard 앱을 다운로드 해 보세요. 풀 터널 모드는 VPN 앱뿐만 아니라 FaceTime의 작동을 방해할 수 있습니다. iOS용 AdGuard의 풀 터널 모드를 켜져 있을 때 FaceTime이 작동하지 않은 경우가 있었습니다. iOS용 AdGuard의 풀 터널 (VPN 아이콘이 표시되지 않음) 모드를 켜져 있을 때 FaceTime이 작동하는 것도 보장할 수 없습니다. 이 모드는 VPN 앱과도 호환되지 않고 불안정하기 때문입니다. FaceTime 영상/음성 통화가 중단되지 않도록 하려면 분할 터널 모드를 사용하는 것이 좋습니다. 분할 터널 모드를 활성화하는 방법은 다음과 같습니다. Go to AdGuard for iOS Settings → General settings.고급 모드 활성화 후 고급 설정으로 이동터널 모드&gt; 분할 터널 모드 선택 끝! 이제는 FaceTime과의 호환성에는 문제가 없을 것입니다.","keywords":""},{"title":"프리미엄 기능을 활성화하는 방법","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/premium-activation/","content":"프리미엄 기능을 활성화하는 방법 info 이 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 iOS용 AdGuard에 대해 다룹니다. 어떻게 동작하는지 알고 싶으시다면 AdGuard 앱을 다운로드해 보세요. iOS용 AdGuard 프리미엄 활성화하는 방법은 두 가지가 있습니다. Purchase a subscription. Just tap the Get Premium plaque anywhere in the app and follow the on-screen instructions. Apple ID 비밀번호를 입력하고 월간, 연간, 평생 구독 중 선택하여 구매를 확인 하시면 됩니다. Use an AdGuard license (you can purchase it at the AdGuard website). Log into your AdGuard personal account via the app: go to AdGuard app → Settings → License screen and tap the Login button there. 그다음에는 AdGuard 개인 계정 자격 증명을 입력하세요. 계정에 유효한 라이선스 키가 있는 경우, iOS용 AdGuard 앱에서 자동으로 프리미엄을 선택하여 활성화됩니다. As an alternative, you can just enter a valid license key in the e-mail field leaving password field blank to activate Premium features. note AdGuard Pro for iOS (our other iOS app) can only be purchased from App Store.","keywords":""},{"title":"Low-level Settings guide","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"How to reach the Low-level settings​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#how-to-reach-the-low-level-settings","content":"caution Changing Low-level settings can cause problems with the performance of AdGuard, may break the Internet connection or compromise your security and privacy. You should only open this section if you are sure of what you are doing or our support-team has asked you about it. To go to Low-level settings, tap the gear icon at the bottom right of the screen to open Settings. Select the General section and then toggle on the Advanced mode switch, after that the Advanced settings section will appear below. Tap Advanced settings to reach the Low-level settings section. "},{"title":"Low-level settings​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#low-level-settings","content":""},{"title":"Tunnel mode​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#tunnel-mode","content":"There are two main tunnel modes: Split and Full. Split-Tunnel mode provides compatibility of AdGuard and so-called &quot;Personal VPN&quot; apps. In Full-Tunnel mode no other VPN can work simultaneously with AdGuard. There is a specific feature of Split-Tunnel mode: if DNS proxy does not perform well, for example, if the response from the AdGuard DNS server was not returned in time, iOS will &quot;amerce&quot; it and reroute traffic through DNS server, specified in iOS settings. No ads are blocked at this time and DNS traffic is not encrypted. In Full-Tunnel mode only the DNS server specified in AdGuard settings is used. If it does not respond, the Internet will simply not work. Enabled Full-Tunnel mode may cause the incorrect performance of some programs (for instance, Facetime), and lead to problems with app updates. By default, AdGuard uses Split-Tunnel mode as the most stable option. There is also an additional mode called Full-Tunnel (without VPN icon). This is exactly the same as Full-Tunnel mode, but it is set up so that the VPN icon is not displayed in the system line. "},{"title":"Blocking mode​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#blocking-mode","content":"In this module you can select the way AdGuard will respond to DNS queries that should be blocked: REFUSED — respond with REFUSED code NXDOMAIN — respond with NXDOMAIN code Unspecified IP — respond with zero IP address Custom IP — respond with a manually set IP address "},{"title":"Block IPv6​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#block-ipv6","content":"By moving the toggle to the right, you activate IPv6 query blocking (AAAA requests). "},{"title":"Blocked response TTL​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#blocked-response-ttl","content":"Here you can specify the TTL (time to live) value that will be returned in response to a blocked request. "},{"title":"Bootstrap servers​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#bootstrap-servers","content":"For DNS-over-HTTPS, DNS-over-TLS, and DNS-over-QUIC a bootstrap server is required for getting the IP address of the main DNS server. If not specified, the DNS server from iOS settings is used as the bootstrap server. "},{"title":"Fallback servers​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#fallback-servers","content":"Here you can specify an alternate server to which a request will be rerouted if the main server fails to respond. If not specified, the system DNS server will be used as the fallback. It is also possible to specify none, in this case, there will be no fallback server set and only the main DNS server will be used. "},{"title":"Background app refresh time​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#background-app-refresh-time","content":"Here you can select the frequency at which the application will check for filter updates while in the background. Note that update checks will not be performed more often than the specified period, but the exact intervals may not be respected. "},{"title":"Safari Web extension","type":0,"sectionRef":"#","url":"adguard-for-ios/web-extension/","content":"","keywords":""},{"title":"What it does​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#what-it-does","content":"By default, Safari provides only basic tools to content blockers. These tools don't allow the level of performance that can be found in content blockers on other operating systems (Windows, Mac, Android). For example, AdGuard apps on other platforms can use such effective weapons against ads as CSS rules, CSS selectors, and scriptlets. Unfortunately, these instruments are absolutely irreplaceable when dealing with more complex cases such as pre-roll ads on YouTube, for example. AdGuard's Safari Web extension compliments AdGuard by giving it the ability to employ these types of filtering rules. Besides that, AdGuard's Safari Web extension can be used to quickly manage AdGuard for iOS right from the browser. Tap the Extensions button — it's the one with a jigsaw icon, depending on your device type it may be located to the left or to the right of the address bar. Find AdGuard in the list and tap it.  On iPads AdGuard's Safari Web extension is accessible directly by tapping the AdGuard icon in the browser's address bar. You will see the following list of options: Enabling/disabling protection on the website. Turning the switch off will disable AdGuard completely for the current website and add a respective exclusion rule. Turning the switch back on will resume protection for the website and delete the rule. Any such change will require some time to take effect. Blocking elements on the page manually. Tap the Block elements on this page button to prompt a pop-up for element blocking. Select any element on the page you want to hide, adjust the selection zone, then preview changes and confirm the removal. A corresponding filtering rule will be added to AdGuard (that you can later disable or delete to revert the change). Report an issue. Swipe up to bring out the Report an issue button. Use it to report a missed ad or any other problem that you encountered on the current page. "},{"title":"How to enable AdGuard's Safari Web extension​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#how-to-enable-adguards-safari-web-extension","content":""},{"title":"In the iOS settings​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#in-the-ios-settings","content":"The Web extension is not a standalone tool and requires AdGuard for iOS. If you don't have AdGuard for iOS installed on your device, please install it first and complete the onboarding process to prepare it for work. Once done, open Settings → Safari → Extensions.   Find ALLOW THESE EXTENSIONS section and then find AdGuard among the available extensions.  Tap it, then turn on the switch. On the same screen make sure that the AdGuard extension has required permissions: All Websites should have the Allow status.  note AdGuard's Safari Web extension requires access to the web pages' content to operate, but doesn't use it for any purpose other than blocking ads. "},{"title":"In Safari​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#in-safari","content":"Alternitavely, you can also turn AdGuard extension on from the Safari browser. Tap the Extensions button (if you don't see it next to the address bar, tap the aA icon).  Then find the Manage Extensions option in the list and tap it. In the opened window turn on the switch next to AdGuard.   If you use this method, you may have to go to Safari settings to grant AdGuard extension the necessary permissions anyway. You should now be able to see AdGuard among the available extensions. Tap it and then the yellow i icon. Enable Advanced protection by tapping the Turn on button and confirming the action. note If you use AdGuard for iOS without Premium subscription, you won't be able to enable Advanced protection. Alternatively, you can enable Advanced protection directly from the app, in the Protection tab (second from the left in the bottom icon row). AdGuard's Safari Web extension only works on iOS versions 15 and later. "},{"title":"Browser Assistant","type":0,"sectionRef":"#","url":"adguard-for-mac/browser-assistant/","content":"","keywords":""},{"title":"Benefits​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#benefits","content":""},{"title":"Independence​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#independence","content":"AdGuard Browser Assistant is an extension installed in a browser, so there is no need to wait for the userscript to be injected into the filtered web page, as it was with the preceding one. In other words, it is more autonomous from the main AdGuard app. Still, Browser Assistant needs the installed AdGuard for Mac, because there is no point in using the extension without the app. "},{"title":"Compatibility with the main app​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#compatibility-with-the-main-app","content":"If you got into the habit of using our previous AdGuard ad blocker extension in Integration mode, you may like the solution that we have developed for the new Browser Assistant. Background information In previous versions of the AdGuard Browser Extension (before v3.5), if you had it installed along with a desktop AdGuard for Mac, the extension took over the functions of Assistant, stopped filtering itself and relied on the app to do this. The extension and the app worked in conjunction but sometimes the integration would fail. Some websites would stop being protected by the desktop program and be backed up only by the less powerful extension. When using the Browser Assistant, all these problems don’t matter as there can be no conflicts in essence. The role of the Browser Assistant is well defined and it can’t hinder the functioning of the main app, so there is no need to worry. "},{"title":"Smart onboarding​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#smart-onboarding","content":"When AdGuard for Mac is installed for the first time, the thing a user encounters in the first place is the onboarding. During this process the user quickly learns about AdGuard's settings and can customize filtering to their liking. At one stage AdGuard will determine the user's default browser and provide them with a download link for the new Assistant.  note On rare occasions, a browser may prove incompatible with the Browser Assistant, and the user will be offered to install the legacy version instead. "},{"title":"Separate tab in Settings​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#separate-tab-in-settings","content":"The new Browser Assistant has its own tab in the AdGuard for Mac settings, together with Stealth Mode, Browsing Security, Parental Control and others. Don’t worry if you missed the opportunity to install Browser Assistant during the onboarding, you'll find this option in the app's settings. Besides, there is a checkbox to enable the legacy Assistant.  "},{"title":"Legacy Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#legacy-assistant","content":"Legacy Assistant is the previous version of Assistant, which is a mere userscript, not a browser extension. Basically, there are two cases when you might want to pick it instead of the new Browser Assistant: 1) the new Assistant is not available for your browser; 2) you are used to the green shield icon and want to leave things as they were. If you recognize yourself in any of these scenarios, then the legacy version will suit you. "},{"title":"How to install AdGuard Browser Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#how-to-install-adguard-browser-assistant","content":"Technically, you won’t need to do it on your own: during the onboarding process AdGuard app will determine your default browser and offer to install Browser Assistant for it. Yet, if you missed that step, you can download it yourself. AdGuard Browser Assistant is available for all popular browsers: Chrome, Firefox, Safari, Edge, Opera, and Yandex. To install the Browser Assistant for your default browser, you can do it directly from the app settings, but you also have an opportunity to install it for other browsers. To install the one you need (or many, it is not prohibited but even encouraged), go to our website, click the browser icon and then the Install button. That’s it! "},{"title":"How to enable system-wide filtering in AdGuard for iOS","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/system-wide-filtering/","content":"","keywords":""},{"title":"시스템 전체 필터링 정보​","type":1,"pageTitle":"How to enable system-wide filtering in AdGuard for iOS","url":"adguard-for-ios/solving-problems/system-wide-filtering/#시스템-전체-필터링-정보","content":"시스템 전체 필터링은 Safari 브라우저 외부, 즉 다른 앱과 브라우저에서 광고 및 추적기를 차단하는 것입니다. This article will tell you how to enable it on your iOS device. On iOS, the only way to block ads and trackers system-wide is to use DNS filtering. First, you have to enable DNS protection. To do so: Open AdGuard for iOS.Tap Protection icon (the second icon in the bottom menu bar).Turn DNS protection switch on.  Now, if your purpose is to block ads and trackers system-wide, you have three options: Use AdGuard DNS filter (Protection (the shield icon in the bottom menu) → DNS protection → DNS filtering → DNS filters → AdGuard DNS filter).Use AdGuard DNS server (Protection (the shield icon in the bottom menu) → DNS protection → DNS server → AdGuard DNS) or another blocking DNS server to your liking.Add a custom DNS filter/hosts file to your liking. The first and third option have several advantages: You can use any DNS server at your discretion and you are not tied up to a specific blocking server, because the filter does the blocking.You can add multiple DNS filters and/or hosts files (although using too many might slow down AdGuard).  "},{"title":"How to add custom DNS filter/hosts file​","type":1,"pageTitle":"How to enable system-wide filtering in AdGuard for iOS","url":"adguard-for-ios/solving-problems/system-wide-filtering/#how-to-add-custom-dns-filterhosts-file","content":"You can add any DNS filter or hosts file you like. For the sake of the example, let's add OISD Blocklist Big. Copy this link: https://big.oisd.nl (it's a link for OISD Blocklist Big filter)Open Protection (the shield icon in the bottom menu) → DNS protection → DNS filtering → DNS filters.Tap Add a filter.Paste the link into the filter URL field.Tap Next → Add.  Add any number of other DNS filters the same way by pasting a different URL at step 4. 여기에서 다양한 필터와 링크를 확인할 수 있습니다. "},{"title":"설치 방법/ 제거 방법","type":0,"sectionRef":"#","url":"adguard-for-mac/installation/","content":"","keywords":""},{"title":"시스템 요구 사항​","type":1,"pageTitle":"설치 방법/ 제거 방법","url":"adguard-for-mac/installation/#시스템-요구-사항","content":"운영 체제 버전: macOS 10.13 (64 비트) 이상 RAM: 2 GB 이상 브라우저: Safari, Chrome, Opera, Yandex.Browser, Firefox 및 기타 macOS 호환 브라우저 디스크 여유 공간: 120 MB "},{"title":"설치 방법​","type":1,"pageTitle":"설치 방법/ 제거 방법","url":"adguard-for-mac/installation/#설치-방법","content":"To install AdGuard for Mac on your computer, launch your browser, type adguard.com in the address bar, and press Download on the page that opens.  Wait for AdguardInstaller.dmg to download and double-click its icon in the list of downloaded files on the Dock panel.  바탕 화면에 AdGuard 아이콘이 표시될 것입니다. 설치 앱을 열려면 아이콘을 클릭합니다. 다음 열린 설치 창에서 AdGuard 아이콘을 두 번 클릭합니다.  AdGuard가 처음 시작되면 운영 체제에서 이 프로그램이 인터넷에서 다운로드되었음을 경고합니다. 열기를 클릭합니다.  다음에 Install를 클릭합니다.  설치 프로그램이 필요한 파일을 다운로드할 때까지 기다립니다.  프로그램을 사용하시려면 macOS 계정의 관리자 암호가 필요합니다. Enter the password when prompted in the dialogue box and press OK.  이제 사용자의 필요에 맞게 보호를 설정할 수 있습니다. 프로그램 기능의 단계별 설정을 조정하려면 '네 알겠습니다'을 클릭합니다. 이 단계를 건너 뛰려면 '아니요 하지않겠습니다'를 누릅니다.  맥북에 AdGuard가 설치되었습니다! "},{"title":"제거 방법​","type":1,"pageTitle":"설치 방법/ 제거 방법","url":"adguard-for-mac/installation/#제거-방법","content":""},{"title":"일반 제거 방법​","type":1,"pageTitle":"설치 방법/ 제거 방법","url":"adguard-for-mac/installation/#일반-제거-방법","content":"Finder 앱을 엽니다.  응용 프로그램 섹션으로 이동하여 AdGuard를 우클릭하고 휴지통으로 이동을 선택합니다.  "},{"title":"고급 제거 방법​","type":1,"pageTitle":"설치 방법/ 제거 방법","url":"adguard-for-mac/installation/#고급-제거-방법","content":"고객 지원 팀에서 특별히 '고급 제거'를 권장하거나 고급 제거에 익숙한 경우에만 이 지침을 사용하십시오. 또한 '일반 제거'의 모든 단계를 먼저 수행하십시오. After that, delete following AdGuard files: /Library/Application Support/AdGuard Software/com.adguard.mac.adguard (folder)~/Library/Preferences/com.adguard.mac.adguard.plist (file)~/Library/Group\\ Containers/TC3Q7MAJXF.com.adguard.mac (folder)/Library/LaunchDaemons/com.adguard.mac.adguard.adguard-pac.daemon.plist (file)/Library/LaunchDaemons/com.adguard.mac.adguard.adguard-tun-helper.daemon.plist (file)/Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-pac.daemon.log (file)/Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-tun-helper.daemon.log (file) To do so, open the Terminal app, then enter and execute the following commands: sudo rm -R &quot;/Library/Application Support/AdGuard Software/com.adguard.mac.adguard&quot;rm -R &quot;$HOME/Library/Application Support/com.adguard.mac.adguard&quot;rm $HOME/Library/Preferences/com.adguard.mac.adguard.plistrm -R &quot;$HOME/Library/Group Containers/TC3Q7MAJXF.com.adguard.mac&quot;find &quot;$HOME/Library/Application Support&quot; -name &quot;com.adguard.browser_extension_host.nm.json&quot; -deletesudo rm /Library/LaunchDaemons/com.adguard.mac.adguard.adguard-pac.daemon.plistsudo rm /Library/LaunchDaemons/com.adguard.mac.adguard.adguard-tun-helper.daemon.plistsudo rm /Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-pac.daemon.logsudo rm /Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-tun-helper.daemon.log Run the Activity Monitor app. 검색 도구를 사용하여 cfprefsd 프로세스를 찾습니다. 사용자로 실행중인 프로세스를 중지합니다 (루트에서 실행되는 프로세스 제외). 프로세스를 중지하려면 프로세스를 클릭한 후 왼쪽 상단의 X를 클릭합니다. 대화 창에서 종료를 합니다. 이제 AdGuard가 맥북에서 제거되었습니다. "},{"title":"Advanced Settings guide","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/advanced-settings/","content":"","keywords":""},{"title":"How to reach the Advanced settings​","type":1,"pageTitle":"Advanced Settings guide","url":"adguard-for-mac/solving-problems/advanced-settings/#how-to-reach-the-advanced-settings","content":"caution Changing Low-level settings can cause problems with the performance of AdGuard, may break the Internet connection or compromise your security and privacy. You should only open this section if you are sure of what you are doing or our support team has asked you to do it. To go to Advanced settings, follow this route: the AdGuard icon at the tray menu → the gear icon → Advanced → Advanced settings. "},{"title":"Advanced settings​","type":1,"pageTitle":"Advanced Settings guide","url":"adguard-for-mac/solving-problems/advanced-settings/#advanced-settings","content":"network.extension.exclude.domains The listed domains will be excluded from filtering in the Network Extension mode. Use a comma or line break to separate values. network.extension.exclude.ports The listed ports will be excluded from filtering in the Network Extension mode. Use a comma or line break to separate values. network.extension.route.exclude The listed routes will be excluded from filtering in the Network Extension mode. Set routes using an IP address or destination CIDR. Separate values with commas or line breaks. network.extension.http.downgrade.bundleids Here you can specify a list of applications for which the HTTP/2 protocol will be downgraded to HTTP/1.1 in the Network Extension filtering mode. The bundle ID should be separated by a comma or a line break. network.extension.monterey.force.split.tunnel Here you can prohibit AdGuard from using the &quot;default route&quot; which is enabled by default in the Network Extension mode on macOS Monterey. AdGuard uses &quot;default route&quot; to disable iCloud Private Relay and Protect Mail Activity, as it cannot operate in unison with them. You will find more information about the problem in this article. network.extension.dns.redirect.exclude.bundleids Here you can specify a list of applications that make DNS queries directly not via system DNS resolver (for example, some VPN clients or DNS filtering applications). DNS filtering will be disabled for them in the Network Extension mode. The bundle IDs should be separated by a comma or line break. network.dns.filter.secure.request Redirects secure DNS requests to a local DNS proxy, if there is one available. network.https.ocsp.check By setting true, you enable HTTPS certificate revocation checking. network.tcp.keepalive.enabled Periodically sends TCP packets over an idle connection to ensure that it remains active and to renew NAT timeouts. network.tcp.keepalive.interval.seconds Idle time, in seconds, before sending a keepalive probe. If 0 is specified, the system will use the default value. network.tcp.keepalive.timeout.seconds Time, in seconds, before sending another keepalive probe to an unresponsive peer. If 0 is specified, the value selected by the system will be used. network.https.ech.enabled Uses a local DNS proxy to look for configs in the ECH Config Lists. If found, encrypts ClientHellos. network.https.enforce.certificate.transparency Verifies the authenticity of all certificates for the domain based on Chrome Certificate Transparency Policy. network.filtering.localnetwork By setting true, you enable local network filtering. network.filtering.localhost By setting true, you enable LoopBack filtering. dns.proxy.bootstrap.ips Here you can enter the IP addresses of the DNS servers that will be used to determine the address of the encrypted DNS server. dns.proxy.fallback.ips Here you can specify a list of IP addresses of DNS servers that will be used as backups in case the encrypted DNS server fails to respond. dns.proxy.fallback.on.upstreams.failure.enabled Normal queries will be redirected to a fallback upstream if all normal upstreams fail. dns.proxy.detect.search.domains This option enables automatic detection of the local network domain, which will be automatically redirected to the fallback DNS server instead of the main DNS server. dns.proxy.fallback.domains Here you can list domains for which the fallback DNS server will be used instead of the main DNS server. dns.proxy.adblockrules.blocking.mode Here you can specify the type of DNS server response to blocked requests, corresponding to ad-blocker-style rules. 0 — respond with REFUSED1 — respond with NXDOMAIN2 — respond with 0.0.0.0 or the addresses specified in dns.proxy.blocking.response.IPv4.address and/or dns.proxy.blocking.response.IPv6.address dns.proxy.hostrules.blocking.mode Here you can specify the type of DNS server response to blocked requests, corresponding to hosts rules: 0 — respond with REFUSED1 — respond with NXDOMAIN2 — respond with 0.0.0.0 or the addresses specified in dns.proxy.blocking.response.IPv4.address and/or dns.proxy.blocking.response.IPv6.address dns.proxy.blocking.response.IPv4.address Here you can specify the IPv4 address that will be returned in response to blocked &quot;A&quot; requests when dns.proxy.adblockrules.blocking.mode or dns.proxy.hostrules.blocking.mode is set to the response type &quot;ADDRESS&quot;. dns.proxy.blocking.response.IPv6.address Here you can specify the IPv6 address that will be returned in response to blocked &quot;AAAA&quot; requests when dns.proxy.adblockrules.blocking.mode or dns.proxy.hostrules.blocking.mode is set to the response type &quot;ADDRESS&quot;. dns.proxy.block.AAAA.requests Here you can enable IPv6 DNS query blocking. dns.proxy.blocked.response.TTL.in.seconds Here you can specify the TTL (time to live) value that will be returned in response to a blocked request. dns.proxy.parallel.upstream.queries.enabled All upstreams are queried simultaneously. The first response is returned. dns.proxy.servfail.on.upstreams.failure.enabled Responds to upstream failure with a SERVFAIL packet. dns.proxy.http3.enabled Enables HTTP/3 for DNS-over-HTTPS upstreams to accelerate connection. dns.proxy.block.encrypted.client.hello.response Removes the Encrypted Client Hello parameters from responses. stealth.antidpi.http.split.fragment.size Adjusts the size of the HTTP request fragmentation. Accepted values: 1–1500. If an invalid size is specified, the system will use the default value. stealth.antidpi.clienthello.split.fragment.size This option specifies the size of TCP packet fragmentation, which helps avoid deep packet inspection. Accepted values: 1–1500. If an invalid size is specified, the system will use the default value. stealth.antidpi.http.space.juggling Adds extra space between the HTTP method and the URL and removes space after the &quot;Host:&quot; field. subscription.link.interception.userscript Activate this feature if you want AdGuard to automatically intercept the URLs of userscripts and open the installation window. subscription.link.interception.filter Activate this feature if you want AdGuard to automatically intercept subscription URLs (for example, abp:subscribe, etc.) and open the custom filter setup window. "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-mac/overview/","content":"","keywords":""},{"title":"Home panel​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#home-panel","content":" The first thing you see upon startup will be a screen with a big On/Off toggle. Below are shown various stats (ads blocked, trackers blocked, data saved) since the installation or since the last stats reset. To start configuring AdGuard for Mac, you need to click the gear in the upper right corner of the window and select &quot;Preferences&quot;. "},{"title":"General Preferences​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#general-preferences","content":" Descriptions under option titles seem self-explanatory, but still: Activate language-specific filters automatically Enabling this option, you won't have to manually choose all the filters when visiting a foreign website, saving you some time. Launch AdGuard at login A simple and convenient feature with which you don't have to worry whether or not you have your ad blocker turned on, and just be sure that ads are always blocked. Do not block search ads and websites' self-promotion This option might be useful to online shoppers: instead of adding all your favorite e-shops and sites to the Allowlist, you can simply exclude self-promos and search ads from filtering. AdGuard will automatically detect those and let them be, while removing everything else ad-like. Hide menu bar icon If you don't want to see the menu bar icon, there is an option to hide it. But don't worry: even if you remove it from the menu bar, AdGuard will continue to run in the background. From this same window you can access the above-mentioned Allowlist, to which you can add websites you do not wish AdGuard to filter. Just click the corresponding button located at the bottom of the window. "},{"title":"Filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#filters","content":" Filters are the main driving force behind the Ad blocker module. To understand how filtering works, get acquainted with our comprehensive article. But in essence, filter lists are sets of rules written in a special language, and your ad blocker is an interpreter of these rules who then implements them. As a result, you stop seeing ads on your web pages and life gets lots better. Some filter lists (AdGuard’s Base filter, Annoyances filter, EasyList, etc.) are pre-installed, while other specific ones, adapted to your preferences, can be downloaded additionally and added to your program. Aside from the more general and universally applicable filters (like Base filter), AdGuard provides an extensive quantity of filters for every occasion: filters aimed at tracking prevention (like Tracking Protection filter),language-specific ad filters that block content in a selected language,Social media filter that removes &quot;Like&quot; and &quot;Share&quot; buttons,Annoyances filter for cookie warnings, in-page pop-ups and others of the same ilk,and even a filter that unblocks some ads instead of blocking them — Filter for search ads and self-promotions. AdGuard filters are automatically updated. Our developers create them all based on user feedback received. You can always help other AdGuard users (and yourself, in perspective) by sending us reports right from the app's Assistant (it's really handy, we'll tell you more about the Assistant further on), or from the website. If you wish to know more about AdGuard filters, here is some info. "},{"title":"User rules​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#user-rules","content":" Another vital part of the Ad Blocker module are its User rules. If you have some coding experience and would like to create your own rules that would be a better custom fit than the standard filters already available, then you can try your hand at this. The syntax AdGuard uses for its filtering rules is based on that of any other ad blocking extension, but with considerable additions, extending its possibilities. The whole process of rule-writing in all its nuances is described in these comprehensive instructions, so if you want to write some custom rules and check how much of a coder you are, just follow the steps we described in this article. "},{"title":"DNS​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#dns","content":" DNS filtering is one of the most useful features, thanks to which all your DNS traffic is encrypted. But if you're using the default DNS server provided by your ISP, your DNS traffic is likely not encrypted and vulnerable to snooping and hijacking. In the DNS panel you can select the DNS servers from known DNS providers or even add custom DNS servers. Also you can add domains to DNS blocklist or allowlist and add complicated rules using DNS rules syntax. Finally, you can add DNS filters of your choice. "},{"title":"Stealth Mode​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#stealth-mode","content":" This module is a very useful tool that will help you maintain your privacy from websites that try to retain such info about you as your IP address, computer parameters, browser settings and even the initial page from which you were redirected, not to mention cart contents if we speak of web stores. If this list of info potentially to be shared with shady third parties doesn't make you think twice, then might we add that in most cases they will also get such personal data as your age, yearly income, medical history, physical address and your kids' names. Eliminating such things as unwanted cookies or clandestine insertion of tracking parameters into your browser is what Stealth Mode does best. Stealth Mode contains a wide range of options, which ensure its flexible configuration. They are divided into several categories, and for an unprepared user many of them will seem confusing and maybe even complicated. We provided each option with a hint to make up for the deficiency — hints appear when you hover over the icon with a question mark. If you still wish to know more about the whole concept, we encourage you to proceed to this article. "},{"title":"Browsing Security​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#browsing-security","content":" Next we have the Security panel, where a module also known as Browsing Security is located. What it does is protection from malicious and phishing websites. note AdGuard is not an antivirus, but an entirely different program. It will show you a warning if you are about to go onto an infected domain, but it cannot stop you from downloading anything suspicious or help you deal with already existing viruses. Phishing is a very common web fraud aimed at stealing personal data (passwords, bank account details, etc.). It is carried out using fake web pages mimicking popular websites or real services, such as web stores or social networks. Many phishing websites have URLs that only differ from the real ones in just a few symbols to put you off your guard. If a user enters their details on such a website, they’ll definitely end up in the wrong hands. Browsing Security gives strong protection against such incidents. At the same time, the user’s personal information is not transferred anywhere, and AdGuard servers do not know which websites the user is visiting, because the security check is not performed via open web address (URL) but through hash prefixes (hash is a certain data structure that renders each address added to the base unambiguous). Some web pages are not malicious themselves, but they may contain elements built into their structure by other websites. Unlike browser plug-ins, Browsing Security module checks each object built into any web page, ensuring maximum protection. If you wish to help us in perfecting this module, you can check the lower box on the panel near the &quot;Help us with Browsing Security filters development&quot; phrase. This will enable your computer to send us pertinent info on fraudulent websites you might stumble upon while surfing the web — and our developers will make sure they end up locked at the bottom of your ban list. "},{"title":"Browser Assistant​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#browser-assistant","content":" AdGuard Browser Assistant’s primary function is to manage filtering directly from the browser. It used to be a mere userscript incorporated into AdGuard for Mac app that then became a full-fledged browser extension. Know more about the benefits it yields.  You will be prompted to install the Browser Assistant for your default browser when you first install AdGuard (during the onboarding process). If you missed it, you can download it for any browser at any time. "},{"title":"Extensions​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#extensions","content":" Extensions are small programs that do exactly what their name implies — they extend functionality. And AdGuard uses several extensions of its own, also called userscripts, to broaden its functions range: 1. AdGuard Assistant (legacy version) This extension assists the user in changing basic AdGuard settings within the browser, without the need to open the app itself. Like Browser Assistant, legacy Assistant works with all macOS compatible browsers. Thanks to this little tool you can do several things without having to leave the browser: add a certain webpage to the &quot;do not block&quot; list, choose and block an especially annoying element on the page, report the website if it still manages to get ads through to you. note This version of Assistant is legacy and there is no point in using it on new systems, since it has been replaced with the full-fledged Browser Assistant. But legacy Assistant might be of help if there is no Browser Assistant extension for your browser. 2. AdGuard Extra This extension is used to solve the more complicated ad blocking cases you might encounter. We would recommend you to always keep it switched on, unless you have a serious reason not to. 3. AdGuard Popup Blocker Prevents all these annoying popup windows from opening when you view webpages. Blocks popup ads on web pages. One of the important features of AdGuard for Mac is that the application can work as a cross-browser userscript manager. You can easily add any scripts you like and manage existing ones without having to switch browsers every time. "},{"title":"Network​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#network","content":" This last panel is dedicated to Network filtering, and you will find extra functionalities here. We do recommend to enable the first two ones: &quot;Automatically filter applications&quot; and &quot;Filter HTTPS protocol&quot;. Those are an important added precaution to better filter your web space. HTTP is the primary protocol for transmitting information over the Internet. Most data including ads is transferred via it, but it has one disadvantage — the connection is unencrypted. Thanks to the HTTPS filtering feature AdGuard has, not only HTTP traffic is filtered, but also HTTPS traffic (S stands for ‘secure’). There are also the options of &quot;Do not filter websites with EV certificates&quot; and &quot;Use AdGuard as an HTTP Proxy&quot;. Extended Validation (EV) SSL Certificates offer a stronger safety guarantee; owners of such websites have to pass a thorough and globally standardized identity verification process defined by EV guidelines. Which is the reason why some users trust websites with such certificates and prefer not to filter them. As for the second option — well, yes, in fact you can use AdGuard as a regular HTTP proxy server. All traffic coming through it will be filtered. This proxy will also be available on your local network, so you may use it for traffic filtering on other devices that are able to reach the proxy directly. To filter traffic on another device connected to proxy you will need to install an AdGuard root certificate there. After you configure proxy, open your browser and go to this page. "},{"title":"Others​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#others","content":"There are other useful AdGuard options that shouldn't go unnoticed in this article, since they add much to user experience. "},{"title":"License​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#license","content":"First, there's the License tab that you can open from the dropdown main menu (the one that opens once you click the gear icon on the upper right of the main window). From this tab you can see which license type you are using, check its status and validity period.  In this same tab you can refresh your license status, renew your license or reset the license key using the corresponding buttons. "},{"title":"Support​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#support","content":"Click the gear icon in the upper right corner, select &quot;Support&quot;, and you will be able to send a bug report or a feature request to our support team. Be sure to add your real actual email though, because without it the message won't be sent.  To report a missed ad or a broken website, please follow the link above the message window, we use a separate reporting tool for those types of issues. It is possible to attach a diagnostic report to your message, you only need to check the box in the lower part of the tab. "},{"title":"Updates check​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#updates-check","content":"Last but not least. You can check for filter and program updates by clicking the corresponding menu options in the dropdown menu (click the gear icon and you'll see it). "},{"title":"Compatibility issues with different macOS versions","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/big-sur-issues/","content":"","keywords":""},{"title":"Currently existing problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#currently-existing-problems","content":"Every year Apple releases a new version of macOS, introducing innovative solutions and adding new useful features. But some of them, such as Network Extensions API (Big Sur) or iCloud Private Relay (Monterey), cause some problems to many applications, AdGuard not being an exception. In this article we go over the known issues specific to each macOS version and possible ways to solve them. "},{"title":"Monterey 12: currently existing problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#monterey-12-currently-existing-problems","content":"These problems aren't fixed by Apple yet, or fixed only partially. Compatibility with iCloud Private Relay​ Currently, AdGuard and iCloud Private Relay cannot work at the same time. AdGuard has no ability to block ads because iCloud Private Relay encrypts traffic before AdGuard can filter network connections. When iCloud Private Relay is active, any filtering (including local filtering) becomes impossible. Thus, AdGuard can't filter traffic or perform DNS filtering in Safari. That's why by default, AdGuard uses the &quot;default route&quot; which disables iCloud Private Relay. For a deeper understanding of this problem, read this article. Recommended solution We recommend using AdGuard together with a more traditional VPN service such as AdGuard VPN. Alternative solution You can prevent AdGuard from using the &quot;default route&quot; by disabling it. It can be done via Advanced Settings → network.extension.monterey.force.split.tunnel. Note that enabling this setting will cause the problems described above.  Compatibility with Protect Mail Activity​ Apple's Mail app now uses a proxy to hide a user's IP address when downloading images from emails. However, it won't work if there's an active VPN connection. As it treats AdGuard as a VPN, it won't preload images automatically. For a deeper understanding of this problem, read this article. Recommended solution At this point, we recommend using a more traditional VPN service, such as AdGuard VPN, instead of the new Apple's privacy features. "},{"title":"Monterey 12, Big Sur 11.6 and later: currently existing problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#monterey-12-big-sur-116-and-later-currently-existing-problems","content":"These problems aren't fixed by Apple yet, or fixed only partially. Compatibility with Cisco AnyConnect​ AdGuard will not work together with Cisco AnyConnect while in the Network Extension mode. You have to switch AdGuard to Automatic Proxy mode. To do so, follow this instruction. Compatibility with Flutter​ This problem is solved in Flutter 2.2, released in June 2021. But to fix it for applications developed in Flutter, you need to wait for updates. If you use Flutter alongside AdGuard in &quot;Network Extension&quot; mode (or any other &quot;Transparent Proxy&quot;-type app) in Monterey or Big Sur, you will run into problems: projects won't open and Flutter will be effectively broken. We have already reported this bug to Apple. Meanwhile, you can use these temporary solutions: Use AdGuard in Automatic Proxy mode. Disable SIP and switch AdGuard to Kernel Extension mode as explained here. VPN apps with legacy API​ Despite AdGuard is displayed as a VPN in system settings, it shouldn't cause any conflicts when working alongside other VPN-based apps. However, if you're using a VPN-based app that was downloaded from outside App Store, there's a chance it uses the old VPN API and you have to exclude it from filtering: Open AdGuard's menu.Select Preferences....Switch to the Network tab.Click the Applications... button.Find the app you want to exclude and uncheck the checkbox next to it.  "},{"title":"Already fixed problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#already-fixed-problems","content":"These problems have been fixed by Apple by now but can be encountered in the older versions of macOS Big Sur. "},{"title":"Compatibility with Little Snitch 5​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#compatibility-with-little-snitch-5","content":"At this moment, Network Extension mode in AdGuard isn't compatible with Little Snitch 5. When both are running, there's a chance to encounter issues with various apps' behavior, even if they aren't filtered by AdGuard. This problem is directly caused by a bug in Big Sur, and we've already informed Apple about it. This leaves us to believe that this issue will get resolved in one of the next updates. It needs to be said that this problem can't be solved by disabling connections monitoring in Little Snitch, because this action doesn't unload Little Snitch's extension from the system. We recommend to switch to Automatic Proxy filtering mode when running AdGuard alongside with Little Snitch on Big Sur, at least until Apple fixes the bug. "},{"title":"Compatibility with local proxies​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#compatibility-with-local-proxies","content":"note Now AdGuard can filter local proxies (mostly) without any problems. If you encounter any issues in OS versions 11.1+, or if you're using Big Sur 11.0, remove the local proxy from System settings and configure an upstream proxy in AdGuard by following the instruction below. To configure an upstream proxy in AdGuard for Mac in Big Sur: Open AdGuard's settings Preferences → Network → Outbound proxy.Choose HTTP, HTTPS, SOCKS4 or SOCKS5, depending on your proxy type.Fill in the fields: host is the IP address of your proxy server,port is the desired port number to be used by the proxy server,user and password are corresponding username and password of your proxy (if needed). Ignore either or both when not applicable. If you run into any problems, please contact our tech support at support@adguard.com. Example 1: Configuring an upstream Shadowsocks proxy​ Here's an example of how to configure an upstream proxy for Shadowsocks. First of all, you need a working server side for your proxy. Most likely, to set it up, you would use a JSON file like this (server and password values were chosen randomly here): { &quot;server&quot;:&quot;111.222.333.444&quot;, &quot;server_port&quot;:8388, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;barfoo!&quot;, &quot;timeout&quot;:600, &quot;method&quot;:&quot;chacha20-ietf-poly1305&quot; }  tip You can find more information about how to get started on Shadowsocks website. Then you'd have to install Shadowsocks client on your Mac. Make sure that you select 'Manual Mode' or 'Auto Mode' in its settings! The configuration won't work if you select 'Global Mode' (or 'Auto Mode' in Big Sur versions prior to 11.1).  Now go to AdGuard menu → Advanced → Advanced Settings... and set the Value area of the upstream.proxy setting to socks5://localhost:1080. Notice that you need to use &quot;local_port&quot; value from the JSON file here. Because Shadowsocks uses SOCKS5, you also need to set the value of the upstream.proxy.socks5udp setting in AdGuard Advanced Settings to true to make AdGuard route UDP traffic to the proxy server. Example 2: Configuring an upstream Surge proxy​ In Big Sur v11.1+, there are no known conflicts between AdGuard and Surge proxy. If you are using an older version of Big Sur (prior to 11.1), check that System Proxy in the bottom right corner is disabled. Otherwise, Surge won't work with AdGuard. On the other hand, Enhanced Mode can be enabled without causing a conflict in any Big Sur version.  Now go to Preferences → Network → Outbound proxy and fill in the fields. For SOCKS5 proxy type: host: localhostport: 6153 For HTTP proxy type:host: localhostport: 6152 "},{"title":"Alternatives to using a Network Extension​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#alternatives-to-using-a-network-extension","content":"It's impossible to foresee each and every possible problem that can pop up in Big Sur or Monterey, there are countless various hardware/software and settings configurations. If you face any compatibility issues, please contact our support team, but feel free to try one of these workarounds first. "},{"title":"Using \"Automatic proxy\" filtering mode​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#automatic-proxy","content":"If you face problems in Big Sur or Monterey which can't be resolved by any of the methods above, you can try switching AdGuard to Automatic proxy mode. Open AdGuard's menu.Select Preferences....Switch to the Network tab.Click the Select Mode... button.Select Automatic Proxy.  Now AdGuard has automatically added a .pac file to your Mac's network settings, so that the system will consider AdGuard a proxy and try to send all traffic through AdGuard. note Some apps may ignore this system setting and their traffic will not be filtered. "},{"title":"Enabling Kernel Extension in Big Sur and Monterey​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#kernel-extension","content":"By default AdGuard uses Network Extension framework in Big Sur and Monterey as the old Kernel Extension framework is disabled there. This can cause some compatibility problems, but to enable Kernel Extension back, you need to disable System Integrity Protection (SIP) first. To disable SIP, follow this instruction: Click the Apple symbol in the Menu bar.Click Restart…Hold down Command-R to reboot into Recovery Mode.Click Utilities.Select Terminal.Type csrutil disable.Press Return or Enter on your keyboard.Click the Apple symbol in the Menu bar.Click Restart… Now that SIP is disabled, this is how you enable Kernel Extension:  Open AdGuard's menu.Select Preferences....Switch to the Network tab.Click the Select Mode... button.Select Kernel Extension.Confirm that you want to switch to Kernel Extension. caution However, we only recommend using this method if everything else fails, as this may lead to unexpected issues. "},{"title":"How to install AdGuard on macOS High Sierra and above","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/high-sierra-compatibility/","content":"How to install AdGuard on macOS High Sierra and above info 이 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 Mac용 AdGuard에 대해 다룹니다. 어떻게 동작하는지 알고 싶으시다면 AdGuard 앱을 다운로드해 보세요. During the Installation of AdGuard on macOS High Sierra (or later versions) you may see a message: &quot;System Extension Blocked&quot;. This is a new security mechanism that appeared in High Sierra, it requires you to explicitly allow the installation of a third-party system extension. To complete the installation of AdGuard you have to manually allow loading the extension in System Preferences → Security &amp; Privacy → General. Click the &quot;Allow&quot; button, and after that you will be able to proceed with the installation as normal.","keywords":""},{"title":"Installation problems solving","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/installation-issues/","content":"","keywords":""},{"title":"\"Installation failed\" error in macOS Catalina​","type":1,"pageTitle":"Installation problems solving","url":"adguard-for-mac/solving-problems/installation-issues/#installation-failed-error-in-macos-catalina","content":"During the installation you can face an error like this:  Follow this instruction to solve the problem: Restart your MacAs your Mac restarts, press and hold down the Command(⌘) + R keys immediately upon hearing the startup chime. Hold the keys until the Apple logo appears to get the computer into Recovery mode.From the top bar select Utilities → Terminal, and execute this command: csrutil disableRestart the Mac and log into Administrator's profileOpen the Finder window and select from the top bar Go → Go to Folder and type ~/private/Create a folder named tmp and type in your passwordLaunch AdGuard installation As the installation is completed, restart your Mac in Recovery mode using the instruction above and execute csrutil enable command in Terminal to enable system protection. "},{"title":"iCloud Private Relay and AdGuard","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/icloud-private-relay/","content":"","keywords":""},{"title":"Problem description in a nutshell​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#problem-description-in-a-nutshell","content":"By default, AdGuard uses the &quot;default route&quot; which disables iCloud Private Relay. Currently, AdGuard and iCloud Private Relay cannot work at the same time. AdGuard cannot block ads because iCloud Private Relay encrypts traffic before AdGuard can filter network connections. When iCloud Private Relay is active, any filtering (including local filtering) becomes impossible. Thus, AdGuard can't filter traffic or perform DNS filtering in Safari. Yet, AdGuard still filters traffic in other browsers. To keep using iCloud Private Relay, consider installing AdGuard for Safari. The same applies to using any VPN apps on Mac: you have to choose between using iCloud Private Relay or a VPN service. "},{"title":"In detail​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#in-detail","content":"AdGuard for Mac now uses macOS built-in socket filtering based on the network extensions API. This new and rather buggy mechanism replaced good old Kernel extensions. Over the last 1.5 years, we've reported more than 20(!) bugs to Apple regarding their new filtering method. The network extensions API has a VPN-like configuration with a list of route-like entries. On Big Sur, AdGuard developed &quot;split-tunnel&quot; rules to avoid creating the &quot;default route&quot; rule because it causes problems on early Big Sur releases. On Monterey, iCloud Private Relay got introduced. Privacy features of the Mail app also use Private Relay servers. As a result, AdGuard can't work together with iCloud Private Relay and the Mail app privacy features: iCloud Private Relay is applied to connections at the library level — before they reach the socket level, where AdGuard operates.iCloud Private Relay uses QUIC, which AdGuard can't filter in filtered apps because HTTP/3 filtering is not yet available.As AdGuard blocks QUIC, including iCloud Private Relay traffic — otherwise, ad blocking is impossible.When you use iCloud Private Relay and switch AdGuard into the &quot;split-tunnel&quot; mode, you can't open websites in Safari.To work around this issue for Monterey, we apply the &quot;default route&quot; rule. When Private Relay sees that rule, it disables itself automatically. So, AdGuard works seamlessly on Monterey, but iCloud Private Relay gets disabled. network.extension.monterey.force.split.tunnel restores the &quot;Big Sur&quot; behavior, but this option may break access to websites due to (3) and (4). We keep searching for a solution to this issue. One of the options is implementing HTTP/3 filtering. "},{"title":"Recommended solution​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#recommended-solution","content":"We recommend using AdGuard together with a more traditional VPN service such as AdGuard VPN. "},{"title":"Alternative solution​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#alternative-solution","content":"You can prevent AdGuard from using the &quot;default route&quot; by disabling the &quot;default route&quot;. It can be done via Advanced Settings → network.extension.monterey.force.split.tunnel.  Bear in mind that, in this case, you'll face the issues described above. "},{"title":"Manual certificate installation","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/manual-certificate-installation/","content":"Manual certificate installation info 이 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 Mac용 AdGuard에 대해 다룹니다. 어떻게 동작하는지 알고 싶으시다면 AdGuard 앱을 다운로드해 보세요. AdGuard for Mac needs to install the root certificate into certificate storage to be able to filter HTTPS traffic. This action is performed automatically in most cases as you run the app for the first time, but users of Gecko-based browsers (Firefox, Waterfox etc.) who have a master password set up for their browser may be required to take additional steps (because these browsers use their own certificate storage instead of the system one). They need to either enter the master password when prompted (to grant AdGuard access to the certificate storage) or manually install the certificate. To manually install the certificate into Firefox-like browser: Open &quot;Preferences&quot; Go to &quot;Privacy &amp; Security&quot; — &quot;Certificates&quot; Click on &quot;View Certificates&quot; Navigate to the &quot;Authorities&quot; tab and click the &quot;Import...&quot; button Select file /Library/Application Support/AdGuard Software/com.adguard.mac.adguard/AdguardCore/Adguard Personal CA.cer or just download it from http://local.adguard.org/cert using a Chromium-based browser (e.g Google Chrome or new Edge) and with a HTTPS-filtering running in AdGuard Exact actions required for different Gecko-based browsers may vary, but the general sequence and the path to AdGuard Personal CA.cer file will be the same. PS: For Setapp application version the file path is the following: /Library/Application Support/com.adguard.mac.adguard-setapp/AdguardCore/Adguard Personal CA.cer","keywords":""},{"title":"Launch issues on macOS","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/launch-issues/","content":"","keywords":""},{"title":"Launch issues on macOS 11 and higher​","type":1,"pageTitle":"Launch issues on macOS","url":"adguard-for-mac/solving-problems/launch-issues/#launch-issues-on-macos-11-and-higher","content":"If you have problems launching AdGuard for Mac on Big Sur and Monterey operating systems, please use this instruction: Reboot Mac and enter recovery mode.Disable SIP (Launch Terminal from the Utilities menu and type csrutil disable).Reboot Mac.Close the AdGuard app, open Terminal and type systemextensionsctl reset.Reboot Mac and enter recovery mode.Enable SIP (Launch Terminal from the Utilities menu and type csrutil enable).Launch the AdGuard app and enable protection. "},{"title":"Launch issues on macOS 10​","type":1,"pageTitle":"Launch issues on macOS","url":"adguard-for-mac/solving-problems/launch-issues/#launch-issues-on-macos-10","content":"If you have problems launching AdGuard for Mac on Sierra, Mojave and Catalina operating systems, please use this instruction: Open Terminal and enter command ls -@lOae /private/var/db/KernelExtensionManagement.Check that the restricted flag is not present (like on the screenshot). Reboot your Mac in recovery mode.Open Utilities → Terminal.Enter csrutil disable.Enter administrator password.Reboot your Mac.Open Terminal and enter the following command: sudo chflags restricted /private/var/db/KernelExtensionManagement.Reboot your Mac in recovery mode.Open Utilities → Terminal → Enter csrutil enable → Enter administrator password → Reboot your Mac.Enable AdGuard protection. "},{"title":"Protection cannot be enabled","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/protection-cannot-be-enabled/","content":"Protection cannot be enabled info 이 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 Mac용 AdGuard에 대해 다룹니다. 어떻게 동작하는지 알고 싶으시다면 AdGuard 앱을 다운로드해 보세요. If AdGuard Protection cannot be enabled for some reason, perform the following steps: Click the AdGuard icon at the Menu Bar → go to Advanced → Reset settings... → Quit AdGuard... In the Spotlight Search, type Terminal, enter sudo rm -R /Library/Application\\ Support/com.adguard.adguard and execute. Restart your computer. Open the Terminal again, type ls -al /Library/StagedExtensions/Library/Application\\ Support/com.adguard.adguard/ and execute. You should receive the following: No such file or directory. Start AdGuard, type in login and password when prompted.","keywords":""},{"title":"Protect Mail Activity and AdGuard","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/protect-mail-activity/","content":"","keywords":""},{"title":"In a nutshell​","type":1,"pageTitle":"Protect Mail Activity and AdGuard","url":"adguard-for-mac/solving-problems/protect-mail-activity/#in-a-nutshell","content":"Apple's Mail app now uses a proxy to hide a user's IP address when downloading images from emails.  However, it won't work if there's an active VPN connection. As it treats AdGuard as a VPN, it won't preload images automatically. Apple explains this issue here. "},{"title":"In detail​","type":1,"pageTitle":"Protect Mail Activity and AdGuard","url":"adguard-for-mac/solving-problems/protect-mail-activity/#in-detail","content":"AdGuard for Mac now uses macOS built-in socket filtering based on the network extensions API. This new and rather buggy mechanism replaced good old Kernel extensions. Over the last 1.5 years, we've reported more than 20(!) bugs to Apple regarding their new filtering method. The network extensions API has a VPN-like configuration with a list of route-like entries. On Big Sur, AdGuard used &quot;split-tunnel&quot; rules to avoid creating the &quot;default route&quot; rule because it causes problems on early Big Sur releases. These problems were solved in Monterey so nothing prevents us from using the &quot;default route&quot; rule. On Monterey, iCloud Private Relay got introduced. Privacy features of Mail.app also use Private Relay servers. As a result, AdGuard can't work together with iCloud Private Relay and Mail.app privacy features: iCloud Private Relay is applied to connections at the library level - before they reach the socket level, where AdGuard operates.iCloud Private Relay uses QUIC, which AdGuard can't filter because HTTP/3 filtering is not yet available.As AdGuard blocks QUIC, including iCloud Private Relay traffic - otherwise, ad blocking is impossible.When you use iCloud Private Relay and switch AdGuard into the &quot;split-tunnel&quot; mode, you can't open websites in Safari.To work around this issue for Monterey, we apply the &quot;default route&quot; rule. When Private Relay sees that rule, it disables itself automatically. So, AdGuard works seamlessly on Monterey, but iCloud Private Relay gets disabled. network.extension.monterey.force.split.tunnel restores the &quot;Big Sur&quot; behavior, but this option may break access to websites due to (3) and (4). We keep searching for a solution to this issue. One of the options is implementing HTTP/3 filtering. "},{"title":"Recommended solution​","type":1,"pageTitle":"Protect Mail Activity and AdGuard","url":"adguard-for-mac/solving-problems/protect-mail-activity/#recommended-solution","content":"At this point, we recommend using a more traditional VPN service, such as AdGuard VPN, instead of the new Apple's privacy features. "},{"title":"Setting up filtering in Tor Browser","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/tor-filtering/","content":"Setting up filtering in Tor Browser info 이 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 Mac용 AdGuard에 대해 다룹니다. 어떻게 동작하는지 알고 싶으시다면 AdGuard 앱을 다운로드 해 보세요. By default, Tor Browser is added to AdGuard’s list of filtered applications. However, to filter it, AdGuard needs to change Tor's security settings. This will make Tor trust AdGuard's CA certificate. If you decide to filter Tor and check it in Preferences → Network → Applications, AdGuard will show you this dialog box: By updating Tor settings, AdGuard will set the following: security.enterprise_roots.enabled: true This setting will cause Tor to trust root certificates. Learn more security.cert_pinning.enforcement_level: 1 Public Key Pinning is a security measure that allows websites to ensure that the connection between a website and a user is authentic. This involves the website publishing a list of public keys, or pins, that it trusts. With the enforcement level set to 1, pinning is not enforced for custom CAs. Learn more To apply the changes, you’ll need to restart Tor Browser. If you manually change these settings, Tor filtering will be stopped.","keywords":""},{"title":"설치 방법","type":0,"sectionRef":"#","url":"adguard-for-safari/installation/","content":"","keywords":""},{"title":"How to install AdGuard for Safari​","type":1,"pageTitle":"설치 방법","url":"adguard-for-safari/installation/#install","content":"AdGuard for Safari is a free app presented on the App Store. To install it on your device, do the following. Open the App Store and find the needed extension there. Press Get → Install → Open. To set up AdGuard for Safari, enable the AdGuard extensions in the Safari settings. In a notification, click Fix it. In an opened window, check the boxes next to AdGuard extensions.  note Not all extensions are required for AdGuard for Safari to function correctly. For instance, checking the Icon extension enables the icon in the tray menu. However, we recommend enabling all of them.  After you complete steps 1-3, AdGuard for Safari will start functioning. You can now configure its settings. "},{"title":"How to uninstall AdGuard for Safari​","type":1,"pageTitle":"설치 방법","url":"adguard-for-safari/installation/#uninstall","content":"To uninstall AdGuard for Safari, do the following: Quit the app. Open Safari preferences. Choose the Extensions tab. You will see a list of extensions, AdGuard has eight. Uncheck all checkboxes and press Uninstall below any of them. At this point, you will see a notification: Press Show in Finder and move the application to the bin. AdGuard for Safari will be removed from your device. "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-safari/overview/","content":"","keywords":""},{"title":"General​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#general","content":" The first tab is the General screen where you can set up basic things like notifications, update intervals, and launching AdGuard at system startup. You can also choose to display the AdGuard icon in the menu bar. There you can also turn on content blockers to block ads, trackers, annoyances, etc. "},{"title":"Filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#filters","content":" A filter is a list of rules written in a special syntax. Following these rules, content blockers can filter web traffic: block ads or requests to malicious websites. Filters are combined into eight thematic categories: Ad Blocking, Privacy, Social widgets, Annoyances, Security, Language-specific filters, Custom, and Other filters. Read more about AdGuard filters or ad filtering in general. In the Filters tab, you can enable the whole category or separate filters. Changes in the Filters tab are reflected in the Content Blockers section (located in the General tab). "},{"title":"Content blockers​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#contentblockers","content":" A content blocker is a thematic cluster of filters. Privacy-related filters are included in the content blocker with the corresponding name — AdGuard Privacy. Content Blockers were designed for two reasons: to structure filters and to conform to Apple’s restrictions. In 2019, Apple put limitations on ad blockers for Safari, allowing them to use only 50,000 filtering rules simultaneously. As this number was not enough for an ad blocker to provide a good filtering quality (AdGuard Base Filter alone has 30,000 filtering rules), we divided AdGuard for Safari into six content blockers each containing up to 50,000 rules. In 2022, Apple increased the filtering rule limit for each content blocker to 150,000 rules applied simultaneously. Regarding AdGuard for Safari, up to 900,000 rules can be enabled for all six content blockers. Whereas the limit has been increased, the structure of content blockers has remained the same. In the Content blockers tab, you can see which content blockers are enabled, how many rules each of them is using, and which filters are functioning. tip You can manage enabled filters in the Filters tab. In the Content blockers section, you can only see the list of already enabled filters. "},{"title":"AdGuard General​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_general","content":"AdGuard General is a content blocker that combines the most essential filters for blocking ads. We recommend keeping the AdGuard Base Filter always enabled. "},{"title":"AdGuard Privacy​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_privacy","content":"This content blocker is the main tool against counters and other web analytics tools. The AdGuard Tracking Protection filter is enabled by default. "},{"title":"AdGuard Social​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_social","content":"AdGuard Social contains filters against social media buttons, widgets, scripts, and icons. Other annoyance filters can also be found in this section: filters against pop-ups, mobile app banners, cookie notices, and more. To enable them, find Social Widgets in the Filters tab. "},{"title":"AdGuard Security​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_security","content":"This content blocker unites several security-related filters. Malware Domains Blocklist blocks domains that are notorious for spreading malware and spyware. Spam404 protects you from Internet fraudsters. NoCoin Filter List disrupts browser-based cryptominers, such as Coinhive. "},{"title":"AdGuard Other​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_other","content":"AdGuard Other contains filters with various functions. For example, it has a filter that unblocks search ads and self-promo ads. In some cases, it helps find exactly what you are looking for, because these kinds of ads are more relevant and less intrusive than others. Disclaimer We don’t have any ‘acceptable ads’ paid by advertisers. Instead, we provide users with an option to see search ads and websites' self-promotion. "},{"title":"AdGuard Custom​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_custom","content":" If you need more filters, you can add them to AdGuard Custom. To add a custom filter, enter a URL or a local file path in the relevant field. You can find new filters at filterlists.com. "},{"title":"User rules​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#userrules","content":"User rules can be used to customize ad blocking. They can be added manually, imported, or created automatically when you block an element on the page. To add your own filering rules, use a special syntax. "},{"title":"About​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#about","content":" In the About tab, you can see info about the current version of your product and links to legal documents. There is also a link to our repository on GitHub. You can monitor the product development, create feature requests and report bugs there. Reminder AdGuard for Safari can be downloaded for free from the App Store. A detailed setup instruction is available in the Knowledge base. "},{"title":"Documentation for admins","type":0,"sectionRef":"#","url":"adguard-for-windows/admins-documentation/","content":"","keywords":""},{"title":"1. Download the MSI​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#msi-download","content":"Download the AdGuard MSI. "},{"title":"2. Configure the settings for your network​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#settings-configuring","content":"On machines that are joined to an Active Directory domain, policy settings may also be stored in the registry under HKEY_LOCAL_MACHINE in the following path: Software\\Policies\\AdGuard\\. The only supported policy is LicenseKey. If this policy is set, AdGuard will prefer it over what user can enter in the interface. This license key will be used for checking license status. "},{"title":"3. Make sure that AdGuard servers are available​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#servers-available","content":"AdGuard connects to two hosts: api.adguard.org and filters.adtidy.org. Make sure that both servers are available. "},{"title":"4. Push the MSI out to your network​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#msi-push","content":"If you usually use SMS or other tools, use them to push out the AdGuard MSI just as you would normally do with any other installation bundle. Otherwise, you can run the MSI on the target machine directly (and silently) with this command: Msiexec /q /i AdGuard.msi If you need to roll out an update, use this command: Msiexec /q /i AdGuard.msi REINSTALL=ALL REINSTALLMODE=vomus note You must run these commands with admin privileges. If you want to install AdGuard on a Windows 7 computer, make sure that it has .NET 4 Client Profile installed: https://www.microsoft.com/en-us/download/details.aspx?id=24872 info Automatic updates are disabled when you install AdGuard for Windows from MSI. If you want to allow updates for a user (which is not recommended because centralized updates will become impossible), set the value of the AllowCheckUpdates parameter for the HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Adguard key to YES (case insensitive). In this case automatic updates will be allowed, any other value or no value for this parameter disables automatic updates. "},{"title":"5. Test your installation​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#installation-test","content":"On a target machine, launch AdGuard. Open the license screen to check that it uses the one you've set. You might need to click &quot;Refresh status&quot; to make AdGuard validate the license key. "},{"title":"Safari extensions","type":0,"sectionRef":"#","url":"adguard-for-safari/extensions/","content":"","keywords":""},{"title":"What Safari extensions are​","type":1,"pageTitle":"Safari extensions","url":"adguard-for-safari/extensions/#what-safari-extensions-are","content":"Safari extensions are small software programs that add functionality to the Safari web browser. They allow users to customize and enhance their browsing experience by adding features that are not natively built into the browser. AdGuard for Safari uses extensions primarily to apply filtering rules on websites opened in Safari. "},{"title":"How it works​","type":1,"pageTitle":"Safari extensions","url":"adguard-for-safari/extensions/#how-it-works","content":"To block ads, trackers, and annoyances on websites, AdGuard uses filtering rules. The rules from AdGuard's and your custom filters are converted into ones comprehensible by Safari and are integrated into 6 Safari extensions: – AdGuard General – AdGuard Privacy – AdGuard Social – AdGuard Security – AdGuard Other Each content-blocking extension can include up to 150,000 active filtering rules. The number of rules within most filter groups does not surpass 150,000. However, if you activate too many language-specific or custom filters, you might exceed the limit. In such cases, random rules that are over the limit will be automatically disabled, which may lead to incorrect blocking. We strongly recommend activating only the filters you need. There are also two extensions responsible for other features: – AdGuard Safari Icon enables AdGuard's icon next to the search bar in Safari – AdGuard Advanced Blocking allows using advanced rules to block complex ads  More on each extension below. "},{"title":"Content-blocking extensions​","type":1,"pageTitle":"Safari extensions","url":"adguard-for-safari/extensions/#content-blocking-extensions","content":"AdGuard General applies rules from filters that you can find in Filters → Ad blocking and Filters → Language-specific. This extension focuses on comprehensive ad blocking and includes filters for ads in specific languages. AdGuard Privacy applies rules from filters located in Filters → Privacy. It blocks tracking mechanisms and ensures that your browsing activity remains private. AdGuard Social applies rules from filters that can be found in Filters → Social Widgets and Filters → Annoyances. It blocks popups, social media buttons, online assistant windows, and other elements on web pages that you might find annoying. AdGuard Security applies rules from filters under Filters → Security. This extension identifies and blocks potentially harmful elements, safeguarding users from malicious content. AdGuard Other applies rules from filters that that don't fall under the above-mentioned categories and that are located in Filters → Other: Filter unblocking search ads and self-promotion, AdGuard DNS filter, and AdGuard Experimental filter. AdGuard Custom applies rules from filters that you add on your own to Custom filters. User rules and allowlist rules are included into every extension. "},{"title":"Other extensions​","type":1,"pageTitle":"Safari extensions","url":"adguard-for-safari/extensions/#other-extensions","content":"AdGuard Safari Icon enables the AdGuard icon next to the search bar. It's useful if you want to quickly set up protection on a particular website or block ads manually. AdGuard Advanced blocking contains advanced rules that aren't converted into the format supported by Safari. This includes CSS rules, CSS selectors, and scriptlets that allow AdGuard to block complex ads — for example, on YouTube. "},{"title":"How to manage Safari extensions​","type":1,"pageTitle":"Safari extensions","url":"adguard-for-safari/extensions/#how-to-manage-safari-extensions","content":"Open Safari and click Safari in the upper left corner of the screen to expand the menu.Click Preferences...Select Extensions. "},{"title":"Why some extensions require permissions​","type":1,"pageTitle":"Safari extensions","url":"adguard-for-safari/extensions/#why-some-extensions-require-permissions","content":"When enabling some Safari extensions, you might notice that they ask for access to web page content and access to browsing history. Here's why AdGuard for Safari needs them: – Access to web page content is required for manual ad blocking and advanced blocking rules to work correctly – Access to browsing history is required to check the protection status on websites and determine which advanced rules should be applied We do not use this data for any other person or share it with anyone. For more info, you can consult our Privacy policy. "},{"title":"Browser Assistant","type":0,"sectionRef":"#","url":"adguard-for-windows/browser-assistant/","content":"","keywords":""},{"title":"Benefits​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#benefits","content":""},{"title":"Independence​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#independence","content":"AdGuard Browser Assistant is a browser extension, it is installed in a browser, so there is no need to wait for the userscript to be injected into the filtered web page, as it was with the preceding one. In other words, it is more autonomous from the main AdGuard app. Still, Browser Assistant needs the installed AdGuard for Windows, because there is no point in using the extension without the app. "},{"title":"Compatibility with the main app​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#compatibility-with-the-main-app","content":"If you got into the habit of using our previous AdGuard Ad Blocker extension in Integration mode, you may like the solution that we have developed for the new Browser Assistant. Background information: In previous versions of the AdGuard Browser Extension (before v3.5), if you had it installed along with the AdGuard for Windows app, the extension took over the functions of Assistant, stopped filtering itself and relied on the app to do this. The extension and the app worked in conjunction but sometimes the integration would fail. Some websites would stop being protected by the desktop program and be backed up only by the less powerful extension. When using the Browser Assistant, all these problems don’t matter as there can be no conflicts in essence. The role of the Browser Assistant is well-defined and it can’t hinder the functioning of the main app, so there is no need to worry. "},{"title":"Separate tab in Settings​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#separate-tab-in-settings","content":"The new Browser Assistant has its own tab in AdGuard for Windows settings, along with Stealth Mode, Browsing Security, Parental Control and others. There you will find a link to download the extension for your default browser. Besides, there is a checkbox to enable the legacy Assistant.  "},{"title":"Legacy Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#legacy-assistant","content":"Legacy Assistant is the previous version of Assistant, which is a mere userscript, not a browser extension. Basically, there are two cases when you might want to pick it instead of the new Browser Assistant: 1) the new Assistant is not available for your browser; 2) you are used to the green shield icon and want to leave things as they were. "},{"title":"How to install AdGuard Browser Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#how-to-install-adguard-browser-assistant","content":"If you want to install the Browser Assistant for your default browser, you can do it directly from the app settings, but you also have an opportunity to install it for other browsers. AdGuard Browser Assistant is available for all popular browsers: Chrome, Firefox, Edge, Opera, and Yandex. To install the one you need (or many, it is not prohibited but even encouraged), go to our website, click the browser icon and tap the Install button. That’s it! "},{"title":"설치 방법","type":0,"sectionRef":"#","url":"adguard-for-windows/installation/","content":"","keywords":""},{"title":"시스템 요구 사항​","type":1,"pageTitle":"설치 방법","url":"adguard-for-windows/installation/#시스템-요구-사항","content":"운영 체제: Microsoft Windows 11, 10, 8.1, 8, 7, Vista. RAM: 512 MB 이상. 디스크 여유 공간: 150 Mbytes. 브라우저: Microsoft Edge, Microsoft Internet Explorer(모든 버전), Opera, Google Chrome, Yandex.Browser, Mozilla Firefox, 등등. "},{"title":"AdGuard installation​","type":1,"pageTitle":"설치 방법","url":"adguard-for-windows/installation/#adguard-installation","content":"Microsoft Windows의 PC 또는 태블릿에서 AdGuard를 사용하려면 설치 패키지를 다운로드하고 설치하면 됩니다. 다음 단계를 따라와 보세요. AdGuard 웹사이트로 이동하여 열린 페이지에서 다운로드를 클릭합니다. When the download is finished, press the Open button shown in the Downloads bar or click the file name adguardInstaller.exe. You’ll see the User Account Control dialogue box requesting to allow the app to make changes to your PC. Click Yes. Next, choose the folder on your PC for the app to be installed to. If you do not agree with the default installation path, press Browse, select the folder for AdGuard installation in the Browse For Folder window, and confirm your choice by clicking OK. You can also install AdGuard to a new folder by clicking Make New Folder and entering its name. To create a desktop shortcut for AdGuard, check the Create a desktop shortcut box. Press Install to proceed with installation. Wait for the installation to complete and click Finish. Congratulations! You have successfully installed AdGuard on your computer. On the screen you will see the main window where you can change the app’s settings. "},{"title":"Windows용 AdGuard를 제거하는 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-for-windows/installation/#uninstall","content":""},{"title":"일반 제거 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-for-windows/installation/#일반-제거-방법","content":"If you need to uninstall or reinstall AdGuard, do the following: Microsoft Windows 10 &amp; 11: 시작을 클릭하여 시작 메뉴를 열고 설정을 선택합니다. 열리는 창에서 앱 아이콘을 클릭합니다. 앱 창의 왼쪽 목록에서 앱 및 기능을 선택합니다. 설치된 앱 목록에서 AdGuard를 선택하고 제거를 클릭합니다. 확인을 위해 열리는 대화 상자에서 제거를 클릭합니다.  For Microsoft Windows 8: Right-click the empty space in the lower left corner of the task bar and select Control Panel. 프로그램 섹션에서 프로그램 제거를 클릭합니다. 설치된 앱 목록 중에 AdGuard를 선택하고 목록 바로 위에 있는 제거 버튼을 누릅니다. 열리는 창에서 AdGuard 제거를 클릭하여 확인합니다.  For Microsoft Windows 8.1: Right-click the Start button and select Control Panel. 프로그램 섹션에서 프로그램 제거를 클릭합니다. 설치된 앱 목록 중에 AdGuard를 선택하고 목록 바로 위에 있는 제거 버튼을 누릅니다. 열리는 창에서 AdGuard 제거를 클릭하여 확인합니다. Microsoft Windows 7: 시작 메뉴를 엽니다. 검색 창에 제어판을 입력합니다. 프로그램 섹션에서 프로그램 제거를 클릭합니다. 설치된 앱 목록 중에 AdGuard를 선택하고 목록 바로 위에 있는 제거 버튼을 누릅니다. 열리는 창에서 AdGuard 제거를 클릭하여 확인합니다.  "},{"title":"고급 방법​","type":1,"pageTitle":"설치 방법","url":"adguard-for-windows/installation/#advanced","content":"In case regular uninstall doesn't work for any reason, you can try to use an advanced method. First of all, you need to download the uninstaller tool created by our developers. Extract the archive to any folder on your PC and run the Adguard.UninstallUtility.exe file, and allow the app to make changes to your device. Then follow the instruction below: Standart uninstall를 선택한 다음 Delete AdGuard를 선택하고 uninstall를 클릭합니다.  제거가 완료되면 창에 다음과 같은 문자열이 표시됩니다. [OK] Uninstall finished  caution 주의! 1~2 단계를 수행해도 프로그램이 제거되지 않은 경우에만 3~4 단계를 따르십시오. AdGuard의 잘못된 재설치로 판단될 수 있지만 고급 제거 지침의 3~4 단계를 사용하기 전에 지원 팀에 문의하는 것이 좋습니다. Advanced uninstall를 선택하고 Uninstall를 클릭합니다.  제거가 완료되면 창에 다음과 같은 문자열이 표시됩니다. [OK] Uninstall finished  AdGuard is successfully uninstalled! "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-windows/overview/","content":"","keywords":""},{"title":"Home screen​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#home-screen","content":" Once you start AdGuard for Windows, you will see the main screen of the app. Its most noticeable detail is the enable/disable protection button. Also, on this screen you can monitor blocked ads, trackers and threats statistics, find out the current version of the app or update it. Furthermore, there are four tabs in the upper right corner: Settings, Support, License, and About. Each of these is worth talking about separately. "},{"title":"Settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#settings","content":" Settings is the section that requires the most attention. This is where you can configure the app so that it fully meets your requirements: blocks only what bothers you, uses the DNS server of the trusted provider, removes third-party cookies, and so on. "},{"title":"General settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#general-settings","content":"Here you can set the language and theme (Dark or Light), enable AdGuard launching at system start-up and silent automatic updates, choose the update channel and filter update check interval. Also Settings is the place to go if AdGuard for Windows is not working properly and the support team asked you to collect Debug logs.  At the very bottom of the screen you will find Advanced Settings. Changing some of them mindlessly may potentially cause problems with AdGuard's performance, break the Internet connection or compromise your security and privacy. That's why we suggest you open this section only if you are sure of what you are doing or our support team has asked you about it. If you want to know what can be set up in Advanced Setting read the dedicated article. "},{"title":"Ad Blocker​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#ad-blocker","content":"This is the main module of AdGuard for Windows that removes ads from the websites you visit and from the apps installed on your device. To filter out advertising and privacy-threatening content such as banners, pop-ups, or trackers AdGuard uses different filters: groups of rules with a similar purpose written with a special syntax. To understand what filters are and how they work read this article.  In the Ad Blocker module you can: enable automatic activation of language-specific filters,disable search ads and self-promotion blocking,activate pre-installed filters such as AdGuard Base filter,install filters from the list or add a custom filter by clicking the Add a filter button,make changes to existing rule groups using the Filter editor button,see all the requests sent by browsers and apps installed on your computer by clicking the Filtering log button. From there you can also block or unblock any request by creating a custom rule,compose a filter from your own rules written manually, imported or created with the AdGuard Assistant extension. Before you start manually writing your own rules read our detailed syntax guide. "},{"title":"Stealth Mode​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#stealth-mode","content":"Many websites gather information about their visitors, such as their IP addresses, information about the browser and operating system installed, screen resolution, and even what page the user came or was redirected from. Some web pages use cookies to mark the browser and save your personal settings, user preferences, or &quot;recognize&quot; you upon your next visit. Stealth Mode safeguards your personal information from such data and statistics gathering systems.  You can flexibly adjust the work of Stealth Mode: for instance, you can prohibit the website to receive the search request you used to find it on the Internet, automatically delete both third-party and website’s own cookies, and disable location sharing in your browser that can be used to track your whereabouts. To learn everything about Stealth Mode and its many options, read this article. "},{"title":"Browsing Security​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#browsing-security","content":"Browsing Security gives strong protection against malicious and fishing websites. No, AdGuard for Windows is not an antivirus. It will neither stop the download of a virus when it's already started, nor delete the already existing ones. But it will warn you if you're about to proceed to a website whose domain has been added to our &quot;untrusted sites&quot; database, or to download a file from such website. You can find more information about how this module works in the dedicated article. In this module you can enable notifications to block requests to malicious and phishing sites,activate sound notifications,agree to submit anonymous security-related info to the AdGuard server to help us keep the malicious and fishing websites database up to date.  In case you want to learn more about Browsing Security, read this article. "},{"title":"DNS Protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#dns-protection","content":"There are three significant reasons why you might want to explore the DNS protection settings. First, to avoid being tracked by your ISP. Every time you open a website, for example google.com, your browser sends a request to a DNS server to get the IP address of the website in return. Usually, the DNS server belongs to your ISP, which allows them to track your online activity. Second, to encrypt you DNS traffic. And the third one is to block content on DNS level.  In the DNS protection module of AdGuard for Windows you can select the DNS servers from known DNS providers, including AdGuard DNS that blocks ads and trackers, AdGuard DNS Family Protection that in addition blocks adult content, or AdGuard DNS Non-filtering that provides a secure and reliable connection, but doesn't filter anything. You can even add custom DNS servers. Also there is an option to add custom rules using DNS rules syntax. And if necessary, you can add DNS filters of your choice. "},{"title":"Parental Control​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#parental-control","content":"There are numerous websites access to which should be restricted if the PC is used by children. This task is accomplished by Parental Control.  The module checks the contents of web pages opened in the browser and filters those with content undesirable for children: images and texts for adults, crude language, violence, drug propaganda, etc. Parental Control settings are password-protected so that the child is not able to go round the restrictions. This module not only blocks directions to undesirable sites but can also delete the links that are inappropriate for children from the search results. In the Parental Control module you can enable the Safe search and manage the blocklist and the allowlist to customize how this option works. You can also check the Block executable files download box to prevent your child from downloading and installing software on the computer. There are two more options in the Parental Control module: you can select a specific Windows user to be protected by Parental Control and set a password to protect AdGuard settings from change.  "},{"title":"Browser Assistant​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#browser-assistant","content":" From this tab you can easily proceed to install AdGuard Browser Assistant, which primary function is to manage filtering directly from the browser. We explained more about how to work with it and what to do if there is no Browser Assistant for your browser in the separate article. "},{"title":"Extensions​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#extensions","content":"AdGuard can significantly broaden website functionality working as a user script manager. AdGuard Users can add their own scripts, as well as manage existing ones.  Automatically detect userscripts With this option enabled, AdGuard will automatically define browser queries to userscripts and suggest their installation. Otherwise, extensions can be downloaded and installed manually. The following extensions are installed with AdGuard:  AdGuard Assistant AdGuard Assistant is Legacy Assistant that you may use if the new Assistant is not available for your browser. The name of this extension is quite deliberate: it actually assists the user in changing basic AdGuard settings right in the browser, without the need to open the app itself. AdGuard Assistant works with all Microsoft Windows compatible browsers. In addition, the AdGuard Assistant icon will not be displayed on websites listed as exceptions by the user and on certain web pages where there is a risk of incorrect content display. AdGuard Extra This is a custom extension designed to fight the technique of re-inserting blocked ads — the so-called ad blocker circumvention/ad reinjection. Both are advanced anti-ad blocker methods that continue to rise in popularity among advertisers. AdGuard Extra is essentially a mini-program that changes the way pages work,and it does so in such a way that it becomes much more difficult for sites to use the above-mentioned functions to bypass blockers. AdGuard Popup Blocker This extension prevents popup windows from opening when you view web pages. Some pop-ups are considered useful — they may contain settings for site administering or additional reference information demonstrated upon clicking a link. That is why you can turn off the Blocker if needed. This extension doesn’t work on websites added to the AdGuard exceptions list either. It is turned off by default, but you can turn it on in the application settings. You will find more detailed information about this extension in our Knowledge base. Web of Trust Web of Trust lets you see the reputation of each website based on its users’ opinions. The site is rated by a number of specific criteria: trust, security, etc. This extension is turned off by default, but you can turn it on in the application settings. Please, note that AdGuard is not the developer of this extension. "},{"title":"Network​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#network","content":"The penultimate module is dedicated to network filtering, and here you will find additional network-related options. Two of them are enabled by default: Enable traffic filtering and Filter HTTPS protocol. These are important extra precautions to better filter your web space. 대부분의 웹 사이트와 광고 네트워크는 현재 HTTPS를 사용하고 있습니다. From many sites, like youtube.com, facebook.com and twitter.com, it is impossible to remove ads without HTTPS filtering. So keep the Filter HTTPS protocol feature enabled unless you have a strong reason not to.  In this module you can check the checkbox &quot;Use AdGuard as an HTTP proxy&quot; to use AdGuard as a regular HTTP proxy which will filter all traffic passing through it. You can also enable the Filter websites with EV certificates feature. Extended Validation (EV) SSL Certificates offer a stronger safety guarantee; owners of such websites have to pass a thorough and globally standardized identity verification process defined by EV guidelines. Which is the reason why some users trust websites with such certificates and prefer not to filter them. At last, there is a section with proxy settings. There you can specify which proxy server AdGuard should use to update filters, get new versions and so on. "},{"title":"AdGuard VPN​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#adguard-vpn","content":"The last section is dedicated to AdGuard VPN — an ideal tool that provides security and anonymity each time you browse the Internet. You can download it by clicking the Download button or go to the AdGuard VPN website by clicking the Homepage button. How does AdGuard VPN work? Without going into technical details, we can say that VPN creates a secure encrypted tunnel between the user's computer or mobile device and a remote VPN server. In this way, data confidentiality is preserved, as well as the anonymity of the user, because a third-party observer sees the IP address of the VPN server and not the actual user's IP. What AdGuard VPN does: hides your real whereabouts and helps you stay anonymousсhanges your IP address to protect your data from trackingencrypts your traffic to make it unreachable to scammerslets you configure where to use VPN and where not to (exclusions feature) To get more information about AdGuard VPN dive into the AdGuard VPN Knowledge Base. "},{"title":"Others​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#others","content":"There are other useful AdGuard options that shouldn't go unnoticed in this article, since they add much to user experience. "},{"title":"Support​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#support","content":" By clicking the Support tab you will open a dialog box through which you can report a bug, submit a feature request, or simply share your opinion of the product. "},{"title":"License​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#license","content":" This tab contains information about your license. Here you can: find out the license type (nightly build, beta or release), the number of devices available for simultaneous connection to AdGuard, the license expiration date;click the button to go to the license purchase page, and activate, reset or recover a license. "},{"title":"About​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#about","content":" In addition to information about the current version of the program, this tab provides some useful links to Licese Agreement, Privacy Policy, Acknowledgements, Discussions, and Version history pages. "},{"title":"Check for updates​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#check-for-updates","content":" To check for filters and userscripts updates, click the rotating arrows icon in the upper right corner of the app's main screen. "},{"title":"Tray menu​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#tray-menu","content":"To save you time navigating around AdGuard menus, many of the frequently used options and settings are available from the tray menu. To call the menu, right-click the AdGuard icon in the tray. It will offer you the following options: enable protectiondisable protection: completely or for 30 secondsgo to Settingsopen the Tools and Advanced menuscheck for filter updatescheck for app updatesto recall the last pop-up messagereach the Support and About sectionsclose AdGuard, but continue filteringexit AdGuard "},{"title":"AdGuard 로그 수집하는 방법","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/adguard-logs/","content":"","keywords":""},{"title":"추적 로그​","type":1,"pageTitle":"AdGuard 로그 수집하는 방법","url":"adguard-for-windows/solving-problems/adguard-logs/#trace-logs","content":"Sometimes support team members may ask you to send trace logs. Then you will need to do the following: Stop AdGuard by right-clicking the AdGuard icon in the tray menu and choosing Exit AdGuard: Please don't leave the service running: Open the console (type cmd in the start panel). Run the app with the command C:\\&quot;Program Files (x86)&quot;\\Adguard\\Adguard.exe /trace if you are using 64-bit Windows, and C:\\&quot;Program Files&quot;\\Adguard\\Adguard.exe /trace in case if you use 32-bit one. Reproduce the issue. We strongly advise to take note of the exact time when you reproduced the issue: it will help our support team to find relevant log entries and solve the problem faster. Export the recorded logs using the Export Logs button. Don't worry if the log file is large. We need to know as much detail as possible to fix your problem. "},{"title":"Common installer errors","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/common-installer-errors/","content":"","keywords":""},{"title":"Error 5: Access Denied​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-5","content":"This error occurs when there's something wrong with permissions. There may be several different reasons why AdGuard installer doesn't have the permissions it requires to properly finish the installation process. You can try the following steps: Temporarily disable your antiviruses. Some of them may interfere with the installation, depending on the severity of their settings. Choose a different installation folder. It is possible that the current installation folder has some access restrictions. Also make sure you don't select an external drive, a virtual drive, etc. Reboot your computer. Sometimes the permission issues are temporary and can be solved by restarting the PC. "},{"title":"Error 112: Disk is full, Error 1632: Temporary folder full or inaccessible​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-112","content":"These are two different errors with very similar solutions. As their names suggest, AdGuard installer didn't find enough disk space to complete the installation. There are several things you can attempt to fix the problem: Uninstall some programs or delete unnecessary files from the drive you were trying to install AdGuard to. Download, install, and run AdwCleaner, a free piece of software by Malwarebytes. It will, among other things, clean your system from all kinds of extra &quot;leftover&quot; files that remain after incorrectly uninstall programs and such. It will help clean up some disk space. Reboot your computer. Sometimes temporary files can take up a considerable amount of disk space, and restarting your PC is the most reliable way to get rid of them. "},{"title":"Error 1601: Windows Installer is not accessible​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1601","content":"You could say this is a particular sub-case of Error 1603. The possible solutions are similar: Start and re-register Microsoft Installer service. It requires some work. 1) Press Win + R and enter services.msc. 2) Find in the list and double click Windows Installer. 3) Hit Start button under Service status and hit OK. If the service status is running, you should click Stop first and then hit Start. 4) Press Win + R, type and enter msiexec /unregister and hit Enter. 5) Press Win + R again, type and enter msiexec /regserver and hit Enter Reboot the PC and start the installation all over again. Sometimes that's enough to fix the problem. "},{"title":"Error 1602: Canceled by user​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1602","content":"If you got this error code, chances are you have interrupted the installation process manually in one way or another. What you can do is: Don't close the installer window. When the installation is complete, it will close automatically. If a dialogue window pops up during the installation, hit &quot;Yes&quot; to grant the installer the required permissions. Clicking &quot;No&quot; will cancel the installation. Don't start other processes while the installation process is going on. "},{"title":"Error 1603: Fatal error during installation​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1603","content":"The error sounds scarier than it actually is. In reality, this is a rather generic error that can have many different causes, and some of them are easily fixed. Try the following solutions: Press the Win key, search for Command Prompt and run it. There, type in sfc /scannow and press Enter. Choose a different installation folder. It is possible that the current installation folder has some access restrictions. Also make sure you don't select an external drive, a virtual drive, etc. Uninstall AdGuard using our special uninstall tool and then repeat the installation. Start and re-register Microsoft Installer service. It requires some work. 1) Press Win + R and enter services.msc. 2) Find in the list and double click Windows Installer. 3) Hit Start button under Service status and hit OK. If the service status is running, you should click Stop first and then hit Start. 4) Press Win + R, type and enter msiexec /unregister and hit Enter. 5) Press Win + R again, type and enter msiexec /regserver and hit Enter Acquire full permissions on the drive for installation. It is possible that the error 1603 occurs because you don’t have full permissions on the file location. It's also not as easy as some of the other solutions: 1) Open File Explorer, right-click the drive containing the installation location and select Properties. 2) Go to Security tab and click Edit. 3) Single-click SYSTEM and ensure that the Allow box of every item in Permissions for SYSTEM is checked (if it is checkable). Do the same check for Administrators. 4) Click OK to go back to Properties dialog. Then click Advanced. 5) Click Change Permissions. 6) On Permissions tab, double-click Administrators. 7) Select This folder, subfolders and files for Applies to field and tick all the available Basic permissions. After that hit OK. 8) Do the same operation above (from item 7) for SYSTEM. 9) Click OK all the way out. Try installing AdGuard again. "},{"title":"Error 1618: Another installation is already in progress​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1618","content":"This error occurs when there are several instances of AdGuard installer launched at the same time. What to do if you get this error: Reboot your PC and start the installer again. When you restart the computer, all ongoing processes will stop, including all copies of the installer. Don't make multiple clicks on the installer even if doesn't start right away. Sometimes it may take a few seconds to display the installer UI. "},{"title":"Error 1638: Another version of this product is already installed​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1638","content":"It's very likely that you've already installed AdGuard before. Check if AdGuard is already installed on your computer. You can do it by pressing the Win key and typing in AdGuard. Maybe there's some leftover files from a previous AdGuard installation. Uninstall AdGuard using our special uninstall tool and then repeat the installation. "},{"title":"Other errors​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#other","content":"If you've encountered an error that's not listed above, it is possible that we can solve it by ourselves. But in order to do that, we need log files from you. Please perform the following steps: Find and archive AdGuard installation logs as it is described in this article. Find and save to disk Event Viewer logs. This article explains how to do that. Please email all these files from two previous steps to the support team at support@adguard.com and describe the problem in the message body. Our tech support agents will reply to you as soon as possible. "},{"title":"Certificate-related issues","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/connection-not-trusted/","content":"","keywords":""},{"title":"Potential Security Risk error in Firefox-based browsers​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#potential-security-risk-error-in-firefox-based-browsers","content":" Old FireFox versions, as well as browsers based on them, do not trust certificates from the system storage, but only those from their local storage. Since v68, FireFox trusts the system certificates, but you still can face the &quot;Connection is untrusted&quot; error. If something like this happens, first try to click the Reinstall Certificate button — you will find it in the Network tab.  If that doesn't help, follow the instructions for manually adding the AdGuard certificate to the FireFox storage. This instruction is for Firefox browser. Names of buttons and menu items may differ in other Firefox-based browsers. Run AdGuard. Go to http://local.adguard.org/cert and click the Download button. The browser should start downloading cert.cer file. You can also open the download page by clicking on the link via the AdGuard app at Settings → Network → HTTPS filtering.  Open your browser and then open Settings. Go to Privacy &amp; Security tab. Scroll down to Certificates and click the View Certificates button.  Select Authorities tab. Click Import....  Browse the downloaded cert.cer file and click Open. Check the Trust this CA to identify websites box and then lick OK.  You've successfully installed AdGuard certificate. Restart the browser and the error should go away. "},{"title":"Yandex.Browser certificate warning​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#yandexbrowser-certificate-warning","content":"If you are a user of both AdGuard for Windows and Yandex.Browser you may have come across this warning:  "},{"title":"Why is this happening​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#why-is-this-happening","content":"Both AdGuard and Yandex take users' security on the Internet very seriously. Current Yandex policy is to warn their users about any certificate that is not recognized by the browser. This is not unsubstantiated, because sometimes malicious apps can inject their own certificates and use this to harm the system and steal private data. However, AdGuard also adds its certificate to the trusted ones. This leads to the warning message you have encountered. "},{"title":"How to solve the problem​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#how-to-solve-the-problem","content":"The easiest way is to click the Go to site button. This will tell Yandex.Browser to remember AdGuard certificate as a trusted one, at least for a while. Normally, you won't have to see this message anymore, but it is not beyond the realm of possibility for it to appear occasionally, for whatever reasons. In such cases, simply press the same button again (make sure it is AdGuard's certificate!). Disabling the HTTPS filtering in AdGuard will also prevent Yandex.Browser from showing this message again, but it comes with a big price: all ads that are loaded by HTTPS (including Yandex's own ads) will show up — on such websites as YouTube, Facebook, Instagram, and many more. We strongly advise against it if you want to keep the quality of ad blocking high. "},{"title":"Possible DNS leaks","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/dns-leaks/","content":"","keywords":""},{"title":"Bootstrap DNS address​","type":1,"pageTitle":"Possible DNS leaks","url":"adguard-for-windows/solving-problems/dns-leaks/#bootstrap-dns-address","content":"The DNS server addresses could be written as IPs or as domain names. In the case of IP addresses there are no difficulties: AdGuard forwards the DNS request directly to the server specified in the DNS protection module. However, encrypted DNS server addresses, like DoT or DoH, are most often written as domain names. In this case, to first resolve the encrypted DNS server address, AdGuard sends a DNS query to the bootstrap address, which is by default a system DNS server. This connection is what check services perceive as a leak. To eliminate this leak: go to the Advanced settingsscroll down to the List of custom bootstrap addresses sectionenter the custom bootstrap address in IP address format (you may use the list of known DNS providers)click Save "},{"title":"Fallback DNS server​","type":1,"pageTitle":"Possible DNS leaks","url":"adguard-for-windows/solving-problems/dns-leaks/#fallback-dns-server","content":"It could happen that AdGuard cannot reach the specified server because of a weak internet connection, an expiration of timeout set by default or some server related issues. In this case, it will connect to the fallback server, which is by default a system DNS server. This connection will also be considered by the check service as a leak. To eliminate this leak: go to the Advanced settingsscroll down to the Fallback servers sectioncheck the Use custom servers optionthen find the List of custom fallback servers section and enter custom fallback servers one per line or go to the Advanced settingsscroll down to the Fallback servers sectioncheck the Don’t use fallback servers option or go to the Advanced settingsscroll down to the DNS server timeout period sectionenter an arbitrary large number "},{"title":"How to create a dump file","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/dump-file/","content":"How to create a dump file info 본 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 Windows용 AdGuard에 대해 다룹니다. 어떻게 동작하는지 알고 싶으시다면 AdGuard 앱을 다운로드해 보세요. To diagnose the reasons for potential problems that users might encounter while using AdGuard, the support team might need the process dump file. The dump file helps developers to see the processes that were executed in the application over a given period of time. Below you can check on the instructions of how to collect the dump file on your PC. Press Ctrl + Shift + Esc and click Task Manager In the upper menu bar select Details Right-click the process that you want to create the dump file for (for example, the support team may ask you to create a dump for Adguard.exe) In the drop-down menu click Create dump file The file was created successfully! After you’ve created the dump file, please navigate to the file location. You should be prompted to open the folder containing the dump file right after its creation. Otherwise, you will be able to find it inside the %tmp% folder. The created dump file (.DMP) has the same name as the name of the process you chose in the previous steps. The file is quite large, so please compress it into an archive before sending to support. note AdGuard for Windows has two running processes (Adguard.exe and AdguardSvc.exe). So you need to create the dump file separately for each process. When you send the dump files to the support team, please also attach the AdGuard application logs so we have a better chance at solving the problem. Here you can check the instructions on how to collect the log file.","keywords":""},{"title":"AdGuard 설치 로그를 수집하는 방법","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/installation-logs/","content":"AdGuard 설치 로그를 수집하는 방법 info 본 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 Windows용 AdGuard에 대해 다룹니다. 어떻게 작동하는지 확인하려면, AdGuard 앱을 다운로드하세요. AdGuard 설치 중 문제가 발생하면 지원 팀에서 AdGuard 설치 로그를 수집하여 보내달라고 요청할 수 있습니다. AdGuard 설치 로그 수집 및 전송 방법은 다음과 같습니다. Select Run command in Start menu or press Win + R on the keyboard. Type in %tmp% and click OK. In the opened folder select all files starting with Adguard and add them to archive (using WinRAR or any other archiving software). Send this archive to AdGuard tech support at support@adguard.com.","keywords":""},{"title":"Known issues of AdGuard for Windows","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/known-issues/","content":"","keywords":""},{"title":"AdGuard for Windows and AdGuard VPN for Windows compatibility issues​","type":1,"pageTitle":"Known issues of AdGuard for Windows","url":"adguard-for-windows/solving-problems/known-issues/#adguard-for-windows-and-adguard-vpn-for-windows-compatibility-issues","content":"Once you install AdGuard for Windows and AdGuard VPN for Windows, they just start working together without any effort on your part. However, changing some of their default settings may cause the apps to work incorrectly when they run at the same time. There are two specific settings in AdGuard for Windows: Use redirect driver mode and Filter localhost. By default, the first is disabled, and the second is enabled. Changing any of these settings will inevitably disrupt AdGuard's filtering if both AdGuard Ad Blocker and AdGuard VPN are enabled on your device. Changing these settings is only necessary to resolve issues related to the simultaneous operation of AdGuard Ad Blocker and network-level apps such as antiviruses, VPNs, and network filters. If you come across a situation where you need to change the default state of the above settings and still want AdGuard Ad Blocker and AdGuard VPN to work simultaneously and correctly — create an issue on GitHub so we can help you personally. We are currently working on overcoming the above-listed limitations of the simultaneous work of our apps. "},{"title":"Windows 로그 수집하는 방법","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/system-logs/","content":"Windows 로그 수집하는 방법 info 본 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 Windows용 AdGuard에 대해 다룹니다. 어떻게 작동하는지 확인하려면, AdGuard 앱을 다운로드하세요. To analyze and diagnose different problems that may potentially arise, the AdGuard support service might need Windows system log files. 이 파일에는 소프트웨어에서 발생한 모든 오류에 대한 기록이 있습니다. Windows 로그를 수집하여 지원 팀에 보내는 방법을 살펴보겠습니다. Press Win + R In the window that appears type in eventvwr and click OK: Event Viewer window appears as shown in the picture. To save files that we need, do the following: Open Application: Event Viewer (Local) → Windows Logs → Application. Right-click Application and in the drop-down menu select Save All Events As... 이름과 저장할 위치를 선택하고 저장을 클릭합니다. 그다음에는 언어 설정에 대한 정보 표시를 선택합니다. 한국어 옆의 확인란을 선택하고 확인을 클릭합니다. Open System: Event Viewer (Local) → Windows Logs → System. Right-click System and in the drop-down menu select Save All Events As... 저장할 위치를 선택하고 이름을 입력한 후 저장을 클릭합니다. 그다음에는 언어 설정에 대한 정보 표시를 선택합니다. 한국어 옆의 확인란을 선택하고 확인을 클릭합니다. Please send the two files that you've recently saved to support@adguard.com.","keywords":""},{"title":"고급(로우 레벨) 설정 가이드","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"고급 설정으로 이동하는 방법​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#고급-설정으로-이동하는-방법","content":"고급 설정으로 이동하려면 기본 창에서 설정 → 일반 설정 을 클릭하고 아래로 스크롤하여 고급 설정으로 이동합니다. 또는 트레이 메뉴에서 고급 → 고급 설정... 을 선택합니다. "},{"title":"고급 설정​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#고급-설정","content":"고급 설정을 열면 다음과 같은 옵션이 표시됩니다: "},{"title":"TCP Fast Open 차단​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#tcp-fast-open-차단","content":"이 기능을 활성화하면 AdGuard가 Edge 브라우저에서 TCP 빠른 열기를 차단합니다. 설정을 적용하려면 브라우저를 다시 시작해야 합니다. "},{"title":"Encrypted ClientHello 사용​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#encrypted-clienthello-사용","content":"모든 암호화된 인터넷 연결에는 암호화되지 않은 부분이 있습니다. 이것은 연결하려는 서버의 이름이 포함된 첫 번째 패킷입니다. Encrypted Client Hello 기술은 이 문제를 해결하고 암호화되지 않은 마지막 비트의 정보를 암호화합니다. 이 기능을 사용하려면 Encrypted ClientHello 사용 옵션을 활성화하세요. It uses a local DNS proxy to look for the ECH configuration for the domain. ECH 구성이 발견되면 ClientHello 패킷이 암호화됩니다. "},{"title":"웹사이트의 인증서 투명성 확인​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#웹사이트의-인증서-투명성-확인","content":"Chrome 인증서 투명성 정책에 따라 도메인의 모든 인증서를 확인합니다. If the certificate does not comply with the Chrome Certificate Transparency Policy, AdGuard will not filter the website. 반면에 Chrome은 이 사이트를 차단합니다. "},{"title":"SSL/TLS 인증서 해지 확인 활성화​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#ssltls-인증서-해지-확인-활성화","content":"이 옵션을 활성화하면 비동기 OCSP 검사를 실행하여 웹사이트의 SSL/TLS 인증서가 해지되었는지 확인합니다. 최소 시간 제한 내에 OCSP 확인이 완료되면 AdGuard는 즉시 결과를 적용합니다. 인증서가 해지된 경우 연결을 차단하고 인증서가 유효한 경우 연결을 설정합니다. 확인에 시간이 너무 오래 걸리면 AdGuard가 연결을 설정하고 백그라운드에서 계속 확인합니다. 인증서가 해지되면 도메인에 대한 현재 및 향후 연결이 차단됩니다. "},{"title":"설정에서 AdGuard VPN 표시​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#설정에서-adguard-vpn-표시","content":"이 옵션을 활성화하면 설정에 AdGuard VPN 탭이 표시되어 앱과 제품 웹사이트를 쉽게 열 수 있습니다. "},{"title":"전체 경로를 입력하여 필터링에서 앱 제외하기​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#전체-경로를-입력하여-필터링에서-앱-제외하기","content":"특정 앱을 필터링하지 않도록 하기 위해서는 해당 앱의 전체 경로를 지정하면 해당 앱이 필터링에서 제외됩니다. 세미콜론으로 서로 다른 경로를 구분합니다. "},{"title":"AdGuard 팝업 알림 활성화​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#adguard-팝업-알림-활성화","content":"이 기능을 활성화하면 AdGuard 팝업 알림을 볼 수 있습니다. 너무 자주 표시되지 않으며 중요한 정보만 포함되어 있습니다. 트레이 메뉴를 사용하여 마지막 팝업 알림을 불러올 수도 있습니다. "},{"title":"필터 구독 URL 자동 차단​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#필터-구독-url-자동-차단","content":"AdGuard가 필터 구독 URL(예: abp:subscribe 등)을 자동으로 가로채고 사용자 정의 필터 설치 대화 상자를 열도록 하려면 이 기능을 활성화합니다. "},{"title":"리디렉션 드라이버 모드 사용​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#리디렉션-드라이버-모드-사용","content":"이 옵션을 활성화하면 AdGuard가 모든 트래픽을 가로채서 추가 필터링을 위해 로컬 프록시 서버로 리디렉션합니다. 이 기능이 활성화되지 않은 경우, AdGuard는 리디렉션 없이 모든 트래픽을 즉시 필터링합니다. 시스템은 인터넷에 연결되는 유일한 애플리케이션으로 AdGuard를 간주합니다(다른 애플리케이션은 AdGuard를 통해 라우팅됨). 단점은 시스템 방화벽의 효율성이 떨어질 수 있다는 것입니다. 장점은 이 접근 방식이 조금 더 빠르게 작동한다는 것입니다. "},{"title":"시스템 시작 시 메인 창 열기​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#시스템-시작-시-메인-창-열기","content":"이 옵션을 활성화하면 시스템이 로드된 후 기본 AdGuard 창이 열립니다. 이 설정은 설정 → 일반 설정에 있으며 실제 필터링 서비스가 실행되는지 여부에는 영향을 미치지 않습니다. "},{"title":"시스템 시작 시 필터링 활성화​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#시스템-시작-시-필터링-활성화","content":"7.12 버전부터 시스템 시작 시 AdGard 실행 옵션이 비활성화되어 있는 경우, 기본적으로 AdGard 서비스는 OS 시작 후 트래픽을 필터링하지 않습니다. 즉, AdGuard의 서비스는 '유휴' 모드에서 시작됩니다. 이 옵션을 활성화하면 앱이 실행되지 않은 상태에서도 AdGuard가 트래픽을 필터링하도록 설정할 수 있습니다. note Before v7.12, the AdGuard service started in filtering mode by default (even if the Launch AdGuard at system start-up was disabled). If you were satisfied with the old behavior, enable this option. "},{"title":"로컬 호스트 필터링​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#로컬-호스트-필터링","content":"AdGuard가 루프백 연결을 필터링하도록 하려면 확인란을 선택합니다. 이 옵션은 AdGuard VPN이 설치되어 있는 경우 항상 켜져 있으며, 그렇지 않으면 작동하지 않습니다. "},{"title":"필터링에서 지정된 IP 범위 제외​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#필터링에서-지정된-ip-범위-제외","content":"AdGuard가 특정 서브넷을 필터링하지 않도록 설정하려면 이 기능을 활성화하고 아래 필터링에서 제외되는 IP 범위 섹션에서 CIDR 표기법(예: 98.51.100.14/24)으로 IP 범위를 지정하세요. "},{"title":"HAR 쓰기 활성화​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#har-쓰기-활성화","content":"이 옵션은 디버깅 목적으로만 활성화해야 합니다. 확인 표시를 선택하면 AdGuard가 필터링된 모든 HTTP 요청에 대한 정보가 포함된 HAR 1.2 형식의 파일을 생성합니다. 이 파일은 Fiddler 앱으로 분석할 수 있습니다. 웹 브라우징 속도가 상당히 느려질 수 있습니다. "},{"title":"일반 HTTP 요청에 추가 공백 추가​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#일반-http-요청에-추가-공백-추가","content":"HTTP 메서드와 URL 사이에 공백을 추가하고 심층 패킷 검사를 피하기 위해 '호스트:' 필드 뒤에 공백을 제거합니다. 예를 들어, GET /foo/bar/ HTTP/1.1 Host: example.org 요청은 다음과 같이 변환됩니다. GET /foo/bar/ HTTP/1.1 Host: example.org 이 설정은 스텔스 모드에서 DP로부터 보호 옵션이 활성화된 경우에만 적용됩니다. "},{"title":"초기 TLS 패킷의 조각화 크기 조정​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#초기-tls-패킷의-조각화-크기-조정","content":"심층 패킷 검사를 피하기 위해 TCP 패킷 조각화의 크기를 지정합니다. This option only affects secured (HTTPS) traffic. 이 옵션을 활성화하면 AdGuard는 초기 TLS 패킷(ClientHello 패킷)을 두 부분으로 분할합니다. 첫 번째 부분은 지정된 길이를 가지며 두 번째 부분은 나머지 길이(전체 초기 TLS 패킷의 길이까지)를 가집니다. Valid values: 1–1500. 잘못된 크기를 지정하면 시스템에서 선택한 값이 사용됩니다. 이 설정은 스텔스 모드에서 DP로부터 보호 옵션이 활성화된 경우에만 적용됩니다. "},{"title":"일반 HTTP 조각 크기​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#일반-http-조각-크기","content":"HTTP 요청 조각화의 크기를 조정합니다. 이 옵션은 일반 HTTP 트래픽에만 영향을 줍니다. 이 옵션을 활성화하면 AdGuard는 초기 패킷을 두 부분으로 분할하여 첫 번째 패킷은 지정된 길이로, 두 번째 패킷은 전체 원본 패킷의 길이까지 나머지 부분을 차지합니다. Valid values: 1–1500. 잘못된 크기를 지정하면 시스템에서 선택한 값이 사용됩니다. 이 설정은 스텔스 모드에서 DP로부터 보호 옵션이 활성화된 경우에만 적용됩니다. "},{"title":"QUIC 보기​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#quic-보기","content":"필터링 로그에 QUIC 프로토콜 레코드를 표시할 수 있습니다. 이 옵션은 차단된 요청에 대해서만 작동합니다. "},{"title":"TCP 연결 유지 사용​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#tcp-연결-유지-사용","content":"유휴 연결을 통해 주기적으로 TCP 패킷을 전송하여 연결이 활성화되어 있는지 확인하고 NAT 시간 제한을 갱신합니다. 이 옵션은 일부 ISP가 사용하는 엄격한 NAT(네트워크 주소 변환) 설정을 우회하는 데 유용할 수 있습니다. "},{"title":"TCP 연결 유지 간격​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#tcp-연결-유지-간격","content":"킵얼라이브 프로브를 보내기 전에 유휴 기간을 초 단위로 지정할 수 있습니다. If 0 is specified, the value selected by the system will be used. note This setting only works when the Enable TCP keepalive option is enabled. "},{"title":"TCP 연결 유지 시간 초과​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#tcp-연결-유지-시간-초과","content":"Here you can specify time in seconds before sending another keepalive probe to an unresponsive peer. 0을 지정하면 시스템에서 선택한 값이 사용됩니다. note This setting only works when the Enable TCP keepalive option is enabled. "},{"title":"Java 차단​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#java-차단","content":"일부 웹사이트와 웹 서비스는 여전히 Java 플러그인을 지원합니다. Java 플러그인의 기반이 되는 API에는 심각한 보안 취약점이 있습니다. 보안을 위해 이러한 플러그인을 비활성화할 수 있습니다. 그러나 Java 차단 옵션을 사용하기로 결정하더라도 자바스크립트는 계속 활성화됩니다. "},{"title":"DNS 서버 시간 초과 기간​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#dns-서버-시간-초과-기간","content":"이 필드에서 AdGuard가 폴백 DNS 서버를 사용하기 전에 선택한 DNS 서버의 응답을 기다리는 시간(밀리초)을 지정할 수 있습니다. 이 필드를 채우지 않거나 잘못된 값을 입력하면 5000이라는 값이 사용됩니다. "},{"title":"DNS-over-HTTPS에 HTTP/3 사용​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#dns-over-https에-http3-사용","content":"선택한 업스트림이 이 프로토콜을 지원하는 경우, DNS-over-HTTPS 업스트림에 HTTP/3을 활성화하여 연결을 가속화합니다. 즉, 이 옵션을 활성화해도 모든 DNS 요청이 HTTP/3을 통해 전송된다는 보장은 없습니다. "},{"title":"폴백 DNS 업스트림 사용​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#폴백-dns-업스트림-사용","content":"Normal queries will be redirected to the fallback upstream if all DNS requests to the selected upstreams fail. "},{"title":"DNS 업스트림 쿼리를 병렬로 수행​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#dns-업스트림-쿼리를-병렬로-수행","content":"All upstreams will be queried in parallel and the first response is returned. DNS 쿼리는 병렬로 이루어지므로 이 기능을 활성화하면 인터넷 속도가 빨라집니다. "},{"title":"실패한 DNS 쿼리에 항상 응답​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#실패한-dns-쿼리에-항상-응답","content":"전달된 각 업스트림과 폴백 도메인에서 주소 확인에 실패한 경우 DNS 요청에 대한 응답은 SERVFAIL이 됩니다. "},{"title":"보안 DNS 요청 필터링 사용​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#보안-dns-요청-필터링-사용","content":"AdGuard will redirect secure DNS requests to the local DNS proxy, in addition to plain DNS requests. "},{"title":"호스트 규칙에 대한 차단 모드​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#호스트-규칙에-대한-차단-모드","content":"호스트 규칙 구문을 기반으로 DNS 규칙에 의해 차단된 도메인에 대해 AdGuard가 응답하는 방식을 선택할 수 있습니다. 'Refused' 오류로 회신'NxDomain' 오류로 회신사용자 정의 IP 주소로 회신 "},{"title":"adblock-style 규칙을 위한 차단 모드​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#adblock-style-규칙을-위한-차단-모드","content":"여기에서 adblock-style 구문을 기반으로 DNS 규칙에 의해 차단된 도메인에 AdGuard가 응답하는 방식을 선택할 수 있습니다. 'Refused' 오류로 회신'NxDomain' 오류로 회신사용자 정의 IP 주소로 회신 "},{"title":"사용자 정의 IPv4​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#사용자-정의-ipv4","content":"호스트 규칙의 차단 모드 또는 adblock-style 규칙의 차단 모드에서 사용자 정의 IP 주소를 선택한 경우, 차단된 A 요청에 대한 응답으로 이 IP 주소가 반환됩니다. IP 주소가 지정되지 않은 경우 AdGuard는 기본 'Refused' 오류로 응답합니다. "},{"title":"사용자 지정 IPv6​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#사용자-지정-ipv6","content":"호스트 규칙의 차단 모드 또는 adblock-style 규칙의 차단 모드에서 사용자 정의 IP 주소를 선택한 경우, 차단된 AAAA 요청에 대한 응답으로 이 IP 주소가 반환됩니다. IP 주소가 지정되지 않은 경우 AdGuard는 기본 'Refused' 오류로 응답합니다. "},{"title":"폴백 서버​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#폴백-서버","content":"여기에서 주 서버가 다음 섹션에서 지정한 시간 제한 기간 내에 응답하지 않을 경우, DNS 요청을 다시 라우팅할 대체 DNS 서버를 지정할 수 있습니다. 세 가지 옵션 중에서 선택할 수 있습니다. 폴백 서버를 사용하지 않음시스템 기본 서버 사용사용자 정의 서버 사용 "},{"title":"ECH 차단​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#ech-차단","content":"이 옵션을 활성화하면 AdGuard는 응답에서 암호화된 클라이언트 헬로 매개변수를 제거합니다. "},{"title":"사용자 정의 폴백 서버 목록​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#사용자-정의-폴백-서버-목록","content":"AdGuard가 사용자 정의 폴백 서버를 사용하도록 하려면 이 섹션에 한 줄에 하나씩 나열하세요. "},{"title":"사용자 정의 부트스트랩 주소 목록​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#사용자-정의-부트스트랩-주소-목록","content":"부트스트랩은 앞서 DNS 보호에서 선택한 보안 DNS 서버의 IP 주소를 가져오는 데 사용되는 중간 DNS 서버입니다. 이러한 '중간 지점'은 서버 주소를 문자로 표시하는 프로토콜(예: DNS-over-TLS)을 사용할 때 필요합니다. 이 경우 부트스트랩이 번역기 역할을 하여 문자를 시스템에서 이해할 수 있는 숫자로 변환합니다. 기본적으로 시스템 DNS DNS 리졸버가 사용되며 초기 부트스트랩 요청은 포트 53을 통해 이루어집니다. 이 방법이 적합하지 않은 경우 암호화된 DNS 서버의 주소를 확인하는 데 사용할 DNS 서버의 IP 주소를 여기에 나열하세요. 지정된 IP 주소는 나열된 순서대로 적용됩니다. 잘못된 주소를 지정하거나 주소를 전혀 지정하지 않으면 시스템 IP가 사용됩니다. "},{"title":"DNS 예외​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#dns-예외","content":"여기에 나열된 도메인에 대한 모든 DNS 요청은 앱 설정에 지정된 DNS 서버가 아닌 시스템 기본 DNS 서버로 리디렉션됩니다. 또한 이러한 요청에는 DNS 차단 규칙이 적용되지 않습니다. "},{"title":"지정된 Wi-Fi 네트워크 이름(SSID)을 DNS 필터링하지 않기​","type":1,"pageTitle":"고급(로우 레벨) 설정 가이드","url":"adguard-for-windows/solving-problems/low-level-settings/#지정된-wi-fi-네트워크-이름ssid을-dns-필터링하지-않기","content":"DNS protection will not include Wi-Fi networks listed in this section. Wi-Fi 네트워크 이름(SSID)을 한 줄에 하나씩 지정합니다. 특정 Wi-Fi 네트워크가 이미 AdGuard Home 또는 다른 DNS 보호 시스템에 의해 보호되고 있는 경우 유용할 수 있습니다. 이 경우 DNS 요청을 다시 필터링할 필요가 없습니다. "},{"title":"WFP driver","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/wfp-driver/","content":"WFP driver info 본 문서는 시스템 수준에서 기기를 보호하는 다기능 광고 차단기인 Windows용 AdGuard에 대해 다룹니다. 어떻게 동작하는지 알고 싶으시다면 AdGuard 앱을 다운로드해 보세요. To filter netwrok traffic, AdGuard uses a network driver. There are two options: TDI driver and WFP driver. While WFP driver is generally preferrable and is enabled by default for all newer Windows OS versions (Windows 8 and newer), it can potentially cause compatibility problems, especially with some antiviruses. These problems and subsequent errors can be very different in each case. If you encounter a problem that you suspect might be caused by this, you can always switch to the older but more stable TDI network driver. To do so: Go to Settings → Network. Disable WFP driver as it’s done in this picture:","keywords":""},{"title":"이중 인증(2FA)","type":0,"sectionRef":"#","url":"general/account/2fa/","content":"","keywords":""},{"title":"이중 인증 설정 방법​","type":1,"pageTitle":"이중 인증(2FA)","url":"general/account/2fa/#이중-인증-설정-방법","content":"Log into your AdGuard account and go to the Settings tab:  Scroll down to Password and 2FA section and click Enable:  Follow the on-screen instructions to install an authenticator app and scan the QR code:  Important 인증 백업 코드를 저장하십시오. 휴대폰 분실과 같은 비상시에 인증 코드를 통해 계정을 복구할 수 있습니다. If everything is done right, you will see this when you log into your account the next time:  Use your mobile authenticator app to read the code and enter it. You should be logged in now! NOTE: If you get an authentication error, check the clock on your phone. Adjust it if needed, as an unsynchronized clock may be the cause of the error. "},{"title":"What can be done in the AdGuard Account","type":0,"sectionRef":"#","url":"general/account/features/","content":"","keywords":""},{"title":"Manage account settings​","type":1,"pageTitle":"What can be done in the AdGuard Account","url":"general/account/features/#manage-account-settings","content":"In the Settings section of your AdGuard account, you can update or reset your password, change your email address, enable two-factor authentication, view the data stored about you by AdGuard and choose the language of your personal account and notifications. In this section, you can also manage your email preferences: receive transactional emails,receive AdGuard’s monthly newsletters,receive emails about AdGuard special offers and promotions,send read receipts to AdGuard when you open emails. "},{"title":"Manage licenses​","type":1,"pageTitle":"What can be done in the AdGuard Account","url":"general/account/features/#manage-licenses","content":"In the Licenses section, you can manage your licenses and the devices bound to them. AdGuard licenses can be: bound and unbound,extended,upgraded,canceled. You can also update your payment details. The devices bound to your AdGuard Ad Blocker licenses can be unbound or renamed. You can unbind unused devices by clicking the cross icon next to them. "},{"title":"View purchases​","type":1,"pageTitle":"What can be done in the AdGuard Account","url":"general/account/features/#view-purchases","content":"The Purchase history section displays all the licenses that you have ever purchased using the email account you registered your AdGuard account with. You will also find there information about the date of purchase, order number, payment method and cost of the purchase. "},{"title":"Contact support​","type":1,"pageTitle":"What can be done in the AdGuard Account","url":"general/account/features/#contact-support","content":"The Support tab contains useful links to help you solve problems or find answers to your questions about AdGuard products. They are divided into six sections: FAQ, Send a bug repot/feature request, Report incorrect blocking, Contact support, Knowledge base and Discuss. "},{"title":"How to register","type":0,"sectionRef":"#","url":"general/account/register/","content":"","keywords":""},{"title":"What an AdGuard account is​","type":1,"pageTitle":"How to register","url":"general/account/register/#what-an-adguard-account-is","content":"AdGuard account is a user account that stores information about your AdGuard licenses and subscriptions, active devices, your purchase history, preferred language, and other preferences. Many AdGuard products offer an option to activate them by entering the credentials for your AdGuard account, provided it contains a valid license. "},{"title":"How to create an account​","type":1,"pageTitle":"How to register","url":"general/account/register/#how-to-create-an-account","content":"To create an account, go to AdGuard's official website and press the My Account button on the top right corner of the screen. Enter your email address and create a password — your account will be registered. tip If you enter your email address while purchasing a license or receive a license accociated with your email address as a gift, an account will be created automatically. To set a password, you can follow a link from a transactional or gift letter. You can also register with the above method. An account can also be created directly in an AdGuard app. Press the Log in or Activate button (it can be found in the License section or on a separate screen), enter your email and create a password. After the account is created, activate it by following the link in the activation email. "},{"title":"AdGuard filters","type":0,"sectionRef":"#","url":"general/ad-filtering/adguard-filters/","content":"","keywords":""},{"title":"AdGuard filters​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#adguard-filters","content":"Base filter removes ads from websites with English content. Originally based on EasyList and modified by us. View rulesTracking Protection filter — comprehensive list of various online counters and web analytics tools. Use it to hide your actions online and avoid tracking. View rulesURL Tracking filter enhances privacy by removing tracking parameters from URLs. When a user opts to block tracking parameters in Stealth Mode, this filter will be enabled automatically. View rulesSocial media filter removes numerous &quot;Like&quot; and &quot;Tweet&quot; buttons and other social media integrations on popular websites. View rulesAnnoyances filter blocks irritating elements on web pages. View rules Includes the following AdGuard filters (all of them can be enabled separately from the Annoyances filter): Cookie Notices blocks cookie notices on web pages. View rulesPopups blocks all kinds of pop-ups that are not necessary for websites' operation. View rulesMobile App Banners blocks banners that promote mobile apps of websites. View rulesWidgets blocks third-party widgets: online assistants, live support chats, etc. View rulesOther Annoyances blocks elements that do not fall under the popular categories of annoyances. View rules Filter unblocking search ads and self-promotions unblocks ads that may be useful to users. Learn more about this filter on this page. View rulesRussian filter removes ads from websites in Russian. View rulesGerman filter removes ads from websites in German. Originally based on the EasyList Germany filter and subsequently modified by us according to the complaints from users. View rulesFrench filter removes ads from websites in French. Originally based on the Liste FR filter and subsequently modified by us according to the complaints from users. View rulesJapanese filter removes ads from websites in Japanese. Originally based on the Fanboy’s Japanese filter and subsequently modified by us according to the complaints from users. View rulesDutch filter removes ads from websites in Dutch. Originally based on the EasyList Dutch filter and subsequently modified by us according to the complaints from users. View rulesSpanish/Portuguese filter removes ads from websites in Spanish and Portuguese. Originally based on the Fanboy’s Spanish/Portuguese filter and subsequently modified by us according to the complaints from users. View rulesTurkish filter removes ads from websites in Turkish. Created by us according to the complaints from users. View rulesChinese filter removes ads from websites in Chinese. Originally based on the EasyList China filter and subsequently modified by us according to the complaints from users. View rulesExperimental filter serves to test some new filtering rules that can potentially cause conflicts and mess with websites' work. In case these rules perform without any issues, they get added to main filters. View rulesMobile ads filter blocks ads on mobile devices. Contains all known mobile ad networks. View rulesDNS filter — composed of several other filters (AdGuard Base filter, Social media filter, Spyware filter, Mobile ads filter, EasyList and EasyPrivacy) and simplified specifically to be better compatible with DNS-level ad blocking. This filter is used by AdGuard DNS servers to block ads and tracking. View rules "},{"title":"AdGuard Filters Policy​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#adguard-filters-policy","content":"Our filter policy defines what AdGuard filters should block and what they should not, as well as the rules for adding and removing rules from filters. Read the full text of AdGuard filter policy for detailed information. "},{"title":"Contributing to AdGuard filters​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#contributing-to-adguard-filters","content":"We are blessed with a unique community that not only loves AdGuard but also gives back. Many people volunteer in various ways to make AdGuard's user experience better for everybody. You are welcome to join the band and make a difference. We will do our part and happily reward the most active community. So, what can you do? "},{"title":"Report Issues​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#report-issues","content":"We rely on the community to let us know about issues with our filters. It helps us use our time more efficiently and keep filters constantly updated. To submit a report, please use this web reporting tool. "},{"title":"Suggest Filtering Rules​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#suggest-filtering-rules","content":"You will find many open issues in the GitHub filter repository. Each one refers to a problem with a website, such as a missed ad or a false positive. Pick an issue and suggest your own rules in the comments. AdGuard filter engineers will review your suggestions and, if approved, add your rules to AdGuard filters. Here is the official documentation on the syntax of AdGuard filtering rules. Please read it carefully: it will help you create your own filtering rules. "},{"title":"Other ways to contribute​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#other-ways-to-contribute","content":"Here is a dedicated page for people willing to contribute to AdGuard in other ways. "},{"title":"AdGuard filter policy","type":0,"sectionRef":"#","url":"general/ad-filtering/filter-policy/","content":"","keywords":""},{"title":"Terminology​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#terminology","content":"Throughout this text, we use the terms first party and third party. A &quot;first party&quot; is a website that a user visits intentionally and knowingly, plus a set of resources on the web operated by the same organization. In practice, we consider resources to belong to the same party if they are part of the same registrable domain: a public suffix plus one additional label. Example: site.example, www.site.example, and s.u.b.site.example belong to the same party because site.example is their common registrable domain. A &quot;third party&quot; is any party that does not fall within the definition of the first party above. Interactions with other parties are considered third-party, even if the user is transiently informed in context (for example, in the form of a redirect). Merely hovering over, muting, pausing, or closing a given piece of content does not constitute an intention to interact. "},{"title":"Common criteria​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#common-criteria","content":"These equally apply to rules in all filters. Rules that often cause problems with the work of some websites will be deleted.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"Ad filters​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#ad-filters","content":"This part describes the AdGuard Base filter, the Mobile Ads filter, and the following language-specific filters: Russian, German, Dutch, Spanish/Portuguese, Japanese, Turkish, Chinese, and French. What shall these filters block? These filters will block ads wherever possible.Ads should be blocked regardless of their reasons and goals.We will block ads caused by malicious apps or extensions that inject ads. Please note that we do it only on the condition that you specify how to install such an app or extension. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to the main filters. Websites’ own ads should not be removed on purpose. On the other hand, they should not be unblocked if it may cause third-party ads to reappear.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer.Anti-adblock scripts will be blocked only if they limit or affect the functionality of a website.Anti-adblock scripts will not be blocked in cases when it is prohibited by law.Rules that often cause problems with the work of some websites will be deleted. "},{"title":"Tracking Protection filter​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#tracking-protection-filter","content":"What will be blocked with this filter? This filter will block all trackers that collect user personal data. We define tracking as collecting data regarding an individual’s identity or activity across one or more websites. Even if such data is considered to be personally unidentifiable, it’s still tracking. Tracker is an online script that has tracking as its only purpose, or as one of its purposes. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to this filter. Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"AdGuard URL Tracking filter​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#adguard-url-tracking-filter","content":"What will be blocked with this filter? This filter will strip all tracking parameters from URLs. We define tracking as collecting data regarding an individual’s identity or activity across one or more websites. Even if such data is considered to be personally unidentifiable, it’s still tracking. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to this filter. Rules that would reduce user security levels will be removed.Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"Social Media filter​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#social-media-filter","content":"What will be blocked with this filter? This filter will block social media widgets (on third-party websites) such as &quot;Like&quot; and &quot;Share&quot; buttons, recommendation widgets, and more. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to this filter. Rules that block widgets that are a part of a website’s functionality, such as &quot;Comments,&quot; &quot;Embedded Post,&quot; &quot;Surveys,&quot; or widgets that require authorization via social networks.Rules that block links to a website’s communities in social networks.Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"Annoyances filter​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#annoyances-filter","content":"What will be blocked with this filter? This filter will block obstructions on the page. These elements are not ads, but they obstruct the view and make it difficult to see the actual content of the website. Such elements include cookie notices, third-party widgets, in-page pop-ups, email subscription forms, banners with special offers, and aggressively placed social media widgets. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to this filter. Rules that block elements that are essential for the website functioning (e.g. authorization forms) will not be blocked even if they satisfy other requirements.Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"Filter unblocking search ads and self-promotion​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#filter-unblocking-search-ads-and-self-promotion","content":"Unlike other filters, this one unblocks certain ads. Read more about it in the article on search ads and self-promotion. What will be unblocked with this filter? Search ads (ads that you see among the results when using an online search engine).Website self-promotion (when an ad on a website is promoting this very website or other websites/social media/etc closely related to it). Limitations and Exceptions Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"Quality requirements for filtering rules​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#quality-requirements-for-filtering-rules","content":"The rules should be as efficient as possible in terms of performance.Exception rules should be as specific as possible in order to avoid unnecessary unblocking.CSS and JS injection rules should be used as rarely as possible and only when it is impossible to block ads without them. "},{"title":"How ad blocking works","type":0,"sectionRef":"#","url":"general/ad-filtering/how-ad-blocking-works/","content":"","keywords":""},{"title":"General principle​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#general-principle","content":"Filter lists, also called filters, lie at the core of any ad blocker. Filters are literally lists of rules written in a special syntax. Ad blockers can understand this complex syntax. They interpret filtering rules and perform actions on web traffic based on what the rules tell them to do: block specific elements, alter web pages in certain ways, etc.  "},{"title":"Filter lists​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#filter-lists","content":"To better understand ad blocking, it's important to know the underlying principles of how filters work. Filtering rules that make up filters are not created automatically. They are developed by filter maintainers, including professionals and volunteers, who use browser developer consoles and other tools (such as the AdGuard's filtering log) to determine which rules will block a particular ad or tracker. This description of the process is very simplistic — some ads are particularly hard to block and require multiple rules, multiple iterations, and the use of complex syntax. And even when a rule finally gets added to a filter, it doesn't mean that it stays there forever. Ads change, ways to serve the same ads on the same websites change, and the filter rules have to change, too. Sometimes rules become obsolete, a new ad appears, or a new filtering rule is needed to block the same ad. Filters are often maintained by one person, but even for a team of maintainers, it's impossible to constantly monitor the entire web. That's why many ad blockers have tools to help users easily report any filter-related issues they encounter.  AdGuard users have access to a special web reporting tool. Thanks to user complaints, filter developers can focus on correcting their filter lists and not on scouring the Internet for new and old unblocked ads. Filters can do more than just block ads. There are filters that block tracking, social media widgets, and annoyances such as cookie notices. Different users may choose different combinations of filters to match their personal preferences. There are websites like filterlists.com that are dedicated to filter lists and have huge databases. We develop and maintain our own set of filter lists that can be used with AdGuard or other ad blockers. "},{"title":"Types of filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#types-of-filtering-rules","content":"There are many types of filtering rules that serve different purposes. Depending on the ad blocker you use, and especially on your OS, some types of rules may not be supported. "},{"title":"Basic filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#basic-filtering-rules","content":"To be displayed on a web page or in an app, the ad has to be loaded from a server first. To do so, the browser or the app needs to send a web request. The most basic way of preventing an ad from appearing on your screen is to block this request so it never reaches the server, and thus there's no reply. Basically, all AdGuard Ad Blocker products can block web requests according to the active filter rules. This method is very effective at stopping the ad, but it has some drawbacks. The most obvious one is: whatever place an ad was taking up will be left empty or occupied by an ad leftover. "},{"title":"Cosmetic filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#cosmetic-filtering-rules","content":"Every web page has a Document Object Model (DOM), an HTML document containing the structure and elements of this page. As ads are also page elements, they get recorded in the DOM. Ad blockers can remove parts of the DOM, while filtering rules help them understand which parts are ads and should be removed, and which parts should be left intact. This method allows you to avoid above-mentioned blank spaces and ad leftovers, as well as perform other more complicated tasks. "},{"title":"HTML filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#html-filtering-rules","content":"In most cases, it's enough to use the above-mentioned basic and cosmetic rules to filter ads. But when it is necessary to change the HTML code of the page itself before it is loaded, you need filtering rules for HTML content. These rules allow you to specify the HTML elements to be cut out before the browser even loads the page. These rules are quite complicated and require the ad blocker to be granted certain access rights, so not all platforms support them. Currently, these rules work only in the AdGuard Firefox add-on and in the AdGuard apps for Windows, Mac, and Android. info There are other types of filtering rules, but they require more advanced technical knowledge to understand how they work. If you are interested, check out our comprehensive guide on filtering rules in the linked article. "},{"title":"Search ads and self-promotion","type":0,"sectionRef":"#","url":"general/ad-filtering/search-ads/","content":"","keywords":""},{"title":"Search ads​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#search-ads","content":"Search ads are ads that you see among search query results when using online search engines, such as Google, Bing, DuckDuckGo, etc.  These ads are always contextual: they are targeted to match the keywords you used in the query. This helps you find exactly what you are searching for. Moreover, search ads (because they go through manual moderation) are often more relevant and helpful than the rest of the search results. Another argument in defense of search ads is that they are much less intrusive than many other ad formats. "},{"title":"What is websites' self-promotion?​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#what-is-websites-self-promotion","content":"In principle, when an ad on a website promotes this particular website or closely related websites, social media, and so on, such an ad is considered a self-promoting one.  Our general stance here is very similar to the EasyList policy regarding self-promotion ads. According to our filter policy, we should not block these ads; however, we should not make an exception if such an ad gets blocked by some rule 'alongside' a regular ad. Partly, this is due to ethical reasons, but mostly because such ads are rarely too intrusive and are often useful for the visitor of the website (who is supposedly interested in this website's content). By enabling 'Search ads and self-promotion', AdGuard users can unblock some of these self-promotion ads. "},{"title":"What ads are on the list?​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#what-ads-are-on-the-list","content":"When you enable 'Search ads and self-promotion', search ads from the following search engines are shown: GoogleYahooBingAskYandexDuckDuckGoStartPage As well as all self-promotional ads that satisfy our filter policy. "},{"title":"Summary​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#summary","content":"Allowing 'Search ads and self-promotion' is a 100% optional feature that may be helpful in some cases. If you don't like it, you can turn it off at any time. It does not, and never will, include any ad types or individual ads that do not fall into one of the two categories described above. "},{"title":"Tracking filter rules statistics","type":0,"sectionRef":"#","url":"general/ad-filtering/tracking-filter-statistics/","content":"","keywords":""},{"title":"Why do we need ad filters?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#why-do-we-need-ad-filters","content":"Let's start by defining what ad filters are. Thanks to these filters, AdGuard removes ads from websites. They are manually compiled based on your complaints about ads on websites. Ad filters are an essential element of AdGuard — their quality determines the overall quality of AdGuard ad blocking. However, there is a downside. Over the years, more and more ad filters have been appearing. And the more ad filters are there, the more memory AdGuard consumes, thus slowing down the rendering of web pages. At the same time, some of the filters start to expire, gradually becoming a dead weight that has no use, only consumes memory, and slows down the program. "},{"title":"Why do we need statistics?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#why-do-we-need-statistics","content":"We want to solve the problem of outdated filtering rules once and for all. But we need your help to do so. By gathering statistics on used filtering rules, we detect and remove the rules that are no longer used. As a result, it will help all those who use AdGuard. If your computer is powerful enough, it won’t really affect you. But the difference will be very noticeable for users of low-power netbooks or tablets. "},{"title":"What kind of statistics will be sent?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#what-kind-of-statistics-will-be-sent","content":"If you enable the Send statistics for ad filters usage option, the following information is sent periodically: Extension versionBrowser type (Chrome/Firefox/Opera/Yandex.Browser/Safari).List of enabled ad filters.The list that consists of the following elements: The domain name of the websiteThe number of recent page viewsThe list of filtering rules and Filter ID which were activated on this websiteThe domain name of blocked requests is sent for URL rules The list is created based on the website's visit statistics since the last time statistical data was sent. The collected statistics will be sent periodically to our server for analysis and filter optimization. It's important to note that all the statistics we get are averaged and anonymized. We don't use these statistics for any purpose other than optimizing the filters, and we do not sell this data to third parties. You can read about our Privacy Policy here. "},{"title":"What does tracking filter rules statistics fraught with?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#what-does-tracking-filter-rules-statistics-fraught-with","content":"For the vast majority of users, the change in computer speed will not be really noticeable. However, netbook and tablet users may notice a slight slowdown. Periodically, we will send the gathered statistics to the server. The size of the transmitted data is not very large and is comparable to the size of an average web page. "},{"title":"Browsing Security","type":0,"sectionRef":"#","url":"general/browsing-security/","content":"","keywords":""},{"title":"How does a check work?​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#how-does-a-check-work","content":"The scope and methods of checks depend on the product you use. In our browser extensions, AdGuard inspects only the pages you visit. In AdGuard for Windows, Mac, or Android, we offer you the best possible protection by checking both the pages and all objects loaded on them. "},{"title":"AdGuard for Windows, Mac, and Android​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#adguard-for-windows-mac-and-android","content":"We use the protocol Safe Browsing API version 2.2 for our work with filters. This protocol allows us to keep your personal data absolutely safe. Our server knows nothing about the websites that you visit. We use hash prefixes for checks, not the opened URLs. The figure below provides a general understanding of how the Browsing Security module works, using AdGuard for Windows as an example.  "},{"title":"AdGuard 확장 프로그램​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#adguard-확장-프로그램","content":"Browser extensions work differently, using the so-called Lookup API to check the pages you visit. Every time you visit any website, your local client exchanges information with our backend server in the form of hashes and hash prefixes. For those interested in the process at a deeper level, the link above will be helpful. As a result of that exchange, the local client determines if the website belongs to the database of potentially dangerous websites or not. We bring to your attention that we never get any information that could allow us to determine which websites you visit and use that data in any way. An approximate algorithm of the functioning of the Browsing Security module is shown in the picture below.  "},{"title":"AdGuard filters​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#adguard-filters","content":"We currently maintain two AdGuard filters. One protects against phishing and fraudulent websites. The other protects against malicious websites, visiting which may lead to a virus infection. "},{"title":"Phishing sites filter​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#phishing-sites-filter","content":"Phishing is a type of online fraud aimed at gaining access to confidential data of users — username and password. If you are interested in this topic, we suggest that you read this article at Wikipedia. Apart from phishing sites, this filter also covers different fraudulent sites, including all kinds of scams, sales of nonexistent content, and such. "},{"title":"Malicious sites filter​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#malicious-sites-filter","content":"This filter contains links to pages that lead to the execution of malicious code. It can initiate leakage or loss of data or harm the device of a user. It can be authorized (for example, when downloading and running the executable file) or unauthorized (for example, when being attacked with spyware). "},{"title":"How do we fill up our filters?​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#how-do-we-fill-up-our-filters","content":"Our filters are constantly filled with new addresses. Since most of the work is automated, you can be sure that new malware and phishing addresses fall into our database as quickly as possible. "},{"title":"AdGuard Browsing Security Community​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#adguard-browsing-security-community","content":"An important tool for maintaining the highest level of filtering is AdGuard Browsing Security Community. Any user of our products — be it AdGuard for Windows or our browser extension — can become a member of the community and help us in the making of AdGuard filters. In the picture below we described an algorithm of Browsing Security Community work:  "},{"title":"Want to help?​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#want-to-help","content":"We will gladly accept any help! If you want to send us a complaint about a phishing or malware site, you can do it via technical support at support@adguard.com or on our forum. "},{"title":"False-positive responses​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#false-positive-responses","content":"Occasionally, some non-malicious websites get added to AdGuard's filters. We do our best to reduce the percentage of false positives, but they still occur. If you come across this behavior from AdGuard, please send us a complaint about the false-positive alarm. You can submit such complaints via our technical support at support@adguard.com or on our forum. "},{"title":"How to install AdGuard","type":0,"sectionRef":"#","url":"general/how-to-install/","content":"How to install AdGuard Depending on which AdGuard app or browser extension you want to install, follow one of these links to find the relevant article: AdGuard for Android AdGuard for iOS AdGuard for Windows AdGuard for Mac AdGuard 확장 프로그램 AdGuard for Safari AdGuard Content Blocker","keywords":""},{"title":"HTTPS 필터링: 알려진 문제","type":0,"sectionRef":"#","url":"general/https-filtering/known-issues/","content":"","keywords":""},{"title":"알려진 문제​","type":1,"pageTitle":"HTTPS 필터링: 알려진 문제","url":"general/https-filtering/known-issues/#알려진-문제","content":"HTTPS filtering in AdGuard has its drawbacks. Almost all of them are scheduled to be eliminated in the next few AdGuard versions. All the issues known to us and the ETAs on their fixes are listed below. "},{"title":"실제 인증서 확인​","type":1,"pageTitle":"HTTPS 필터링: 알려진 문제","url":"general/https-filtering/known-issues/#실제-인증서-확인","content":"The most important drawback of the HTTPS filtering mechanism is that it hides the real certificate of a website. You cannot simply check its original certificate because you can only see the one issued by AdGuard. This problem is solved in Browser Assistant. This browser extension helps you manage filtering directly from the browser and allows you to inspect the original certificate of any website. "},{"title":"인증서 투명성(Certificate Transparency)​","type":1,"pageTitle":"HTTPS 필터링: 알려진 문제","url":"general/https-filtering/known-issues/#인증서-투명성certificate-transparency","content":"Thanks to modern cryptography, browsers can usually detect malicious websites that are provisioned with forged or fake SSL certificates. However, current cryptographic mechanisms aren’t so good at detecting malicious websites if they’re provisioned with mistakenly issued certificates or certificates that have been issued by a certificate authority (CA) that’s been compromised or gone rogue. Certificate Transparency aims to remedy these certificate-based threats by making the issuance and existence of SSL certificates open to scrutiny by domain owners, CAs, and domain users. AdGuard products which use CoreLibs starting with version 1.11 will implement a policy based on Chrome Certificate Transparency Policy. "},{"title":"의견이나 제안이 있나요?​","type":1,"pageTitle":"HTTPS 필터링: 알려진 문제","url":"general/https-filtering/known-issues/#의견이나-제안이-있나요","content":"If you’d like to add something, report any errors, or ask a question, please contact us at: devteam@adguard.com. "},{"title":"Local.adguard.org domain","type":0,"sectionRef":"#","url":"general/https-filtering/local-adguard-com-domain/","content":"","keywords":""},{"title":"Technical explanation​","type":1,"pageTitle":"Local.adguard.org domain","url":"general/https-filtering/local-adguard-com-domain/#technical-explanation","content":"But what's going on and why is it done? Please read the technical explanation below. AdGuard is a network-level content blocker so it cannot simply add custom JavaScript and CSS to webpages like what browser extensions do. However, doing this is crucial for quality content blocking.In order to do it AdGuard injects a &quot;content script&quot; that looks like this: &lt;script src=&quot;https://local.adguard.org/.../content-script.js&quot;&gt;. This &quot;content script&quot; takes care of cosmetic filtering, hides or removes ad content from the web pages.Connections to the IP address of the local.adguard.org domain are intercepted by AdGuard on the network level and processed locally. This is why that domain has a &quot;static&quot; IP address that does not change for years. Why do we need to use a real IP address for that? We cannot use 127.0.0.1 as the browsers won't accept it.Using some IP address from the private subnets is possible, but this solution has two downsides. First, there is a slight chance of intersecting with an existing intranet service and breaking access to it.Second, some DNS servers may consider this a DNS rebinding attack and refuse to respond to local.adguard.org. "},{"title":"Verification​","type":1,"pageTitle":"Local.adguard.org domain","url":"general/https-filtering/local-adguard-com-domain/#verification","content":"This is easy to verify. If you disable AdGuard, you'll see that it is simply impossible to establish connection to local.adguard.org since there is no server with that address. Just try opening it in your browser when AdGuard is disabled. "},{"title":"HTTPS 필터링","type":0,"sectionRef":"#","url":"general/https-filtering/what-is-https-filtering/","content":"","keywords":""},{"title":"HTTPS란 무엇인가요?​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#https란-무엇인가요","content":"HTTPS(HyperText Transfer Protocol Secure)는 보안을 강화하기 위해 암호화를 지원하는 HTTP 프로토콜의 확장입니다. 이 프로토콜은 개인 데이터, 신용 카드 정보 등과 같은 중요한 지정보를 안전하게 전송하는 데 사용됩니다. 암호화된 트래픽이 제3자에 의해 ‘엿들어지지 않도록’ 보호되므로 HTTPS를 사용하는 것이 좋습니다. 최근 HTTPS는 Google 권장을 받고 있다는 점과 무료 인증 센터 Let ’s Encrypt의 등장으로 인해 확산되고 있습니다. 아래의 그림은일반 HTTP 프로토콜과 보안 HTTPS 프로토콜의 차이점을 보여줍니다.  "},{"title":"보안 인증서란 무엇인가요?​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#보안-인증서란-무엇인가요","content":"간단히 말하면 HTTPS는 데이터 암호화를 의미합니다. 그러나 원하시는 웹 사이트와 암호화된 연결을 했는지 어떻게 확인을 할 수 있을까요? 웹 사이트가 보안 인증서가 있으면 연결이 암호화됩니다. 웹 사이트가 보안 인증서가 없거나 인증서에 잘못된 정보가 포함된 경우, 브라우저에서 보안 연결이 될 수 없습니다. 웹 사이트에서 사용하는 인증서를 브라우저에서 신뢰하는 CA(인증 기관)에서 발급받는 것이 중요합니다. 인증 기관은 SSL 인증서가 웹 사이트 소유자에게 발급되는 것을 보장합니다. "},{"title":"AdGuard가 HTTPS를 필터링해야 하는 이유는 무엇인가요?​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#adguard가-https를-필터링해야-하는-이유는-무엇인가요","content":"대부분의 웹 사이트와 광고 네트워크는 현재 HTTPS를 사용하고 있습니다. YouTube와 Facebook, Twitter가 HTTPS를 필터링하지 않고는 광고를 삭제할 수 없는 대표적인 예시입니다. "},{"title":"HTTPS 필터링은 어떻게 작동하나요?​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#https-필터링은-어떻게-작동하나요","content":"HTTPS 필터링 작업 방식이 쉬웠다면 HTTPS는 그렇게 안전하지 않을 것입니다. 브라우저가 서버에 연결하려고 하면 AdGuard는 두 개의 보안 연결을 설정하는데, 각각 브라우저나 다른 앱, 그리고 서버와 설정하는 것이 그것입니다. 브라우저는 AdGuard와 AdGuard가 생성하는 연결을 신뢰해야 합니다. 이를 위해 AdGuard는 특수 루트 인증서를 생성하여 시스템에 설치하고 필요한 경우, Firefox와 같은 일부 브라우저에도 설치합니다. 따라서 AdGuard는 보안 연결 상황을 확인하고 광고 및 추적을 차단할 수 있습니다. 아래의 그림은 이러한 과정을 알기 쉽게 보여줍니다.  "},{"title":"내 트래픽이 암호화되고 안전하나요?​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#내-트래픽이-암호화되고-안전하나요","content":"물론입니다. 원격 서버와의 연결은 암호화되고 안전하게 유지됩니다. AdGuard는 브라우저와 마찬가지로 필터링할지 여부를 결정하기 전에 서버의 인증서를 확인합니다. 그러나 HTTPS 필터링에는 단점이 있습니다. HTTPS 필터링 시 브라우저는 실제 인증서 대신 AdGuard에서 발급한 인증서를 봅니다. 그래서 저희는 연결 보안을 개선하기 위해 몇 가지 추가 조치를 취합니다. "},{"title":"금융 웹 사이트 및 민감한 개인 데이터가 있는 웹 사이트​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#금융-웹-사이트-및-민감한-개인-데이터가-있는-웹-사이트","content":"기본적으로 AdGuard는 개인 데이터가 있는 은행 웹 사이트, 결제 시스템 웹 사이트 및 웹 사이트에서 필터링하지 않습니다. 저희는 수천 개의 그러한 웹 사이트 목록을 유지합니다. 이 목록에 웹 사이트를 추가하려면 저희에게 알려주십시오. "},{"title":"EV(Extended Validation) 인증서​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#evextended-validation-인증서","content":"AdGuard는 EV 인증서를 사용하는 모든 웹 사이트를 필터링에서 제외하는 기능을 제공합니다. EV 인증서는 더 높은 수준의 보안을 의미하며 일반 인증서보다 더 많은 보증을 제공하여 웹 사이트가 사기 또는 위조 웹 사이트가 아님을 증명합니다. "},{"title":"HTTPS 필터링과 관련된 문제​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#https-필터링과-관련된-문제","content":"2017년 연구에 따르면 HTTPS 연결의 5~10%가 HTTPS 필터링을 사용하는 애플리케이션에 의해 이루어집니다. 이 HTTPS 필터링 애플리케이션 중 대부분 바이러스 백신 소프트웨어입니다. 나쁜 소식은 테스트된 26개의 바이러스 중 24개가 연결 보안 수준을 떨어뜨렸고 3분의 2가 해킹 연결에 취약하다는 것입니다. 연구원들의 결론은 인터넷 보안 커뮤니티가 보안 연결을 필터링하는 애플리케이션에 세심한주의를 기울여야 한다는 것입니다. 그리고 그러한 프로그램의 개발자는 필터링 구현의 품질에 가장 진지하게주의를 진지하게 임해야 합니다. AdGuard는 연구원들에 의해 테스트되지 않았습니다. We ran estimates according to their set of tests, and at the time of testing, we could have received the maximum score — A*. 연구원에 의해 확인되었지만 최종 평가에서 고려되지 않은 몇 가지 문제가 있습니다. AdGuard는 연구원의 결과에 전적으로 동의합니다. 또한 현재 겪고 있는 문제와 필터링 메커니즘의 품질 및 보안을 개선하기 위한 계획에 대해 알려 드리고자 합니다. 이러한 목록은 우선 순위에 따라 정렬됩니다. 위의 연구에서 발견된 대부분의 문제는 인증서 유효성 검사 메커니즘과 관련이 있습니다. 저희는 별도의 인증서 유효성 검사 라이브러리를 생성 중입니다. 또한 인증서 유효성 검사 라이브러리를 오픈 소스로 만들고 싶습니다. AdGuard의 HTTPS 필터링 단점에 대한 자세한 내용은 이 기사에서 확인할 수 있습니다. Android 7 이상에서 HTTPS 필터링 문제​ Android 7부터 개발자는 애플리케이션이 사용자 지정 인증서를 신뢰하도록 지정해야 합니다. 이제 AdGuard는 HTTPS 트래픽을 필터링하기 위해 사용자 인증서를 설치합니다. 앱이 이 인증서를 신뢰하지 않으면 HTTPS 트래픽이 필터링되지 않습니다. HTTPS 트래픽이 필터링되지 않으면 어떻게 해야 할까요? 우선, 많은 앱(최신 앱 포함)이 여전히 사용자 인증서를 신뢰합니다. 거의 모든 브라우저는 이러한 인증서도 신뢰합니다. 이 인증서를 신뢰하지 않는 일부 브라우저가 있을 수 있지만 드문 경우입니다. 그리고 기기가 루팅된 경우, AdGuard 인증서를 시스템 저장소로 이동할 수 있습니다. 이렇게하면 특정 앱에 권한이 있는지 여부에 대해 걱정할 필요가 없습니다. HTTPS 트래픽은 이전 앱뿐 아니라 최신 앱에서도 필터링됩니다. 그러나 HPKP 또는 Expect-CT와 같은 일부 추가 보안 제한이 AdGuard에 적용됩니다. "},{"title":"HTTPS 품질을 수동으로 확인하는 방법은 무엇인가요?​","type":1,"pageTitle":"HTTPS 필터링","url":"general/https-filtering/what-is-https-filtering/#https-품질을-수동으로-확인하는-방법은-무엇인가요","content":"특정 웹 사이트에서 HTTPS 연결 품질을 확인할 수 있습니다. 이러한 웹 사이트는 브라우저(또는 AdGuard를 사용 경우, 브라우저 + AdGuard)가 일반적인 취약점에 노출되는지 확인합니다. HTTPS를 필터링하는 프로그램을 사용하려는 경우, 다음과 같은 웹 사이트에서 연결 품질을 확인하는 것이 좋습니다. https://www.ssllabs.com/ssltest/viewMyClient.htmlhttps://www.howsmyssl.com/https://badssl.com/ "},{"title":"라이선스를 활성화하는 방법","type":0,"sectionRef":"#","url":"general/license/activation/","content":"","keywords":""},{"title":"라이선스를 활성화하는 방법​","type":1,"pageTitle":"라이선스를 활성화하는 방법","url":"general/license/activation/#라이선스를-활성화하는-방법","content":"라이선스를 활성화하려면 AdGuard 제품의 라이선스 섹션으로 이동하여 로그인 필드 또는 활성화 버튼을 찾으세요. AdGuard 계정의 이메일과 비밀번호를 사용하여 로그인할 수 있습니다. 아직 계정이 없는 경우, 계정을 만들라는 메시지가 표시됩니다. note To activate a license via the AdGuard account, a valid license with at least one free slot is required. 라이선스가 이미 최대 수의 기기에서 사용되고 있는 경우, 라이선스를 업그레이드하거나 한 기기에서 다른 기기로 이전할 수 있습니다. 또는 라이선스 키를 사용하여 라이선스를 활성화할 수 있습니다. 아래에서 각 플랫폼별 활성화 방법을 확인하실 수 있습니다. "},{"title":"Windows용 AdGuard 활성화 방법​","type":1,"pageTitle":"라이선스를 활성화하는 방법","url":"general/license/activation/#windows용-adguard-활성화-방법","content":"Open the AdGuard app To do it, double-click the AdGuard icon on the desktop: or double-click the AdGuard icon in the system tray: Go to License tab in the app menu and click Activate license You will be presented with two options for activation: Via entering email and password from your AdGuard account (or from your Facebook, Google or Apple account) Via entering a license key "},{"title":"Mac용 AdGuard 활성화 방법​","type":1,"pageTitle":"라이선스를 활성화하는 방법","url":"general/license/activation/#mac용-adguard-활성화-방법","content":"Open the AdGuard app (click the AdGuard icon in the menu bar) Click the gear icon in the top right corner Click License... In the opened window press Activate button You will be presented with two options for activation: Via entering email and password from your AdGuard account (or from your Facebook, Google or Apple account) Via entering a license key "},{"title":"Android용 AdGuard 활성화 방법​","type":1,"pageTitle":"라이선스를 활성화하는 방법","url":"general/license/activation/#android용-adguard-활성화-방법","content":"Open the AdGuard app Tap menu icon (☰) in the top left corner of the screen Tap Get Premium bar (or tap License Status) Tap three-dot menu (⋮) in the top right corner of the screen Press Activate Premium, and you will be presented with two activation options: Via entering email and password from your AdGuard account (or from your Facebook or Google account) Via entering a license key "},{"title":"iOS용 AdGuard 활성화 방법​","type":1,"pageTitle":"라이선스를 활성화하는 방법","url":"general/license/activation/#ios용-adguard-활성화-방법","content":"Open the AdGuard app and tap the gear icon in the bottom right corner of the screen Tap License Tap Log in in the top right corner of the screen Enter email and password from your AdGuard account "},{"title":"구독 취소/환불하는 방법","type":0,"sectionRef":"#","url":"general/license/cancel-refund/","content":"","keywords":""},{"title":"구독을 취소하는 방법​","type":1,"pageTitle":"구독 취소/환불하는 방법","url":"general/license/cancel-refund/#구독을-취소하는-방법","content":"AdGuard 계정에서 구독을 취소할 수 있습니다. 구독을 취소하는 방법은 다음과 같습니다. AdGuard 계정으로 이동합니다. 라이선스 탭으로 이동합니다. 더 이상 필요하지 않은 구독 아래에서 구독 취소를 클릭합니다. 취소된 구독은 만료일까지 유효합니다. Subscriptions purchased on the App Store can be managed in the App Store account or in the device's settings. "},{"title":"환불 받는 방법​","type":1,"pageTitle":"구독 취소/환불하는 방법","url":"general/license/cancel-refund/#환불-받는-방법","content":"In accordance with our Terms of Sale, you can get a 100% refund on the AdGuard license key you purchased at https://adguard.com. To get a refund, contact our support team at support@adguard.com and specify the payment option you've used. A refund may be declined if: 라이선스를 구매한 지 60일이 지난 경우,디스트리뷰터로부터 라이선스를 구매한 경우,App Store에서 라이선스를 구매한 경우,라이선스 키 업그레이드 또는 갱신에 대한 부분 환불을 신청한 경우. "},{"title":"이전 라이선스 키","type":0,"sectionRef":"#","url":"general/license/legacy/","content":"","keywords":""},{"title":"이전 라이선스​","type":1,"pageTitle":"이전 라이선스 키","url":"general/license/legacy/#이전-라이선스","content":"이전에 아래와 같은 AdGuard 라이선스가 있었습니다. 일반 라이선스: Windows/Mac용 컴퓨터에서 사용할 수 있는 라이선스 모바일 라이선스: Android/iOS용 휴대폰/태블릿에서 사용할 수 있는 라이선스 프리미엄 라이선스: 컴퓨터 및 휴대폰/태블릿에서 사용할 수 있는 라이선스 일반 라이선스와 모바일 라이선스는 1~9개의 기기에서 사용할 수 있었습니다. 일반 라이선스는 컴퓨터에서만 이용할 수 있고 모바일 라이선스는 휴대폰과 태블릿에서만 사용할 수 있었습니다. 프리미엄 라이선스는 2~18개의 기기에서 사용이 가능하였습니다. 구매 시 선택한 기기 수에 따라 컴퓨터 및 휴대폰/태블릿에서 2+2, 3+3 등의 형식으로 AdGuard를 동시에 활성화할 수 있었습니다. 예를 들면, 2+2(4개의 기기용) 프리미엄 라이선스는 2대의 컴퓨터와 2대의 휴대폰/태블릿에서 사용할 수 있었습니다. 아니면 3+3(6개의 기기용) 프리미엄 라이선스를 3대의 컴퓨터와 3대의 휴대폰/태블릿에서 사용할 수 있었습니다. 일반/모바일/프리미엄 라이선스는 연간와 평생 라이선스로 구분되었습니다. 그러나 2019년 10월부터 새로운 라이선스 시스템이 도입되었습니다. 이제는 3개의 기기에서 사용할 수 있는 개인용 라이선스와 9개의 기기에서 사용할 수 있는 가족용 라이선스가 존재합니다. 예전처럼 개인용/가족용 라이선스는 연간와 평생 라이선스로 구분되었습니다. 제일 중요한 변경 사항은 새로운 라이선스를 모든 기기에서 사용할 수 있는 것입니다. 예를 들어, 개인용 라이선스를 Windows용 2대의 컴퓨터와 iOS용 1대의 휴대폰에서 사용할 수 있거나 Mac용 1대의 컴퓨터와 iOS용 1대의 휴대폰, Android용 1대의 휴대폰에서 사용할 수 있습니다. "},{"title":"이전 라이선스 키는 어떻게 되었나요?​","type":1,"pageTitle":"이전 라이선스 키","url":"general/license/legacy/#이전-라이선스-키는-어떻게-되었나요","content":"이전 프리미엄 또는 모바일 라이선스를 가지고 있다면 과거와 동일하게 사용할 수 있습니다. 그러나 새로운 라이선스 시스템이 적용된 이후 모든 기기에서 일반 라이선스를 사용할 수 있습니다. 예를 들면, 이제는 3개의 기기용 일반 라이선스를 2대의 컴퓨터와 1대의 휴대폰에서 이용할 수 있습니다. 또한 프리미엄 라이선스는 이제 총 기기 수에 따라 개인 계정에 표시됩니다. 1+1 키는 다음과 같이 표시됩니다.  개인 계정에서 이전 라이선스는 '이전 버전’으로 표시됩니다. 이전 라이선스가 있는 경우 계정에 '이전 라이선스'라는 문구가 표시됩니다. 그러나 이러한 라이선스는 갱신 또는 업그레이드 시 자동으로 새로운 유형으로 변환됩니다. 어떤 라이선스를 새로운 유형으로 변환할 수 있는지, 어떻게 변환하는지 살펴보겠습니다. "},{"title":"이전 키 업그레이드· 갱신 방법​","type":1,"pageTitle":"이전 라이선스 키","url":"general/license/legacy/#이전-키-업그레이드-갱신-방법","content":"갱신 페이지 또는 AdGuard 계정에서 라이선스 변경이 가능합니다.  '내 라이선스'에서 특정 키에 대한 업그레이드·갱신 가능성을 확인할 수 있습니다. 구체적인 예를 살펴 보겠습니다. "},{"title":"1/2/3개의 기기용 일반/모바일 라이선스 또는 1+1 프리미엄​","type":1,"pageTitle":"이전 라이선스 키","url":"general/license/legacy/#123개의-기기용-일반모바일-라이선스-또는-11-프리미엄","content":"1/2/3개의 기기용 연간 라이선스는 갱신 시 개인용 또는 가족용 라이선스로 전환할 수 있습니다.  보호해야 하는 기기 수에 따라 라이선스를 선택하십시오. 또한 갱신하는 대신 영구 라이선스를 이용하십시오.  평생 라이선스는 갱신할 수 없으므로 새로운 유형의 라이선스로 전환 시 가족용 라이선스로 업그레이드하는 옵션만 가능합니다.  "},{"title":"4개 기기 이상의 라이선스 (최대 9개 기기 이용)​","type":1,"pageTitle":"이전 라이선스 키","url":"general/license/legacy/#4개-기기-이상의-라이선스-최대-9개-기기-이용","content":"연간 라이선스는 가족용 라이선스로 전환할 수 있습니다.  평생 라이선스가 기술적 제한으로 인해 새로운 유형 라이선스로 변경이 불가능합니다.  "},{"title":"9개 기기 이상의 라이선스​","type":1,"pageTitle":"이전 라이선스 키","url":"general/license/legacy/#9개-기기-이상의-라이선스","content":"9개 기기 이상의 라이선스로는 5+5 프리미엄 라이선스와 관리자를 통해 구매한 10대 이상 기기용 라이선스가 있습니다. 이는 매우 독특한 경우이므로 연간 라이선스를 평생 라이선스로 업그레이드하려면 partners@adguard.com으로 문의하십시오. 라이선스의 구성에 따라 개별적인 특별 제안을 제공하겠습니다. "},{"title":"라이선스 구매・업그레이드하는 방법","type":0,"sectionRef":"#","url":"general/license/payment-options/","content":"","keywords":""},{"title":"라이선스를 구매하는 방법​","type":1,"pageTitle":"라이선스 구매・업그레이드하는 방법","url":"general/license/payment-options/#purchase","content":"AdGuard 라이선스는 adguard.com에서 구매할 수 있으며, We offer various payment options, including Visa, Mastercard, Apple Pay, Google Pay, PayPal, Alipay, and UnionPay. We also accept the following cryptocurrencies: Bitcoin, Ethereum, Litecoin, and Tether. iOS용 AdGuard Pro는 App Store에서 구입할 수 있습니다. 광고 차단기 라이선스는 다양한 유통업체에서도 판매됩니다. The availability of AdGuard products in app stores and by distributors depends on your country. "},{"title":"라이선스를 업그레이드하는 방법​","type":1,"pageTitle":"라이선스 구매・업그레이드하는 방법","url":"general/license/payment-options/#upgrade","content":"To make more use of your AdGuard products, you can upgrade your license for the following benefits. AdGuard 제품의 기능을 향상시키려면 무료 또는 평가판 라이선스를 정식 버전으로 업그레이드하세요.개인용 라이선스를 가족용 라이선스로 업그레이드하여 기기 수를 늘릴 수 있습니다.구독을 평생 라이선스로 업그레이드할 수도 있습니다. You can upgrade your license by: AdGuard 공식 웹사이트에서 다른 라이선스를 구매합니다.AdGuard 계정에서 평생 라이선스로 업그레이드 및/또는 기기 한도 늘리기를 누릅니다.  "},{"title":"라이선스를 이전하는 방법","type":0,"sectionRef":"#","url":"general/license/transfer/","content":"","keywords":""},{"title":"다른 기기로 라이선스를 이전하는 방법​","type":1,"pageTitle":"라이선스를 이전하는 방법","url":"general/license/transfer/#transfer","content":"라이선스 키는 제한된 수의 기기에서만 활성화할 수 있습니다. 허용된 최대 기기 수에서 이미 키를 사용한 경우에는 계정에서 기기 연결을 해제해야 합니다. "},{"title":"기기 연결을 해제하는 방법​","type":1,"pageTitle":"라이선스를 이전하는 방법","url":"general/license/transfer/#기기-연결을-해제하는-방법","content":"기기 연결을 해제하는 방법은 세 가지가 있습니다. 라이선스 초기화 버튼을 클릭합니다(AdGuard 데스크톱 앱에서만 수행 가능). AdGuard 제품의 계정에서 로그아웃합니다. AdGuard 계정에서 기기를 제거합니다. AdGard 계정에서 AdGard 광고 차단기를 클릭합니다. In the license card, click the device you want to unbind 삭제를 클릭합니다. 필요한 수의 기기를 삭제한 후, 새 기기에서 AdGuard 계정에 로그인할 수 있습니다. 라이선스가 새 기기에 추가됩니다. "},{"title":"다른 AdGuard 계정으로 라이선스를 이전하는 방법​","type":1,"pageTitle":"라이선스를 이전하는 방법","url":"general/license/transfer/#transferaccount","content":"Go to the AdGuard account that contains the license you would like to transfer Go to the Licenses tab 이전하려는 라이선스를 찾아 계정에서 연결 해제를 클릭합니다. 연결 해제를 클릭합니다(라이선스 키를 기록/기억하는 것이 중요). Go to the AdGuard account that you would like to transfer the license to Go to the Licenses tab 오른쪽 상단 모서리에서 라이선스 연결을 클릭합니다. Enter your license key (from step 3). 원래 계정에 액세스할 수 없는 경우, 지원 팀(support@adguard.com)으로 문의하시기 바랍니다. "},{"title":"What is an AdGuard license","type":0,"sectionRef":"#","url":"general/license/what-is/","content":"","keywords":""},{"title":"What is an AdGuard license​","type":1,"pageTitle":"What is an AdGuard license","url":"general/license/what-is/#what-is-an-adguard-license","content":"라이선스는 최종 사용자 라이선스 계약에 따라 제공되는 AdGuard 제품 사용 권한입니다. AdGuard 라이선스는 사용자의 AdGuard 계정에 라이선스 키, 활성화 코드 및 제품 카드 형태로 존재합니다. 일부 라이선스(개인용 AdGuard 광고 차단기의 라이선스)는 구매해야 합니다. 일부 라이선스는 무료이지만 평가판 기간(AdGuard 앱의 평가판 라이선스) 또는 제한된 기능(iOS용 AdGuard 또는 AdGuard 확장 프로그램)이 있습니다. AdGuard 광고 차단기 라이선스의 유형은 다음과 같습니다. 평가판은 며칠 동안 무료로 사용할 수 있는 모든 기능을 갖춘 라이선스입니다. Windows용 AdGuard — 14일 평가판, Mac용 AdGuard — 14일 평가판, Android용 AdGuard — 7일 평가판.Free licenses are not time-limited, but have limited functionality: AdGuard Browser Extension, AdGuard Content Blocker, AdGuard for iOS.구독은 매달 또는 매년 자동으로 갱신되는 유료 라이선스입니다. 구독을 수동으로 갱신할 수도 있습니다. AdGuard 광고 차단기 월간 구독, AdGuard 광고 차단기 연간 구독.디스트리뷰터로부터 구입한 라이선스와 선물 라이선스는 기간 제한이 있으며 자동으로 갱신할 수 없습니다. 하지만 수동으로 갱신할 수 있습니다: AdGuard 광고 차단기 월간 라이선스, AdGuard 광고 차단기 연간 라이선스.평생 라이선스는 기간 제한이 없으며 모든 기능을 제공합니다: AdGuard 광고 차단기 평생 라이선스, iOS용 AdGuard Pro. "},{"title":"추가할 수 있는 기기 수​","type":1,"pageTitle":"What is an AdGuard license","url":"general/license/what-is/#devices","content":"라이선스 유형에 따라 다른 수의 기기에서 사용할 수 있습니다. 개인용 라이선스 최대 3개의 기기에서 사용 가능가족용 라이선스 최대 9개의 기기에서 사용 가능iOS용 AdGuard Pro 하나의 기기에서 사용 가능 To use your license on a device, log in to your AdGuard account on it. To extend the device limit, you can upgrade your license. "},{"title":"라이선스 키란 무엇인가요?​","type":1,"pageTitle":"What is an AdGuard license","url":"general/license/what-is/#license-key","content":"A license key is a unique sequence of characters that represents an AdGuard Ad Blocker license. It is automatically registered for the email you used for license purchase. With a license key, you can: 일부 제품(예: Windows용 AdGuard)에서 AdGuard 계정에 로그인할 수 있습니다.AdGuard 계정이 없는 경우, 제품에서 라이선스를 활성화할 수 있습니다.AdGuard 계정에 라이선스를 추가하고 제거할 수 있습니다. When unbinding a license, be sure you write the license key down beforehand or note in some other (safe) way. You'll need the key for re-binding your license or transferring it to another account. "},{"title":"라이선스 키를 복구하는 방법​","type":1,"pageTitle":"What is an AdGuard license","url":"general/license/what-is/#라이선스-키를-복구하는-방법","content":"You can easily check which license keys belong to you in your AdGuard Account. The license key is bound to your account via the email address you used to purchase AdGuard. Please note that it is often not enough to just find out what your license key is. If it was already used on another computer, it’s necessary to unbind it from that computer through the AdGuard Account before using it again. "},{"title":"Stealth Mode","type":0,"sectionRef":"#","url":"general/stealth-mode/","content":"","keywords":""},{"title":"General​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#general","content":""},{"title":"Hide your search queries​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#searchqueries","content":"When you get directed to a website from Google, Yahoo, or any other search engine, this option hides the search query that you used to find that website. "},{"title":"Ask websites not to track you​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#donottrack","content":"Sends the Global Privacy Control and Do Not Track requests to the websites you visit. "},{"title":"Strip tracking parameters from URLs​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#strip-tracking-parameters-from-urls","content":"If you enable this option, AdGuard will strip tracking parameters like utm_* and fb_ref from pages’ URLs. "},{"title":"Tracking methods​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#tracking-methods","content":""},{"title":"Self-destructing third-party cookies​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#3p-cookie","content":"Websites use cookies to store your information and preferences, such as the language you selected, your location, or the list of items in your shopping cart. When you return to a website, your browser sends back the cookies belonging to that website, which allows it to &quot;remember&quot; your data. Third-party cookies are those implemented by a website that is different from the one you are currently browsing. For example, cnn.com may have a Facebook &quot;Like&quot; widget on its homepage. This widget will implement a cookie that may be read later by Facebook. Some advertisers use such cookies to track what other sites you visit where their ads are placed. Set a time period (in minutes) at the end of which all third-party cookies will be destroyed. Set the timer to 0 to block them completely. "},{"title":"Self-destructing first-party cookies​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#1p-cookie","content":"We do not recommend enabling this option as it may severely interfere with the work of certain sites. Set a time period (in minutes) at the end of which all cookies will be destroyed. Set the timer to 0 to block them completely. "},{"title":"Disable cache for third-party requests​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#3p-cache","content":"When a browser addresses a page, the server assigns an ETag to that page. This ETag is used by the browser to cache the page's contents. Upon subsequent requests, the browser sends the ETag to the corresponding server, thus letting the server learn the visitor’s identity. As long as the site's files are cached, the ETag is sent every time your browser addresses this site. If the site has embedded content from another server (such as an image or iframe), that server can track your activities without your knowledge. "},{"title":"Block third-party Authorization header​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#3p-auth","content":"&quot;Authorization&quot; header value is cached by the browser, and then is sent alongside every request to that domain. It means that it can be used for tracking purposes just like cookies. "},{"title":"Browser API​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#browser-api","content":""},{"title":"Block WebRTC​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#webrtc","content":"WebRTC (Web Real-Time Communication) is a technology that allows direct streaming of data between browsers and apps. It can let others know your true IP address, even if you use a proxy or VPN. Enabling this option can disrupt the work of certain browser applications, such as messengers, chats, cinemas, or games. "},{"title":"Block Push API​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#push","content":"The Push API enables servers to send messages to web applications regardless of the activity status of your browser. Thus, you may see notifications from various websites even if your browser is hidden in the tray or not launched. Enable this option to block the browser's Push API completely. "},{"title":"Block Location API​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#location","content":"Enabling this option will prevent the browser from sending GPS data that could be used to determine your location, modify your search results, or otherwise influence your web experience. "},{"title":"Block Flash​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#flash","content":"The Flash Player plugin has become increasingly vulnerable to such online threats as viruses and hackers; it may also significantly affect website loading time. Turning this setting on makes AdGuard block browsers' ability to detect components (such as plugins and ActiveXObject objects) that allow Flash to display content. This effectively means that browsers are unable to support Flash. "},{"title":"Block Java​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#java","content":"Some websites and web services still use the old technology to support Java plugins. The Java plugin API, which is the basis of Java plugins, has serious security flaws. For security purposes, you can disable such plugins. Nevertheless, even if you decide to use the &quot;Block Java&quot; option, JavaScript will still be enabled. "},{"title":"Miscellaneous​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#miscellaneous","content":""},{"title":"Hide Referrer from third parties​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#referrer","content":"Referrer is an HTTP header used in browser-to-server requests. It contains the URL of the request source. When you navigate from one page to another, Referrer saves the URL of the initial page. The server that hosts the destination web page often has software that parses Referrer and extracts various pieces of information from it. Enabling the Hide Referrer from third-parties option hides the current website from third-party sites by altering the HTTP header. You can also set an arbitrary value for Referrer by entering it into the Custom Referrer field. To use default Referrer, leave the field blank. Note that to be able to filter traffic, AdGuard applications 'intercept' browser-to-server requests. Requests to ad, tracking, and phishing servers may be altered before sending them to the server or blocked completely. Same goes for the Hide Referrer from third parties option: AdGuard intercepts HTTP(S) requests, in particular to remove or change the Referrer header if this option is enabled. However, it happens only after these requests “leave” the browser. This means that if you monitor Referrer inside the browser (for example, with the help of Chrome's Developer Tools), you will see the original Referrer because the request hasn't reached AdGuard yet. You can use software like Fiddler to make sure that Referrer gets altered correctly. On the opposite, due to the nature of all browser extensions, AdGuard Browser Extension works 'inside' the browser. It will alter the Referrer right then and there, so Developer Tools will show the desired Referrer for your requests. "},{"title":"Hide your User-Agent​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#useragent","content":"When you visit a website, your browser sends its information to the server. It looks like a text line that is part of an HTTP request that begins with &quot;User-Agent:&quot;. It usually includes the name and version of the browser, the operating system, and language settings. We cut User-Agent from identifying information so that advertisers cannot obtain it. You can also set an arbitrary value for User-Agent by entering it into the Custom User-Agent field. To use default User-Agent, leave the field blank. "},{"title":"Hide your IP address​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#ip","content":"Stealth Mode cannot hide your IP address. However, we can conceal it so that websites you visit will think you are a proxy. Sometimes this helps, and websites ignore your true IP address. You can set an arbitrary IP address, which you would like others to perceive as yours, by simply entering it into the corresponding field. To use the default IP address, leave the field blank. "},{"title":"Remove X-Client-Data header from HTTP requests​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#xclientdata","content":"It forbids Google Chrome from sending its version and modification information with requests to Google domains (including Double Click and Google Analytics). "},{"title":"Protect from DPI​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#dpi","content":"The Deep Packet Inspection is a system of deep analysis and filtering of traffic by packet content, as well as the accumulation of statistical data. Using this technology, ISPs have the ability to control the passing traffic and limit access to content for their clients. AdGuard can modify outgoing packet data so that the client does not fall under the DPI blocking criteria. This means that by enabling this option, users can get access to the content they want. Not all DPI systems can be bypassed at this time, but we are constantly working to improve this. The &quot;Protect from DPI&quot; feature is already implemented in AdGuard for Windows, AdGuard for Mac, and AdGuard for Android. "},{"title":"Userscripts","type":0,"sectionRef":"#","url":"general/userscripts/","content":"","keywords":""},{"title":"Supported apps​","type":1,"pageTitle":"Userscripts","url":"general/userscripts/#supported-apps","content":"AdGuard can significantly broaden website functionality by acting as a userscript manager. You can add your custom scripts or manage the existing ones in our three products: AdGuard for Windows, AdGuard for Android and AdGuard for Mac. "},{"title":"Recommended AdGuard scripts​","type":1,"pageTitle":"Userscripts","url":"general/userscripts/#recommended-adguard-scripts","content":"These userscripts come directly from the AdGuard developers, and we can guarantee that they are effective and safe. Remember: whenever you download a userscript from an unknown source, you expose yourself to risk, as some scripts may be harmful to your computer. Get new scripts only from the sources you trust 100%. Furthermore, here are some examples of popular sites with scripts. AdGuard Extra. An extension that blocks advertising in difficult cases when the usual filter-based approach is not enough. AdGuard Popup Blocker. The name speaks for itself: it blocks pop-ups — one of the most annoying types of ads on web pages. AdGuard Assistant (legacy version). This custom extension is designed to control filtering directly from the browser page (manual blocking, exclusion of the site, etc.). note This version of Assistant is legacy and there is no point in using it on new systems, since it has been replaced with the full-fledged Browser Assistant. But legacy Assistant might be of help if there is no Browser Assistant extension for your browser. Disable AMP. A script, pre-installed only in AdGuard for Android, that disables AMP (Accelerated Mobile Pages) on the Google search results page. "},{"title":"Where can you get more userscripts?​","type":1,"pageTitle":"Userscripts","url":"general/userscripts/#more-userscripts","content":"As userscripts are created mainly by enthusiasts, you should be cautious when installing them. Yet, there is a great variety of interesting scripts that can really make using some websites more convenient. Here we will describe some of the most popular userscript catalogs. "},{"title":"Stylish (userstyles.org)​","type":1,"pageTitle":"Userscripts","url":"general/userscripts/#stylish-userstylesorg","content":"Userstyles.org is a catalog of user styles, but it allows you to load them as userscripts. Thus, any user style can be installed via AdGuard. Be careful if you decide to install an unpopular script — there's a risk it might be harmful. "},{"title":"Greasy Fork​","type":1,"pageTitle":"Userscripts","url":"general/userscripts/#greasy-fork","content":"Greasy Fork is a userscript catalog by Stylish creators. Unlike the above-mentioned userstyles.org, the scripts in this catalog undergo moderation, so their credibility is much higher. "},{"title":"OpenUserJS.org​","type":1,"pageTitle":"Userscripts","url":"general/userscripts/#openuserjsorg","content":"OpenUserJS.org is an open source userscript catalog written in nodeJS. It doesn't have moderation so stay alert to any suspicious scripts. "},{"title":"Community​","type":1,"pageTitle":"Userscripts","url":"general/userscripts/#community","content":"If you like the idea of personifying your browser with the help of userscripts, and you have any questions, you can ask them on one of these websites: StackoverflowFreeNodeReddit "},{"title":"Development​","type":1,"pageTitle":"Userscripts","url":"general/userscripts/#development","content":""},{"title":"Request License​","type":1,"pageTitle":"Userscripts","url":"general/userscripts/#request-license","content":"If you are developing your own custom script and want to test how it works with AdGuard, request a beta-license key for the app. To get it, please send an email to devteam@adguard.com with the following information: Subject: Userscript author license request Body: Please tell us about the userscripts you are working on. Here is a mailto link. "},{"title":"Compatibility​","type":1,"pageTitle":"Userscripts","url":"general/userscripts/#compatibility","content":"Metadata block​ Supported properties​ @name @namespace @description @version @match @include @exclude @grant @connect @require @resource @downloadURL @updateURL @supportURL @homepageURL @homepage @website @source @run-at @noframes @icon @iconURL @defaulticon @icon64 @icon64URL  Unsupported properties​ These properties will be simply ignored by Adguard. @unwrap  Supported GM functions​ AdGuard supports both old GM_ functions and new GM4 API that use GM object. Values​ note All listed old Greasemonkey functions are deprecated but still supported. GM.info / GM_info GM.setValue / GM_setValue GM.getValue / GM_getValue GM.listValues / GM_listValues GM.deleteValue / GM_deleteValue GM.getResourceUrl / GM_getResourceURL GM.setClipboard / GM_setClipboard GM.xmlHttpRequest / GM_xmlhttpRequest GM.openInTab / GM_openInTab GM.notification unsafeWindow GM_getResourceText GM_addStyle GM_log  Here you can find more information about Greasemonkey API. "},{"title":"Example​","type":1,"pageTitle":"Userscripts","url":"general/userscripts/#example","content":"// ==UserScript== // @name Name as shown to the user when locale is english or unknown // @name:ru Name as shown to the user when locale is russian // @description Description as shown to the user when locale is english or unknown // @description:ru Description as shown to the user when locale is russian // @icon https://myhomepage.com/myuserscript.png // @version 1.0.0.0 // @downloadURL https://dl.myhomepage.org/myuserscript.user.js // @updateURL https://dl.myhomepage.org/myuserscript.meta.js // @homepageURL https://myhomepage.com/myuserscript // @include * // @exclude *://website.com/* // @resource https://myhomepage.com/myuserscript.css // @require https://myhomepage.com/mylibrary.js // @grant property:settings // @grant GM_getValue // @grant GM_setValue // @grant GM_deleteValue // @grant GM_listValues // @grant GM_getResourceText // @grant GM_getResourceURL // @grant GM_addStyle // @grant GM_log // @grant GM_setClipboard // @grant GM_xmlhttpRequest // @grant unsafeWindow // @grant GM_info // @grant GM_openInTab // @grant GM_registerMenuCommand // @run-at document-start // ==/UserScript== !function(){( console.log(&quot;I am loaded!&quot;); )}();  "},{"title":"애드웨어 & 바이러스","type":0,"sectionRef":"#","url":"guides/adware/","content":"","keywords":""},{"title":"무료 바이러스 백신 유틸리티​","type":1,"pageTitle":"애드웨어 & 바이러스","url":"guides/adware/#free-antivirus","content":"여러 가지가 있으며 원하는 것을 사용할 수 있습니다: Dr.Web CureIt! 바이러스 백신 유틸리티로 검사해도 아무것도 발견되지 않지만 컴퓨터가 여전히 의심스럽게 작동하는 경우, 여는 모든 페이지에 광고를 구현할 수 있는 애드웨어가 있는지 테스트해 보세요. "},{"title":"시스템에서 애드웨어를 삭제하는 방법​","type":1,"pageTitle":"애드웨어 & 바이러스","url":"guides/adware/#adware","content":"인터넷에서 이 문제를 해결하기 위한 많은 애플리케이션을 찾을 수 있습니다. 원하는 유틸리티를 사용할 수 있습니다. 하지만 저희는 AdwareCleaner Malwarebytes, Avast One Avast 또는 Adaware를 사용할 것을 강력히 권장합니다. 이러한 애드웨어 스캐너는 사용하기 매우 쉬우며 혼자서 처리할 수 있습니다. AdwareCleaner를 예로 들어 보겠습니다. 애플리케이션을 다운로드하고 성공적으로 설치한 후 다음 단계를 수행합니다: Start the application and click Scan now.  Once the scan has been completed, you will need to send suspicious objects to Quarantine.  When the items are moved to Quarantine, you will be able to Clear the system of unnecessary ballast. In some cases, you may need to Reboot the system after cleaning is complete.  Once the system has been rebooted, cleaning will be completed. If necessary, you can always read the Report on the work done.  If it didn’t help, temporary disable all extensions and some other settings in the browser according to these instructions. If disabling of settings and extensions does not help, try to recreate shortcuts of your browsers. Further on this page we describe the instructions on how to remove some of the most commonly encountered ad extensions. "},{"title":"브라우저에서 설정 및 확장 기능을 비활성화하는 방법​","type":1,"pageTitle":"애드웨어 & 바이러스","url":"guides/adware/#instructions","content":"Below are the instructions on how to disable settings and extensions for the most popular browsers: 구글 크롬 모질라 파이어폭스 오페라 "},{"title":"브라우저 바로가기를 다시 만드는 방법​","type":1,"pageTitle":"애드웨어 & 바이러스","url":"guides/adware/#shortcuts","content":"Very often, malware and adware programs install their homepage in a very simple way — they substitute your browser's desktop shortcut, taskbar and Start menu items. The simplest solution in this case is to manually delete all the shortcuts and recreate them by yourself. "},{"title":"HAR 파일을 수집하는 방법","type":0,"sectionRef":"#","url":"guides/collect-har-file/","content":"","keywords":""},{"title":"Chrome​","type":1,"pageTitle":"HAR 파일을 수집하는 방법","url":"guides/collect-har-file/#chrome","content":"Chrome에서 HAR 파일을 만들려면 다음을 수행합니다. 문제가 발생한 URL로 이동합니다. 아직 문제를 재현하지 마세요. Open Developer Tools: From menu: Menu → More Tools → Developer Tools.Keyboard: Ctrl+Shift+C, or Ctrl+Alt+I, or ⌥+⌘+I for Mac. Click on the Network tab. 네트워크 탭의 왼쪽 상단에 있는 동그란 버튼을 찾아 빨간색 녹화 모드로 설정되어 있는지 확인합니다. 회색인 경우 클릭하여 빨간색으로 바꾸면 녹화가 시작됩니다. Use the Clear button (the circle button with a line through it next to the record button) to clear all previous activity. Select the Preserve log check box on the Network tab. Check the Disable cache check box. Reproduce the steps that create the issue. Save session as a .har file by right-clicking the grid and selecting Save as HAR with content. Forward to AdGuard support (support@adguard.com) with detailed explanation of issue. Supporting screenshots can be helpful, as well. "},{"title":"Edge​","type":1,"pageTitle":"HAR 파일을 수집하는 방법","url":"guides/collect-har-file/#edge","content":"문제가 발생한 URL로 이동합니다. 아직 문제를 재현하지 마세요. Open Developer Tools: From menu: Menu → More Tools → Developer Tools.Keyboard: Ctrl+Shift+C, or Ctrl+Alt+I, or ⌥+⌘+I for Mac. Click on the Network tab. 네트워크 탭의 왼쪽 상단에 있는 동그란 버튼을 찾아 빨간색 녹화 모드로 설정되어 있는지 확인합니다. 회색인 경우 클릭하여 빨간색으로 바꾸면 녹화가 시작됩니다. Use the Clear button (the circle button with a line through it next to the record button) to clear all previous activity. Select the Preserve log check box on the Network tab. Check the Disable cache check box. Reproduce the steps that create the issue. Save session as a .har file by right-clicking the grid and selecting Save as HAR with content. Forward to AdGuard support (support@adguard.com) with detailed explanation of issue. Supporting screenshots can be helpful, as well. "},{"title":"Firefox​","type":1,"pageTitle":"HAR 파일을 수집하는 방법","url":"guides/collect-har-file/#firefox","content":"To create a HAR file in Firefox: 문제가 발생한 URL로 이동합니다. 아직 문제를 재현하지 마세요. Open Developer Tools in Network mode: From menu: Menu → Web Developer → Network.Keyboard: Ctrl+Shift+C, or ⌥+⌘+E (Mac). Note the Play/Pause button at the top left of the Network tab. 버튼이 재생 모드에 있어야 합니다. If any information is currently displayed in the grid, clear by clicking the Delete trash can button next to the play/pause button. Select the Persist Logs check box on the Network tab. Check the Disable cache check box. Reproduce the steps that create the issue. Save session as a .har file by right-clicking the grid and selecting Save all as HAR. Forward to AdGuard support (support@adguard.com) with detailed explanation of issue. Supporting screenshots can be helpful, as well. "},{"title":"Internet Explorer 11​","type":1,"pageTitle":"HAR 파일을 수집하는 방법","url":"guides/collect-har-file/#ie11","content":"To create a HAR file in Internet Explorer 11: 문제가 발생한 URL로 이동합니다. 아직 문제를 재현하지 마세요. Open Developer Tools in Network mode: From Tools cog wheel menu: Developer Tools → Network tab.Keyboard: F12 → Network tab. Note the start profiling session Play button and stop profiling Stop button at top left of Network tab. 녹화 중 재생 버튼은 회색으로 표시되고 중지 버튼은 빨간색으로 표시됩니다. Put in Play mode. Clear any session info appearing in the lower grid using the Clear session button on Network tab. Hover over icons to see names. Clear session button is a three line icon with an x on it. Check the Disable cache check box. Reproduce the steps that create the issue. Save session as a .har file by clicking on the Save disk button (Export as HAR) on Network tab. Forward to AdGuard support (support@adguard.com) with detailed explanation of issue. Supporting screenshots can be helpful, as well. "},{"title":"Safari​","type":1,"pageTitle":"HAR 파일을 수집하는 방법","url":"guides/collect-har-file/#safari","content":"To create a HAR file in Safari: Check the Safari menu bar at the top of the screen for a Develop menu. If not visible, turn it on by going to Safari → Settings → Advanced.Check the checkbox at the bottom next to Show Develop menu in menu bar. 문제가 발생한 URL로 이동합니다. 아직 문제를 재현하지 마세요. Open Network tab in Web Inspector: From menu: Develop → Show Web Inspector → Network.Keyboard: ⌥+⌘+I→Network Check Preserve Log checkbox on left side of the Network tabs, within the Other filter options... menu. Clear current Network items by clicking the Delete Trash icon at the far right of Network tabs. Keyboard: ⌘+K Check the Disable caches check box. Reproduce the steps that create the issue. Save session as a .har file by clicking the Export icon next to the Delete Trash icon. Forward to AdGuard support (support@adguard.com) with detailed explanation of issue. Supporting screenshots can be helpful, too. "},{"title":"Android​","type":1,"pageTitle":"HAR 파일을 수집하는 방법","url":"guides/collect-har-file/#android","content":"To create HAR files, follow these steps: Open AdGuard and go to Settings. Choose Advanced in the menu. Choose Low Level Settings Activate pref.har.capture (you will have to restart the protection). Now reproduce the problem — open the app, perform the necessary actions to make the ad appear. Now turn pref.har.capture off again. Go back and tap Export logs and system info → Save. "},{"title":"Windows​","type":1,"pageTitle":"HAR 파일을 수집하는 방법","url":"guides/collect-har-file/#windows","content":"Open Settings* → General settings → Advanced settings and scroll down. Check the Enable HAR writing box. Reproduce the problem. Go to General settings → Click Export logs → Save. Disable HAR writing by unchecking the corresponding box. "},{"title":"How to create your own ad filters","type":0,"sectionRef":"#","url":"general/ad-filtering/create-own-filters/","content":"","keywords":""},{"title":"Comments​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#comments","content":"Any line that starts with an exclamation mark is a comment. In the list of rules it is displayed in gray color. AdGuard will ignore this line, so you can write anything you want. Comments are usually placed above the rules and used to describe what a rule does. For example: ! This is the comment. Below this line, there is an actual filtering rule. ||example.org^  "},{"title":"Examples​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#examples","content":""},{"title":"Blocking by domain name​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#blocking-by-domain-name","content":" This rule blocks: http://example.org/ad1.gifhttp://subdomain.example.org/ad1.gifhttps://ads.example.org:8000/ This rule does not block: http://ads.example.org.us/ad1.gifhttp://example.com/redirect/http://ads.example.org/ "},{"title":"Blocking exact address​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#blocking-exact-address","content":" This rule blocks: http://example.org/ This rule does not block: https://example.org/banner/img "},{"title":"Basic rule modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rule-modifiers","content":"Filtering rules support numerous modifiers that allow you to fine-tune the rule behavior. Here is an example of a rule with some simple modifiers.  This rule blocks: http://example.org/script.js if this script is loaded from example.org. This rule does not block: https://example.org/script.js if this script is loaded from example.org.https://example.org/banner.png because it is not a script. "},{"title":"Unblocking an address​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#unblocking-an-address","content":" This rule unblocks: http://example.org/banner.png even if there is a blocking rule for this address. Blocking rules with $important modifier can override exceptions. "},{"title":"Unblocking an entire website​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#unblocking-an-entire-website","content":" This rule unblocks It disables all cosmetic rules on example.com.It unblocks all requests sent from this website even if there is are blocking rules matching these requests. "},{"title":"Cosmetic rule​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-rule","content":" Cosmetic rules are based on using a special language named CSS, which every browser understands. Basically, it adds a new CSS style to the website which purpose is to hide particular elements. You can learn more about CSS in general here. AdGuard extends CSS and lets filters developers handle much more complicated cases. However, to use these extended rules, you need to be fluent in regular CSS. Popular CSS selectors Name\tCSS selector\tDescriptionID selector\t#banners\tMatches all elements with id attribute equal to banners. Class selector\t.banners\tMatches all elements with class attribute containing banners. Attribute selector\tdiv[class=&quot;banners&quot;]\tMatches all div elements with class attribute exactly equal to banners. Attribute substring selector\tdiv[class^=&quot;advert1&quot;]\tMatches all div elements which class attribute starts with the advert1 string. Attribute substring selector\tdiv[class$=&quot;banners_ads&quot;]\tMatches all div elements which class attribute ends with the banners_ads string. Attribute substring selector\ta[href^=&quot;http://example.com/&quot;]\tMatches all links that are loaded from http://example.com/ domain. Attribute selector\ta[href=&quot;http://example.com/&quot;]\tMatches all links to exactly the http://example.com/ address.  "},{"title":"Restrictions and limitations​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#restrictions-and-limitations","content":""},{"title":"Trusted filters​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#trusted-filters","content":"Some rules can be used only in trusted filters. This category includes: filter lists created by the AdGuard team,custom filter lists installed as trusted,user rules. "},{"title":"AdGuard Content Blocker​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#adguard-content-blocker","content":"AdGuard Content Blocker is an extension for Samsung and Yandex browsers that can be installed from Google Play. It is not to be confused with the fully functional AdGuard for Android that can only be downloaded from our website. Unfortunately, AdGuard Content Blocker capabilities are limited by what the browsers allow and they only support an old Adblock Plus filters syntax: Basic blocking rules with the following modifiers: $domain, $third-party, content-type modifiers.Basic exception rules with the following modifiers: $document, $elemhide.Basic element hiding rules with no extended CSS support. Because of the limitations above AdGuard Content Blocker will not be mentioned in the compatibility notes. "},{"title":"Basic rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules","content":"The most simple rules are so-called Basic rules. They are used to block requests to specific URLs. Or to unblock it, if there is a special marker &quot;@@&quot; at the beginning of the rule. The basic principle for this type of rules is quite simple: you have to specify the address and additional parameters that limit or expand the rule scope. Sub-requests Basic rules for blocking requests are applied only to sub-requests. That means they will not block the loading of the page unless it is explicitly specified with a $document modifier. Response status Browser detects a blocked request as completed with an error. "},{"title":"Basic rules syntax​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-syntax","content":" rule = [&quot;@@&quot;] pattern [ &quot;$&quot; modifiers ] modifiers = [modifier0, modifier1[, ...[, modifierN]]]  pattern — an address mask. Every request URL is collated to this mask. You can also use special characters in the template, their description is below. Note that AdGuard trims URLs to a length of 4096 characters in order to speed up matching and avoid issues with ridiculously long URLs.@@ — a marker that is used in rules of exception. To turn off filtering for a request, start your rule with this marker.modifiers — parameters that &quot;clarify&quot; the basic rule. Some of them limit the rule scope and some can completely change they way it works. "},{"title":"Special characters​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-special-characters","content":"* — a wildcard character. It is used to represent &quot;any set of characters&quot;. This can also be an empty string or a string of any length.|| — matching the beginning of an address. With this character you do not have to specify a particular protocol and subdomain in address mask. It means, || stands for http://*., https://*., ws://*., wss://*. at once.^ — a separator character mark. Separator character is any character, but a letter, a digit, or one of the following: _ - . %. In this example separator characters are shown in bold: http://example.com/?t=1&amp;t2=t3. The end of the address is also accepted as separator.| — a pointer to the beginning or the end of address. The value depends on the character placement in the mask. For example, a rule swf| corresponds to http://example.com/annoyingflash.swf , but not to http://example.com/swf/index.html. |http://example.org corresponds to http://example.org, but not to http://domain.com?url=http://example.org. Visual representation We also recommend to get acquainted with this article, for better understanding of how such rules should be made. "},{"title":"Regular expressions support​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#regexp-support","content":"If you want even more flexibility in making rules, you can use Regular expressions instead of a default simplified mask with special characters. Performance Rules with regular expressions work more slowly, therefore it is recommended to avoid them or to limit their scope to specific domains. If you want a blocker to determine a regular expression, the pattern has to look like this: pattern = &quot;/&quot; regexp &quot;/&quot;  For example, /banner\\d+/$third-party this rule will apply the regular expression banner\\d+ to all third-party requests. Exclusion rule with regular expression looks like this: @@/banner\\d+/. Compatibility AdGuard Safari and AdGuard for iOS do not fully support regular expressions because of Content Blocking API restrictions (look for &quot;The Regular expression format&quot; section). "},{"title":"Wildcard support for TLD (top-level domains)​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#wildcard-for-tld","content":"Wildcard characters are supported for TLDs of the domains in patterns of cosmetic, HTML filtering and JavaScript rules. For cosmetic rules, e.g. example.*##.banner, multiple domains are matched due to the part .*, i.e. example.com, sub.example.net, example.co.uk, etc. For basic rules the described logic is applicable only for the domains specified in $domain modifier, e.g. ||*/banners/*$image,domain=example.*. Compatibility In AdGuard for Windows, Mac, Android, and AdGuard Browser Extension rules with wildcard .* match any public suffix (or eTLD). But for AdGuard for Safari and iOS the supported list of top-level domains is limited due to Safari limitations. Rules with wildcard for TLD are not supported by AdGuard Content Blocker. "},{"title":"Basic rules examples​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-examples","content":"||example.com/ads/* — a simple rule, which corresponds to addresses like http://example.com/ads/banner.jpg and even http://subdomain.example.com/ads/otherbanner.jpg. ||example.org^$third-party — this rule blocks third-party requests to example.org and its subdomains. @@||example.com$document — general exception rule. It completely disables filtering for example.com and all subdomains. There is a number of modifiers which can be used in exception rules. For more details, please follow the link below. "},{"title":"Basic rules modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-modifiers","content":"Basic modifiersContent-type modifiersException modifiers note The features described in this section are intended for experienced users. They extend capabilities of &quot;Basic rules&quot;, but in order to use them you need to have a basic understanding of the way your browser works. You can change the behavior of a &quot;basic rule&quot; by using additional modifiers. Modifiers should be located in the end of the rule after a $ sign and be separated by commas. Example: ||domain.com^$popup,third-party  "},{"title":"Basic modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-basic-modifiers","content":"$app$denyallow$domain$header$important$match-case$method$popup$third-party$to The following modifiers are the most simple and frequently used. Basically, they just limit the scope of rule application. $app​ This modifier lets you narrow the rule coverage down to a specific application (or a list of applications). This might be not too important on Windows and Mac, but this is very important on mobile devices where some of the filtering rules must be app-specific. Android — use the app package name, e.g. org.example.app.Windows — use the process name, e.g. chrome.exe.Mac — use the bundle ID or the process name, e.g. com.google.Chrome. For Mac, you can find out the bundle ID or the process name of the app by viewing the respective request details in the Filtering log. Examples ||baddomain.com^$app=org.example.app — a rule to block requests that match the specified mask and are sent from the org.example.app Android app.||baddomain.com^$app=org.example.app1|org.example.app2 — the same rule but it works for both org.example.app1 and org.example.app2 apps. If you want the rule not to be applied to certain apps, start the app name with the ~ sign. ||baddomain.com^$app=~org.example.app — a rule to block requests that match the specified mask and are sent from any app save for the org.example.app.||baddomain.com^$app=~org.example.app1|~org.example.app2 — same as above, but now two apps are excluded: org.example.app1 and org.example.app2. Compatibility Only AdGuard for Windows, Mac, Android are technically capable of using rules with $app modifier.On Windows the process name is case-insensitive starting with AdGuard for Windows versions that have CoreLibs v1.12 under the hood. $denyallow​ $denyallow modifier allows to avoid creating additional rules when it is needed to disable a certain rule for specific domains. $denyallow matches only target domains and not referrer domains. Adding this modifier to a rule is equivalent to excluding the domains by the rule's matching pattern or to adding the corresponding exclusion rules. To add multiple domains to one rule, use the | character as a separator. Examples This rule: *$script,domain=a.com|b.com,denyallow=x.com|y.com  is equivalent to this one: /^(?!.*(x.com|y.com)).*$/$script,domain=a.com|b.com  or to the combination of these three: *$script,domain=a.com|b.com @@||x.com$script,domain=a.com|b.com @@||y.com$script,domain=a.com|b.com  Restrictions The rule's matching pattern cannot target any specific domains, e.g. it cannot start with ||.Domains in the modifier value cannot be negated, e.g. $denyallow=~x.com, or have a wildcard TLD, e.g. $denyallow=x.*. The rules which violate these restrictions are considered invalid. Compatibility Rules with $denyallow modifier are not supported by AdGuard for iOS, Safari, and AdGuard Content Blocker. $domain​ $domain limits the rule scope to requests made from the specified domains and their subdomains (as indicated by the Referer HTTP header). Syntax The modifier is a list of one or more expressions separated by the | symbol, each of which is matched against a domain in a particular way depending on its type (see below). domains = [&quot;~&quot;] entry_0 [&quot;|&quot; [&quot;~&quot;] entry_1 [&quot;|&quot; [&quot;~&quot;]entry_2 [&quot;|&quot; ... [&quot;|&quot; [&quot;~&quot;]entry_N]]]] entry_i = ( regular_domain / any_tld_domain / regexp )  regular_domain — a regular domain name (domain.com). Corresponds the specified domain and its subdomains. It is matched lexicographically.any_tld_domain — a domain name ending with a wildcard character as a public suffix, e.g. for example.* it is co.uk in example.co.uk. Corresponds to the specified domain and its subdomains with any public suffix. It is matched lexicographically.regexp — a regular expression, starts and ends with /. The pattern works the same way as in the basic URL rules, but the characters /, $, and | must be escaped with \\. info Rules with $domain modifier as regular_domain or any_tld_domain are supported by all AdGuard products. Examples Just $domain: ||baddomain.com^$domain=example.org blocks requests that match the specified mask, and are sent from domain example.org or its subdomains.||baddomain.com^$domain=example.org|example.com — the same rule, but it works for both example.org and example.com. If you want the rule not to be applied to certain domains, start a domain name with ~ sign. $domain and negation ~: ||baddomain.com^$domain=example.org blocks requests that match the specified mask and are sent from the example.org domain or its subdomains.||baddomain.com^$domain=example.org|example.com — the same rule, but it works for both example.org and example.com.||baddomain.com^$domain=~example.org blocks requests matching the pattern sent from any domain except example.org and its subdomains.||baddomain.com^$domain=example.org|~foo.example.org blocks requests sent from example.org and its subdomains, except the subdomain foo.example.org.||baddomain.com^$domain=/(^\\|.+\\.)example\\.(com\\|org)\\$/ blocks requests sent from example.org and example.com domains and all their subdomains.||baddomain.com^$domain=~a.com|~b.*|~/(^\\|.+\\.)c\\.(com\\|org)\\$/ blocks requests sent from any domains, except a.com, b with any public suffix (b.com, b.co.uk, etc.), c.com, c.org, and their subdomains. $domain modifier matching target domain: In some cases the $domain modifier can match not only the referrer domain, but also the target domain. This happens when all of the following is true: The request has document content type.The rule pattern does not match any particular domains.The rule pattern does not contain regular expressions.The $domain modifier contains only excluded domains, e.g. $domain=~example.org|~example.com. The following predicate should be satisfied to perform a target domain matching: 1 AND ((2 AND 3) OR 4)  That is, if the modifier $domain contains only excluded domains, then the rule does not need to meet the second and third conditions to match the target domain against the modifier $domain. If some of the conditions above are not met but the rule contains $cookie or $csp modifier, the target domain will still be matched. If the referrer matches a rule with $domain that explicitly excludes the referrer domain, then the rule will not be applied even if the target domain also matches the rule. This affects rules with $cookie and $csp modifiers, too. Examples *$cookie,domain=example.org|example.com will block cookies for all requests to and from example.org and example.com.*$document,domain=example.org|example.com will block all requests to and from example.org and example.com. In the following examples it is implied that requests are sent from http://example.org/page (the referrer) and the target URL is http://targetdomain.com/page. page$domain=example.org will be matched, as it matches the referrer domain.page$domain=targetdomain.com will be matched, as it matches the target domain and satisfies all requirements mentioned above.||*page$domain=targetdomain.com will not be matched, as the pattern ||*page may match specific domains, e.g. example.page.||*page$domain=targetdomain.com,cookie will be matched because the rule contains $cookie modifier despite the pattern ||*page may match specific domains./banner\\d+/$domain=targetdomain.com will not be matched as it contains a regular expression.page$domain=targetdomain.com|~example.org will not be matched because the referrer domain is explicitly excluded. Limitations Safari does not support the simultaneous use of allowed and disallowed domains, so rules like ||baddomain.com^$domain=example.org|~foo.example.org will not work in AdGuard for iOS and AdGuard for Safari. Compatibility Rules with regular expressions in the $domain modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs v1.11 or later. In AdGuard for Windows, Mac and Android running CoreLibs v1.12 or later the $domain modifier can be alternatively spelled as $from. $header​ The $header modifier allows matching the HTTP response having a specific header with (optionally) a specific value. Syntax $header &quot;=&quot; h_name [&quot;:&quot; h_value] h_value = string / regexp  where: h_name — required, an HTTP header name. It is matched case-insesitively.h_value — optional, an HTTP header value matching expression, it may be one of the following: string — a sequence of characters. It is matched against the header value lexicographically;regexp — a regular expression, starts and ends with /. The pattern works the same way as in the basic URL rules, but the characters /, $ and , must be escaped with \\. The modifier &quot;:&quot; h_value part may be omitted. In that case, the modifier matches the header name only. Examples ||example.com^$header=set-cookie:foo blocks requests whose responses have the Set-Cookie header with the value matching foo literally.||example.com^$header=set-cookie blocks requests whose responses have the Set-Cookie header with any value.@@||example.com^$header=set-cookie:/foo\\, bar\\$/ unblocks requests whose responses have the Set-Cookie header with value matching the foo, bar$ regular expression.@@||example.com^$header=set-cookie unblocks requests whose responses have a Set-Cookie header with any value. Compatibility Rules with the $header modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.11 or later. $important​ The $important modifier applied to a rule increases its priority over any other rule without $important modifier. Even over basic exception rules. Go to rules priorities for more details. Examples ! blocking rule will block all requests despite of the exception rule ||example.org^$important @@||example.org^  ! if the exception rule also has `$important` modifier, it will prevail and requests won't be blocked ||example.org^$important @@||example.org^$important  $match-case​ This modifier defines a rule which applies only to addresses that match the case. Default rules are case-insensitive. Examples */BannerAd.gif$match-case — this rule will block http://example.com/BannerAd.gif, but not http://example.com/bannerad.gif. $method​ This modifier limits the rule scope to requests that use the specified set of HTTP methods. Negated methods are allowed. The methods must be specified in all lowercase characters, but are matched case-insensitively. To add multiple domains to one rule, use the | character as a separator. Examples ||evil.com^$method=get|head blocks only GET and HEAD requests to evil.com.||evil.com^$method=~post|~put blocks any requests to evil.com except POST or PUT.@@||evil.com$method=get unblocks only GET requests to evil.com.@@||evil.com$method=~post unblocks any requests to evil.com except POST. note Rules with mixed value restriction are considered invalid. So, for example, the rule ||evil.com^$method=get|~head will be rejected. Compatibility Rules with the $method are supported by AdGuard for Windows, Mac, Android, running CoreLibs v1.12 or later, and AdGuard Browser extension for Chrome, Firefox, Edge, running TSUrlFilter v2.1.1 or later. $popup​ AdGuard will try to close the browser tab with any address that matches a blocking rule with this modifier. Please note that not all the tabs can be closed. Examples ||domain.com^$popup — if you try to go to http://domain.com/ from any page in the browser, a new tab in which specified site has to be opened will be closed by this rule. Compatibility $popup modifier works best in AdGuard Browser Extension.In AdGuard for Safari and iOS, $popup rules simply block the page right away.In AdGuard for Windows, Mac, and Android, $popup modifier may not detect a popup in some cases and it won't be blocked. $popup modifier applies the document content type with a special flag which is passed to a blocking page. Blocking page itself can do some checks and close the window if it is really a popup. Otherwise, page should be loaded. It can be combined with other request type modifiers, such as $third-party and $important. $third-party​ A restriction of third-party and own requests. A third-party request is a request from a different domain. For example, a request to example.org from domain.com is a third-party request. note To be considered as such, a third-party request should meet one of the following conditions: Its referrer is not a subdomain of the target domain or vice versa. For example, a request to subdomain.example.org from example.org is not a third-party request.Its Sec-Fetch-Site header is set to cross-site. If there is a $third-party modifier, the rule is only applied to third-party requests. Examples $third-party: ||domain.com^$third-party — this rule applies to all domains, except domain.com and its subdomains. An example of a third-party request: http://example.org/banner.jpg. If there is a $~third-party modifier, the rule is only applied to the requests that are not from third parties. Which means, they have to be sent from the same domain. $~third-party: ||domain.com$~third-party — this rule is applied to domain.com, but not to the other domains. Example of a request that is not a third-party request: http://domain.com/icon.ico. $to​ $to limits the rule scope to requests made to the specified domains and their subdomains. To add multiple domains to one rule, use the | character as a separator. Examples /ads$to=evil.com|evil.org blocks any request to evil.com or evil.org and their subdomains with a path matching /ads./ads$to=~not.evil.com|evil.com blocks any request to evil.com and its subdomains, with a path matching /ads, except requests to not.evil.com and its subdomains./ads$to=~good.com|~good.org blocks any request with a path matching /ads, except requests to good.com or good.org and their subdomains. Limitations $denyallow can not be used together with $to. It can be expressed with inverted $to: $denyallow=a.com|b.com is equivalent to $to=~a.com|~b.com. Compatibility Rules with the $to modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs v1.12 or later, and AdGuard Browser Extension, running TSUrlFilter v2.1.3 or later. "},{"title":"Content-type modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#content-type-modifiers","content":"$document$font$image$media$object$other$ping$script$stylesheet$subdocument$websocket$xmlhttprequest$object-subrequest (removed)$webrtc (removed) There is a set of modifiers, which can be used to limit the rule's application area to certain type of content. These modifiers can also be combined to cover, for example, both images and scripts. Compatibility There is a big difference in how AdGuard determines the content type on different platforms. For AdGuard Browser Extension, content type for every request is provided by the browser. AdGuard for Windows, Mac, Android use following method: first we try to determine the type of the request by the Sec-Fetch-Dest request header or by the filename extension. If the request is not blocked at this stage, the type will be determined using the Content-Type header at the beginning of the server response. Examples of content-type modifiers ||example.org^$image — corresponds to all images from example.org.||example.org^$script,stylesheet — corresponds to all the scripts and styles from example.org.||example.org^$~image,~script,~stylesheet — corresponds to all requests to example.org except for the images, scripts and styles. $document​ The rule corresponds to the main frame document requests, i.e. HTML documents that are loaded in the browser tab. It does not match iframes, there is a $subdocument modifier for these. By default, AdGuard does not block the requests that are loaded in the browser tab (e.g. &quot;main frame bypass&quot;). The idea is not to prevent pages from loading as the user clearly indicated that they want this page to be loaded. However, if the $document modifier is specified explicitly, AdGuard does not use that logic and prevents the page load. Instead, it responds with a &quot;blocking page&quot;. If this modifier is used with an exclusion rule (@@), it completely disables blocking on corresponding pages. It is equivalent to using $elemhide, $content, $urlblock, $jsinject, $extension modifiers simultaneously. Examples @@||example.com^$document completely disables filtering on all pages at example.com and all subdomains. ||example.com^$document blocks HTML document request to example.com with a blocking page. ||example.com^$document,redirect=noopframe redirects HTML document request to example.com to an empty html document. ||example.com^$document,removeparam=test removes test query parameter from HTML document request to example.com. ||example.com^$document,replace=/test1/test2/ replaces test1 with test2 in HTML document request to example.com. $font​ The rule corresponds to requests for fonts, e.g. .woff filename extension. $image​ The rule corresponds to images requests. $media​ The rule corresponds to requests for media files — music and video, e.g. .mp4 files. $object​ The rule corresponds to browser plugins resources, e.g. Java or Flash. $other​ The rule applies to requests for which the type has not been determined or does not match the types listed above. $ping​ The rule corresponds to requests caused by either navigator.sendBeacon() or the ping attribute on links. Compatibility AdGuard for Windows, Mac, and Android often cannot accurately detect navigator.sendBeacon(). Using $ping is not recommended in the filter lists that are supposed to be used by CoreLibs-based AdGuard products. $script​ The rule corresponds to script requests, e.g. javascript, vbscript. $stylesheet​ The rule corresponds to CSS files requests. $subdocument​ The rule corresponds to requests for built-in pages — HTML tags frame and iframe. Examples ||example.com^$subdocument blocks built-in page requests (frame and iframe) to example.com and all its subdomains anywhere.||example.com^$subdocument,domain=domain.com blocks built-in page requests (frame и iframe) to example.com (and its subdomains) from domain.com and all its subdomains. $websocket​ The rule applies only to WebSocket connections. Compatibility $websocket modifier is supported in all AdGuard products except AdGuard Content Blocker. As for AdGuard for Safari and AdGuard for iOS, it's supported on devices with macOS Monterey (version 12) and iOS 16 or higher. $xmlhttprequest​ The rule applies only to ajax requests (requests sent via javascript object XMLHttpRequest). Compatibility AdGuard for Windows, Mac, Android when filtering older browsers cannot accurately detect this type and sometimes detects it as $other or $script. They can only reliably detect this content type when filtering modern browsers that support Fetch metadata request headers. $object-subrequest (removed)​ Removal notice $object-subrequest modifier is removed and is no longer supported. Rules with it are considered as invalid. The rule corresponds to requests by browser plugins (it is usually Flash). $webrtc (removed)​ Removal notice This modifier is removed and is no longer supported. Rules with it are considered as invalid. If you need to suppress WebRTC, consider using the nowebrtc scriptlet. The rule applies only to WebRTC connections. Examples ||example.com^$webrtc,domain=example.org blocks webRTC connections to example.com for example.org.@@*$webrtc,domain=example.org disables the RTC wrapper for example.org. "},{"title":"Exception rules modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#exception-modifiers","content":"$content$elemhide$extension$jsinject$stealth$urlblockGeneric rules $genericblock$generichide$specifichide Exception rules disable the other basic rules for the addresses to which they correspond. They begin with a @@ mark. All the basic modifiers listed above can be applied to them and they also have a few special modifiers. Visual representation We recommend to get acquainted with this article, for better understanding of how exception rules should be made. $content​ Disables HTML filtering, $hls, $replace, and $jsonprune rules on the pages that match the rule. Examples @@||example.com^$content disables all content modifying rules on pages at example.com and all its subdomains. $elemhide​ Disables any cosmetic rules on the pages matching the rule. Examples @@||example.com^$elemhide disables all cosmetic rules on pages at example.com and all subdomains. $extension​ Disables specific userscripts or all userscripts for a given domain. Syntax $extension[=&quot;userscript_name1&quot;[|&quot;userscript_name2&quot;[|&quot;userscript_name3&quot;[...]]]]  userscript_name(i) stands for a specific userscript name to be disabled by the modifier. The modifier can contain any number of userscript names or not contain them at all. In the latter case the modifier disables all the userscripts. Userscript names usually contain spaces or other special characters, which is why you should enclose the name in quotes. Both single (') and double (&quot;) ASCII quotes are supported. Multiple userscript names should be separated with a pipe (|). However, if a userscript name is a single word without any special characters, it can be used without quotes. You can also exclude a userscript by adding a ~ character before it. In this case, the userscript will not be disabled by the modifier. $extension=~&quot;userscript name&quot;  NOTE: When excluding a userscript, you must place ~ outside the quotes. If a userscript's name includes quotes (&quot;), commas (,), or pipes (|), they must be escaped with a backslash (\\). $extension=&quot;userscript name\\, with \\&quot;quote\\&quot;&quot;  Examples @@||example.com^$extension=&quot;AdGuard Assistant&quot; disables the AdGuard Assistant userscript on example.com website.@@||example.com^$extension=MyUserscript disables the MyUserscript userscript on example.com website.@@||example.com^$extension='AdGuard Assistant'|'Popup Blocker' disables both AdGuard Assistant and Popup Blocker userscripts on example.com website.@@||example.com^$extension=~&quot;AdGuard Assistant&quot; disables all user scripts on example.com website, except AdGuard Assistant.@@||example.com^$extension=~&quot;AdGuard Assistant&quot;|~&quot;Popup Blocker&quot; disables all user scripts on example.com website, except AdGuard Assistant and Popup Blocker.@@||example.com^$extension no userscript will work on webpages on example.com.@@||example.com^$extension=&quot;AdGuard \\&quot;Assistant\\&quot;&quot; disables the AdGuard &quot;Assistant&quot; userscript on example.com website. Compatibility Only AdGuard for Windows, Mac, Android are technically capable of using rules with $extension modifier.$extension modifier with specific userscript name is supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.13 or later. $jsinject​ Forbids adding of javascript code to the page. You can read about scriptlets and javascript rules further. Examples @@||example.com^$jsinject disables javascript on pages at example.com and all subdomains. $stealth​ Disables the Stealth Mode module for all corresponding pages and requests. Syntax $stealth [= opt1 [| opt2 [| opt3 [...]]]]  opt(i) stand for certain Stealth Mode options disabled by the modifier. The modifier can contain any number of options (see below) or not contain them at all. In the latter case the modifier disables all the Stealth Mode features. The list of the available modifier options: searchqueries disables Hide your search queries optiondonottrack disables Send Do-Not-Track header option3p-cookie disables Self-destructing third-party cookies option1p-cookie disables Self-destructing first-party cookies option3p-cache disables Disable cache for third-party requests option3p-auth disables Block third-party Authorization header optionwebrtc disables Block WebRTC optionpush disables Block Push API optionlocation disables Block Location API optionflash disables Block Flash optionjava disables Block Java optionreferrer disables Hide Referrer from third parties optionuseragent disables Hide your User-Agent optionip disables Hide your IP address optionxclientdata disables Remove X-Client-Data header from HTTP requests optiondpi disables Protect from DPI option Examples @@||example.com^$stealth disables Stealth Mode for example.com (and subdomains) requests, except for blocking cookies and hiding tracking parameters (see below).@@||domain.com^$script,stealth,domain=example.com disables Stealth Mode only for script requests to domain.com (and its subdomains) on example.com and all its subdomains.@@||example.com^$stealth=3p-cookie|dpi disables blocking third-party cookies and DPI fooling measures for example.com. note Blocking cookies and removing tracking parameters is achieved by using rules with $cookie and $removeparam modifiers. Exception rules with only $stealth modifier will not do those things. If you want to completely disable all Stealth Mode features for a given domain, you need to include all three modifiers: @@||example.org^$stealth,removeparam,cookie Compatibility Stealth Mode is available in AdGuard for Windows, Mac, and Android, and AdGuard Browser Extension. All other products will ignore the rules with $stealth modifier.$stealth modifier with specific options is supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.10 or later. $urlblock​ Disables blocking of all requests sent from the pages matching the rule and disables all $cookie rules. Examples @@||example.com^$urlblock — any requests sent from the pages at example.com and all subdomains are not going to be blocked. Generic rules​ Before we can proceed to the next modifiers, we have to make a definition of generic rules. The rule is generic if it is not limited to specific domains. Wildcard character * is supported as well. For example, these rules are generic: ###banner *###banner #@#.adsblock *#@#.adsblock ~domain.com###banner ||domain.com^ ||domain.com^$domain=~example.com  And these are not: domain.com###banner ||domain.com^$domain=example.com  $genericblock​ Disables generic basic rules on pages that correspond to exception rule. Examples @@||example.com^$genericblock disables generic basic rules on any pages at example.com and all subdomains. $generichide​ Disables all generic cosmetic rules on pages that correspond to the exception rule. Examples @@||example.com^$generichide disables generic cosmetic rules on any pages at example.com and its subdomains. specifichide​ Disables all specific element hiding and CSS rules, but not general ones. Has an opposite effect to $generichide. Examples @@||example.org^$specifichide disables example.org##.banner but not ##.banner. note All cosmetic rules — not just specific ones — can be disabled by $elemhide modifier. Compatibility Rules with $specifichide modifier are not supported by AdGuard for iOS and Safari. "},{"title":"Advanced capabilities​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#advanced-capabilities","content":"$all$badfilter$cookie$csp$hls$inline-font$inline-script$jsonprune$network$permissions$redirect$redirect-rule$referrerpolicy$removeheader$removeparam$replacenoop$empty (deprecated)$mp4 (deprecated) These modifiers are able to completely change the behaviour of basic rules. $all​ $all modifier is made of all content-types modifiers and $popup. E.g. rule ||example.org^$all is converting into rule: ||example.org^$document,subdocument,font,image,media,object,other,ping,script,stylesheet,websocket,xmlhttprequest,popup  This modifier cannot be used as an exception with the @@ mark. $badfilter​ The rules with the $badfilter modifier disable other basic rules to which they refer. It means that the text of the disabled rule should match the text of the $badfilter rule (without the $badfilter modifier). Examples ||example.com$badfilter disables ||example.com||example.com$image,badfilter disables ||example.com$image@@||example.com$badfilter disables @@||example.com||example.com$domain=domain.com,badfilter disables ||example.com$domain=domain.com Rules with $badfilter modifier can disable other basic rules for specific domains if they fulfill the following conditions: The rule has a $domain modifier.The rule does not have a negated domain ~ in $domain modifier value. In that case, the $badfilter rule will disable the corresponding rule for domains specified in both the $badfilter and basic rules. Please note that wildcard-TLD logic works here as well. Examples /some$domain=example.com|example.org|example.io is disabled for example.com by /some$domain=example.com,badfilter/some$domain=example.com|example.org|example.io is disabled for example.com and example.org by /some$domain=example.com|example.org,badfilter/some$domain=example.com|example.org and /some$domain=example.io are disabled completely by /some$domain=example.com|example.org|example.io,badfilter/some$domain=example.com|example.org|example.io is disabled completely by /some$domain=example.*,badfilter/some$domain=example.* is disabled for example.com and example.org by /some$domain=example.com|example.org,badfilter/some$domain=example.com|example.org|example.io is NOT disabled for example.com by /some$domain=example.com|~example.org,badfilter because the value of $domain modifier contains a negated domain Compatibility Rules with $badfilter modifier are not supported by AdGuard Content Blocker. $cookie​ The $cookie modifier completely changes rule behavior. Instead of blocking a request, this modifier makes AdGuard suppress or modify the Cookie and Set-Cookie headers. Multiple rules matching a single request In case if multiple $cookie rules match a single request, we will apply each of them one by one. Syntax $cookie [= name[; maxAge = seconds [; sameSite = strategy ]]]  where: name — optional, string or regular expression to match cookie name.seconds — number of seconds for current time to offset the expiration date of cookie.strategy — string for Same-Site strategy to make cookie use. For example, ||example.org^$cookie=NAME;maxAge=3600;sameSite=lax  every time AdGuard encounters a cookie called NAME in a request to example.org, it will do the following: Set its expiration date to current time plus 3600 secondsMakes the cookie use Same-Site &quot;lax&quot; strategy. Escaping special characters If regular expression name is used for matching, two characters must be escaped: comma , and dollar sign $. Use backslash \\ escape each of them. For example, escaped comma looks like this: \\,. Examples ||example.org^$cookie blocks all cookies set by example.org; this is an equivalent to setting maxAge=0$cookie=__cfduid blocks CloudFlare cookie everywhere$cookie=/__utm[a-z]/ blocks Google Analytics cookies everywhere||facebook.com^$third-party,cookie=c_user prevents Facebook from tracking you even if you are logged in There are two methods to deactivate $cookie rules: the primary method involves using an exception marked with @@ — @@||example.org^$cookie. The alternative method employs a $urlblock exception (also included under the $document exception alias — $elemhide,jsinject,content,urlblock,extension). Here's how it works: @@||example.org^$cookie unblocks all cookies set by example.org@@||example.org^$urlblock unblocks all cookies set by example.org and disables blocking of all requests sent from example.org@@||example.org^$cookie=concept unblocks a single cookie named concept@@||example.org^$cookie=/^_ga_/ unblocks every cookie that matches the regular expression Limitations $cookie rules support a limited list of modifiers: $domain, $~domain, $important, $third-party, and $~third-party. Compatibility Rules with $cookie modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. $csp​ This modifier completely changes the rule behavior. If it is applied to a rule, the rule will not block the matching request. Response headers will be modified instead. info In order to use this type of rules, it is required to have the basic understanding of the Content Security Policy security layer. For the requests matching a $csp rule, we will strengthen response security policy by enhancing the content security policy, similar to the content security policy of the $csp modifier contents. $csp rules are applied independently from any other rule type. Other basic rules have no influence on it save for document-level exceptions (see the examples section below). Multiple rules matching a single request In case if multiple $csp rules match a single request, we will apply each of them. Syntax $csp value syntax is similar to the Content Security Policy header syntax. $csp value can be empty in the case of exception rules. See examples section below. Examples ||example.org^$csp=frame-src 'none' blocks all frames on example.org and its subdomains.@@||example.org/page/*$csp=frame-src 'none' disables all rules with the $csp modifier exactly matching frame-src 'none' on all the pages matching the rule pattern. For instance, the rule above.@@||example.org/page/*$csp disables all the $csp rules on all the pages matching the rule pattern.||example.org^$csp=script-src 'self' 'unsafe-eval' http: https: disables inline scripts on all the pages matching the rule pattern.@@||example.org^$document or @@||example.org^$urlblock disables all the $csp rules on all the pages matching the rule pattern. Limitations There are a few characters forbidden in the $csp value: ,, $.$csp rules support limited list of modifiers: $domain, $important, $subdocument.Rules with report-* directives are considered invalid. Compatibility Rules with $csp modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. $hls​ $hls rules modify the response of a matching request. They are intended as a convenient way to remove segments from HLS playlists (RFC 8216). note The word &quot;segment&quot; in this document means either a &quot;Media Segment&quot; or a &quot;playlist&quot; as part of a &quot;Master Playlist&quot;: $hls rules do not distinguish between a &quot;Master Playlist&quot; and a &quot;Media Playlist&quot;. Syntax ||example.org^$hls=urlpattern removes segments whose URL matches the URL pattern urlpattern. The pattern works just like the one in basic URL rules, however, the characters /, $ and , must be escaped with \\ inside urlpattern.||example.org^$hls=/regexp/options removes segments where the URL or one of the tags (for certain options, if present) is matched by the regular expression regexp. Available options are: t — instead of testing the segment's URL, test each of the segment's tags against the regular expression. A segment with a matching tag is removed;i — make the regular expression case-insensitive. The characters /, $ and , must be escaped with \\ inside regexp. Exceptions Basic URL exceptions shall not disable rules with $hls modifier. They can be disabled as described below: @@||example.org^$hls disables all $hls rules for responses from URLs matching ||example.org^.@@||example.org^$hls=text disables all $hls rules with the value of the $hls modifier equal to text for responses from URLs matching ||example.org^. tip $hls rules can also be disabled by $document, $content and $urlblock exception rules. Restrictions $hls rules are only allowed in trusted filters$hls rules are only compatible with the modifiers $domain, $third-party, $app, $important, $match-case, and $xmlhttprequest$hls rules only apply to HLS playlists, which are UTF-8 encoded text starting with the line #EXTM3U. Any other response will not be modified by these rules$hls rules do not apply if the size of the original response is more than 3 MB note When multiple $hls rules match the same request, their effect is cumulative. Examples ||example.org^$hls=\\/videoplayback^?*&amp;source=dclk_video_ads removes all segments with the matching URL.||example.org^$hls=/\\/videoplayback\\/?\\?.*\\&amp;source=dclk_video_ads/i achieves more or less the same with a regular expression instead of a URL pattern.||example.org^$hls=/#UPLYNK-SEGMENT:.*\\,ad/t removes all segments which have the matching tag. Anatomy of an HLS playlist A quick summary of the specification: An HLS playlist is a collection of text lines.A line may be empty, a comment (starts with #), a tag (also starts with #, can only be recognized by name) or a URL.A URL line is called a &quot;segment&quot;.Tags may apply to a single segment, i.e. the first URL line after the tag, to all segments following the tag and until the tag with the same name, or to the whole playlist. Some points specific to the operation of $hls rules: When a segment is removed, all of the tags that apply only to that segment are also removed.When there is a tag that applies to multiple segments, and all of those segments are removed, the tag is also removed.Since there is no way to recognize different kinds of tags by syntax, we recognize all of the tags specified by the RFC, plus some non-standard tags that we have seen in the field. Any lines starting with # and not recognized as a tag are passed through without modification, and are not matched against the rules.We do not match tags that apply to the whole playlist, and $hls rules can not be used to remove them, since $hls rules are intended for removing segments. If you know what you are doing, you can use $replace rules to remove or rewrite just a single tag from the playlist. An example of a transformation done by the rules: Original response #EXTM3U #EXT-X-TARGETDURATION:10 #EXTINF,5 preroll.ts #UPLYNK-SEGMENT:abc123,ad #UPLYNK-KEY:aabb1122 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #UPLYNK-SEGMENT:abc123,segment #UPLYNK-KEY:ccdd2233 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #EXT-X-ENDLIST  Applied rules ||example.org^$hls=preroll ||example.org^$hls=/#UPLYNK-SEGMENT:.*\\,ad/t  Modified response #EXTM3U #EXT-X-TARGETDURATION:10 #UPLYNK-SEGMENT:abc123,segment #UPLYNK-KEY:ccdd2233 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #EXT-X-ENDLIST  Restrictions $hls rules are only allowed in trusted filters.$hls rules are compatible with the modifiers $domain, $third-party, $app, $important, $match-case, and $xmlhttprequest only.$hls rules only apply to HLS playlists, which are UTF-8 encoded text starting with the line #EXTM3U. Any other response will not be modified by these rules.$hls rules do not apply if the size of the original response is more than 3 MB. Compatibility Rules with the $hls modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.10 or later. $inline-script​ $inline-script modifier is a sort of a shortcut for $csp modifier with specific value. E.g. the rule ||example.org^$inline-script is converting into such a rule: ||example.org^$csp=script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:  $inline-font​ $inline-font modifier is a sort of a shortcut for $csp modifier with specific value. E.g. the rule ||example.org^$inline-font is converting into such a rule: ||example.org^$csp=font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:  $jsonprune​ $jsonprune rules modify the response to a matching request by removing JSON items that match a modified JSONPath expression. They do not modify responses which are not valid JSON documents. In AdGuard for Windows, Mac, and Android running CoreLibs v1.11 or later, $jsonprune also supports modifying JSONP (padded JSON) documents. Syntax ||example.org^$jsonprune=expression removes items that match the modified JSONPath expression expression from the response. Due to the way rule parsing works, the characters $ and , must be escaped with \\ inside expression. The modified JSONPath syntax has the following differences from the original: Script expressions are not supported.The supported filter expressions are: ?(has &lt;key&gt;) — true if the current object has the specified key.?(key-eq &lt;key&gt; &lt;value&gt;) — true if the current object has the specified key, and its value is equal to the specified value.?(key-substr &lt;key&gt; &lt;value&gt;) — true if the specified value is a substring of the value of the specified key of the current object. Whitespace outside of double- or single-quoted strings has no meaning.Both double- and single-quoted strings can be used.Expressions ending with .. are not supported.Multiple array slices can be specified in square brackets. There are various online tools that make working with JSONPath expressions more convenient: https://www.site24x7.com/tools/jsonpath-finder-validator.html https://jsonpathfinder.com/ https://jsonpath.com/ Keep in mind, though, that all JSONPath implementations have unique features/quirks and are subtly incompatible with each other. Exceptions Basic URL exceptions shall not disable rules with $jsonprune modifier. They can be disabled as described below: @@||example.org^$jsonprune disables all $jsonprune rules for responses from URLs matching ||example.org^.@@||example.org^$jsonprune=text disable all $jsonprune rules with the value of the $jsonprune modifier equal to text for responses from URLs matching ||example.org^. $jsonprune rules can also be disabled by $document, $content and $urlblock exception rules. Restrictions $jsonprune rules are only compatible with $domain, $third-party, $app, $important, $match-case, and $xmlhttprequest modifiers.$jsonprune rules do not apply if the size of the original response is more than 3 MB. note When multiple $jsonprune rules match the same request, they are sorted in lexicographical order, the first rule is applied to the original response, and each of the remaining rules is applied to the result of applying the previous one. Examples ||example.org^$jsonprune=\\$..[one\\, &quot;two three&quot;] removes all occurrences of the keys &quot;one&quot; and &quot;two three&quot; anywhere in the JSON document. Input { &quot;one&quot;: 1, &quot;two&quot;: { &quot;two three&quot;: 23, &quot;four five&quot;: 45 } }  Output { &quot;two&quot;: { &quot;four five&quot;: 45 } }  ||example.org^$jsonprune=\\$.a[?(has ad_origin)] removes all children of a that have an ad_origin key. Input { &quot;a&quot;: [ { &quot;ad_origin&quot;: &quot;https://example.org&quot;, &quot;b&quot;: 42 }, { &quot;b&quot;: 1234 } ] }  Output { &quot;a&quot;: [ { &quot;b&quot;: 1234 } ] }  ||example.org^$jsonprune=\\$.*.*[?(key-eq 'Some key' 'Some value')] removes all items that are at nesting level 3 and have a property &quot;Some key&quot; equal to &quot;Some value&quot;. Input { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: {&quot;Some key&quot;: &quot;Some value&quot;}, &quot;d&quot;: {&quot;Some key&quot;: &quot;Other value&quot;}}}, &quot;e&quot;: {&quot;f&quot;: [{&quot;Some key&quot;: &quot;Some value&quot;}, {&quot;Some key&quot;: &quot;Other value&quot;}]} }  Output { &quot;a&quot;: {&quot;b&quot;: {&quot;d&quot;: {&quot;Some key&quot;: &quot;Other value&quot;}}}, &quot;e&quot;: {&quot;f&quot;: [{&quot;Some key&quot;: &quot;Other value&quot;}]} }  Nested JSONPath expressions In AdGuard for Windows, Mac and Android running CoreLibs v1.11 or later, JSONPath expressions may be used as keys in filter expressions. ||example.org^$jsonprune=\\$.elems[?(has &quot;\\$.a.b.c&quot;)] removes all children of elems which have a property selectable by the JSONPath expression $.a.b.c. Input { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}}, &quot;k&quot;: &quot;v&quot; }, { &quot;d&quot;: {&quot;e&quot;: {&quot;f&quot;: 123}}, &quot;k1&quot;: &quot;v1&quot; } ] }  Output { &quot;elems&quot;: [ { &quot;d&quot;: {&quot;e&quot;: {&quot;f&quot;: 123}}, &quot;k1&quot;: &quot;v1&quot; } ] }  ||example.org^$jsonprune=\\$.elems[?(key-eq &quot;\\$.a.b.c&quot; &quot;abc&quot;)] removes all children of elems which have a property selectable by the JSONPath expression $.a.b.c with a value equal to &quot;abc&quot;. Input { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}}, }, { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: &quot;abc&quot;}} } ] }  Output { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}} } ] }  Restrictions $jsonprune rules are only compatible with these specific modifiers: $domain, $third-party, $app, $important, $match-case, and $xmlhttprequest.$jsonprune rules do not apply if the size of the original response is more than 3 MB. Compatibility Rules with the $jsonprune modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.10 or later. $network​ This is basically a Firewall-like rule allowing to fully block or unblock access to a specified remote address. $network rules match IP addresses only! You cannot use them to block or unblock access to a domain.To match an IPv6 address, you have to use the collapsed syntax, e.g. use [2001:4860:4860::8888]$network instead of [2001:4860:4860:0:0:0:0:8888]$network.An allowlist $network rule makes AdGuard bypass data to the matching endpoint, e.g. there will be no further filtering at all.If the IP part starts and ends with / character, it is treated as a regular expression. We recommend to get acquainted with this article for better understanding of regular expressions. Restrictions The $network modifier can only be used in rules together with the $app and $important modifiers, and not with any other modifiers. Examples 174.129.166.49:3478^$network blocks access to 174.129.166.49:3478 (but not to 174.129.166.49:34788).[2001:4860:4860::8888]:443^$network blocks access to [2001:4860:4860::8888]:443.174.129.166.49$network blocks access to 174.129.166.49:*.@@174.129.166.49$network makes AdGuard bypass data to the endpoint. No other rules will be applied./.+:3[0-9]{4}/$network blocks access to any port from 30000 to 39999./8.8.8.(:?8|4)/$network blocks access to both 8.8.8.8 and 8.8.8.4. Compatibility Only AdGuard for Windows, Mac, and Android are technically capable of using rules with $network modifier. $permissions​ This modifier completely changes the rule behavior. If it is applied to a rule, the rule will not block the matching request. Response headers will be modified instead. info In order to use this type of rules, it is required to have a basic understanding of the Permissions Policy security layer. For the requests matching a $permissions rule, AdGuard strengthens response's permissions policy by adding an additional permission policy equal to the $permissions modifier contents. $permissions rules are applied independently from any other rule type. Other basic rules have no influence on it save for document-level exceptions (see the examples section). Multiple rules matching a single request. In case if multiple $permissions rules match a single request, AdGuard will apply each of them. Syntax $permissions value syntax is similar to the Permissions-Policy header syntax with one exception: comma that separates several features MUST be escaped — see examples below. The list of the available directives is available here. $permissions value can be empty in the case of exception rules — see examples below. Examples ||example.org^$permissions=autoplay=() disallows autoplay media requested through the HTMLMediaElement interface across example.org.@@||example.org/page/*$permissions=autoplay=() disables all rules with the $permissions modifier exactly matching autoplay=() on all the pages matching the rule pattern. For instance, the rule above.@@||example.org/page/*$permissions disables all the $permissions rules on all the pages matching the rule pattern.$domain=example.org|example.com,permissions=storage-access=()\\, сamera=() disallows using the Storage Access API to request access to unpartitioned cookies and using video input devices across example.org and example.com.@@||example.org^$document or @@||example.org^$urlblock disables all the $permission rules on all the pages matching the rule pattern. Limitations Characters forbidden in the $permissions value: $;$permissions is compatible with the limited list of modifiers: $domain, $important, and $subdocument. Compatibility Rules with the $permissions modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.11 or later. $redirect​ AdGuard is able to redirect web requests to a local &quot;resource&quot;. Syntax AdGuard uses the same filtering rules syntax as uBlock Origin. Also, it is compatible with ABP $rewrite=abp-resource modifier. $redirect is a modifier for the basic filtering rules so rules with this modifier support all other basic modifiers like $domain, $third-party, $script, etc. The value of the $redirect modifier must be the name of the resource that will be used for redirection. Disabling $redirect rules​ ||example.org/script.js$script,redirect=noopjs — this rule redirects all requests to example.org/script.js to the resource named noopjs.||example.org/test.mp4$media,redirect=noopmp4-1s — this rule redirects all requests to example.org/test.mp4 to the resource named noopmp4-1s.@@||example.org^$redirect will disable all $redirect rules for URLs that match ||example.org^.@@||example.org^$redirect=nooptext will disable all rules with $redirect=nooptext for any request that matches ||example.org^. More information on redirects and their usage is available on GitHub. Priorities of $redirect rules​ $redirect rules have higher priority than regular basic blocking rules. This means that if there is a basic blocking rule, the $redirect rule will override it. Allowlist rules with @@ mark have higher priority than $redirect rules. If a basic rule with the $important modifier and the $redirect rule matches the same URL, the latter is overridden unless it's also marked as $important. In short: $important &gt; @@ &gt; $redirect &gt; basic rules. Go to rules priorities for more details. Compatibility Rules with $redirect modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari.$redirect in uBlock Origin supports specifying priority, e.g. $redirect=noopjs:42. AdGuard does not support it and instead just discards the priority postfix. $redirect-rule​ This is basically an alias to $redirect since it has the same &quot;redirection&quot; values and the logic is almost similar. The difference is that $redirect-rule is applied only in the case when the target request is blocked by a different basic rule. Go to rules priorities for more details. Negating $redirect-rule works exactly the same way as for regular $redirect rules. Even more than that, @@||example.org^$redirect will negate both $redirect and $redirect-rule rules. Examples ||example.org/script.js ||example.org^$redirect-rule=noopjs  In this case, only requests to example.org/script.js will be &quot;redirected&quot; to noopjs. All other requests to example.org will be kept intact. Compatibility Rules with $redirect-rule modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. $referrerpolicy​ These rules allow overriding of a page's referrer policy. Responses to matching requests will have all of their Referrer-Policy headers replaced with a single header with the value equal to the matching rule's modifier value. If the response carries an HTML document with a &lt;meta name=&quot;referrer&quot;... tag, the content attribute of the tag will also be replaced with the modifier value. An exception rule with a modifier value disables the blocking rule with the same modifier value. An exception rule without a modifier value disables all matched referrer-policy rules. If a request matches multiple $referrerpolicy rules not disabled by exceptions, only one of them (it is not specified which one) is applied. Examples ||example.com^$referrerpolicy=unsafe-url overrides the referrer policy for example.com with unsafe-url.@@||example.com^$referrerpolicy=unsafe-url disables the previous rule.@@||example.com/abcd.html^$referrerpolicy disables all $referrerpolicy rules on example.com/abcd.html. Restrictions $referrerpolicy rules are compatible only with $document and $subdocument content-type modifiers. Compatibility Rules with the $referrerpolicy modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.12 or later. $removeheader​ Rules with $removeheader modifier are intended to remove headers from HTTP requests and responses. The initial motivation for this rule type is to be able to get rid of the Refresh header which is often used to redirect users to an undesirable location. However, this is not the only case where this modifier can be useful. Just like $csp, $redirect, $removeparam, and $cookie, this modifier exists independently, rules with it do not depend on the regular basic rules, i.e. regular exception or blocking rules will not affect it. By default, it only affects response headers. However, you can also change it to remove headers from HTTP requests as well. Syntax Basic syntax ||example.org^$removeheader=header-name removes a response header called header-name||example.org^$removeheader=request:header-name removes a request header called header-name $removeheader is case-insensitive, but we suggest always using lower case. Negating $removeheader This type of rules works pretty much the same way it works with $csp and $redirect modifiers. Use @@ to negate $removeheader: @@||example.org^$removeheader negates all $removeheader rules for URLs that match ||example.org^.@@||example.org^$removeheader=header negates the rule with $removeheader=header for any request matching ||example.org^. $removeheader rules can also be disabled by $document and $urlblock exception rules. But basic exception rules without modifiers will not do that. For example, @@||example.com^ will not disable $removeheader=p for requests to example.com, but @@||example.com^$urlblock will. note In case of multiple $removeheader rules matching a single request, we will apply each of them one by one. Examples ||example.org^$removeheader=refresh removes Refresh header from all HTTP responses returned by example.org and its subdomains. ||example.org^$removeheader=request:x-client-data removes X-Client-Data header from all HTTP requests. Next block of rules removes Refresh and Location headers from all HTTP responses returned by example.org save for requests to example.org/path/*, for which no headers will be removed: ||example.org^$removeheader=refresh ||example.org^$removeheader=location @@||example.org/path/$removeheader  Restrictions This type of rules can be used only in trusted filters. In order to avoid compromising the security $removeheader cannot remove headers from the list below: access-control-allow-originaccess-control-allow-credentialsaccess-control-allow-headersaccess-control-allow-methodsaccess-control-expose-headersaccess-control-max-ageaccess-control-request-headersaccess-control-request-methodorigintiming-allow-originallowcross-origin-embedder-policycross-origin-opener-policycross-origin-resource-policycontent-security-policycontent-security-policy-report-onlyexpect-ctfeature-policyorigin-isolationstrict-transport-securityupgrade-insecure-requestsx-content-type-optionsx-download-optionsx-frame-optionsx-permitted-cross-domain-policiesx-powered-byx-xss-protectionpublic-key-pinspublic-key-pins-report-onlysec-websocket-keysec-websocket-extensionssec-websocket-acceptsec-websocket-protocolsec-websocket-versionp3psec-fetch-modesec-fetch-destsec-fetch-sitesec-fetch-userreferrer-policycontent-typecontent-lengthacceptaccept-encodinghostconnectiontransfer-encodingupgrade $removeheader rules are only compatible with $domain, $third-party, $app, $important, $match-case, and content type modifiers such as $script and $stylesheet. The rules which have any other modifiers are considered invalid and will be discarded. Compatibility Rules with $removeheader modifier are supported by AdGuard for Windows, Mac, and Android, and AdGuard Browser Extension for Chrome, Firefox, and Edge. $removeparam​ note $queryprune is an alias of $removeparam. Since $queryprune is deprecated, avoid using it and use $removeparam instead. Rules with $removeparam modifier are intended to strip query parameters from requests' URLs. Please note that such rules are only applied to GET, HEAD, OPTIONS, and sometimes POST requests. $removeparam rules that do not have any content type modifiers will match only requests where content type is document. Syntax Basic syntax $removeparam=param removes query parameter with the name param from URLs of any request, e.g. a request to http://example.com/page?param=1&amp;another=2 will be transformed into http://example.com/page?another=2. $removeparam basic syntax is supported starting with v1.7 of CoreLibs and v3.6 of AdGuard Browser Extension. Regular expressions You can also use regular expressions to match query parameters and/or their values: $removeparam=/regexp/[options] — removes query parameters that matches the regexp regular expression from URLs of any request. Unlike basic syntax, it means &quot;remove query parameters normalized to a name=value string which match the regexp regular expression&quot;. [options] here is the list of regular expression options. At the moment, the only supported option is i which makes matching case-insensitive. Escaping special characters Do not forget to escape special characters like ,, / and $ in the regular expressions. Use \\ character for that purpose. For example, an escaped comma should look like this: \\,. note Regexp-type rules target both name and value of the parameter. To minimize mistakes, it is safer to start every regexp with /^ unless you specifically target parameter values. We will try to detect and ignore unescaped $ automatically using a simple rule of thumb — it is not an options delimiter if all three are true: It looks like $/;There is another slash character / to the left of it;There is another unescaped dollar sign $ to the left of that slash character. Remove all query parameters Specify naked $removeparam to remove all query parameters: ||example.org^$removeparam — removes all query parameters from URLs matching ||example.org^. Inversion Use ~ to apply inversion: $removeparam=~param — removes all query parameters with the name different from param.$removeparam=~/regexp/ — removes all query parameters that do not match the regexp regular expression. Negating $removeparam This sort of rules work pretty much the same way it works with $csp and $redirect modifiers. Use @@ to negate $removeparam: @@||example.org^$removeparam negates all $removeparam rules for URLs that match ||example.org^.@@||example.org^$removeparam=param negates the rule with $removeparam=param for any request matching ||example.org^.@@||example.org^$removeparam=/regexp/ negates the rule with $removeparam=/regexp/ for any request matching ||example.org^. Multiple rules matching a single request In the case when multiple $removeparam rules match a single request, each of them will be applied one by one. Examples $removeparam=/^(utm_source|utm_medium|utm_term)=/ $removeparam=/^(utm_content|utm_campaign|utm_referrer)=/ @@||example.com^$removeparam  With these rules some UTM parameters will be stripped out from any request, except that requests to example.com will not be stripped at all, e.g. http://google.com/page?utm_source=s&amp;utm_referrer=fb.com&amp;utm_content=img will be transformed to http://google.com/page, but http://example.com/page?utm_source=s&amp;utm_referrer=fb.com&amp;utm_content=img will not be affected by the blocking rule. $removeparam=utm_source removes utm_source query parameter from all requests. $removeparam=/utm_.*/ removes all utm_* query parameters from URL queries of any request, e.g. a request to http://example.com/page?utm_source=test will be transformed to http://example.com/page. $removeparam=/^utm_source=campaign$/ removes utm_source query parameter with the value equal to campaign. It does not touch other utm_source parameters. Negating one $removeparam rule and replacing it with a different rule $removeparam=/^(gclid|yclid|fbclid)=/ @@||example.com^$removeparam=/^(gclid|yclid|fbclid)=/ ||example.com^$removeparam=/^(yclid|fbclid)=/  With these rules, Google, Yandex, and Facebook Click IDs will be removed from all requests. There is one exception: Google Click ID (gclid) will not be removed from requests to example.com. Negating $removeparam for all parameters $removeparam=/^(utm_source|utm_medium|utm_term)=/ $removeparam=/^(utm_content|utm_campaign|utm_referrer)=/ @@||example.com^$removeparam  With these rules, specified UTM parameters will be removed from any request save for requests to example.org. $removeparam rules can also be disabled by $document and $urlblock exception rules. But basic exception rules without modifiers do not do that. For example, @@||example.com^ will not disable $removeparam=p for requests to example.com, but @@||example.com^$urlblock will. Restrictions Rules with $removeparam modifier can be used only in trusted filters.$removeparam rules are compatible with basic modifiers, content-type modifiers, and with $important and $app modifiers. The rules which have any other modifiers are considered invalid and will be discarded. Compatibility Rules with $removeparam modifier are supported by AdGuard for Windows, Mac, and Android and AdGuard Browser Extension for Chrome, Firefox, and Edge.$removeparam syntax for regular expressions is supported by AdGuard Browser Extension v4.0 and AdGuard for Windows, Mac, and Android, running CoreLibs version 1.8 or later.POST request types are supported only by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.10 or later. $replace​ This modifier completely changes the rule behavior. If it is applied, the rule will not block the request. The response is going to be modified instead. You will need some knowledge of regular expressions to use $replace modifier. Features $replace rules apply to any text response, but will not apply to binary (media, image, object, etc.).$replace rules do not apply if the size of the original response is more than 3MB.$replace rules have a higher priority than other basic rules (including exception rules). So if a request corresponds to two different rules one of which has the $replace modifier, this rule will be applied.Document-level exception rules with $content or $document modifiers do disable $replace rules for requests matching them.Other document-level exception rules ($generichide, $elemhide or $jsinject modifiers) are applied alongside $replace rules. It means that you can modify the page content with a $replace rule and disable cosmetic rules there at the same time. $replace value can be empty in the case of exception rules. See examples section for further information. Multiple rules matching a single request In case if multiple $replace rules match a single request, we will apply each of them. The order is defined alphabetically. Syntax In general, $replace syntax is similar to replacement with regular expressions in Perl. replace = &quot;/&quot; regexp &quot;/&quot; replacement &quot;/&quot; modifiers  regexp — a regular expression.replacement — a string that will be used to replace the string corresponding to regexp.modifiers — a regular expression flags. For example, i — insensitive search, or s — single-line mode. In the $replace value, two characters must be escaped: comma , and dollar sign $. Use backslash \\ for it. For example, an escaped comma looks like this: \\,. Examples ||example.org^$replace=/(&lt;VAST[\\s\\S]*?&gt;)[\\s\\S]*&lt;\\/VAST&gt;/\\$1&lt;\\/VAST&gt;/i  There are three parts in this rule: regexp - (&lt;VAST(.|\\s)*?&gt;)(.|\\s)*&lt;\\/VAST&gt;;replacement — \\$1&lt;\\/VAST&gt; where $ is escaped;modifiers — i for insensitive search. You can see how this rule works here: http://regexr.com/3cesk Multiple $replace rules ||example.org^$replace=/X/Y/||example.org^$replace=/Z/Y/@@||example.org/page/*$replace=/Z/Y/ Both rule 1 and 2 will be applied to all requests sent to example.org.Rule 2 is disabled for requests matching ||example.org/page/, but rule 1 still works! Disabling $replace rules @@||example.org^$replace will disable all $replace rules matching ||example.org^.@@||example.org^$document or @@||example.org^$content will disable all $replace rules originated from pages of example.org including the page itself. Limitations Rules with $replace modifier can be used only in trusted filters. Compatibility Rules with $replace modifier are supported by AdGuard for Windows, Mac, and Android and AdGuard Browser Extension for Firefox. Such rules do not work in extensions for other browsers because they are unable to modify content on the network level. noop​ noop modifier does nothing and can be used solely to increase rules' readability. It consists of a sequence of underscore characters (_) of any length and can appear in a rule as many times as needed. Examples ||example.com$_,removeparam=/^ss\\\\$/,_,image ||example.com$replace=/bad/good/,___,~third-party  Compatibility Rules with noop modifier are not supported by AdGuard Content Blocker. $empty (deprecated)​ Deprecation notice This modifier is deprecated in favor of the $redirect modifier. Rules with $empty are still supported and being converted into $redirect=nooptext now but the support shall be removed in the future. Usually, blocked requests look like a server error to browser. If you use $empty modifier, AdGuard will emulate a blank response from the server with200 OK status. Examples ||example.org^$empty returns an empty response to all requests to example.org and all subdomains. Compatibility Rules with $empty modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. $mp4 (deprecated)​ Deprecation notice This modifier is deprecated in favor of the $redirect modifier. Rules with $mp4 are still supported and being converted into $redirect=noopmp4-1s,media now but the support shall be removed in the future. As a response to blocked request AdGuard returns a short video placeholder. Examples ||example.com/videos/$mp4 blocks all video downloads from ||example.com/videos/* and changes the response to a video placeholder. Compatibility Rules with $mp4 modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. "},{"title":"Rule priorities​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#rule-priorities","content":"Each rule has its own priority, which is necessary when several rules match the request and the filtering engine needs to select one of them. Priority is measured by a positive integer. Collisions When two rules with the same priority match the same request, it depends on the filtering engine implementation which one will be selected. info The concept of rule priorities becomes increasingly important in light of Manifest V3 as the existing rules need to be converted to declarativeNetRequest rules. Priority computation​ To calculate priority, we've categorized modifiers into different groups. These groups are ranked based on their priority, from lowest to highest. A modifier that significantly narrows the scope of a rule adds more weight to its total priority. Conversely, if a rule applies to a broader range of requests, its priority decreases. It's worth noting that there are cases where a single-parameter modifier has a higher priority than multi-parameter ones. For instance, in the case of $domain=example.com|example.org, a rule that includes two domains has a slightly broader effective area than a rule with one specified domain, therefore its priority is lower. The base priority of any rule is 1. If the calculated priority is a floating-point number, it will be rounded up to the smallest integer greater than or equal to the calculated priority. Compatibility The concept of priority has been introduced in tsurlfilter v2.1.0 and CoreLibs v1.13. Before that AdGuard didn't have any special priority computation algorithm and collisions handling could be different depending on AdGuard product and version.AdGuard for iOS, Safari, and AdGuard Content Blocker rely on the browsers implementation and they cannot follow the rules specified here. note Modifier aliases (1p, 3p, etc.) are not included in these categories, however, they are utilized within the engine to compute the rule priority. Basic modifiers, the presence of each adds 1 to the priority​ $app with negated applications using ~,$denyallow,$dnsrewrite,$domain with negated domains using ~,$match-case,$method with negated methods using ~,$third-party,$to,restricted content-types with ~. When dealing with a negated domain, app, method, or content-type, we add 1 point for the existence of the modifier itself, regardless of the quantity of negated domains or content-types. This is because the rule's scope is already infinitely broad. Put simply, by prohibiting multiple domains, content-types, methods or apps, the scope of the rule becomes only minimally smaller. Defined content-type modifiers, defined methods, defined headers, $popup, special exceptions​ All allowed content types: $document,$font,$image,$media,$object,$other,$ping,$script,$stylesheet,$subdocument,$websocket,$xmlhttprequest; This also includes rules that implicitly add the modifier $document: $popup; Or special exceptions that implicitly add $document,subdocument: $content,$elemhide,$extension,$genericblock,$generichide,$jsinject,$specifichide,$urlblock; Or allowed methods via $method. Or rules with $header. The presence of any content-type modifiers adds (50 + 50 / N), where N is the number of modifiers present, for example: ||example.com^$image,script will add 50 + 50 / 2 = 50 + 25 = 75 to the total weight of the rule. The $popup also belongs to this category, because it implicitly adds the modifier $document. Similarly, specific exceptions add $document,subdocument. If there is a $method modifier in the rule with allowed methods it adds (50 + 50 / N), where N is the number of methods allowed, for example: ||example.com^$method=GET|POST|PUT will add 50 + 50 / 3 = 50 + 16.6 = 67 to the total weight of the rule. If there is a $header modifier in the rule it adds 50. $domain or $app with allowed domains or applications​ Specified domains through $domain or specified applications through $app add 100 + 100 / N, where N is the number of modifier values for example: ||example.com^$domain=example.com|example.org|example.net will add 100 + 100 / 3 = 134.3 = 135 or ||example.com^$app=org.example.app1|org.example.app2 will add 100 + 100 / 2 = 151 or ||example.com^$domain=example.com,app=org.example.app1|org.example.app2 will add 100 + 100/1 ($domain part) and 100 + 100/2 ($app part) - will add 350 in total. Modifier values that are regexps or tld will be interpreted as normal entries of the form example.com and counted one by one, for example: ||example.com^$domain=example.* will add 100 + 100 / 1 = 200 or ||example.com^$domain=example.*|adguard.* will add 100 + 100 / 2 = 150. $redirect rules​ $redirect,$redirect-rule. Each of which adds 10^3 to rule priority. Specific exceptions​ $content,$elemhide,$extension,$genericblock,$generichide,$jsinject,$specifichide,$urlblock; Each of which adds 10^4 to the priority. As well as exception with $document modifier: because it's an alias for $elemhide,content,jsinject,urlblock,extension. It will add 10^4 for each modifier from the top list, 10^4 * 5 in total. In addition, each of these exceptions implicitly adds the two allowed content-type modifiers $document,subdocument. Allowlist rules​ Modifier @@ adds 10^5 to rule priority. $important rules​ Modifier $important adds 10^6 to rule priority. Rules for which there is no priority weight​ Other modifiers, which are supposed to perform additional post- or pre-processing of requests, do not add anything to the rules priority. note The $replace modifier takes precedence over all blocking rules of categories 1-3, as well as exception rules from categories 3-5, except $content, because an exception with the $content modifier overrides all $replace rules. Examples​ Example 1 ||example.com^ Weight of the rule without modifiers: 1. Example 2 ||example.com^$match-case Weight of the rule: base weight + weight of the modifier from category 1: 1 + 1 = 2. Example 3 ||example.org^$removeparam=p Weight of the rule: base weight + 0, since $removeparam is not involved in the priority calculation: 1 + 0 = 1. Example 4 ||example.org^$document,redirect=nooptext Rule weight: base weight + allowed content type, category 3 + $redirect from category 6: 1 + (100 + 100 / 1) + 1000 = 1201. Example 5 @@||example.org^$removeparam=p,document Rule weight: base weight + allowlist rule, category 5 + 0 because $removeparam is not involved in the priority calculation + allowed content type, category 2: 1 + 10000 + 0 + (50 + 50 / 1) = 10101. Example 6 @@||example.com/ad/*$domain=example.org|example.net,important Rule weight: base weight + allowlist rule, category 5 + important rule, category 7 + allowed domains, category 3: 1 + 10000 + 1000000 + (100 + 100 / 2) = 1010152. Example 7 @@||example.org^$document without additional modifiers is an alias for @@||example.com^$elemhide,content,jsinject,urlblock,extension Rule weight: base weight + specific exceptions, category 4 + two allowed content types (document and subdocument), category 2: 1 + 10000 * 4 + (50 + 50 / 2) = 40076. Example 8 *$script,domain=a.com,denyallow=x.com|y.com Rule weight: base weight + allowed content type, category 2 + allowed domain, category 3 + denyallow, category 1: 1 + (50 + 50/1) + (100 + 100 / 1) + 1 = 303. Example 9 ||example.com^$all (alias to ||example.com^$document,subdocument,image,script,media,etc. + $popup) Rule weight: base weight + allowed content types, category 2: 1 + (50 + 50/12) = 55. Non-basic rules However, the capabilities of the basic rules may not be sufficient to block ads. Sometimes you need to hide an element or change part of the HTML code of a web page without breaking anything. The rules described in this section are created specifically for this purpose. "},{"title":"Cosmetic rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-rules","content":"info Work with non-basic rules requires the basic knowledge of HTML and CSS. So, if you want to learn how to make such rules, we recommend to get acquainted with this documentation. "},{"title":"Element hiding rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-elemhide-rules","content":"Element hiding rules are used to hide the elements of web pages. It is similar to applying { display: none; } style to selected element. Element hiding rules may operate differently depending on the platform. Syntax​  rule = [domains] &quot;##&quot; selector domains = [domain0, domain1[, ...[, domainN]]]  selector — CSS selector, defines the elements to be hidden.domains — domain restriction for the rule. If you want to limit the rule application area to certain domains, just enter them separated with commas. For example: example.org,example.com##selector. This rule will be also applied to all subdomains of example.org and example.com. If you want the rule not to be applied to certain domains, start a domain name with ~ sign. For example: ~example.org##selector. You can use both approaches in a single rule. For example, example.org,~subdomain.example.org##domain will work for example.org and all subdomains, except subdomain.example.org. note Element hiding rules are not dependent on each other. If there is a rule example.org##selector in the filter and you add ~example.org##selector both rules will be applied independently. Examples example.com##div.textad — hides a div with a class textad at example.com and all subdomains.example.com,example.org###adblock — hides an element with attribute id equals adblock at example.com, example.org and all subdomains.~example.com##.textad — hides an element with a class textad at all domains, except example.com and its subdomains. 제한 Safari does not support both permitted and restricted domains. So the rules like example.org,~foo.example.org##.textad are invalid in AdGuard for Safari. Exceptions Exceptions can disable some rules on particular domains. They are very similar to usual exception rules, but instead of ## you have to use #@#. For example, there is a rule in filter: ##.textad  If you want to disable it for example.com, you can create an exception rule: example.com#@#.textad  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. It will completely disable matching CSS elemhide rule on ALL domains: #@#.textad  The same can be achieved by adding this rule: *#@#.textad  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. "},{"title":"CSS rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-css-rules","content":"Sometimes, simple hiding of an element is not enough to deal with advertising. For example, blocking an advertising element can just break the page layout. In this case AdGuard can use rules that are much more flexible than hiding rules. With this rules you can basically add any CSS styles to the page. Syntax  rule = [domains] &quot;#$#&quot; selector &quot;{&quot; style &quot;}&quot; domains = [domain0, domain1[, ...[, domainN]]]  selector — CSS selector, that defines the elements we want to apply the style to.domains — domain restriction for the rule. Same principles as in element hiding rules.style — CSS style, that we want to apply to selected elements. Examples example.com#$#body { background-color: #333!important; }  This rule will apply a style background-color: #333!important; to the body element at example.com and all subdomains. Exceptions Just like with element hiding, there is a type of rules that disable the selected CSS style rule for particular domains. Exception rules syntax is almost the same, you just have to change #$# to #@$#. For example, there is a rule in filter: #$#.textad { visibility: hidden; }  If you want to disable it for example.com, you can create an exception rule: example.com#@$#.textad { visibility: hidden; }  We recommend to use this kind of exceptions only if it is not possible to change the CSS rule itself. In other cases it is better to change the original rule, using domain restrictions. Restrictions Styles that lead to loading any resource are forbidden. Basically, it means that you cannot use any &lt;url&gt; type of value in the style. Compatibility CSS rules are not supported by AdGuard Content Blocker. CSS rules may operate differently depending on the platform. "},{"title":"Extended CSS selectors​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#extended-css-selectors","content":"제한Pseudo-class :has()Pseudo-class :contains()Pseudo-class :matches-css()Pseudo-class :matches-attr()Pseudo-class :matches-property()Pseudo-class :xpath()Pseudo-class :nth-ancestor()Pseudo-class :upward()Pseudo-class :remove() and pseudo-property removePseudo-class :is()Pseudo-class :not()Pseudo-class :if-not() (removed) CSS 3.0 is not always enough to block ads. To solve this problem AdGuard extends CSS capabilities by adding support for the new pseudo-elements. We have developed a separate open-source library for non-standard element selecting and applying CSS styles with extended properties. The idea of extended capabilities is an opportunity to match DOM elements with selectors based on their own representation (style, text content, etc.) or relations with other elements. There is also an opportunity to apply styles with non-standard CSS properties. Application area Extended selectors can be used in any cosmetic rule, whether they are element hiding rules or CSS rules. Compatibility Rules with extended CSS selectors are not supported by AdGuard Content Blocker. Syntax Regardless of the CSS pseudo-classes you are using in the rule, you can use special markers to force applying these rules by ExtendedCss. It is recommended to use these markers for all extended CSS cosmetic rules so that it was easier to find them. The syntax for extended CSS rules: #?# — for element hiding, #@?# — for exceptions#$?# — for CSS rules, #@$?# — for exceptions We strongly recommend using these markers any time when you use an extended CSS selector. Examples example.org#?#div:has(&gt; a[target=&quot;_blank&quot;][rel=&quot;nofollow&quot;]) — this rule blocks all div elements containing a child node that has a link with the attributes [target=&quot;_blank&quot;][rel=&quot;nofollow&quot;]. The rule applies only to example.org and its subdomains.example.com#$?#h3:contains(cookies) { display: none!important; } — this rule sets the style display: none!important to all h3 elements that contain the word cookies. The rule applies only to example.com and all its subdomains.example.net#?#.banner:matches-css(width: 360px) — this rule blocks all .banner elements with the style property width: 360px. The rule applies only to example.net and its subdomains.example.net#@?#.banner:matches-css(width: 360px) — this rule will disable the previous rule. You can apply standard CSS selectors using the ExtendedCss library by using a rule marker #?#, e.g. #?#div.banner. Learn more about how to debug extended selectors. note Some pseudo-classes do not require selector before it. Still adding a universal selector * makes an extended selector easier to read, even though it has no effect on the matching behavior. So selector #block :has(&gt; .inner) works exactly like #block *:has(&gt; .inner) but second one is more obvious. Pseudo-class names are case-insensitive, e.g. :HAS() works as :has(). Still the lower-case names are used commonly. ExtendedCss Limitations​ CSS comments and at-rules are not supported. Specific pseudo-class may have its own limitations: :has(), :xpath(), :nth-ancestor(), :upward(), :is(), :not(), and :remove(). Pseudo-class :has()​ Draft CSS 4.0 specification describes the :has() pseudo-class. Unfortunately, it is not yet supported by all popular browsers. note Rules with the :has() pseudo-class should use the native implementation of :has() if they use ## marker and if it is possible, i.e. with no other extended selectors inside. To force applying of ExtendedCss rules with :has(), use #?#/#$?# marker explicitly. Compatibility with other pseudo-classes Synonyms :-abp-has() is supported by ExtendedCss for better compatibility. Removal notice :if() is no longer supported as a synonym for :has(). Syntax [target]:has(selector)  target — optional, standard or extended CSS selector, can be missed for checking any elementselector — required, standard or extended CSS selector The pseudo-class :has() selects the target elements that fit to the selector. Also the selector can start with a combinator. A selector list can be set in selector as well. In this case all selectors in the list are being matched for now. In the future it will be fixed for &lt;forgiving-relative-selector-list&gt; as argument. :has() limitations​ Usage of the :has() pseudo-class is restricted for some cases (2, 3): disallow :has() inside the pseudos accepting only compound selectors;disallow :has() after regular pseudo-elements. Native :has() pseudo-class does not allow :has(), :is(), :where() inside :has() argument to avoid increasing the :has() invalidation complexity (case 1). But ExtendedCss did not have such limitation earlier and filter lists already contain such rules, so we have not added this limitation to ExtendedCss and allow to use :has() inside :has() as it was possible before. To use it, just force ExtendedCss usage by setting #?#/#$?# rule marker. Native implementation does not allow any usage of :scope inside :has() argument ([1], [2]). Still, there are some such rules in filter lists: div:has(:scope a) which we continue to support by simply converting them to div:has(&gt; a), as it used to be done previously. Examples div:has(.banner) selects all div elements which include an element with the banner class: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;span class=&quot;banner&quot;&gt;inner element&lt;/span&gt; &lt;/div&gt;  div:has(&gt; .banner) selects all div elements which include an banner class element as a direct child of div: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;p class=&quot;banner&quot;&gt;child element&lt;/p&gt; &lt;/div&gt;  div:has(+ .banner) selects all div elements preceding banner class element which immediately follows the div and both are children of the same parent: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected&lt;/div&gt; &lt;p class=&quot;banner&quot;&gt;adjacent sibling&lt;/p&gt; &lt;span&gt;Not selected&lt;/span&gt;  div:has(~ .banner) selects all div elements preceding banner class element which follows the div but not necessarily immediately and both are children of the same parent: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected&lt;/div&gt; &lt;span&gt;Not selected&lt;/span&gt; &lt;p class=&quot;banner&quot;&gt;general sibling&lt;/p&gt;  div:has(span, .banner) selects all div elements which include both span element and banner class element: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;span&gt;child span&lt;/span&gt; &lt;p class=&quot;banner&quot;&gt;child .banner&lt;/p&gt; &lt;/div&gt;  Old syntax Backward compatible syntax for :has() is supported but not recommended. Pseudo-class :contains()​ The :contains() pseudo-class principle is very simple: it allows to select the elements that contain specified text or which content matches a specified regular expression. Regexp flags are supported. note The :contains() pseudo-class uses the textContent element property for matching, not the innerHTML. Compatibility with other pseudo-classes Synonyms :-abp-contains() and :has-text() are supported for better compatibility. Syntax [target]:contains(match)  target — optional, standard or extended CSS selector, can be missed for checking any elementmatch — required, string or regular expression for matching element textContent. Regular expression flags are supported. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div id=&quot;match&quot;&gt;Selected as IT contains &quot;banner&quot;&lt;/div&gt; &lt;div&gt;Not selected &lt;div class=&quot;banner&quot;&gt;&lt;/div&gt;&lt;/div&gt;  the element div#match can be selected by any on these extended selectors: ! plain text div:contains(banner) ! regular expression div:contains(/as .* banner/) ! regular expression with flags div:contains(/it .* banner/gi)  note Only the div with id=match is selected because the next element does not contain any text, and banner is a part of code, not a text. Old syntax Backward compatible syntax for :contains() is supported but not recommended. Pseudo-class :matches-css()​ The :matches-css() pseudo-class allows to match the element by its current style properties. The work of the pseudo-class is based on using the Window.getComputedStyle() method. Syntax [target]:matches-css([pseudo-element, ] property: pattern)  target — optional, standard or extended CSS selector, can be missed for checking any elementpseudo-element — optional, valid standard pseudo-element, e.g. before, after, first-line, etc.property — required, a name of CSS property to check the element forpattern — required, a value pattern that is using the same simple wildcard matching as in the basic url filtering rules OR a regular expression. For this type of matching, AdGuard always does matching in a case-insensitive manner. In the case of a regular expression, the pattern looks like /regexp/. Special characters escaping and unescaping For non-regexp patterns (,),[,] must be unescaped, e.g. :matches-css(background-image:url(data:*)). For regexp patterns \\ should be escaped, e.g. :matches-css(background-image: /^url\\\\(&quot;data:image\\\\/gif;base64.+/). Examples For such DOM: &lt;!-- HTML code --&gt; &lt;style type=&quot;text/css&quot;&gt; #matched::before { content: &quot;Block me&quot; } &lt;/style&gt; &lt;div id=&quot;matched&quot;&gt;&lt;/div&gt; &lt;div id=&quot;not-matched&quot;&gt;&lt;/div&gt;  the div elements with pseudo-element ::before and with specified content property can be selected by any of these extended selectors: ! string pattern div:matches-css(before, content: block me) ! string pattern with wildcard div:matches-css(before, content: block*) ! regular expression pattern div:matches-css(before, content: /block me/)  Restrictions Regexp patterns do not support flags. Compatibility Obsolete pseudo-classes :matches-css-before() and :matches-css-after() are no longer recommended but still are supported for better compatibility. Old syntax Backward compatible syntax for :matches-css() is supported but not recommended. Pseudo-class :matches-attr()​ The :matches-attr() pseudo-class allows to select an element by its attributes, especially if they are randomized. Syntax [target]:matches-attr(&quot;name&quot;[=&quot;value&quot;])  target — optional, standard or extended CSS selector, can be missed for checking any elementname — required, simple string or string with wildcard or regular expression for attribute name matchingvalue — optional, simple string or string with wildcard or regular expression for attribute value matching Escaping special characters For regexp patterns &quot; and \\ should be escaped, e.g. div:matches-attr(class=/[\\\\w]{5}/). Examples div:matches-attr(&quot;ad-link&quot;) selects the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; ad-link=&quot;1random23-banner_240x400&quot;&gt;&lt;/div&gt;  div:matches-attr(&quot;data-*&quot;=&quot;adBanner&quot;) selects the element div#target2: &lt;!-- HTML code --&gt; &lt;div id=&quot;target2&quot; data-1random23=&quot;adBanner&quot;&gt;&lt;/div&gt;  div:matches-attr(*unit*=/^click$/) selects the element div#target3: &lt;!-- HTML code --&gt; &lt;div id=&quot;target3&quot; random123-unit094=&quot;click&quot;&gt;&lt;/div&gt;  *:matches-attr(&quot;/.{5,}delay$/&quot;=&quot;/^[0-9]*$/&quot;) selects the element #target4: &lt;!-- HTML code --&gt; &lt;div&gt; &lt;inner-random23 id=&quot;target4&quot; nt4f5be90delay=&quot;1000&quot;&gt;&lt;/inner-random23&gt; &lt;/div&gt;  Restrictions Regexp patterns do not support flags. Pseudo-class :matches-property()​ The :matches-property() pseudo-class allows to select an element by matching its properties. Syntax [target]:matches-property(&quot;name&quot;[=&quot;value&quot;])  target — optional, standard or extended CSS selector, can be missed for checking any elementname — required, simple string or string with wildcard or regular expression for element property name matchingvalue — optional, simple string or string with wildcard or regular expression for element property value matching Escaping special characters For regexp patterns &quot; and \\ should be escaped, e.g. div:matches-property(prop=/[\\\\w]{4}/). note Regexp patterns are supported in name for any property in chain, e.g. prop./^unit[\\\\d]{4}$/.type. Examples An element with such properties: divProperties = { id: 1, check: { track: true, unit_2random1: true, }, memoizedProps: { key: null, tag: 12, _owner: { effectTag: 1, src: 'ad.com', }, }, };  can be selected by any of these extended selectors: div:matches-property(check.track) div:matches-property(&quot;check./^unit_.{4,8}$/&quot;) div:matches-property(&quot;check.unit_*&quot;=true) div:matches-property(memoizedProps.key=&quot;null&quot;) div:matches-property(memoizedProps._owner.src=/ad/)  For filters maintainers To check properties of a specific element, do the following: Inspect the page element or select it in Elements tab of browser DevTools.Run console.dir($0) in Console tab. Restrictions Regexp patterns do not support flags. Pseudo-class :xpath()​ The :xpath() pseudo-class allows to select an element by evaluating an XPath expression. Syntax [target]:xpath(expression)  target- optional, standard or extended CSS selectorexpression — required, valid XPath expression :xpath() limitations​ target can be omitted so it is optional. For any other pseudo-class that would mean &quot;apply to all DOM nodes&quot;, but in case of :xpath() it just means &quot;apply to the whole document&quot;, and such applying slows elements selecting significantly. That's why rules like #?#:xpath(expression) are limited to looking inside the body tag. For example, rule #?#:xpath(//div[@data-st-area=\\'Advert\\']) is parsed as #?#body:xpath(//div[@data-st-area=\\'Advert\\']). Extended selectors with defined target as any selector — *:xpath(expression) — can still be used but it is not recommended, so target should be specified instead. Works properly only at the end of selector, except for pseudo-class :remove(). Examples :xpath(//*[@class=&quot;banner&quot;]) selects the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; class=&quot;banner&quot;&gt;&lt;/div&gt;  :xpath(//*[@class=&quot;inner&quot;]/..) selects the element div#target2: &lt;!-- HTML code --&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt;  Pseudo-class :nth-ancestor()​ The :nth-ancestor() pseudo-class allows to lookup the nth ancestor relative to the previously selected element. subject:nth-ancestor(n)  subject — required, standard or extended CSS selectorn — required, number &gt;= 1 and &lt; 256, distance to the needed ancestor from the element selected by subject Syntax subject:nth-ancestor(n)  subject — required, standard or extended CSS selectorn — required, number &gt;= 1 and &lt; 256, distance to the needed ancestor from the element selected by subject :nth-ancestor() limitations​ The :nth-ancestor() pseudo-class is not supported inside the argument of the :not() pseudo-class. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot;&gt; &lt;div class=&quot;child&quot;&gt;&lt;/div&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div&gt; &lt;div&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  .child:nth-ancestor(1) selects the element div#target1, div[class=&quot;inner&quot;]:nth-ancestor(3) selects the element div#target2. Pseudo-class :upward()​ The :upward() pseudo-class allows to lookup the ancestor relative to the previously selected element. Syntax subject:upward(ancestor)  subject — required, standard or extended CSS selectorancestor — required, specification for the ancestor of the element selected by subject, can be set as: number &gt;= 1 and &lt; 256 for distance to the needed ancestor, same as :nth-ancestor()standard CSS selector for matching closest ancestor :upward() limitations​ The :upward() pseudo-class is not supported inside the argument of the :not() pseudo-class. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; data=&quot;true&quot;&gt; &lt;div class=&quot;child&quot;&gt;&lt;/div&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div&gt; &lt;div&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  .inner:upward(div[data]) selects the element div#target1, .inner:upward(div[id]) selects the element div#target2, .child:upward(1) selects the element div#target1, .inner:upward(3) selects the element div#target2. Pseudo-class :remove() and pseudo-property remove​ Sometimes, it is necessary to remove a matching element instead of hiding it or applying custom styles. In order to do it, you can use the :remove() pseudo-class as well as the remove pseudo-property. Pseudo-class :remove() can be placed only at the end of a selector. Syntax ! pseudo-class selector:remove() ! pseudo-property selector { remove: true; }  selector — required, standard or extended CSS selector :remove() and remove limitations​ The :remove() pseudo-class is limited to work properly only at the end of selector. For applying the :remove() pseudo-class to any element, a universal selector * should be used. Otherwise such extended selector may be considered as invalid, e.g. .banner &gt; :remove() is not valid for removing any child element of banner class element, so it should look like .banner &gt; *:remove(). If the :remove() pseudo-class or the remove pseudo-property is used, all style properties are ignored except for the debug pseudo-property. Examples div.banner:remove() div:has(&gt; div[ad-attr]):remove() div:contains(advertisement) { remove: true; } div[class]:has(&gt; a &gt; img) { remove: true; }  note Rules with the remove pseudo-property should use #$?# marker: $ for CSS style rules syntax, ? for ExtendedCss syntax. Pseudo-class :is()​ The :is() pseudo-class allows to match any element that can be selected by any of selectors passed to it. Invalid selectors are skipped and the pseudo-class deals with valid ones with no error thrown. Our implementation of the native :is() pseudo-class. Syntax [target]:is(selectors)  target — optional, standard or extended CSS selector, can be missed for checking any elementselectors — forgiving selector list of standard or extended selectors. For extended selectors only compound selectors are supported, not complex. :is() limitations​ Rules with the :is() pseudo-class should use the native implementation of :is() if rules use ## marker and it is possible, i.e. with no other extended selectors inside. To force applying ExtendedCss rules with :is(), use #?#/#$?# marker explicitly. If the :is() pseudo-class argument selectors is an extended selector, due to the way how the :is() pseudo-class is implemented in ExtendedCss v2.0, it is impossible to apply it to the top DOM node which is html, i.e. #?#html:is(&lt;extended-selectors&gt;) does not work. So if target is not defined or defined as a universal selector *, the extended pseudo-class applying is limited to html's children, e.g. rules #?#:is(...) and #?#*:is(...) are parsed as #?#html *:is(...). Please note that there is no such limitation for a standard selector argument, i.e. #?#html:is(.locked) works fine. Complex selectors with extended pseudo-classes are not supported as selectors argument for :is() pseudo-class, only compound ones are allowed. Check examples below for more details. Examples #container *:is(.inner, .footer) selects only the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;container&quot;&gt; &lt;div data=&quot;true&quot;&gt; &lt;div&gt; &lt;div id=&quot;target1&quot; class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  Due to limitations :is(*:not([class]) &gt; .banner)' does not work but :is(*:not([class]):has(&gt; .banner)) can be used instead of it to select the element div#target2: &lt;!-- HTML code --&gt; &lt;span class=&quot;span&quot;&gt;text&lt;/span&gt; &lt;div id=&quot;target2&quot;&gt; &lt;p class=&quot;banner&quot;&gt;inner paragraph&lt;/p&gt; &lt;/div&gt;  Pseudo-class :not()​ The :not() pseudo-class allows to select elements which are not matched by selectors passed as argument. Invalid argument selectors are not allowed and error is to be thrown. Our implementation of the :not() pseudo-class. Syntax [target]:not(selectors)  target — optional, standard or extended CSS selector, can be missed for checking any elementselectors — list of standard or extended selectors :not() limitations​ Rules with the :not() pseudo-class should use the native implementation of :not() if rules use ## marker and it is possible, i.e. with no other extended selectors inside. To force applying ExtendedCss rules with :not(), use #?#/#$?# marker explicitly. If the :not() pseudo-class argument selectors is an extended selector, due to the way how the :not() pseudo-class is implemented in ExtendedCss v2.0, it is impossible to apply it to the top DOM node which is html, i.e. #?#html:not(&lt;extended-selectors&gt;) does not work. So if target is not defined or defined as a universal selector *, the extended pseudo-class applying is limited to html's children, e.g. rules #?#:not(...) and #?#*:not(...) are parsed as #?#html *:not(...). Please note that there is no such limitation for a standard selector argument, i.e. #?#html:not(.locked) works fine. The :not() is considered as a standard CSS pseudo-class inside the argument of the :upward() pseudo-class because :upward() supports only standard selectors. &quot;Up-looking&quot; pseudo-classes which are :nth-ancestor() and :upward() are not supported inside selectors argument for :not() pseudo-class. Examples #container &gt; *:not(h2, .text) selects only the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;container&quot;&gt; &lt;h2&gt;Header&lt;/h2&gt; &lt;div id=&quot;target1&quot;&gt;&lt;/div&gt; &lt;span class=&quot;text&quot;&gt;text&lt;/span&gt; &lt;/div&gt;  Pseudo-class :if-not() (removed)​ Removal notice The :if-not() pseudo-class is removed and is no longer supported. Rules with it are considered as invalid. This pseudo-class was basically a shortcut for :not(:has()). It was supported by ExtendedCss for better compatibility with some filters subscriptions. "},{"title":"Cosmetic rules priority​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-rules-priority","content":"The way element hiding and CSS rules are applied is platform-specific. In AdGuard for Windows, Mac, and Android, we use a stylesheet injected into the page. The priority of cosmetic rules is the same as any other websites' CSS stylesheet. But there is a limitation: element hiding and CSS rules cannot override inline styles. In such cases, it is recommended to use extended selectors or HTML filtering. In AdGuard Browser Extension, the so called &quot;user stylesheets&quot; are used. They have higher priority than even the inline styles. Extended CSS selectors use JavaScript to work and basically add an inline style themselves, therefore they can override any style. "},{"title":"HTML filtering rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#html-filtering-rules","content":"In most cases, the basis and cosmetic rules are enough to filter ads. But sometimes it is necessary to change the HTML-code of the page itself before it is loaded. This is when you need filtering rules for HTML content. They allow to indicate the HTML elements to be cut out before the browser loads the page. Compatibility HTML filtering rules are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser Extension for Firefox. Such rules do not work in extensions for other browsers because they are unable to modify content on network level. Syntax  rule = [domains] &quot;$$&quot; tagName [attributes] domains = [domain0, domain1[, ...[, domainN]]] attributes = &quot;[&quot; name0 = value0 &quot;]&quot; &quot;[&quot; name1 = value2 &quot;]&quot; ... &quot;[&quot; nameN = valueN &quot;]&quot;  tagName — name of the element in lower case, for example, div or script.domains — domain restriction for the rule. Same principles as in element hiding rules syntax.attributes — a list of attributes, that limit the elements selection. name — attribute name, value — substring, that is contained in attribute value. Examples HTML code: &lt;script data-src=&quot;/banner.js&quot;&gt;&lt;/script&gt;  Rule: example.org$$script[data-src=&quot;banner&quot;]  This rule removes all script elements with the attribute data-src containing the substring banner. The rule applies only to example.org and all its subdomains. Special attributes In addition to usual attributes, which value is every element checked for, there is a set of special attributes that change the way a rule works. Below there is a list of these attributes: tag-content This is the most frequently used special attribute. It limits selection with those elements whose innerHTML code contains the specified substring. You should use &quot;&quot; to escape &quot;, for instance: $$script[tag-content=&quot;alert(&quot;&quot;this is ad&quot;&quot;)&quot;] For example, take a look at this HTML code: &lt;script type=&quot;text/javascript&quot;&gt; document.write('&lt;div&gt;banner text&lt;/div&gt;&quot; /&gt;'); &lt;/script&gt;  Following rule will delete all script elements with a banner substring in their code: $$script[tag-content=&quot;banner&quot;]  Nested elements If we are dealing with multiple nested elements and they all fall within the same HTML filtering rule, they all are going to be deleted. wildcard This special attribute works almost like tag-content and allows you to check the innerHTML code of the document. Rule will check if HTML code of the element fits to the search pattern. You should use &quot;&quot; to escape &quot;, for instance: $$script[wildcard=&quot;&quot;banner&quot;&quot;] For example: $$script[wildcard=&quot;*banner*text*&quot;] It will check, if the code of element contains two consecutive substrings banner and text. max-length Specifies the maximum length for content of HTML element. If this parameter is set and the content length exceeds the value, a rule does not apply to the element. Default value If this parameter is not specified, the max-length is considered to be 8192. For example: $$div[tag-content=&quot;banner&quot;][max-length=&quot;400&quot;]  This rule will remove all the div elements, whose code contains the substring banner and the length of which does not exceed 400 characters. min-length Specifies the minimum length for content of HTML element. If this parameter is set and the content length is less than preset value, a rule does not apply to the element. For example: $$div[tag-content=&quot;banner&quot;][min-length=&quot;400&quot;]  This rule will remove all the div elements, whose code contains the substring banner and the length of which exceeds 400 characters. Exceptions Similar to hiding rules, there is a special type of rules that disable the selected HTML filtering rule for particular domains. The syntax is the same, you just have to change $$ to $@$. For example, there is a rule in filter: $$script[tag-content=&quot;banner&quot;]  If you want to disable it for example.com, you can create an exception rule: example.com$@$script[tag-content=&quot;banner&quot;]  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. $@$script[tag-content=&quot;banner&quot;]  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. "},{"title":"JavaScript rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#javascript-rules","content":"AdGuard supports a special type of rules that allows you to inject any javascript code to websites pages. We strongly recommend using scriptlets instead of JavaScript rules whenever possible. JS rules are supposed to help with debugging, but as a long-time solution a scriptlet rule should be used. Syntax rule = [domains] &quot;#%#&quot; script  domains — domain restriction for the rule. Same principles as in element hiding rules.script — arbitrary javascript code in one string. Examples example.org#%#window.__gaq = undefined; executes the code window.__gaq = undefined; on all pages at example.org and all subdomains. Exceptions Similar to hiding rules, there is a special type of rules that disable the selected javascript rule for particular domains. The syntax is the same, you just have to change #%# to #@%#. For example, there is a rule in filter: #%#window.__gaq = undefined;  If you want to disable it for example.com, you can create an exception rule: example.com#@%#window.__gaq = undefined;  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. #@%#window.__gaq = undefined;  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. Restrictions JavaScript rules can be used only in trusted filters. Compatibility JavaScript rules are not supported by AdGuard Content Blocker. "},{"title":"Scriptlet rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#scriptlets","content":"Scriptlet is a JavaScript function that provides extended capabilities for content blocking. These functions can be used in a declarative manner in AdGuard filtering rules. note AdGuard supports a lot of different scriptlets. In order to achieve cross-blocker compatibility, we also support syntax of uBO and ABP. Syntax rule = [domains] &quot;#%#//scriptlet(&quot; scriptletName arguments &quot;)&quot;  scriptletName — required, a name of the scriptlet from AdGuard's Scriptlets libraryarguments — optional, a list of string arguments (no other types of arguments are supported) Examples example.org#%#//scriptlet(&quot;abort-on-property-read&quot;, &quot;alert&quot;)  This rule will be applied to example.org and subdomains pages and will execute the abort-on-property-read scriptlet with the alert parameter. Learn more about how to debug scriptlets. More information about scriptlets can be found on GitHub. Compatibility Scriptlet rules are not supported by AdGuard Content Blocker. "},{"title":"Trusted scriptlets​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#trusted-scriptlets","content":"Trusted scriptlets are scriptlets with extended functionality. It means the same syntax and restrictions. Trusted scriptlet names are prefixed with trusted-, e.g. trusted-set-cookie, to be easily distinguished from common scriptlets. note Trusted scriptlets are not compatible with other ad blockers except AdGuard. Restrictions Trusted scriptlets rules can be used only in trusted filters. Compatibility Trusted scriptlets rules are not supported by AdGuard Content Blocker. Learn more about how to debug scriptlets. More information about trusted scriptlets can be found on GitHub. "},{"title":"Modifiers for non-basic type of rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#modifiers-for-non-basic-type-of-rules","content":"$app$domain$path$url Each rule can be modified using the modifiers described in the following paragraphs. Syntax rule = &quot;[$&quot; modifiers &quot;]&quot; [rule text] modifiers = modifier0[, modifier1[, ...[, modifierN]]]  modifier — set of the modifiers described below.rule text — a rule to be modified. For example, [$domain=example.com,app=test_app]##selector. In the modifiers values of the following characters must be escaped: [, ], ,, and \\ (unless it is used for the escaping). Use \\ to escape them. For example, an escaped bracket looks like this: \\]. "},{"title":"$app​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-app-modifier","content":"$app modifier lets you narrow the rule coverage down to a specific application or a list of applications. The modifier's behavior and syntax perfectly match the corresponding basic rules $app modifier. Examples [$app=org.example.app]example.com##.textad hides a div with a class textad at example.com and all subdomains in requests sent from the org.example.app Android app.[$app=~org.example.app1|~org.example.app2]example.com##.textad hides a div with a class textad at example.com and all subdomains in requests sent from any app except org.example.app1 and org.example.app2.[$app=com.apple.Safari]example.org#%#//scriptlet('prevent-setInterval', 'check', '!300') applies scriptlet prevent-setInterval only in Safari browser on Mac.[$app=org.example.app]#@#.textad disables all ##.textad rules for all domains while using org.example.app. Compatibility Such rules with $app modifier are supported by AdGuard for Windows, Mac, and Android. "},{"title":"$domain​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-domain-modifier","content":"$domain modifier limits the rule application area to a list of domains and their subdomains. The modifier's behavior and syntax perfectly match the corresponding basic rules $domain modifier. Examples [$domain=example.com]##.textad — hides a div with a class textad at example.com and all subdomains.[$domain=example.com|example.org]###adblock — hides an element with attribute id equals adblock at example.com, example.org and all subdomains.[$domain=~example.com]##.textad — this rule hides div elements of the class textad for all domains, except example.com and its subdomains. There are 2 ways to specify domain restrictions for non-basic rules: the &quot;classic&quot; way is to specify domains before rule mask and attributes: example.com##.textad;the modifier approach is to specify domains via $domain modifier: [$domain=example.com]##.textad. But rules with mixed style domains restriction are considered invalid. So, for example, the rule [$domain=example.org]example.com##.textad will be rejected. Compatibility Such rules with $domain modifier are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser Extension for Chrome, Firefox, Edge. "},{"title":"$path​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-path-modifier","content":"$path modifier limits the rule application area to specific locations or pages on websites. Syntax $path [&quot;=&quot; pattern]  pattern — optional, a path mask to which the rule is restricted. Its syntax and behavior are pretty much the same as with the pattern for basic rules. You can also use special characters, except for ||, which does not make any sense in this case (see examples below). If pattern is not set for $path, rule will apply only on the main page of website. $path modifier matches the query string as well. $path modifier supports regular expressions in the same way basic rules do. Examples [$path=page.html]##.textad hides a div with a class textad at /page.html or /page.html?&lt;query&gt; or /sub/page.html or /another_page.html[$path=/page.html]##.textad hides a div with a class textad at /page.html or /page.html?&lt;query&gt; or /sub/page.html of any domain but not at /another_page.html[$path=|/page.html]##.textad hides a div with a class textad at /page.html or /page.html?&lt;query&gt; of any domain but not at /sub/page.html[$path=/page.html|]##.textad hides a div with a class textad at /page.html or /sub/page.html of any domain but not at /page.html?&lt;query&gt;[$path=/page*.html]example.com##.textad hides a div with a class textad at /page1.html or /page2.html or any other path matching /page&lt;...&gt;.html of example.com[$path]example.com##.textad hides a div with a class textad at the main page of example.com[$domain=example.com,path=/page.html]##.textad hides a div with a class textad at page.html of example.com and all subdomains but not at another_page.html[$path=/\\\\/(sub1|sub2)\\\\/page\\\\.html/]##.textad hides a div with a class textad at both /sub1/page.html and /sub2/page.html of any domain (please note the escaped special characters) Compatibility Rules with $path modifier are supported by AdGuard for Windows, Mac, and Android, and AdGuard Browser Extension for Chrome, Firefox, and Edge. "},{"title":"url​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-url-modifier","content":"$url modifier limits the rule application area to URLs matching the specified mask. Syntax url = pattern  where pattern is pretty much the same as pattern of the basic rules assuming that some characters must be escaped. The special characters and regular expressions are supported as well. Examples [$url=||example.com/content/*]##div.textad hides a div with a class textad at addresses like https://example.com/content/article.html and even https://subdomain.example.com/content/article.html.[$url=||example.org^]###adblock hides an element with attribute id equal to adblock at example.org and its subdomains.[$url=/\\[a-z\\]+\\\\.example\\\\.com^/]##.textad hides div elements of the class textad for all domains matching the regular expression [a-z]+\\.example\\.com^. Compatibility Rules with the $url modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.11 or later. "},{"title":"Information for filters maintainers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#information-for-filters-maintainers","content":"If you maintain a third-party filter that is known to AdGuard, you might be interested in the information presented in this section. Please note that hints will be applied to registered filters only. The filter is considered to be registered and known by AdGuard, if it is present in the known filters index. If you want your filter to be registered, please file an issue to AdguardFilters repo. "},{"title":"Preprocessor directives​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#preprocessor-directives","content":"We provide preprocessor directives that can be used by filters maintainers to improve compatibility with different ad blockers and provide: including a fileapplying rules conditionally by ad blocker typecontent blocker specifying for rules applying in Safari note Any mistake in a preprocessor directive will lead to AdGuard failing the filter update in the same way as if the filter URL was unavailable. Preprocessor directives can be used in the user rules or in the custom filters. Including a file​ The !#include directive allows to include contents of a specified file into the filter. It supports only files from the same origin to make sure that the filter maintainer is in control of the specified file. The included file can also contain pre- directives (even other !#include directives). Ad blockers should consider the case of recursive !#include and implement a protection mechanism. Syntax !#include file_path  where file_path is a same origin absolute or relative file path to be included. The files must originate from the same domain but may be located in a different folder. If included file is not found or unavailable, the whole filter update should fail. Same-origin limitation should be disabled for local custom filters. Examples Filter URL: https://example.org/path/filter.txt ! Valid (same origin): !#include https://example.org/path/includedfile.txt ! ! Valid (relative path): !#include /includedfile.txt !#include ../path2/includedfile.txt ! ! Invalid (another origin): !#include https://domain.com/path/includedfile.txt  Conditions​ Filters maintainers can use conditions to supply different rules depending on the ad blocker type. When an adblocker encounters an !#if directive, followed eventually by an !#endif directive, it will compile the code inside of the directives block only if the specified condition is true. Condition supports all the basic logical operators. A conditional directive beginning with an !#if directive must explicitly be terminated with an !#endif directive. Whitespaces matter. !#if is a valid directive, while !# if is not. Syntax !#if (conditions) rules_list !#endif  where: !#if (conditions) — start of the blockconditions — just like in some popular programming languages, preprocessor conditions are based on constants declared by ad blockers. Ad blocker authors define on their own what exact constants do they declare. Possible values: adguard always declared; shows maintainers that this is one of AdGuard products; should be enough in 95% of casesproduct-specific constants for cases when you need a rule to work (or not work — then ! should be used before constant) in a specific product only: adguard_app_windows — AdGuard for Windowsadguard_app_mac — AdGuard for Macadguard_app_android — AdGuard for Androidadguard_app_ios — AdGuard for iOSadguard_ext_safari — AdGuard for Safariadguard_ext_chromium — AdGuard Browser Extension for Chrome (and chromium-based browsers, e.g. new Microsoft Edge)adguard_ext_firefox — AdGuard Browser Extension for Firefoxadguard_ext_edge — AdGuard Browser Extension for Edge Legacyadguard_ext_opera — AdGuard Browser Extension for Operaadguard_ext_android_cb — AdGuard Content Blocker for mobile Samsung and Yandex browsersext_ublock — special case; this one is declared when a uBlock version of a filter is compiled by the FiltersRegistry rules_list — list of rules!#endif — end of the block Examples ! for all AdGuard products except AdGuard for Safari !#if (adguard &amp;&amp; !adguard_ext_safari) ||example.org^$third-party domain.com##div.ad !#endif  ! directives even can be combined !#if (adguard_app_android) !#include /androidspecific.txt !#endif  Safari affinity​ Safari is notoriously known for its harsh 150k max limit for filtering rules in content blockers. But in AdGuard for Safari and AdGuard for iOS max rule count is raised to 300k by splitting them into several content blockers. Generally, several filters categories are more or less independent, so there is such content blockers with such categories included: AdGuard General — Ad Blocking, Language-specificAdGuard Privacy — PrivacyAdGuard Social — Social Widgets, AnnoyancesAdGuard Security — SecurityAdGuard Other — OtherAdGuard Custom — Custom User rules and Allowlist are added to every content blocker. The main issue with using multiple content blockers is that rules inside these content blockers cannot influence each other. This may lead to different unexpected issues. So filters maintainers may use !#safari_cb_affinity to define Safari content blockers affinity for the rules inside of the directive block. Syntax !#safari_cb_affinity(content_blockers) rules_list !#safari_cb_affinity  where: !#safari_cb_affinity(content_blockers) — start of the blockcontent_blockers — comma-separated list of content blockers. Possible values: general — AdGuard General content blockerprivacy — AdGuard Privacy content blockersocial — AdGuard Social content blockersecurity — AdGuard Security content blockerother — AdGuard Other content blockercustom — AdGuard Custom content blockerall — special keyword that means that the rules must be included into all content blockers rules_list — list of rules!#safari_cb_affinity — end of the block Examples ! to unhide specific element which is hidden by AdGuard Base filter: !#safari_cb_affinity(general) example.org#@#.adBanner !#safari_cb_affinity  ! to allowlist basic rule from AdGuard Tracking Protection filter filter: !#safari_cb_affinity(privacy) @@||example.org^ !#safari_cb_affinity  "},{"title":"Hints​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#hints","content":"&quot;Hint&quot; is a special comment, instruction to the filters compiler used on the server side (see FiltersRegistry). Syntax !+ HINT_NAME1(PARAMS) HINT_NAME2(PARAMS)  Multiple hints can be applied. NOT_OPTIMIZED hint​ For each filter, AdGuard compiles two versions: full and optimized. Optimized version is much more lightweight and does not contain rules which are not used at all or used rarely. Rules usage frequency comes from the collected filter rules statistics. But filters optimization is based on more than that — some filters have specific configuration. This is how it looks like for Base filter: &quot;filter&quot;: AdGuard Base filter, &quot;percent&quot;: 30, &quot;minPercent&quot;: 20, &quot;maxPercent&quot;: 40, &quot;strict&quot;: true  where: filter — filter identifierpercent — expected optimization percent ~= (rules count in optimized filter) / (rules count in original filter) * 100minPercent — lower bound of percent valuemaxPercent — upper bound of percent valuestrict — if percent &lt; minPercent OR percent &gt; maxPercent and strict mode is on then filter compilation should fail, otherwise original rules must be used In other words, percent is the &quot;compression level&quot;. For instance, for the Base filter it is configured to 40%. It means that optimization algorithm should strip 60% of rules. Eventually, here are the two versions of the Base filter for AdGuard Browser Extension: full: https://filters.adtidy.org/extension/chromium/filters/2.txtoptimized: https://filters.adtidy.org/extension/chromium/filters/2_optimized.txt If you want to add a rule which should not be removed at optimization use the NOT_OPTIMIZED hint: !+ NOT_OPTIMIZED ||example.org^  And this rule will not be optimized only for AdGuard for Android: !+ NOT_OPTIMIZED PLATFORM(android) ||example.org^  PLATFORM and NOT_PLATFORM hints​ Used to specify the platforms to apply the rules. List of existing platforms and links to Base filter, for example, for each of them: windows — AdGuard for Windows — https://filters.adtidy.org/windows/filters/2.txt mac — AdGuard for Mac — https://filters.adtidy.org/mac_v2/filters/2.txt android — AdGuard for Android — https://filters.adtidy.org/android/filters/2.txt ios — AdGuard for iOS — https://filters.adtidy.org/ios/filters/2.txt ext_chromium — AdGuard Browser Extension for Chrome — https://filters.adtidy.org/extension/chromium/filters/2.txt ext_ff — AdGuard Browser Extension for Firefox — https://filters.adtidy.org/extension/firefox/filters/2.txt ext_edge — AdGuard Browser Extension for Edge — https://filters.adtidy.org/extension/edge/filters/2.txt ext_opera — AdGuard Browser Extension for Opera — https://filters.adtidy.org/extension/opera/filters/2.txt ext_safari — AdGuard for Safari — https://filters.adtidy.org/extension/safari/filters/2.txt ext_android_cb — AdGuard Content Blocker — https://filters.adtidy.org/extension/android-content-blocker/filters/2.txt ext_ublock — uBlock Origin — https://filters.adtidy.org/extension/ublock/filters/2.txt Examples This rule will be available only in AdGuard for Windows, Mac, Android: !+ PLATFORM(windows,mac,android) ||example.org^  This rule will be available for every platform except AdGuard for Safari, AdGuard Content Blocker, and AdGuard for iOS: !+ NOT_PLATFORM(ext_safari, ext_android_cb, ios) ||example.org^  "},{"title":"How to debug filtering rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#how-to-debug-filtering-rules","content":"It may be possible to create simple filtering rules &quot;in your head&quot; but for anything even slightly more complicated you will need additional tools to debug and iterate them. There are tools to assist you with that. You can use DevTools in Chrome and its analogs in other browsers but most AdGuard products provide another one — Filtering log. "},{"title":"Filtering log​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#filtering-log","content":"Filtering log is an advanced tool that will be helpful mostly to filter developers. It lists all web requests that pass through AdGuard, gives you exhaustive information on each of them, offers multiple sorting options, and has other useful features. Depending on which AdGuard product you are using, Filtering log can be located in different places. In AdGuard for Windows you will find it inside Ad Blocker tab or via the tray menu;In AdGuard for Mac it is under Settings → Advanced → Filtering log;In AdGuard for Android it is a separate item in the side menu, also filtering log for a specific app or website is accessible from the Assistant.In AdGuard Browser Extension it is accessible from the Miscellaneous settings tab or by right-clicking the extension icon. Only Chromium- and Firefox-based browsers show applied element hiding rules (including CSS, ExtCSS) and JS rules and scriptlets in their Filtering logs. note In AdGuard for iOS and in AdGuard for Safari Filtering log does not exist because of the way content blockers are implemented in Safari. AdGuard does not see the web requests and therefore cannot display them. "},{"title":"Selectors debugging mode​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#selectors-debug-mode","content":"Sometimes, you might need to check the performance of a given selector or a stylesheet. In order to do it without interacting with JavaScript directly, you can use a special debug style property. When ExtendedCss meets this property, it enables the debugging mode either for a single selector or for all selectors, depending on the debug value. Open the browser console while on a web page to see the timing statistics for selector(s) that were applied there. Debugging mode displays the following stats as object where each of the debugged selectors are keys, and value is an object with such properties: Always printed: selectorParsed — text of eventually parsed selectortimings — list of DOM nodes matched by the selector appliesCount — total number of times that the selector has been applied on the pageappliesTimings — time that it took to apply the selector on the page, for each of the instances that it has been applied (in milliseconds)meanTiming — mean time that it took to apply the selector on the pagestandardDeviation — standard deviationtimingsSum — total time it took to apply the selector on the page across all instances Printed only for remove pseudos: removed — flag to signal if elements we removed Printed if elements are not removed: matchedElements — list of DOM nodes matched by the selectorstyleApplied — parsed rule style declaration related to the selector Examples Debugging a single selector: When the value of the debug property is true, only information about this selector will be shown in the browser console. #$?#.banner { display: none; debug: true; }  Enabling global debug: When the value of the debug property is global, the console will display information about all extended CSS selectors that have matches on the current page, for all the rules from any of the enabled filters. #$?#.banner { display: none; debug: global; }  Testing extended selectors without AdGuard ExtendedCss can be executed on any page without using any AdGuard product. In order to do that you should copy and execute the following code in a browser console: !function(e,t,d){C=e.createElement(t),C.src=d,C.onload=function(){alert(&quot;ExtendedCss loaded successfully&quot;)},s=e.getElementsByTagName(t)[0],s?s.parentNode.insertBefore(C,s):(h=e.getElementsByTagName(&quot;head&quot;)[0],h.appendChild(C))}(document,&quot;script&quot;,&quot;https://AdguardTeam.github.io/ExtendedCss/extended-css.min.js&quot;);  Alternatively, install the ExtendedCssDebugger userscript. Now you can now use the ExtendedCss from global scope, and run its method query() as Document.querySelectorAll(). Examples const selector = 'div.block:has=(.header:matches-css(after, content: Ads))'; // array of HTMLElements matched the `selector` is to be returned ExtendedCss.query(selector);  "},{"title":"Debugging scriptlets​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#debug-scriptlets","content":"If you are using AdGuard Browser Extension and want to debug a scriptlet or a trusted scriptlet rule, you can get additional information by opening the Filtering log. In that case, scriptlets will switch to debug mode and there will be more information in the browser console. The following scriptlets are especially developed for debug purposes: debug-current-inline-scriptdebug-on-property-readdebug-on-property-writelog-addEventListenerlog-on-stack-tracelog-evallog The following scriptlets also may be used for debug purposes: json-pruneprevent-fetchprevent-requestAnimationFrameprevent-setIntervalprevent-setTimeoutprevent-window-open with specified replacement parameterprevent-xhrtrusted-replace-fetch-responsetrusted-replace-xhr-response "},{"title":"Good luck with creating filters​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#good-luck-with-creating-filters","content":"We wish you luck with creating you own ad filters. If you need an advice on how to create your own filters properly, our forum has a special section dedicated to writing your own filtering rules. "},{"title":"프록시 인증서를 설치하는 방법","type":0,"sectionRef":"#","url":"guides/proxy-certificate/","content":"","keywords":""},{"title":"인증서를 다운로드하고 설치하는 방법​","type":1,"pageTitle":"프록시 인증서를 설치하는 방법","url":"guides/proxy-certificate/#인증서를-다운로드하고-설치하는-방법","content":"사용 중인 디바이스의 운영 체제(Windows/Mac/Android/iOS)에 따라 다음 지침 중 하나를 따르세요: "},{"title":"Windows​","type":1,"pageTitle":"프록시 인증서를 설치하는 방법","url":"guides/proxy-certificate/#windows","content":"AdGuard가 설치된 데스크톱 컴퓨터의 IP 주소를 기록해 두세요. AdGuard 보호 기능이 활성화되어 있는지 확인하세요. 그런 다음 설정의 네트워크 탭에서 AdGuard를 HTTP 프록시로 사용 확인란을 선택합니다. AdGuard가 설치된 동일한 기기에서 브라우저를 사용하여 다음 링크를 따르세요: http://local.adguard.org/cert. 다운로드 버튼을 클릭합니다. 다운로드한 cert.cer 파일을 AdGuard를 통해 라우팅할 트래픽이 있는 디바이스로 전송합니다. 해당 장치에서 Win 버튼을 누르고 컴퓨터 인증서 관리 를 입력한 다음 Enter를 누릅니다. 인증서 - 로컬 컴퓨터 페이지에서 신뢰할 수 있는 루트 인증 → 인증서 폴더를 찾습니다. 인증서 폴더를 마우스 오른쪽 버튼으로 클릭하고 모든 작업 → 가져오기를 클릭합니다. 인증서 가져오기 마법사 페이지에서 다음을 클릭합니다. 찾아보기를 클릭하여 인증서를 가져옵니다. cert.cer 인증서 파일로 이동하여 선택한 다음 열기를 클릭합니다. 다음을 클릭합니다. 모든 인증서를 다음 스토어에 배치 확인란을 선택합니다. 인증서 저장소 필드에 신뢰할 수 있는 루트 인증 기관 이 표시되는지 확인하고 다음을 클릭합니다. 마침을 클릭합니다. Win 키를 누른 다음 설정을 엽니다. 네트워크 &amp; 인터넷 → 프록시를 선택합니다. 자동 감지 설정 끄기. 프록시 서버 사용 탭에서 설정을 클릭합니다. 토글을 켭니다. 프록시 IP 주소, 데스크톱 컴퓨터의 명시된 IP 주소를 입력합니다(1단계). 포트, 데스크톱 AdGuard 앱의 네트워크 설정에서 선택한 포트를 입력합니다. 저장을 클릭합니다. "},{"title":"Mac​","type":1,"pageTitle":"프록시 인증서를 설치하는 방법","url":"guides/proxy-certificate/#mac","content":"AdGuard가 설치된 데스크톱 컴퓨터의 IP 주소를 기록해 두세요. AdGuard 보호 기능이 활성화되어 있는지 확인하세요. 그런 다음 설정 → 네트워크 → HTTP 프록시 로 이동하여 HTTP 프록시로 AdGuard 사용확인란을 선택합니다. AdGuard가 설치된 컴퓨터에서 웹 브라우저를 사용하여 다음 링크를 따르세요: http://local.adguard.org/cert. 다운로드 버튼을 클릭합니다. 다운로드한 cert.cer 파일을 AdGuard를 통해 라우팅할 트래픽이 있는 디바이스로 전송합니다. 다운로드한 인증서 파일을 두 번 클릭합니다. 관리자 비밀번호를 입력한 다음 키체인 수정을 클릭합니다. Spotlight (오른쪽 상단의 검색 아이콘)로 이동하여 '키체인 액세스'를 입력한 다음 검색 결과에서 키체인 액세스 를 선택합니다. 시스템에서 추가한 인증서를 강조 표시합니다. 마우스 오른쪽 버튼을 클릭하고 컨텍스트 메뉴에서 정보 얻기 를 선택합니다. 신뢰를 확장하여 인증서에 대한 신뢰 정책을 표시합니다. 보안 소켓 계층(SSL)에서 항상 신뢰를 선택합니다. 시스템 환경설정 → 네트워크 을 열고 상단의 활성 연결을 선택합니다. 세부 정보... 를 클릭하고 프록시 탭으로 이동합니다. 두 개의 확인란을 선택합니다: 웹 프록시(HTTP) 및 보안 웹 프록시(HTTPS). 서버 필드에 컴퓨터의 IP 주소를 입력합니다(1단계). 포트 필드에 AdGuard 데스크톱 앱의 네트워크 설정에서 선택한 포트를 입력합니다. "},{"title":"Android​","type":1,"pageTitle":"프록시 인증서를 설치하는 방법","url":"guides/proxy-certificate/#android","content":"AdGuard가 설치된 데스크톱 컴퓨터의 IP 주소를 기록해 두세요. AdGuard 보호 기능이 활성화되어 있는지 확인하세요. 그런 다음 설정의 네트워크 탭에서 AdGuard를 HTTP 프록시로 사용 확인란을 선택합니다. AdGuard가 설치된 컴퓨터에서 웹 브라우저를 사용하여 다음 링크를 따르세요: http://local.adguard.org/cert. 다운로드 버튼을 클릭합니다. 다운로드한 cert.cer 파일을 AdGuard를 통해 라우팅할 트래픽이 있는 디바이스로 전송합니다. 이전에 다운로드한 cert.cer 인증서를 찾아서 탭하여 파일을 엽니다. 일부 휴대폰에서는 디바이스 비밀번호를 입력하라는 메시지가 표시될 수 있습니다. 그런 다음 확인을 누릅니다. 이제 인증서가 설치되었습니다. 활성 Wi-Fi 네트워크의 고급 설정을 엽니다. 프록시 유형 을 매뉴얼으로 전환합니다. 프록시 호스트 이름, 데스크톱 컴퓨터의 IP 주소를 입력합니다(1단계). 프록시 포트, AdGuard 데스크톱 앱의 네트워크 설정에서 선택한 포트를 입력합니다. "},{"title":"iOS​","type":1,"pageTitle":"프록시 인증서를 설치하는 방법","url":"guides/proxy-certificate/#ios","content":"AdGuard가 설치된 데스크톱 컴퓨터의 IP 주소를 기록해 두세요. AdGuard 보호 기능이 활성화되어 있는지 확인하세요. 그런 다음 설정의 네트워크 탭에서 AdGuard를 HTTP 프록시로 사용 확인란을 선택합니다. AdGuard가 설치된 컴퓨터에서 웹 브라우저를 사용하여 다음 링크를 따르세요: http://local.adguard.org/cert. 다운로드 버튼을 클릭합니다. 다운로드한 cert.cer 파일을 AdGuard를 통해 라우팅할 트래픽이 있는 디바이스로 전송합니다. 열기 설정 → 보안 → 암호화 &amp; 자격 증명 → 인증서 설치. Android 디바이스는 기본적으로 인증서를 신뢰하지 않으므로 CA 인증서를 선택하면 경고가 표시됩니다. 어쨌든 설치를 탭합니다. 설정 → 프로필 다운로드 를 열고 오른쪽 상단에서 설치 를 탭합니다. 비밀번호를 입력하고 설치를 확인합니다. 완료를 탭합니다. 설정 → 일반 → 정보 → 인증서 신뢰 설정으로 이동합니다. 옆의 스위치를 활성화합니다 Adguard Personal CA. 이제 인증서가 설치되었습니다. 해당 장치에서 활성 Wi-Fi 네트워크의 고급 설정을 엽니다. 프록시 유형 을 매뉴얼으로 전환합니다. 프록시 호스트 이름, 표시된 컴퓨터의 IP 주소를 입력합니다(1단계). 프록시 포트, AdGuard 데스크톱 앱의 네트워크 설정에서 선택한 포트를 입력합니다. "},{"title":"버그를 신고하는 방법","type":0,"sectionRef":"#","url":"guides/report-bugs/","content":"","keywords":""},{"title":"시작하기 전에​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#시작하기-전에","content":""},{"title":"버그를 신고해야 하는 경우​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#버그를-신고해야-하는-경우","content":"최신 버전을 사용하고 있는지 확인하고, 그렇지 않은 경우 업그레이드하세요. 새 버전에서 버그가 이미 해결되었을 수 있습니다. 해당 버그가 이전에 보고된 적이 없는지 확인하세요. 공개 이슈와 비공개 이슈 모두에 주의를 기울이는 것이 좋습니다.  "},{"title":"문제를 설명하는 방법​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#문제를-설명하는-방법","content":"가능한 한 많은 세부 정보를 제공해 주시면 버그를 재현하고 수정 방법을 쉽게 파악할 수 있습니다. 버그 보고서에서 예상되는 내용은 다음과 같습니다: 앱 버전OS 버전문제를 발견한 시점문제를 발견하기 전에 무엇을 하고 있었는지 또는 앱에 어떤 일이 발생했는지 알려주세요. 재현하는 단계반복 여부 및 빈도VPN 또는 바이러스 백신 소프트웨어 사용 여부 "},{"title":"로그 수집 방법​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#로그-수집-방법","content":"각 플랫폼별 전용 문서에서 로그 수집에 대해 알아보세요. "},{"title":"버그 신고 또는 기능 요청에 투표하는 방법​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#버그-신고-또는-기능-요청에-투표하는-방법","content":"새로운 기능이나 버그 수정의 구현을 지원하려면 GitHub에서 투표할 수 있습니다. 투표하려면 이모티콘으로 반응하기만 하면 됩니다.   오른쪽 상단 모서리 또는 이슈 하단에서 리액션을 찾을 수 있습니다. "},{"title":"모든 플랫폼에 대한 지침​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#모든-플랫폼에-대한-지침","content":""},{"title":"Windows용 AdGuard​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#windows용-adguard","content":"Windows 리포지토리 에서 해당 문제가 아직 보고되지 않았는지 확인하세요. 새 이슈를 만들기 위한 페이지 를 열고 버그 신고를 선택합니다. 양식을 작성하세요. 가능하면 스크린샷이나 화면 녹화본을 첨부하세요.  "},{"title":"Mac용 AdGuard​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#mac용-adguard","content":"Mac 리포지토리 에서 해당 문제가 아직 보고되지 않았는지 확인하세요. 새 이슈를 만들기 위한 페이지를 엽니다. 양식을 작성하세요. 가능하면 스크린샷이나 화면 녹화본을 첨부하세요. "},{"title":"Android용 AdGuard​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#android용-adguard","content":"Android 리포지토리 에서 해당 문제가 아직 보고되지 않았는지 확인하세요. 새 이슈를 만들기 위한 페이지 를 열고 버그 신고를 선택합니다. 양식을 작성하세요. 가능하면 스크린샷이나 화면 녹화본을 첨부하세요. "},{"title":"iOS용 AdGuard​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#ios용-adguard","content":"iOS 리포지토리에서 해당 문제가 아직 보고되지 않았는지 확인하세요. 새 이슈를 만들기 위한 페이지 를 열고 버그 신고를 선택합니다. 양식을 작성하세요. 가능하면 스크린샷이나 화면 녹화본을 첨부하세요. "},{"title":"AdGuard 확장 프로그램​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#adguard-확장-프로그램","content":"확장 프로그램 리포지토리에서 해당 문제가 아직 보고되지 않았는지 확인하세요. 새 이슈를 만들기 위한 페이지 를 열고 버그 신고를 선택합니다. 양식을 작성하세요. 가능하면 스크린샷이나 화면 녹화본을 첨부하세요. "},{"title":"Safari용 AdGuard​","type":1,"pageTitle":"버그를 신고하는 방법","url":"guides/report-bugs/#safari용-adguard","content":"Safari 리포지토리에서 해당 문제가 아직 보고되지 않았는지 확인하세요. 새 이슈를 만들기 위한 페이지 를 열고 버그 신고를 선택합니다. 양식을 작성하세요. 가능하면 스크린샷이나 화면 녹화본을 첨부하세요. "},{"title":"웹사이트 신고 방법","type":0,"sectionRef":"#","url":"guides/report-website/","content":"","keywords":""},{"title":"이 웹사이트에 관한 불만 사항 제출​","type":1,"pageTitle":"웹사이트 신고 방법","url":"guides/report-website/#report","content":"note When you send a complaint via the app or via AdGuard Browser Assistant, all information is pre-filled automatically. 스크린샷을 제외하고는 직접 만들어서 첨부해야 합니다. 직접 링크를 사용하는 경우 데이터를 수동으로 입력해야 합니다. 광고가 다시 삽입되거나 웹사이트가 잘못 표시되는 것을 신고하려면 다음과 같이 해야 합니다: "},{"title":"확장 프로그램​","type":1,"pageTitle":"웹사이트 신고 방법","url":"guides/report-website/#extension","content":"해당 아이콘을 클릭하여 브라우저 확장 설정을 엽니다.문제 신고하기를 클릭합니다.  양식을 작성하면 GitHub에 이슈가 자동으로 생성됩니다. 문제 해결을 위한 진행 상황을 모니터링할 수 있는 링크도 제공됩니다. "},{"title":"Windows​","type":1,"pageTitle":"웹사이트 신고 방법","url":"guides/report-website/#windows","content":"AdGuard 브라우저 어시스턴트를 열고 문제 신고하기를 누릅니다.  불만 신고 양식을 작성합니다.양식을 작성하면 GitHub에 이슈가 자동으로 생성됩니다. 문제 해결을 위한 진행 상황을 모니터링할 수 있는 링크도 제공됩니다. "},{"title":"Android​","type":1,"pageTitle":"웹사이트 신고 방법","url":"guides/report-website/#android","content":"AdGuard 설정을 엽니다.Choose Support, then Send Feedback → Missed ad/Incorrect blocking:  양식을 작성하면 GitHub에 이슈가 자동으로 생성됩니다. 문제 해결을 위한 진행 상황을 모니터링할 수 있는 링크도 제공됩니다. "},{"title":"Mac​","type":1,"pageTitle":"웹사이트 신고 방법","url":"guides/report-website/#mac","content":"AdGuard 브라우저 어시스턴트를 열고 문제 신고하기를 누릅니다.  불만 신고 양식을 작성합니다.양식을 작성하면 GitHub에 이슈가 자동으로 생성됩니다. 문제 해결을 위한 진행 상황을 모니터링할 수 있는 링크도 제공됩니다. "},{"title":"iOS​","type":1,"pageTitle":"웹사이트 신고 방법","url":"guides/report-website/#ios","content":"AdGuard 설정을 엽니다.지원을 선택한 다음 잘못된 차단 신고를 선택합니다:  불만 신고 양식을 작성합니다.양식을 작성하면 GitHub에 이슈가 자동으로 생성됩니다. 문제 해결을 위한 진행 상황을 모니터링할 수 있는 링크도 제공됩니다. "},{"title":"양식 작성​","type":1,"pageTitle":"웹사이트 신고 방법","url":"guides/report-website/#form","content":"note When you send a complaint via the app or via AdGuard Assistant, all information is pre-filled automatically. 스크린샷을 제외하고는 직접 만들어서 첨부해야 합니다. 직접 링크를 사용하는 경우 데이터를 수동으로 입력해야 합니다. Filling in the form starts with detailing the type and version of a product; Specify the type of problem and additional information on using third-party software (antivirus, VPN); Enter the address of the page and the browser (or the download link in case of an app) where you've encountered a problem; Application configuration must be specified: 사용하는 필터Stealth mode settings, if this function is enabled. Provide a screenshot that captures the essence of a problem; Important: Hide your personal information (email, phone number, etc.) because screenshots will become publicly available. Provide additional information that will help filter developers understand the situation; Also enter your account on GitHub, if available (it's necessary for developers to be able to reach you in case they need some additional details); Check each step before sending the form; You'll be provided with a link to track progress on your task. "},{"title":"문제 진단​","type":1,"pageTitle":"웹사이트 신고 방법","url":"guides/report-website/#issue","content":"This option is suitable for those who aren’t afraid of difficulties and don’t mind trying to find the problem on their own. This does not require any special skills or in-depth knowledge of HTML and CSS. For example, you are faced with a situation that your favorite website won’t open, authorization has broken, or some page elements are displayed incorrectly. The cause may be using a specific filter/extension/Stealth Mode setting. To diagnose these problems, you need to do the following: "},{"title":"필터​","type":1,"pageTitle":"웹사이트 신고 방법","url":"guides/report-website/#필터","content":"Disable Ad Blocker;If it solved the problem, re-enable the module and disable filters one by one. This is done to identify filters that &quot;break&quot; the page;If you have managed to find out which filter &quot;breaks&quot; a page, you should inform the developers when filling out the form (see above). In this case, it is desirable to return to the initial settings;If turning off all the filters hasn't produced any results, apply rule @@||example.com^$document,extension; where example.com is an example site name that needs to be replaced by your own option;In case of failure (issue not solved), turn to section Stealth Mode. "},{"title":"스텔스 모드​","type":1,"pageTitle":"웹사이트 신고 방법","url":"guides/report-website/#스텔스-모드","content":"Disable Stealth Mode;If this solved the problem, turn the module on and turn off the Stealth Mode options one by one. This is done to detect which filters are &quot;breaking&quot; the page;If you have managed to to detect which setting &quot;breaks&quot; a page, you should inform the developers when filling out the form (see above). In this case, it is desirable to return to the initial settings;In case of failure (issue not solved), turn to section Extensions. "},{"title":"확장 프로그램​","type":1,"pageTitle":"웹사이트 신고 방법","url":"guides/report-website/#확장-프로그램","content":"Disable Extensions;If this solved the problem, turn on the module and turn off Extensions settings one by one. This is done to find out which setting &quot;breaks&quot; the page;If you have managed to detect which setting &quot;breaks&quot; a page, inform the developers when filling out the form (see above). In this case, it is desirable to return to the initial settings. "},{"title":"타사 광고 차단기​","type":1,"pageTitle":"웹사이트 신고 방법","url":"guides/report-website/#타사-광고-차단기","content":"Some browsers and antivirus programs (such as Yandex Browser, Kaspersky, etc.) have built-in ad blockers. They may affect and cause problems in the operation of sites. If you use such programs, make sure that the problem is on the side of AdGuard: disable AdGuard filtering and try to repeat the problem. If it remains, it means that the problem is caused by another application or browser. If the problem is caused by AdGuard, follow the steps described in the previous paragraphs. "},{"title":"스크린샷을 찍는 방법","type":0,"sectionRef":"#","url":"guides/take-screenshot/","content":"","keywords":""},{"title":"Android​","type":1,"pageTitle":"스크린샷을 찍는 방법","url":"guides/take-screenshot/#android","content":"Android 기기에서 스크린샷을 찍는 것은 기기 모델 및 제조업체에 따라 다양한 방법으로 수행할 수 있습니다. 일반적으로 Android의 경우 다음 버튼 조합을 사용해야 합니다. 볼륨 작게 및 전원 버튼을 동시에 1~2초 동안 누르십시오. Android 기기는 전체 화면을 캡처하여 사진으로 저장합니다. 따라서 갤러리의 스크린샷 폴더에서 스크린샷을 찾을 수 있습니다. 단, 이미 말씀드린 것처럼 특정 기기에 따라 차이가 있을 수 있습니다. 다른 방법을 살펴보겠습니다. 볼륨 작게 및 전원 버튼을 동시에 1-2초 동안 누르십시오.뒤로가기 및 홈 버튼을 동시에 누르십시오. Android 8 이상에서는 휴대폰의 왼쪽 또는 오른쪽 가장자리를 따라 손을 수직으로 놓고 그 가장자리에서 화면을 터치한 상태에서 스와이프하거나(삼성 디바이스), 세 손가락을 아래로 스와이프하는 방법(OnePlus 디바이스) 등 다른 조작을 통해 스크린샷을 찍을 수도 있습니다. 기기 설정에서 스크린샷을 찍을 수 있는 다른 옵션에 대해 알아보세요. 게다가, 예를 들어 Screenshot Easy, Screenshot Ultimate, Screenshot Snap 등과 같이 기기에서 스크린샷을 찍기 위해 특별한 응용 프로그램을 사용할 수 있습니다. "},{"title":"iOS​","type":1,"pageTitle":"스크린샷을 찍는 방법","url":"guides/take-screenshot/#ios","content":"모든 iOS 기기(오래된 기기 제외)에서 표준 도구를 사용하여 스크린샷을 찍을 수 있습니다. iOS 기기에서 스크린샷을 찍으려면 다음 조합을 사용하세요. 전원 (측면) 버튼과 홈 버튼을 동시에 눌렀다가 빠르게 놓습니다. iPhone X 이상에서 스크린샷을 찍는 방법은 다음과 같습니다. 전원 버튼과 볼륨 높이기 버튼을 동시에 눌렀다가 빠르게 놓습니다. iOS 기기는 전체 화면을 캡처하여 사진으로 저장합니다. 기본 사진 앱에서 찾을 수 있습니다. "},{"title":"Windows​","type":1,"pageTitle":"스크린샷을 찍는 방법","url":"guides/take-screenshot/#windows","content":"Windows에서 스크린샷을 찍으려면 PrtScn 버튼을 누르십시오. 일부 노트북에서는 Fn을 누른 다음 PrtScn을 눌러야 합니다. 참고: PrtScn (인쇄 화면) 버튼은 PrntScrn, PrtScn, PrtScr 또는 PrtSc와 같은 다양한 키보드에서 다르게 나타날 수도 있습니다. Windows는 전체 화면을 캡처하여 (보이지 않는) 클립보드에 복사합니다. 활성 창의 스크린샷을 찍으려면 다음 조합을 사용하십시오. Alt 을 누른 상태에서 PrtScn (또는 일부 노트북에서는 Fn + Alt + PrtScn)을 누릅니다. 특정 영역의 스크린샷을 찍으려면 다음 조합을 사용해야 합니다. *Win (Windows 버튼) 및 Shift를 누른 상태에서 *S를 누릅니다. 스크린샷을 찍으면 클립보드에 저장됩니다. 대부분의 경우 Ctrl + V 버튼 조합을 사용하여 현재 편집 중인 문서에 붙여 넣을 수 있습니다. 또는 스크린샷을 파일로 저장해야 하는 경우 기본 Paint 프로그램(또는 이미지로 작업할 수 있는 다른 앱)을 열어야 합니다. 동일한 버튼 조합을 사용하거나 붙여넣기 버튼(일반적으로 화면의 왼쪽 상단 모서리에 있음)을 클릭하여 스크린샷을 붙여 넣은 다음 저장합니다. Windows 8 및 10 에서는 Win + PrtScn 조합으로 매우 빠르게 스크린샷을 찍을 수 있습니다. 이 버튼을 누르는 즉시 스크린샷이 사진 → 스크린샷 폴더에 파일로 자동 저장됩니다. 컴퓨터의 표준 프로그램 중 시작 메뉴를 통해 찾을 수 있는 Snipping Tool 이라는 스크린샷 전용 프로그램도 있습니다. 캡처 도구를 사용하면 바탕화면의 모든 영역이나 전체화면을 캡처할 수 있습니다. 이 프로그램을 사용하여 스크린샷을 찍은 후 사진을 편집하고 컴퓨터의 모든 폴더에 저장할 수 있습니다. 게다가 PicPick, Nimbus Screenshot, Screenshot Captor, Snipaste, Monosnap 등과 같이 컴퓨터에서 스크린샷을 찍기 위해 다른 앱을 사용할 수 있습니다. "},{"title":"macOS​","type":1,"pageTitle":"스크린샷을 찍는 방법","url":"guides/take-screenshot/#mac","content":"Mac에서 스크린샷을 찍으려면 다음 버튼 조합을 사용하십시오. **⌘ Cmd + Shift + 3을 함께 길게 누릅니다. Mac은 전체 화면을 캡처하여 바탕 화면에 파일로 저장됩니다. 활성 창의 스크린샷을 찍으려면 다음 조합을 사용하십시오. ⌘ Cmd + Shift + 4 + 스페이스바 를 함께 길게 누릅니다. 포인터가 카메라 아이콘으로 변경됩니다. 창을 클릭하여 캡처합니다. 스크린샷 촬영을 취소하려면 Esc 버튼을 누르세요. 특정 영역의 스크린샷을 찍으려면 다음 조합을 사용해야 합니다. * *⌘ Cmd + Shift + 4**를 함께 길게 누릅니다. 십자선을 드래그하여 필요한 영역을 선택합니다. 마우스 또는 트랙패드를 놓아 스크린샷을 찍고, 취소하려면 Esc 버튼을 누르십시오. Touch Bar (MacBook Pro)의 스크린샷을 찍으려면 다음 조합을 사용합니다. **⌘ Cmd + Shift + 6을 동시에 누르십시오. Mac은 전체 Touch Bar를 캡처하여 바탕화면에 파일로 저장합니다. 스크린샷을 저장하는 대신 클립보드에 복사하려면 위의 조합과 함께 Ctrl을 누르십시오. 그런 다음 Cmd + V 조합을 사용하여 현재 편집 중인 문서 또는 이미지에 스크린샷(클립보드에서) 을 붙여 넣을 수 있습니다. 미리보기를 사용하고 스크린샷 찍기 (선택한 영역, 창 또는 전체 화면)를 선택하여 스크린샷을 찍을 수도 있습니다. 미리보기를 사용하면 스크린샷을 JPG, TIFF, PDF 및 기타 파일 형식으로 저장할 수 있습니다. "},{"title":"AdGuard beta testing","type":0,"sectionRef":"#","url":"miscellaneous/contribute/beta-testing/","content":"","keywords":""},{"title":"How to become a beta tester​","type":1,"pageTitle":"AdGuard beta testing","url":"miscellaneous/contribute/beta-testing/#intro","content":"Our requirements are easy: use AdGuard, upgrade to the beta version when it becomes available, and report any bugs you notice. However, you will need either a forum or a GitHub account (or both) to become our beta tester, so you may want to get that out of the way first. In any case, every single thing you need to know is gathered on a dedicated page. If you want to skip the description part and get straight to the action, you can apply here. Your application will be reviewed within 1-3 working days, and you'll get a reply via email. "},{"title":"How to report a bug​","type":1,"pageTitle":"AdGuard beta testing","url":"miscellaneous/contribute/beta-testing/#report-a-bug","content":"If you spotted a bug or just want to share your suggestion, let us know in any of the possible ways: Go to forum.adguard.com and post there a new thread (or find an existing one) in the beta forum category. Make sure to read forum rules; Go to GitHub and find a suitable repository. Create a new issue there and describe the bug/feature request in detail. The above two methods are the most preferred, but you can use others if necessary: Find us on various social media platforms, like Facebook, Reddit, etc. However, this is not the most convenient way to discuss technical matters. Email our support team from the Support tab in the app or write directly to support@adguard.com. "},{"title":"How to activate the beta key in the iOS application​","type":1,"pageTitle":"AdGuard beta testing","url":"miscellaneous/contribute/beta-testing/#ios","content":"If you have already received a beta key and it is listed in your adguard.com account, go to the app and open the license section (Get Premium). Once there, enter the credentials from your AdGuard account. After that, the premium features will become available automatically. "},{"title":"What else?​","type":1,"pageTitle":"AdGuard beta testing","url":"miscellaneous/contribute/beta-testing/#what-else","content":"There is not much more to add. You don't have to go out of your way to find bugs. You can continue using AdGuard as usual. However, if you encounter a bug, please report it. Of course, we appreciate any additional effort and/or extra forum activity, etc. Occasionally, you will receive our newsletters, keeping you informed of the latest changes in the beta (in case you missed them) and other important news. You can unsubscribe from it at any time. "},{"title":"Credits & Acknowledgements","type":0,"sectionRef":"#","url":"miscellaneous/acknowledgements/","content":"","keywords":""},{"title":"Third-party software​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#software","content":"This is the list of libraries and other resources that really helped us with AdGuard software development process. "},{"title":"AdGuard for Windows​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#win","content":"SQLLite database engine: https://sqlite.orgADO.NET provider for SQLite: https://system.data.sqlite.org/index.html/doc/trunk/www/index.wikiJson.NET — high-performance JSON framework for .NET: https://www.newtonsoft.com/jsonAvalonEdit — WPF-based text editor component: https://avalonedit.net "},{"title":"AdGuard for Mac​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#mac","content":"Red Sweater Software, LLC for RSVerticallyCenteredTextFieldCell component: http://www.red-sweater.com/blog/148/what-a-difference-a-cell-makesIlija Tovilo for ITProgressIndicator component: https://github.com/iluuu1994/ITProgressIndicatorSparkle Project for Sparkle.framework component: http://sparkle-project.orgRobbie Hanson for GCDAsyncSocket component: https://github.com/robbiehanson/CocoaAsyncSocketTony Million for Reachability component: https://github.com/tonymillion/ReachabilityAugust «Gus» Mueller for Fmdb component: https://github.com/ccgus/fmdbStephen F. Booth for SFBCrashReporter project: https://github.com/sbooth/SFBCrashReporterBartosz Janda for Acextract component: https://github.com/bartoszj/acextractFLOPageViewController: https://github.com/floschliep/FLOPageViewController "},{"title":"AdGuard for Android​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#android","content":"Logback-android by Tony19: https://tony19.github.io/logback-androidOtto by Square: http://square.github.io/ottoRootTools Library by Stericson: https://github.com/Stericson/RootToolsMaterialDateRangePicker by Supratim Chakraborty: https://github.com/borax12/MaterialDateRangePickerHelloCharts by Leszek Wach: https://github.com/lecho/hellocharts-android "},{"title":"AdGuard for iOS​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#ios","content":"Reachability component by Tony Million: https://github.com/tonymillion/ReachabilityFmdb component by August «Gus» Mueller: https://github.com/ccgus/fmdbNSStringPunycodeAdditions component by Nate Weaver: https://github.com/Wevah/Punycode-CocoaMinizip-ng library by Nathan Moinvaziri: https://github.com/zlib-ng/minizip-ngLottie for iOS library by Brandon Withrow: https://github.com/airbnb/lottie-ios "},{"title":"AdGuard 확장 프로그램​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#extension","content":"moment: https://github.com/moment/momentsimply-deferred: https://github.com/sudhirj/simply-deferredSHA256: https://github.com/AndersLindman/SHA256D3: https://github.com/d3/d3c3: https://github.com/c3js/c3nanobar: https://github.com/jacoborus/nanobarcrypto-js: https://github.com/brix/crypto-jsace: https://github.com/ajaxorg/ace "},{"title":"AdGuard for Safari​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#safari","content":"ace: https://github.com/ajaxorg/aceadm-zip: https://github.com/cthackers/adm-zipconfig: https://github.com/lorenwest/node-configelectron-debug: https://github.com/sindresorhus/electron-debugelectron-log: https://github.com/megahertz/electron-logelectron-remote: https://github.com/electron-userland/electron-remoteelectron-simple-updater: https://github.com/megahertz/electron-simple-updaterelectron-store: https://github.com/sindresorhus/electron-storeelectron-updater: https://github.com/electron-userland/electron-builderi18n: https://github.com/mashpie/i18n-noderequest-promise: https://github.com/request/request-promisexmlhttprequest: https://github.com/driverdan/node-XMLHttpRequestaxios: https://github.com/axios/axiosdevtron: https://github.com/electron-userland/devtronelectron: https://github.com/electron/electronelectron-osx-sign: https://github.com/electron/electron-osx-signelectron-rebuild: https://github.com/electron/electron-rebuildfind-in-files: https://github.com/kaesetoast/find-in-filesgulp: https://github.com/gulpjs/gulpgulp-hash-creator: https://github.com/wahaha2012/gulp-hash-creatorrequest: https://github.com/request/requestrequire-dir: https://github.com/aseemk/requireDir "},{"title":"AdGuard Browser Assistant​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#assistant","content":"React: https://github.com/facebook/reactwebextension-polyfill: https://github.com/mozilla/webextension-polyfillreact-intl: https://github.com/formatjs/formatjs/tree/main/packages/react-intlmobx: https://github.com/mobxjs/mobxmobx-react: https://github.com/mobxjs/mobx-reactlodash: https://github.com/lodash/lodashnanoid: https://github.com/ai/nanoidreact-modal: https://github.com/reactjs/react-modalclassnames: https://github.com/JedWatson/classnamesbabel: https://github.com/babel/babelaxios: https://github.com/axios/axioscrx: https://github.com/oncletom/crxeslint: https://github.com/eslint/eslintjest: https://github.com/facebook/jestpostcss: https://github.com/postcss/postcssweb-ext: https://github.com/mozilla/web-extwebpack: https://github.com/webpack/webpack "},{"title":"CoreLibs​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#corelibs","content":"BoringSSL: https://github.com/google/boringssl/blob/master/LICENSEbrotli: https://github.com/google/brotli/blob/master/LICENSEChromium: https://github.com/chromium/chromium/blob/master/LICENSEDetours: https://github.com/microsoft/Detours/blob/main/LICENSE.mdeDistantObject: https://github.com/google/eDistantObject/blob/master/LICENSEFF/FFOS libs by Simon Zolin: https://github.com/stsaz/ffbase/blob/master/README.mdGoogle test: https://github.com/google/googletest/blob/master/LICENSEhttp-parser: https://github.com/nodejs/http-parser/blob/master/LICENSE-MITjsmn: https://github.com/zserge/jsmn/blob/master/LICENSEklib: https://github.com/attractivechaos/klib/blob/master/khash.hlibevent: https://github.com/libevent/libevent/blob/master/LICENSELibreSSL: https://github.com/libressl-portable/openbsd/blob/master/src/lib/libssl/LICENSElwIP: https://lwip.wikia.com/wiki/Licenseminiz: https://github.com/richgel999/miniz/blob/master/LICENSEnghttp2: https://github.com/nghttp2/nghttp2/blob/master/COPYINGPCRE2: https://www.pcre.org/licence.txtSQLite: https://www.sqlite.org/copyright.htmlzlib: https://zlib.net/zlib_license.html "},{"title":"Special thanks​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#testers","content":"Also a huge thanks and gratitude to all beta testers and other engaged users, whose help in finding/eliminating all the bugs, translating AdGuard and moderating our communities was priceless. Special thanks to: ag_bug_finder — beta tester of AdGuard for WindowsAikatsui — active contributor to AdGuard HomeAndy Kleinert (AndyKl) — translator and proofreader to German in CrowdinBigDargon — contributed the hostsVN project as a source to the list of AdGuard DNSBlaz — started as a filter contributor and now working at AdGuardBoo Berry — forum and Telegram group moderatorbuuuuuuu190 — beta tester, active AdGuard Forum memberclarke — beta tester, active AdGuard Forum memberdartrax — beta tester, active AdGuard Forum memberdja2k — beta tester, active AdGuard Forum memberEduardo Addad de Oliveira (eduardoaddad) — translator and proofreader to Portuguese and Portuguese, Brazilian in Crowdinfabjazz — beta tester, active AdGuard Forum memberGörkem Emrah Güler (gork7777) — translator and proofreader to Turkish in Crowdinhanschke — beta tester, active AdGuard Forum memberiDjay — outstanding beta tester of AdGuard for iOSImre Kristoffer Eilertsen (DandelionSprout) — maintainer of &quot;Dandelion Sprout’s Nordic Filters&quot; that are included in all AdGuard toolsIONIL — translator and proofreader to Hebrew in Crowdinitabmedia — beta tester, active AdGuard Forum memberkirasam — beta tester, active AdGuard Forum memberkrystian3w — very active filter contributorlancelot.moon — translator and proofreader to Chinese Traditional in Crowdin, beta testerLord Ami — beta tester, active AdGuard Forum memberLukas Novotny (novas78) — translator and proofreader to Czech in Crowdinmalware1 — beta tester, active AdGuard Forum membermilder — beta tester, active AdGuard Forum memberNicos18 — beta tester, active AdGuard Forum memberOizaro — translator and proofreader to Italian in CrowdinOleg Chashko — very active beta tester of AdGuard for SafariOskari Lavinto (olavinto) — translator and proofreader to Finnish in Crowdinouzbed — beta tester, active AdGuard Forum memberPentagramTr — filter contributor, namely, he has brought a lot of new things to the Turkish filterPeter Hubinsky (hubak) — translator and proofreader to Slovak in CrowdinPiQuark6046 — filter contributorrickyoh — beta tester, active AdGuard Forum memberRonin427 — beta tester, active AdGuard Forum memberSanjay Nand — beta tester, active AdGuard Forum membersaturnotaku — beta tester, active AdGuard Forum membersteve1209 — beta tester, active AdGuard Forum memberstreetwolf — beta tester, active AdGuard Forum membersuperlex — helps us with scriptlets, filters, and AdGuard for SafariTayTayTheKiller — beta tester, active AdGuard Forum memberTPS — bug finder, filter contributorYuki2718 — actively contributes to AdGuard filterszznosar — active beta tester focused on AdGuard for iOSSergey Zozulya (sviperz) — active member of our Telegram group, beta tester  We also want to thank the xda-developers users. Thank you for your helpful feedback! We always appreciate comments from our users, especially constructive ones. You can always contact us to share your thoughts about AdGuard, request new features, and submit bugs. Join the AdGuard Forum, Subreddit, Xda-developers Forum or visit our page on GitHub. "},{"title":"Contribute to AdGuard filters","type":0,"sectionRef":"#","url":"miscellaneous/contribute/filters/","content":"","keywords":""},{"title":"Filtering rules​","type":1,"pageTitle":"Contribute to AdGuard filters","url":"miscellaneous/contribute/filters/#filtering-rules","content":"As you probably know, AdGuard uses filtering rules to block ads, and these rules are combined into thematic blocking filters, like AdGuard Base filter, Mobile ads filter, etc. Read more about how ad blocking works. Websites constantly change the way they embed ads, and we add new rules to our filters to keep them effective. Filter engineers are working on creating new rules, but we always welcome the help and support of volunteers. "},{"title":"How to start​","type":1,"pageTitle":"Contribute to AdGuard filters","url":"miscellaneous/contribute/filters/#how-to-start","content":"However, working with blocking filters requires specific skills. If you have them and know how to create rules, then head straight to our AdGuard Filters repository on GitHub. There you will find a lot of open issues, each one referencing a problem with some website problem — a missed ad, a false positive, etc. Choose any and suggest your own rules in comments. AdGuard filter engineers will review your suggestions, and if they find them appropriate, your rules will be added to AdGuard filters. If you are not yet familiar with our filtering rules syntax, or maybe need a refresher, you'll find the basics about the syntax in our Knowledge base. More advanced guides can be found on the internet, and if you have any questions about the syntax, visit our forum. "},{"title":"Rewards​","type":1,"pageTitle":"Contribute to AdGuard filters","url":"miscellaneous/contribute/filters/#rewards","content":"If you have suggested several filtering rules and some of them were approved, then it's time for you to get a reward. Send us a message at st@adguard.com with your GitHub account name, and you'll get a free AdGuard license key. As for the exact number of rules you need to get approved to become eligible, there are no hard rules. This task is not easy, so anything north of 5 should be enough. "},{"title":"AdGuard의 번역가 ·교정자 되기","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/become-translator/","content":"","keywords":""},{"title":"교정자가 되는 방법​","type":1,"pageTitle":"AdGuard의 번역가 ·교정자 되기","url":"miscellaneous/contribute/translate/become-translator/#proofreaders","content":"AdGuard에는 각 언어별로 프루프리더(이전에는 모더레이터라고 함)가 있습니다. 그리고 활동적인 번역가는 프루프리더가 될 수 있습니다. 교정자는 주로 무엇을 하나요? 교정자가 하는 일: 고품질 번역을 승인하고 잘못된 번역을 비승인합니다. 번역의 관련성을 관리합니다. 해당 언어로 번역과 관련된 댓글에 응답합니다. Every year, the best proofreaders receive gifts from AdGuard. 물론, 활동적인 번역가들에게도 보상이 제공됩니다. AdGuard의 보상 시스템에 대해 자세히 알아보세요. "},{"title":"Guidelines and recommendations","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/guidelines/","content":"Guidelines and recommendations There are several things we'd like you to know before you start translating. It will not only save your time and effort, but also ensure that we are on the same page in terms of the meaning of phrases being translated. Once you open our page on Crowdin, choose any project you need and select your language. You'll also be able to switch between languages even after opening certain product folders. Choose any of available product folders and select a file — now you can start translating. note You can also change the Crowdin interface language by clicking the Settings icon in the top right corner of the page. In the opened window scroll down to the UI language tab. Open it, choose a language and click Change. The following guidelines will help you through the process. You can filter translations by clicking this button and selecting any offered option. Easily move between the files of the project. Pay attention to the glossary terms highlighted with a dotted line in a source phrase. Usually, they are special words (like brand names) that should not be translated. You can suggest your translation for translatable terms in the AdGuard Glossary project. In Crowdin, strings can have notes that make it easier to understand and translate phrases. Look for them in the &quot;Context&quot; field of the source string. Pay attention to screenshots that often go alongside source phrases in the &quot;Context&quot; field as well. They help to understand the context and convey the exact meaning. tip You can request context by clicking the &quot;REQUEST&quot; button. ::: ![crowdin *border](https://cdn.adtidy.org/public/Adguard/kb/en/ag-translations/request.png) In addition to suggesting new translations, you can also leave comments on strings. Use comments to let us know about mistakes in the existing translations, make notes, or ask questions. If you see a comment left on your translation — try to respond to it. There's also a Discussions tab on the main project page that conveniently allows you to see all the comments for the specific language in this project. Crowdin provides a very useful and convenient tool called Translation Memory. With its help, you can find the previously made translations of the same words and phrases and reuse them in your translations. Once you join a project by clicking the &quot;Join&quot; button, you will see the Tasks tab on the project page, where the tasks for specific project files get created. Please pay attention to them: they usually have a higher priority. Sometimes you can find phrases with plural forms. Please be especially attentive when translating such phrases. You can read how to translate plural forms here. Using proper plural forms is extremely important: please ask us in the comments if anything is unclear. Please do not write directly to the project managers and proofreaders listed in the Project info. If you have questions about translations, you can always ask our proofreaders or admins through comments. Also, you can send an email to translate@adguard.com or ask a question in the Telegram chat. The Admins will answer you as soon as possible.","keywords":""},{"title":"Plural forms","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/plural-forms/","content":"","keywords":""},{"title":"What do plural forms mean?​","type":1,"pageTitle":"Plural forms","url":"miscellaneous/contribute/translate/plural-forms/#plurals","content":"Nouns in different languages can have several plural word forms. Their usage depends on the number of things you are talking about. For instance, English words have two word forms when speaking about something in the singular, like 'one star', and in the plural — 'two stars'. It doesn’t matter if you say five, twenty six or even five hundred thirty two stars — the ending 's' will remain the same. But some languages can contain only one or many plural forms. In contrast to English, the Polish language has three plural forms of nouns. One of them is used when speaking about something in the singular, another form is used in the plural but with numbers ending in 2-4, excluding 12-14, and the third form — for words with other numbers in front of them. Let’s take a look at this picture. Here you can see the groups of numerals which determine a word form when standing in front of it.  Let’s draw a small parallel between English and Polish for better understanding:  The English version: The Polish equivalents: 1. form - It takes one hour. 1. form - Zajmuje to godzinę. 2. form - It takes two hours. 2. form - Zajmuje to dwie godziny. 3. form - It takes five hours. 3. form - Zajmuje to pięć godzin.  Now it is clear that the Polish 'godzinę' (hour) has three different forms, whereas the English word changes its form with given numbers only twice. Except for Polish, there are a lot of other languages that have three plural forms and more, such as Russian, Serbian, Slovak, Czech etc. But not all of them obey the same rule. That's why it is so important to know how many plural forms your language contains and how you can apply them. "},{"title":"Where can you learn about the number of plural forms?​","type":1,"pageTitle":"Plural forms","url":"miscellaneous/contribute/translate/plural-forms/#where-to-learn","content":"When you are faced with a translation that requires the use of plurals, you may not be able to realize right away how many word forms your language contains. Here are some sources of information you can use. Localization Guide contains a wide list of languages. The number of plural forms for different languages is shown this way: 'nplurals=2', 'nplurals=4' and so on. The numeral after the Equals sign '=' means the number of plural forms of the respective language. Also, you can get information about plural forms in the Unicode Common Locale Data Repository (CLDR). The CLDR Plural Rules indicate an additional word form for decimal numbers (1.5; 2.3; 100.1…), but we don’t use them in AdGuard translations. "},{"title":"Plurals in AdGuard translations​","type":1,"pageTitle":"Plural forms","url":"miscellaneous/contribute/translate/plural-forms/#translations","content":"First of all, we want to mention that not every AdGuard translation requires the use of plural forms. Currently, we have 4 types of strings on Crowdin that involve the use of plurals. Let's take a closer look at them. "},{"title":"1. Phrases with string keys ending in .singular, .dual, .plural​","type":1,"pageTitle":"Plural forms","url":"miscellaneous/contribute/translate/plural-forms/#1type","content":" Most of them are represented in the AdGuard for Windows project and consist of only one or two words: days;extensions;hours Please pay attention to the string keys of such phrases and to the &quot;Context&quot; field where you can see some important notes about plurals. The string keys may contain Singular, Dual, Plural words (ex.FormatDayDeclensionDual). In this case, you should leave the appropriate plural form as it is specified in the key. "},{"title":"2. Strings with singular and plural nouns separated by commas​","type":1,"pageTitle":"Plural forms","url":"miscellaneous/contribute/translate/plural-forms/#2type","content":"This kind of strings is mostly concentrated in the AdGuard for Android project. Please look at the example:  If there are 3 plural forms of nouns in your language (like in Polish), please write all plural forms separated by commas. hour, hours — godzinę, godziny, godzin In case a noun has only 2 forms, there is no need to write the same form twice (typically only for this type of strings with plurals!). However, it won't be a mistake if you repeat the form twice. "},{"title":"3. Strings that use the Crowdin-developed pattern​","type":1,"pageTitle":"Plural forms","url":"miscellaneous/contribute/translate/plural-forms/#3type","content":"This is the most user-friendly scheme of translating strings with plurals. Crowdin suggests to users that they translate the certain amount of phrases with different plural forms. If your language provides only one plural form, then you will see only one phrase to translate. If three or more forms, Crowdin will provide you with the string divided into other two or three strings to translate. For example:  Please be attentive when translating these strings and approving them. If you have no idea what the &quot;Other&quot; field means, then just paste the same form as it is in the &quot;Many&quot; field. The translations of &quot;Many&quot; and &quot;Other&quot; fields can be the same. "},{"title":"4. Strings with templates separated by the vertical bar sign​","type":1,"pageTitle":"Plural forms","url":"miscellaneous/contribute/translate/plural-forms/#4type","content":"This is the most complicated type of AdGuard strings which is mostly used in AdGuard Websites project. Pay close attention to a vertical bar sign between the sentences and %count% placeholders in original phrases — this will help you identify phrases where translations require the use of plural forms.  Now, let’s imagine — you are faced with such a string: Standard license for %count% computer | Standard license for %count% computers. What should you know to translate it correctly? Let's call the sentences which are divided by a vertical bar sign &quot;templates&quot;, because actually they serve as templates for phrases with different numbers. Coming back to the example, as the English language includes only two forms, there should be two templates respectively: Standard license for *%count%* computer | Standard license for *%count%* computers where template 1 is Standard license for %count% computer, and template 2 is Standard license for %count% computers Another important thing you should pay your attention to is %count% placeholders that, as usual, take place before the words they define. Instead of %count% here will appear different numbers depending on which templates are being chosen. In a situation with another language that has, let’s say, three plural forms, there should be three templates with two vertical bar signs between them. For example, when we translate the above mentioned phrase into Slovak, that according to the rule of Localization Guide has three word forms, the correct translation will look so: **Štandartná licencia pre *%count%* počítač | Štandartná licencia pre *%count%* počítače | Štandartná licencia pre *%count%* počítačov**  In this case, we see three templates which contain three forms of the word &quot;počítač&quot; (computer) in Slovak. If we ignore one of the forms and use only two templates for Slovak instead of three, the system won’t be able to take an appropriate template for certain numbers and, as a result, we will have grammar mistakes in sentences, like in English: Standard license for 5 computer. Always use as many forms as there are in your language, even when the word itself has fewer word forms. For example, the Serbian word 'računar' (computer) has only two forms. But there are 3 plural forms in Serbian.  Thus, the translation from English into Serbian should be: **Standardna licenca za *%count%* računar | Standardna licenca za *%count%* računara | Standardna licenca za *%count%* računara** Although it is obvious that the last two templates have no differences, it is very important to keep the rule: The number of templates should reflect the number of plural forms of the respective language!(typically for this type of strings with plurals). "},{"title":"Short summary​","type":1,"pageTitle":"Plural forms","url":"miscellaneous/contribute/translate/plural-forms/#summury","content":"When translating AdGuard projects pay your close attention to phrases which require the use of plural forms. While first three types of such strings are more or less easy to perform, the fourth type demands more vigilance. And again: if you come across an original phrase with two important elements: the vertical bar sign and %count% placeholders, please do the following: Refer to the plural rule of a language you translate into; The number of your templates should be consistent with the number of plural forms your language includes, even in cases some words have fewer forms themselves. Two plural forms — two templates in translations; five plural forms — five templates, etc. Do not forget to use a vertical bar sign between templates as it is represented in original strings; Do not translate, fill in or delete %count% placeholders. By following these simple rules you will help AdGuard developers avoid a lot of unnecessary complications during the localization process. "},{"title":"AdGuard translation program","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/program/","content":"AdGuard translation program Disclaimer: you can ask us any questions about translating AdGuard by sending an email to translate@adguard.com or by joining our Telegram chat. When it comes to translations, we at AdGuard always heavily rely on volunteers. We now use the Crowdin platform to manage translations of our products. So this is the place for anyone who wants to contribute to AdGuard by translating any of our products. If you want to be among the volunteers who help us translate AdGuard, please read the information on how to become our translator and how we collaborate with them.","keywords":""},{"title":"How to prioritize the translations of Crowdin files","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/translation-priority/","content":"How to prioritize the translations of Crowdin files There are five major AdGuard projects on Crowdin — AdGuard Applications, AdGuard Websites, AdGuard Ad Blocker Knowledge base, AdGuard VPN Knowledge Base, and AdGuard DNS Knowledge Base. We do not have clear guidelines on which files or products of the AdGuard Applications project to start with. Just choose any product you like. There are just a couple of things we want to mention: You can see the app only in those languages for which all translations are completed in Crowdin;We recommend translating the descriptions for app stores in the second place, because without the translation of products themselves, the descriptions won't be needed. The situation is different in the AdGuard Websites project. Languages can be added to the site even if a full set of translations is not available. However, this depends on which files have already been translated. That's why we recommend that you start with the most important files — they are listed below: AdGuard Ad Blocker website critical.resxauth.resxwelcome.resx AdGuard VPN website critical.resxauth.resx AdGuard DNS website critical.resxauth.resx Adding new strings as well as updating existing ones in these files requires special attention from the project translators and proofreaders. In addition to websites, there is a file for translating transactional emails in the AdGuard Websites project. Newly added strings in this file also have a high translation priority.","keywords":""},{"title":"Reward system","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/rewards/","content":"","keywords":""},{"title":"Here’s how our reward system works​","type":1,"pageTitle":"Reward system","url":"miscellaneous/contribute/translate/rewards/#heres-how-our-reward-system-works","content":"For the first one-year AdGuard license, you need to translate 500 words. For the second license, you need 1,000 words, i.e. 1,500 words altogether. All subsequent licenses require an additional 1,500 words per license. For the first one-year AdGuard VPN subscription, you need to translate 2,500 words. All subsequent subscriptions or renewals require an additional 2,500 words per subscription.  Just send us a request to translate@adguard.com and you’ll get the license as a token of our gratitude. Besides, the most active translators may receive proofreader status in the future, should they express such an intention, and that promises even more good stuff. Every year we present gifts with the AdGuard logo to our active proofreaders. If you want to become one of them, please write to translate@adguard.com. "},{"title":"Writing about AdGuard","type":0,"sectionRef":"#","url":"miscellaneous/contribute/writing-about-adguard/","content":"Writing about AdGuard If you like AdGuard and want to spread your impressions of the product(s) over the internet — in social media, personal blogs and/or on websites — then this article can be useful for you. Once you share your experience online, send us a link to pr@adguard.com and we'll thank you with a free license key. It does not really matter if your website's audience is ten people or a thousand, we respect every effort. The only note to keep in mind is that your review should be roughly about 300 to 500 words. If you want to make a video or to do something else, let us know in advance, just to avoid misunderstandings in the future. The same applies if your plan includes the use of AdGuard logo, banners or other visual elements. The contact email remains the same: pr@adguard.com.","keywords":""},{"title":"Updating the Knowledge base","type":0,"sectionRef":"#","url":"miscellaneous/contribute/updating-knowledge-base/","content":"","keywords":""},{"title":"How to suggest a change or write a new article​","type":1,"pageTitle":"Updating the Knowledge base","url":"miscellaneous/contribute/updating-knowledge-base/#suggest-change","content":"You can suggest changes to current articles and add new ones to our Knowledge base using the functionality of GitHub mentioned above. If you are unfamiliar with principles of working with the platform, start by reading GitHub documentation. Once you are ready to start, work in the KnowledgeBase repository. All texts in our Knowledge base are written in Markdown markup language. Keep this in mind when editing or writing articles. Follow this link to learn more about Markdown syntax. The Knowledge base website is built using Docusaurus 2 — a modern static website generator. When suggesting changes or additions, take into account that all documents must comply with the principles of the platform. You can read about them in Docusaurus Guides. You can deploy this Knowledge base locally on your computer to preview the changes you suggest. Detailed instructions on how to do this can be found in the README file on this Knowledge base's GitHub page. "},{"title":"Translating articles​","type":1,"pageTitle":"Updating the Knowledge base","url":"miscellaneous/contribute/updating-knowledge-base/#translate-adguard","content":"Translation of the existing articles of the Knowledge base is carried out on the Crowdin platform. All the details about translations and working with Crowdin can be found in the dedicated article of the AdGuard Ad Blocker Knowledge base. When working on AdGuard Knowledge base articles, you may meet strings containing plural forms that you should translate with extra attention. In a separate article, we described in detail the difficulties that can arise when translating strings with plural forms and gave extensive instructions on how to work with them on the Crowdin platform. "},{"title":"Working on open issues​","type":1,"pageTitle":"Updating the Knowledge base","url":"miscellaneous/contribute/updating-knowledge-base/#working-on-open-issues","content":"Sometimes there exist open tasks related to updating the Knowledge base. You can help us speed up their completion the same way you would suggest any other changes to the Knowledge base. Choose any issue that you find appealing and start working on it. If you have any questions — you can ask them right in the comments to that issue. "}]