[{"title":"Compatibility with the standalone app","type":0,"sectionRef":"#","url":"adguard-browser-extension/compatibility/","content":"","keywords":""},{"title":"AdGuard Browser Assistant​","type":1,"pageTitle":"Compatibility with the standalone app","url":"adguard-browser-extension/compatibility/#adguard-browser-assistant","content":" AdGuard Browser Assistant is a browser extension that works and feels just like AdGuard Browser Extension, but it's much lighter and doesn't interfere with the desktop apps. You can read more about Browser Assistant for Windows or Mac, or download it from our website. AdGuard Browser Assistant is available in all major browsers. "},{"title":"Comparison to standalone apps","type":0,"sectionRef":"#","url":"adguard-browser-extension/comparison-standalone/","content":"Comparison to standalone apps info この記事は、お使いのブラウザのみを保護する「AdGuard ブラウザ拡張機能」に関するものです。 デバイス全体を保護するには、AdGuardアプリをダウンロードしてください。 The main advantage of AdGuard standalone programs over browser extensions is that the programs can block ads in every browser and in almost all apps. You may use different browsers at the same time, the app will filter ads and online threats in all of them equally well. The second difference is that the possibilities of extension-based ad blockers are strictly limited by browser guidelines. The browser extensions have to conform to the policies of the browsers, where ad blocking might be restricted. Thus, some types of filtering rules are not supported by the extensions. The functionality of the desktop apps is not limited, so they have a better filtering quality. Whereas AdGuard Browser Extension is free and easy to install, and has filters to block ads and fight online threats, the full-fledged apps are more powerful and have a list of advanced features. See all the differences in the comparative table below. 1 – within browser restrictions and only in the browser where it is installed; 2 – the extension is unable to detect requests from other extensions. If a malicious or tracking extension sends a request to its server to show you ads or track your activity, AdGuard Browser Extension will not be able to block that request; 3 – not all types of ads and threats can be blocked by browser extensions due to certain browser limitations. Some elements may get to the page and slow down the loading process. Besides, unlike browser-based ad blockers, the AdGuard app blocks ads before they are loaded to the browser. This saves traffic and speeds up page loading.","keywords":""},{"title":"Availability","type":0,"sectionRef":"#","url":"adguard-browser-extension/availability/","content":"Availability info この記事は、お使いのブラウザのみを保護する「AdGuard ブラウザ拡張機能」に関するものです。 デバイス全体を保護するには、AdGuardアプリをダウンロードしてください。 AdGuard Browser Extension is a free extension that works in five popular browsers: Chrome, Firefox, Edge, Opera, and Yandex Browser. You can easily find it in your browser’s online store or on our official website. Browser extensions include basic ad-blocking features but cannot be compared with full-featured desktop programs, such as AdGuard for Windows and AdGuard for Mac. note We have a standalone extension for Safari. Since the release of Safari 13, most of the ad-blocking extensions have experienced huge issues and many of them stopped functioning. We had to develop a separate extension for Safari that has some differences in comparison with the extension described in this article. Do not forget that the functionality of each extension is strictly limited by the browser’s capabilities. So if you want to get full-fledged protection, consider installing a standalone program for your computer. There's a reason why.","keywords":""},{"title":"その他の機能とオプション","type":0,"sectionRef":"#","url":"adguard-browser-extension/features/other-features/","content":"","keywords":""},{"title":"一般​","type":1,"pageTitle":"その他の機能とオプション","url":"adguard-browser-extension/features/other-features/#general","content":"「一般」タブでは、検索連動型広告とウェブサイトの自己宣伝広告の許可、言語特化フィルタの自動有効化の設定、フィルタの更新間隔の指定、などができます。  また、「フィッシング詐欺とマルウェアからの保護」を有効にすることもできます。 「設定をエクスポート」ボタンをクリックすることで、設定内容を保存することができます。 設定内容は .json ファイルとして保存されます。 保存した設定内容をブラウザ拡張機能にアップロードするには、「設定をインポート」機能を使用してください。 この機能を使用して、簡単に異なる設定プロファイルに切り替えたり、設定内容を異なるブラウザ間で転送したりできます。 "},{"title":"追加設定​","type":1,"pageTitle":"その他の機能とオプション","url":"adguard-browser-extension/features/other-features/#misc","content":"「追加設定」セクションには、広告ブロックのプロセスと、アプリの使い勝手に関する様々な設定があります。  このタブにて、最適化されたフィルタを有効にすることや、拡張機能のアップデートに関する通知を有効にすること、「フィルタリングログ」を開くこと、ブロックされた広告とトラッカーの統計情報をクリアすることができます。 他にも、適用されているルールに関する統計情報（どのルールが、どのウェブサイトで、どのくらいの頻度で適用されたか）の送信を許可することにより、フィルタの開発に貢献することができます。 ※AdGuardは同意なしにユーザーデータを収集することは一切ないため、このオプションはデフォルトで無効になっています。 また、このオプションを有効にしても、送信されるデータはすべて厳格に匿名化されます。 "},{"title":"AdGuard について​","type":1,"pageTitle":"その他の機能とオプション","url":"adguard-browser-extension/features/other-features/#about","content":"「AdGuardについて」セクションには現在のバージョンに関する情報と、利用許諾契約(EULA)、プライバシーポリシー、Githubリポジトリへのリンクがあります。  "},{"title":"ステルスモード","type":0,"sectionRef":"#","url":"adguard-browser-extension/features/stealth-mode/","content":"ステルスモード info この記事は、お使いのブラウザのみを保護する「AdGuard ブラウザ拡張機能」に関するものです。 デバイス全体を保護するには、AdGuardアプリをダウンロードしてください。 「ステルスモード」は機密性の高い個人情報をオンライントラッカーや詐欺師から確実に保護することを目的にしています。 ステルスモードでは、インターネット上検索に使用した検索クエリがウェブサイトから見られないようにすることや、サードパーティやウェブサイト自体のCookie（クッキー）を自動的に削除することなどができます。 これらすべての機能について、別の記事でご紹介しています。 note フルバージョンのアプリで利用できる「ステルスモード」のオプションの一部は、技術的な制約の影響で拡張機能には存在しないことに留意してください。","keywords":""},{"title":"ブラウザ拡張機能のメインメニュー","type":0,"sectionRef":"#","url":"adguard-browser-extension/features/main-menu/","content":"ブラウザ拡張機能のメインメニュー info この記事は、お使いのブラウザのみを保護する「AdGuard ブラウザ拡張機能」に関するものです。 デバイス全体を保護するには、AdGuardアプリをダウンロードしてください。 ブラウザ拡張機能のメイン画面は、ブラウザのツールバーにある拡張機能のアイコンをクリックすることで開くことができます。 メイン画面では、ページ上の任意の要素を手動で非表示にしたり（対応するルールは「ユーザールール」に追加されます）、「フィルタリングログ」を開いてブラウザのトラフィックやブロック要求の情報を随時確認したり、ウェブサイトの安全性の報告を確認したりできます。 さらに、現在閲覧中のウェブサイトについて苦情を提出することができ（例えば、ページ上に見逃された広告がある場合、当社のフィルターエンジニアがご報告を確認し、問題を修正します）、適用されたブロックルールに関する統計情報を見ることができます。 ブラウザが行なったすべてのウェブリクエストは、各リクエストの詳細情報とともに、「フィルタリングログ」に表示されます。 また、「フィルタリングログ」では、たとえば、AdGuard ブラウザ拡張機能によってブロックされたリクエストを簡単に監視できます。 また、2回クリックするだけで、あらゆるリクエストをブロックしたり、以前にブロックしたリクエストをホワイトリストに追加することができます。 また、「フィルタリングログ」では、ウェブリクエストをソートするためのさまざまなオプションが用意されており、独自のフィルタリングルールを作成する際に役立ちます。 「フィルタリングログ」を開くには、メインメニューの対応する項目を選択するか、⚙設定→「追加設定」から開くことができます。 拡張機能のメインメニューの右上にあるアイコンを使って、拡張機能の設定を開いたり（⚙アイコン）、保護機能を一時停止したり（⏸アイコン）することができます。","keywords":""},{"title":"How to install","type":0,"sectionRef":"#","url":"adguard-browser-extension/installation/","content":"","keywords":""},{"title":"How to install AdGuard Browser Extension for Google Chrome or Chromium browsers​","type":1,"pageTitle":"How to install","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-google-chrome-or-chromium-browsers","content":"Open the extension's page in Chrome Web Store and click Add to Chrome.  In the opened dialog box, click Add extension.  "},{"title":"How to install AdGuard Browser Extension for Opera​","type":1,"pageTitle":"How to install","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-opera","content":"Open the page addons.opera.com.  Click Add to Opera. "},{"title":"How to install AdGuard Browser Extension for Firefox​","type":1,"pageTitle":"How to install","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-firefox","content":"Open the page addons.mozilla.org.  Click Add to Firefox. "},{"title":"How to install AdGuard Browser Extension for Yandex Browser​","type":1,"pageTitle":"How to install","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-yandex-browser","content":"Click the browser settings button in the upper right corner of the browser, then choose Add-ons in the drop-down menu. Scroll down to find AdGuard, then click Install.  "},{"title":"How to install AdGuard Browser Extension for Microsoft Edge​","type":1,"pageTitle":"How to install","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-microsoft-edge","content":"Find AdGuard Browser Extension in the Edge Add-ons store and click Get.  In the opened dialog window, press Add extension.  Alternatively, you can install AdGuard Browser Extension for Edge from the Chrome Web Store. Open its web page in your Edge browser and select Allow extensions from other stores on the banner at the top of the page.  In the opened dialog box, click Allow.  Click Add to Chrome.  In the opened dialog window, click Add extension to install AdGuard Browser Extension.  "},{"title":"How to install AdGuard Browser Extension for Safari​","type":1,"pageTitle":"How to install","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-safari","content":"AdGuard for Safari is not a browser extension in a common sense. You can read more about it in a dedicated article. Or you can download the installation file directly from this page. "},{"title":"フィルタ","type":0,"sectionRef":"#","url":"adguard-browser-extension/features/filters/","content":"","keywords":""},{"title":"カスタムフィルタ​","type":1,"pageTitle":"フィルタ","url":"adguard-browser-extension/features/filters/#カスタムフィルタ","content":"ほとんどのフィルタグループの機能は大体その名称から想像がつきますが、「カスタム」というグループについては疑問に思うかもしれません。  このタブでは、もとからは拡張機能に入っていないフィルタを追加することができます。 インターネット上に公開されているフィルタが数多くあります。 さらには、ご自身で独自のフィルタを作成して追加することもできます。 それどころか、フィルタを組み合わせて、広告ブロックを好きなようにカスタマイズすることもできます。 フィルタを追加するには、「カスタムフィルタを追加する」をクリックし、追加したいフィルタのURLまたはファイルパスを入力して「次へ」をクリックします。  "},{"title":"ユーザールール​","type":1,"pageTitle":"フィルタ","url":"adguard-browser-extension/features/filters/#user-rules","content":"「ユーザールール」は、広告ブロック機能のカスタマイズに役立つもう1つのツールです。  新しいルールを追加する方法は、複数あります。 最も簡単なのはルールを手入力する方法ですが、ルール構文についての知識が必要です。 既成のフィルタリストをテキストファイルからインポートすることもできます。 ※それぞれのルールが改行で区切られるようにしてください。なお、既成のフィルタリストのインポートは「カスタムフィルタ」タブで行ったほうが便利であることに留意してください。 また、作成したフィルタリングルールをエクスポートすることもできます。 これは、ブラウザまたはデバイス間でルールのリストを転送するのに便利です。 ウェブサイトをホワイトリストに追加する（詳細は後述）か、アシスタントツールを使用してページ上の要素を非表示にすると、対応するルールも自動的にユーザールールに保存されます。 "},{"title":"ホワイトリスト​","type":1,"pageTitle":"フィルタ","url":"adguard-browser-extension/features/filters/#ホワイトリスト","content":"「ホワイトリスト」を使って、特定のウェブサイトをフィルタリングの対象から外しておくことができます。 リストに入っているウェブサイトに対してブロックルールは適用されません。  「ホワイトリスト」の動作を逆にすることもできます。つまり、リストに追加されたウェブサイト以外で広告ブロックされなくなる、といった動作になります。 そうするには、「ホワイトリストを逆転する」オプションを有効にしてください。  ホワイトリストをインポートおよびエクスポートすることもできます。 これは、同じホワイトリストルールをお使いの各ブラウザに適用したい場合などに便利です。 "},{"title":"インストール方法","type":0,"sectionRef":"#","url":"adguard-content-blocker/installation/","content":"インストール方法 info この記事は、SamsungインターネットブラウザおよびYandexブラウザのみで機能する「AdGuard コンテンツブロッカー」に関するものです。 デバイス全体を保護するには、AdGuardアプリをダウンロードしてください。 このアプリは5つのストアで入手できます： Google Play ストア、Samsung Galaxy ストア、Huawei AppGallery、Aptoide、F-Droid Google Play から AdGuard コンテンツブロッカーをインストールするには、AdGuard コンテンツブロッカーを検索し、インストールをタップします。 note AdGuard コンテンツブロッカーは、 Yandex ブラウザ と Samsung インターネットブラウザという2つのブラウザのみで動作します。 インストールが完了したら、「開く」をタップしてアプリを起動します。 お使いのデバイスに対応ブラウザがインストールされている場合、アプリは AdGuard を有効にするかどうかを尋ねます。 対応ブラウザをお持ちでない場合は、ブラウザを選択してインストールするよう促されます。 ブラウザがインストール完了しましたら、AdGuard コンテンツブロッカーを起動し、広告やトラッカーをブロックすることができます。","keywords":""},{"title":"Browser-protected pages","type":0,"sectionRef":"#","url":"adguard-browser-extension/protected-pages/","content":"","keywords":""},{"title":"Chromium browser restrictions​","type":1,"pageTitle":"Browser-protected pages","url":"adguard-browser-extension/protected-pages/#chromium-browser-restrictions","content":"Chromium-based browsers, such as Google Chrome, maintain a list of restricted domains that extensions are not allowed to access. These domains include: clients.google.comclients[0-9]+.google.comsb-ssl.google.comURLs starting with chrome://, chrome-extension://, or https://chrome.google.com/webstore/PDF filesPages where Javascript is disabledSecurity warning pagesError pages such as 404 errors and network errorsURLs starting with view-source: or data: "},{"title":"Firefox browser restrictions​","type":1,"pageTitle":"Browser-protected pages","url":"adguard-browser-extension/protected-pages/#firefox-browser-restrictions","content":"Similarly, the Firefox browser has its own set of restricted domains where extensions are not permitted to operate. These restricted domains include: accounts-static.cdn.mozilla.netaccounts.firefox.comaddons.cdn.mozilla.net --addons.mozilla.orgapi.accounts.firefox.comcontent.cdn.mozilla.netdiscovery.addons.mozilla.orginstall.mozilla.orgoauth.accounts.firefox.comprofile.accounts.firefox.comsupport.mozilla.orgsync.services.mozilla.com "},{"title":"Modifying restrictions in Firefox​","type":1,"pageTitle":"Browser-protected pages","url":"adguard-browser-extension/protected-pages/#modifying-restrictions-in-firefox","content":"Changing advanced settings can affect the stability and security of Firefox. This is recommended for advanced users only. If you are aware of the associated risk and still wish to enable add-ons disallowed on a protected page, follow the steps below: Click the menu button → Add-ons and themes → Extensions.Click the extension you want to enable on sites with restrictions (In this case, AdGuard).Select Allow in the section Run on sites with restrictions. Alternatively, you can: Open a new tab and type about:config in the address bar.Press Return. You may encounter a warning. In this case, click Accept the Risk and Continue.Search for extensions.webextensions.restrictedDomains. If you can’t find this preference, you can create it. Simply select the Boolean type and click + to add it.Click the toggle button next to this preference and change its value to false.Restart Firefox. For further information on this subject, read the article on Mozilla’s support website. "},{"title":"アプリの管理","type":0,"sectionRef":"#","url":"adguard-for-android/features/app-management/","content":"","keywords":""},{"title":"機能概要","type":0,"sectionRef":"#","url":"adguard-content-blocker/overview/","content":"機能概要 info この記事は、SamsungインターネットブラウザおよびYandexブラウザのみで機能する「AdGuard コンテンツブロッカー」に関するものです。 デバイス全体を保護するには、AdGuardアプリをダウンロードしてください。 AdGuard には、「AdGuard for Android」と「AdGuard コンテンツブロッカー」という2つのAndroid用アプリがあります。 AdGuard for Android は、ブラウザやアプリの広告、トラッカー（個人情報追跡）、迷惑要素をブロックし、フィルタやドメインレベルの広告ブロッキングを使用し、ユーザールールに対応しているなど、Androidデバイスで全面的に広告ブロックを行うための幅広い機能を備えています。 一方、「AdGuard コンテンツブロッカー」の機能には制限があります。 Google Playのポリシーにより、本格的な広告ブロッカーはストア上に載せるころができません。 Google Play は「広告を表示する別アプリをブロックまたは妨害するアプリ」を禁止しています。 したがって、AdGuard for Android はAdGuardの公式ウェブサイトからのみダウンロードできます。 代替方法として、グーグルは開発者に Content blocking API を提供しています。 この API には厳しい制限があり、現在、Yandex Browser と Samsung インターネットブラウザという2つのブラウザしかサポートされていません。 他のAdGuard製品でサポートされている複雑なフィルタリングルールの多くは、このAPI上では動作しません。 「AdGuard コンテンツブロッカー」は、Google Playストアのポリシーフレームワークに適合するように設計されています。 他のAdGuard製品に比べ、「AdGuard コンテンツブロッカー」は広告ブロック機能はかなり少ないです: 「AdGuard コンテンツブロッカー」は、コンテンツブロック技術に対応したブラウザでのみ機能します。 現在、そのようなブラウザは、Yandex ブラウザと Samsung インターネットブラウザ、2つだけです。既存の技術では、「AdGuard コンテンツブロッカー」の機能は限られています。例えば、他のアプリやブラウザで広告やトラッカーをブロックすることはできず、フィルタリングログもなく、ドメインレベルでのフィルタリングにも対応していません。 しかし、「AdGuard コンテンツブロッカー」には35個のフィルタがあり、2つの対応ブラウザで広告、トラッカー、迷惑要素をブロックすることができます。 また、適切な言語特化フィルターを選択したり、ユーザールールを追加したりすることで、広告ブロック機能をカスタマイズすることもできます。 「AdGuard コンテンツブロッカー」は無料のオープンソースソフトウェアです。 ソースコードはGitHubで公開されています。 より効果的な広告ブロック機能と柔軟なカスタマイズを利用するには、本格的な「AdGuard for Android」アプリをぜひ使用してみてください。 AdGuard for Android は公式ホームページからダウンロードできます。","keywords":""},{"title":"\"問題のない\"アプリと\"問題あり\"アプリ​","type":1,"pageTitle":"アプリの管理","url":"adguard-for-android/features/app-management/#問題のないアプリと問題ありアプリ","content":"フィルタリングを有効にすると、ほとんどのアプリは正常に動作します。 このような&quot;問題なし&quot;アプリのトラフィックは AdGuard を経由してルーティングされ、デフォルトでフィルタリングされます。 Download Manager、ラジオ、UIDが1000および1001のシステムアプリ（例：Google Playサービス）など、一部のアプリは&quot;問題あり&quot;で、AdGuardを経由すると正しく動作しない可能性があります。 そのため、すべてのアプリをルーティングまたはフィルタリングしようとすると、次のような警告が表示されることがあります:  お使いのデバイスにインストールされているすべてのアプリが正常に動作するよう、問題なしアプリのみをAdGuard経由でルーティングすることを強くお勧めします。 フィルタリングをしない方がいい&quot;問題あり&quot;アプリの完全なリストは、設定 → 一般設定 → 詳細設定 → ローレベル設定 → 保護機能 → 除外されているアプリ で確認できます。 "},{"title":"How to export logs from the background page","type":0,"sectionRef":"#","url":"adguard-browser-extension/solving-problems/logs/","content":"","keywords":""},{"title":"Exporting logs from the background page in the extension​","type":1,"pageTitle":"How to export logs from the background page","url":"adguard-browser-extension/solving-problems/logs/#exporting-logs-from-the-background-page-in-the-extension","content":""},{"title":"Google Chrome の場合​","type":1,"pageTitle":"How to export logs from the background page","url":"adguard-browser-extension/solving-problems/logs/#google-chrome-の場合","content":"Open AdGuard Browser Extension and, if possible, repeat the actions that led to the error. Note the exact time when the error occurred. Navigate to chrome://extensions. Enable Developer mode. Click background.html. Open the tab Console. Open the context menu and select Save as…. "},{"title":"Mozilla Firefox の場合​","type":1,"pageTitle":"How to export logs from the background page","url":"adguard-browser-extension/solving-problems/logs/#mozilla-firefox-の場合","content":"Open AdGuard Browser Extension and, if possible, repeat the actions that led to the error. Note the exact time when the error occurred. Navigate to about:addons. Click Debug Add-ons. Click Inspect. Go to the tab Console. Click Save all Messages to File. "},{"title":"Sending logs​","type":1,"pageTitle":"How to export logs from the background page","url":"adguard-browser-extension/solving-problems/logs/#sending-logs","content":"AdGuard is committed to protecting your privacy. We strictly follow our Privacy Policy and do not collect any private information about users. Before sending your logs to the support team, please review the file as it may contain additional information that you don’t want to share. If it contains such personal information, we recommend that you delete it first. Now that you have collected the logs, please follow these steps to submit them to our development team: Report the bug on GitHub.Send your archive with logs and playback time to devteam@adguard.com and add a link to your GitHub issue. You can also upload the archive to Google Drive and add the link to it instead of attaching the file. "},{"title":"無料版 vs フルバージョン（有料版）","type":0,"sectionRef":"#","url":"adguard-for-android/features/free-vs-full/","content":"無料版 vs フルバージョン（有料版） info この記事は、システムレベルでお使いのデバイスを保護する多機能広告ブロッカー、「AdGuard for Android」についてです。 デバイス全体を保護するこのアプリは、こちらからダウンロードできます。 AdGuard for Android には無料版と有料版があります。 有料機能は、AdGuard の機能を拡張します: アプリでの広告ブロック機能　ブラウザ以外のアプリで広告をブロックすることができます。 フィルタリング対象のアプリを「アプリの管理」で指定することもできます（広告ブロックしたくないアプリがある場合などに便利です）。 note AdGuard は、独自の広告なしメディアプレーヤーを使ってYouTube動画の広告をブロックします。 メディアプレーヤーを開くには、YouTubeアプリを開き、「共有」→「その他」を押して、「AdGuardプレイヤー」を選んでください。 この機能は無料です。 トラッキング防止　トラッキング（追跡）リクエスト、オンラインカウンター、UTMタグ、分析システムなどをブロックすることで、プライバシーを保護します。 トラッキング防止機能について詳しくはこちら ブラウジングセキュリティ 危険である可能性のあるウェブサイトにアクセスしようとする前に警告を表示してくれます。 ブラウジングセキュリティ機能について詳しくはこちら カスタムフィルタとユーザールール　独自のフィルタリングルールやサードパーティフィルタを追加して、広告ブロックをご自身に合わせて微調整することができます。 フィルタについて詳しくはこちら ユーザースクリプト　ブラウザの機能を拡張し、広告の再挿入を防ぐ AdGuard Extra というスクリプトを使用できます。 ユーザースクリプトについて詳しくはこちら 上記の機能を利用するには、ライセンスのご購入が必要です。 既にお持ちのライセンスを認証する方法はこちら","keywords":""},{"title":"AdGuard VPN との併用モード","type":0,"sectionRef":"#","url":"adguard-for-android/features/integration-with-vpn/","content":"AdGuard VPN との併用モード info この記事は、システムレベルでお使いのデバイスを保護する多機能広告ブロッカー、「AdGuard for Android」についてです。 デバイス全体を保護するこのアプリは、こちらからダウンロードできます。 AdGuard for Android は、トラフィックをフィルタリングするためにローカルVPNを作成します。 したがって、AdGuard for Android の実行中は、他のVPNアプリを使用することはできません。 ただし、AdGuard と AdGuard VPN の両アプリを一緒に使える「併用モード」があります。 このモードでは、AdGuard VPN は、AdGuard 広告ブロッカーがトラフィックをルーティングするアウトバウンドプロキシサーバーとして動作します。 これにより、AdGuard はVPNインターフェイスを作成し、ローカルで広告とトラッカーをブロックし、AdGuard VPN はすべてのトラフィックをリモートサーバー経由でルーティングします。 AdGuard VPN を無効にすると、AdGuard は AdGuard VPN をアウトバウンドプロキシとして使用しなくなります。 AdGuard を無効にすると、AdGuard VPN は独自のVPNインターフェイスを介してトラフィックをルーティングするようになります。 AdGuard 広告ブロッカーがある状態で AdGuard VPN をインストールすると、前者はそれを検出し、自動的に「AdGuard VPN との併用モード」を有効にします。 逆も同じです。 併用モードを有効の時は、AdGuard VPN アプリからアプリの除外を管理したり、DNSサーバーに接続したりすることはできませんのでご注意ください。 設定 → フィルタリング → ネットワーク → プロキシ → プロキシ経由で動作するアプリ から、VPN トンネル経由でルーティングされるアプリを指定できます。 DNSサーバーを選択するには、AdGuardアプリ → AdGuard による保護 → DNS通信を保護 → DNSサーバー を開きます。","keywords":""},{"title":"広告ブロック","type":0,"sectionRef":"#","url":"adguard-for-android/features/protection/ad-blocking/","content":"広告ブロック info この記事では、システムレベルでお使いのデバイスを保護する多機能広告ブロッカー、「AdGuard for Android」について書いています。 デバイス全体を保護するこのアプリはこちらからダウンロードできます。 この機能は、「AdGuardによる保護」タブ（画面下部バーメニューで左から2番目の盾アイコン） → 「広告ブロック」にあります。 この機能は、広告ブロックと言語別の専用フィルタを適用して広告をブロックしてくれます。 広告ブロックの仕組みについては、こちらの専用記事で詳しくお読みになれます。 「基本的な保護」という機能は、ほとんどのウェブサイトで広告を効果的にブロックします。 より柔軟にカスタマイズした広告ブロックは、以下の方法で設定することができます: 【適切な言語特化フィルタを有効にする】言語特化フィルタには、特定の言語のウェブサイト上の広告をブロックするためのフィルタリングルールが含まれています。 【ホワイトリストにウェブサイトを追加する】ホワイトリストに追加されているウェブサイトで AdGuard は広告をブロックしません。 【ユーザールールの作成する】AdGuard は、指定されたウェブサイトにそれらのルールを適用します。 独自のユーザールールを作成する方法についてはこちら","keywords":""},{"title":"アシスタント","type":0,"sectionRef":"#","url":"adguard-for-android/features/assistant/","content":"","keywords":""},{"title":"アシスタントにアクセスする方法​","type":1,"pageTitle":"アシスタント","url":"adguard-for-android/features/assistant/#アシスタントにアクセスする方法","content":"Android端末の場合、画面上部から下にスワイプして通知シェードを開きます。AdGuard 通知を見つけて拡張します。  「アシスタント」をタップします。  "},{"title":"アシスタントの使い方​","type":1,"pageTitle":"アシスタント","url":"adguard-for-android/features/assistant/#アシスタントの使い方","content":"アシスタントを開くと、[アプリの管理] と [ウェブサイト] という 2 つのタブが表示されます。 それぞれに最近使用したアプリやウェブサイトのリストが表示されています。  "},{"title":"アプリタブ​","type":1,"pageTitle":"アシスタント","url":"adguard-for-android/features/assistant/#アプリタブ","content":"アプリを選択する(Chrome を例に挙げよう)と、実行できる操作のオプションがいくつか表示されます。  最新アクティビティ​ AdGuard アプリに移動し、Chrome によって行われた最新 10,000 件のリクエストに関する詳細情報が表示されます。  このアプリの統計​ AdGuard アプリに移動し、Chrome に関する詳細な統計情報が表示されます: Chrome でブロックされた広告とトラッカー（追跡）の数Chrome の広告やトラッキングリクエストをブロックすることで節約されたデータ通信量Chrome がどの企業へリクエストを送信しているのかという情報 アプリの管理​ AdGuardの「アプリの管理」画面に移動し、アプリに対してAdGuardによる保護をオフにすることができます。 ファイアウォール設定​ AdGuard に移動し、このアプリ（Chrome）に対するファイアウォール設定を変更できます。ファイアウォール設定によってアプリのインターネットアクセスを制御できます。 "},{"title":"ウェブサイト​","type":1,"pageTitle":"アシスタント","url":"adguard-for-android/features/assistant/#ウェブサイト","content":" ウェブサイトを選択すると (ここでは google.com を単なる例として使用しています)、実行できる操作のオプションがいくつか表示されます。  ホワイトリストに追加する​ タップすると、www.google.comは即座にがホワイトリストに追加され、AdGuard はwww.google.comをフィルタリングしなくなります（つまり、このサイトで広告とトラッカーはブロックされなくなります）。 最新アクティビティ​ これを押しますと、AdGuardアプリに移動し、www.google.comへの直近10,000リクエストの詳細情報が表示されます。  ウェブサイト統計​ AdGuardアプリに移動し、google.com に関する詳細な統計情報が表示されます: google.com への広告・トラッキングリクエストのブロック数google.com への広告・トラッキングリクエストをブロックすることで節約されたデータ通信量google.com へリクエストを送信するアプリgoogle.com のサブドメインに関する情報 "},{"title":"迷惑要素ブロック","type":0,"sectionRef":"#","url":"adguard-for-android/features/protection/annoyance-blocking/","content":"迷惑要素ブロック info この記事では、システムレベルでお使いのデバイスを保護する多機能広告ブロッカー、「AdGuard for Android」について書いています。 デバイス全体を保護するこのアプリはこちらからダウンロードできます。 この機能は、「AdGuardによる保護」タブ（画面下部の左から2番目の盾アイコン）をタップ → 「迷惑要素ブロック」にあります。 この機能は、AdGuardの迷惑要素フィルタをベースにしており、ポップアップ、オンライン・アシスタント・ウィンドウ、Cookie使用同意通知、モバイルアプリのダウンロードを促すプロンプトなど、広告でなくてもネット閲覧の邪魔をする迷惑要素をブロックしてくれます。 迷惑要素フィルタについてもっと読む","keywords":""},{"title":"DNS通信を保護","type":0,"sectionRef":"#","url":"adguard-for-android/features/protection/dns-protection/","content":"DNS通信を保護 info この記事では、システムレベルでお使いのデバイスを保護する多機能広告ブロッカー、「AdGuard for Android」について書いています。 デバイス全体を保護するこのアプリはこちらからダウンロードできます。 この機能は、「AdGuardによる保護」タブ（画面下部バーメニューで左から2番目の盾アイコン） → 「DNS通信を保護」にあります。 tip 「DNS通信を保護」は、通常の広告やトラッカーのブロック機能とは異なる動作をします。 その仕組みについてはこちらの専用記事でご確認いただけます。 「DNS通信を保護」機能で、選択したDNSサーバー、DNSフィルタ、およびユーザールールを使って、DNSリクエストをフィルタリングすることができます: DNSサーバーの中には、潜在的に有害なドメインへのDNSリクエストをブロックするためのブロックリストを備えているものがあります。 DNSサーバーに加えて、AdGuard は専用のDNSフィルタというものを使用して、DNSリクエストを独自にフィルタリングできます。 DNSフィルタには広告やトラッキング（追跡）ドメインの大規模なリストが含まれており、それらへのリクエストはブラックホールサーバーにリルートされることで遮断されます。 また、DNSユーザールールを作成することで、ドメインをブロックしたり、ブロック解除したりすることもできる。 こちらのDNSフィルタリングルールの構文を参照してください。 DNSサーバー​ このセクションでは、DNSリクエストを解決し、広告やトラッカーをDNSレベルでブロックし、DNS通信を暗号化するためにDNSサーバーを選択することができます。 サーバーをタップして詳細な説明を読むことができ、プロトコルを選択します。 使いたいDNSサーバーが見つからなかった場合は、手動でDNSサーバーを追加することができます: 「DNSサーバーを追加する」をタップし、DNSサーバーのアドレスを入力します。 または、既知のDNSプロバイダーのリストからDNSサーバーを選択し、その横にある「AdGuardnに追加する」をタップすることもできます。 プライベート AdGuard DNSサーバー をご利用の場合は、そのダッシュボードから AdGuard for Android アプリにサーバーを追加できます。 デフォルトでは、「自動DNS」が選択されています。 この場合、AdGuard とデバイスの設定に基づき、DNSサーバーを自動で選択します。 AdGuard VPNとの併用モードまたは他のSOCKS5プロキシを有効にしている場合、「AdGuard DNS フィルタリングなし」または指定した他のサーバーに接続します。 それ以外の場合は、デバイスの設定で選択したDNSサーバーに接続します。 DNSフィルタ​ このセクションでは、カスタムDNSフィルタとDNSフィルタリングルールを追加できます。 filterlists.comで様々なフィルタを見つけることができます。","keywords":""},{"title":"クイックアクション","type":0,"sectionRef":"#","url":"adguard-for-android/features/protection/firewall/quick-actions/","content":"クイックアクション info この記事では、システムレベルでお使いのデバイスを保護する多機能広告ブロッカー、「AdGuard for Android」について書いています。 デバイス全体を保護するこのアプリはこちらからダウンロードできます。 「クイックアクション」は、「AdGuardによる保護」タブ（画面下部バーメニューで左から2番目の盾アイコン） → 「ファイアウォール」画面の下の方にあります。 「クイックアクション」は、「最新アクティビティ」（「統計」→「最新アクティビティ」）のリクエスト情報に基づいています。 このセクションには、最近インターネットに接続したアプリが表示されます。 インターネットそのものやモバイルデータ通信を一切使うべきではないアプリや、最近使っていないアプリがあれば、その場でアクセスをブロック・制限することができます。 ※「クイックアクション」を使うには、「ファイアウォール」機能がオンになっている必要があります。","keywords":""},{"title":"ファイアウォール","type":0,"sectionRef":"#","url":"adguard-for-android/features/protection/firewall/","content":"","keywords":""},{"title":"グローバルファイアウォールルール​","type":1,"pageTitle":"ファイアウォール","url":"adguard-for-android/features/protection/firewall/#グローバルファイアウォールルール","content":"このセクションでは、デバイス全体のインターネットアクセスを制御できます。  これらのルールは、デバイス上のすべてのアプリに適用されます（※特定のアプリなどに対してカスタムファイアウォールルールが設定されている場合は、そのアプリに対してはカスタムルールが優先されます）。 "},{"title":"カスタムファイアウォールルール​","type":1,"pageTitle":"ファイアウォール","url":"adguard-for-android/features/protection/firewall/#カスタムファイアウォールルール","content":"このセクションでは、アプリごとのインターネットアクセスを制御することができます。カスタムファイアウォールルールを使って、信頼できないと思われるアプリやデータ通信量を抑えたいアプリのアクセス権限を制限したり、グローバルファイアウォールルールの対象からアプリを除外したりすることができます。 「カスタムファイアウォールルール」を開きます。 「カスタムルールがあるアプリ」の下で、「＋ アプリを追加する」をタップします。 個別のルールを設定したいアプリを選択します。 「利用可能なカスタムルール」で、追加したいルールを選んでタップします。 そうすると、「適用されているカスタムルール」にルールが表示されます。 アプリに対して、特定の種類の通信をブロックする必要がある場合は、スイッチを左に切り替えてください（スイッチが赤色の状態）。 その通信を許可したい場合は、スイッチを有効（緑色）のままにしてください。 ※カスタムファイアウォールルールはグローバルファイアウォールルールよりも優先されます。グローバルファイアウォールルールを変更したりしても、カスタムルールのあるアプリには影響しません。 カスタムファイアウォールルールからルールやアプリを削除するには、ルールやアプリを左にスワイプしてください。 "},{"title":"通知​","type":1,"pageTitle":"ファイアウォール","url":"adguard-for-android/features/protection/firewall/#通知","content":"この機能を有効にすると、アプリがそのアプリに対して設定されているファイアウォールルールのいずれかを破ろうとしたときに通知が表示されます（たとえば、モバイルデータ通信へのアクセスが制限されているアプリがモバイル通信しようとした時など）。 すべてのアプリ、またはアプリごとに通知のオン／オフを切り替えることができます。 通知をタップするとアプリに対するファイアウォール設定を開くことができます。また、通知内の対応するボタンをタップして、そのアプリに対するすべてのファイアウォールルールを一時的に無効にすることができます。 さらに、通知内の「ミュート」ボタンをタップすると、そのアプリに対するファイアウォール通知をすべてミュートできます。 ※複数のアプリに対して通知が表示される場合は、1つの通知にまとめられて表示されます。 "},{"title":"ブラウジング・セキュリティ","type":0,"sectionRef":"#","url":"adguard-for-android/features/protection/browsing-security/","content":"ブラウジング・セキュリティ info この記事では、システムレベルでお使いのデバイスを保護する多機能広告ブロッカー、「AdGuard for Android」について書いています。 デバイス全体を保護するこのアプリはこちらからダウンロードできます。 この機能は、「AdGuardによる保護」タブ（画面下部の左から2番目の盾アイコン）をタップ → 「ブラウジング・セキュリティ」にあります。 ブラウジング・セキュリティは、フィッシング詐欺系サイトや悪意のあるウェブサイトへのアクセスを防ぎます。 また、マルウェアのリスクについても警告してくれます。 危険なウェブサイトにアクセスしようとすると、ブラウジング・セキュリティが以下のような警告を表示します: danger 【注意】AdGuard for Android はウイルス対策ソフトではありません。 ウイルスのダウンロードを阻止したり、すでにダウンロードされたウイルスを削除したりはしません。 デバイスを完全に保護するには、アンチウイルスと AdGuard を併用することをお勧めします。 ブラウジング・セキュリティは完全に安全な機能です。AdGuardは、あなたが閲覧したウェブサイトの情報を知ることは一切ありません。 URLの代わりにハッシュ接頭辞（hash prefix）という情報を使ってウェブサイトの安全性をチェックするので、サイトのURL情報はAdGuardに送信されません。 ブラウジング・セキュリティ機能の仕組みについて詳しくは、こちらの記事をご覧ください。","keywords":""},{"title":"ルート化されたデバイス","type":0,"sectionRef":"#","url":"adguard-for-android/features/rooted/","content":"ルート化されたデバイス info この記事は、システムレベルでお使いのデバイスを保護する多機能広告ブロッカー、「AdGuard for Android」についてです。 デバイス全体を保護するこのアプリは、こちらからダウンロードできます。 Android OSのセキュリティ対策により、AdGuardの一部の機能はroot化されたデバイスでのみ利用可能です。 そういった機能は以下の通りです: ほとんどのアプリでの HTTPS フィルタリングには、システム ストアに CA 証明書をインストールする 必要があります。アプリの多くはユーザー ストアの証明書を信頼しないためです。 システムストアに証明書をインストールできるのは、ルート化されたデバイスのみです。Androidのシステム全体のトラフィックフィルタリングの制限により、自動プロキシルーティングモードにはルートアクセスが必要です。Android 10以降では、手動プロキシルーティングモードにルートアクセスが必要です。AdGuardによってフィルタリングされた接続に関連付けられたアプリの名前を特定できなくなったためです。","keywords":""},{"title":"設定","type":0,"sectionRef":"#","url":"adguard-for-android/features/settings/","content":"","keywords":""},{"title":"一般設定​","type":1,"pageTitle":"設定","url":"adguard-for-android/features/settings/#一般設定","content":"このセクションでは、アプリの外観や動作を管理することができます。カラーテーマや言語を変更したり、通知を設定したりすることが可能です。 AdGuardチームがアプリのクラッシュを検出し、ユーザビリティを調査するのを支援したい場合は、「クラッシュを自動報告する」と「技術的情報とインタラクション情報を送信する」をオンにできます。  「アプリとフィルタのアップデート」では、フィルタの自動更新を設定し、アプリのアップデートチャネルを選択できます。 一般使用向けの安定したバージョンのアップデートを受け取るには「安定版」チャネル、新機能への早期アクセスしたい場合には 「ベータ版」または「Nightly」チャネルを選択してください。  "},{"title":"詳細設定​","type":1,"pageTitle":"設定","url":"adguard-for-android/features/settings/#詳細設定","content":"「自動化」オプションを使用すると、Tasker アプリを介して AdGuard を管理できます。 「ウォッチドッグ（Watchdog）」は、AdGuard がシステムによって無効化されるのを防ぎます (Android のバッテリー節約モードについてもお読みください)。 入力した値は、ウォッチドッグチェック間の間隔 (秒単位) になります。 「ログ・レベル」は、アプリの操作に関するどのデータをログに記録するかを定義します。 「デフォルト」レベルでは、アプリはイベントに関するデータを収集します。 「デバッグ」レベルでは、より多くのイベントがログに記録されます。AdGuard チームから問題をより深く理解するために有効にするよう依頼されましたら、これを有効にしてください。 ログの収集と送信について詳しくはこちら  「ローレベル設定」セクションは上級者ユーザー向けです。 ローレベル設定について詳しくはこちら  "},{"title":"フィルタリング​","type":1,"pageTitle":"設定","url":"adguard-for-android/features/settings/#フィルタリング","content":"このセクションでは、HTTPSフィルタリング設定、フィルタ、ユーザースクリプトを管理し、プロキシサーバーを設定することができます。  "},{"title":"フィルタ​","type":1,"pageTitle":"設定","url":"adguard-for-android/features/settings/#フィルタ","content":"AdGuard は、フィルタのルールを適用することで、広告、トラッカー（追跡）、迷惑なコンテンツをブロックします。 「AdGuardによる保護」セクションにある機能のほとんどは、AdGuard フィルタ を使って動いています。 例えば、「基本的な保護」を有効にすると、「AdGuard ベースフィルタ」と「AdGuard モバイル広告フィルタ」が自動的にオンになります。 逆もまた同様で、両方のフィルタをオフにすると、「基本的な保護」も無効になります。  デフォルトで有効になっているフィルタは、AdGuard が普通に動作するのに十分です。 しかし、広告ブロックをカスタマイズしたい場合は、他のAdGuardフィルタやサードパーティのフィルタを使用することができます。 既存のフィルタを追加で有効にするには、フィルタのカテゴリを選択し、必要なフィルタを選んでオンにします。 カスタムフィルタを追加するには、[カスタムフィルタ] → [カスタムフィルターを追加する] をタップし、フィルタの URL またはファイルパスを入力します。 note 多くのフィルタを有効にしすぎると、一部のウェブサイトが正しく動作しなくなることがありますので、有効フィルタの数にはご注意ください。 フィルタについてもっと読む "},{"title":"ユーザースクリプト​","type":1,"pageTitle":"設定","url":"adguard-for-android/features/settings/#ユーザースクリプト","content":"ユーザースクリプトは、1 つ以上の Web サイトの機能を拡張するミニプログラムです。ユーザースクリプトは JavaScript で書かれています。 ユーザースクリプトをインストールするには、専用のユーザースクリプト・マネージャが必要です。 AdGuard にはこのようなマネージャー機能があるので、そのままURLまたはファイルからユーザースクリプトを追加することができます。  AdGuard Extra​ AdGuard Extra は、複雑な広告やウェブサイトに広告を再投入するメカニズムをブロックしてくれるカスタム・ユーザースクリプトです。 AMPを無効化​ 「AMPを無効化」は、Google 検索結果ページで Accelerated mobile pages（AMP） を無効にするユーザー スクリプトです。 "},{"title":"ネットワーク​","type":1,"pageTitle":"設定","url":"adguard-for-android/features/settings/#ネットワーク","content":"HTTPSフィルタリング​ 多くのウェブサイトやアプリで広告やトラッカー（追跡）をブロックするには、AdGuard は HTTPS トラフィックをフィルタリングできることが必要です。 HTTPSフィルタリングについてもっと読む セキュリティ証明書​ 暗号化されたトラフィックを処理するためには、AdGuard はデバイスに CA 証明書をインストールします。 トラフィックはローカルでフィルタリングされ、AdGuard が接続のセキュリティ性を検証しますので、安全です。 旧バージョンのアンドロイドでは、証明書は自動的にインストールされます。 Android 11 以降では、手動で証明書をインストールする必要があります。 インストール手順はこちら ユーザーストア内の CA 証明書は、ブラウザや一部のアプリで HTTPS トラフィックをフィルタリングするのに十分です。 しかし、システムストアの証明書しか信用しないアプリもあります。 そういったアプリで HTTPS トラフィックをフィルタリングするには、AdGuard の CA 証明書をシステムストアにインストールする必要があります。 その手順はこちら HTTPSフィルタリングされるアプリ​ このセクションには、AdGuard が HTTPS トラフィックをフィルタリングするアプリのリストが含まれています。 ※この設定をデバイス上のすべてのアプリに適用するのは、ユーザーストアとシステムストアの両方にCA証明書がある場合のみ可能です。 HTTPSフィルタリング対象ウェブサイト​ この設定では、AdGuard が HTTPS トラフィックをフィルタリングする Web サイトを管理できます。 HTTPS フィルタリングにより、AdGuard はリクエストと応答のコンテンツをフィルタリングできますが、AdGuard はこのデータを収集または保存したりすることは一切ありません。 ただし、セキュリティを強化するために、潜在的に機密情報を含むウェブサイトを HTTPS フィルタリングから除外します。 次のいずれかのモードを選択して、除外する必要があると思われる Web サイトを追加することもできます: 特定のウェブサイトをHTTPSフィルタリングの対象から除外する除外リストに追加されたウェブサイトのみのHTTPSトラフィックをフィルタリングする デフォルトでは、金融ウェブサイトなど、Extended Validation (EV) 証明書を持つウェブサイトもAdGuardはフィルタリングしません。 必要であれば、「EV証明書を持つウェブサイトをフィルタリング」オプションを有効にすることができます。 プロキシ​ AdGuardを、デバイスのすべてのトラフィックをプロキシサーバー経由でルーティングするように設定できます。 アウトバウンドプロキシの設定方法 「プロキシ」セクションでは、AdGuard と連携するサードパーティの VPN を設定することもできます（お使いのVPNプロバイダーがそれを許可している場合）。 「プロキシ経由で動作するアプリ」の下で、指定したプロキシ経由でトラフィックをルーティングするアプリを選択できます。 AdGuard VPN との併用モードが有効になっている場合、この設定は AdGuard VPN のアプリ除外の役割を果たすようになります。これにより、AdGuard VPN トンネル経由でルーティングされるアプリを指定できます。 ルーティングモード​ このセクションでは、トラフィックのフィルタリング方法を選択できます。 「ローカルVPN」は、ローカルに作成された VPN を介してトラフィックをフィルタリングします。 これは最も安定性の高いモードです。 Android の制限により、このモードはルート化されていないデバイスで使用できる唯一のシステム全体のトラフィックフィルタリング方法でもあります。 note ※ローカルVPN モードでは、AdGuard を他の VPN と同時に使用することはできません。 AdGuard と別の VPN を併用するには、「プロキシ」モードで動作するように再構成し、AdGuard でアウトバウンドプロキシを設定する必要があります。 AdGuard VPN の場合、これは併用モードのおかげで自動的に行われます。 「自動プロキシ」は、VPN の使用を必要としない代替トラフィックルーティング方法です。 大きな利点の 1 つは、VPN と並行して実行できることです。 ※このモードにはroot権限が必要です. 「手動プロキシ」は、特定のポートにプロキシサーバーを設定し、それを Wi-Fi 設定で構成できる、というモードです。 ※このモードには、Android 10 以降のroot権限が必要です。 "},{"title":"ライセンス​","type":1,"pageTitle":"設定","url":"adguard-for-android/features/settings/#ライセンス","content":"このセクションでは、お使いのライセンスに関する情報を確認し、以下のように管理することができます: フルバージョンの機能を有効にするためのAdGuardライセンス購入AdGuard アカウントにログインするか、ライセンスキーを入力してライセンスを有効化7日間の無料試用期間をまだ利用していない場合は、登録して試用期間を有効にする右上の三点メニュー (⋮) からライセンスステータスを更新するAdGuard アカウントを開いてライセンスを管理するライセンスをリセットする（たとえば、ライセンスの最大デバイス数上限に達し、別のライセンスを適用したい場合などです。）  "},{"title":"サポート​","type":1,"pageTitle":"設定","url":"adguard-for-android/features/settings/#サポート","content":"AdGuard for Android に関するご質問やご意見には、このセクションをご利用ください。 サポートにお問い合わせいただく前に、よくあるご質問（FAQ） またはこのナレッジベースを参照することをお勧めします。  すり抜け広告を見つけた場合は、「不適切なブロックを報告する」からご報告ください。 アプリの変な動作については、「バグ・不具合を報告する」を選択してください。 可能でしたら、問題を詳しく説明し、アプリのログを添付してください。 問題を説明する方法はこちら ご提案については、「機能を依頼・提案する」をご利用ください。 note GitHub も、バグを報告したり、新しい機能を提案したりするためのいい手段です。GitHub上のご報告等は直接エンジニアが頻繁に確認します。 報告手順とリポジトリへのリンクはこちら "},{"title":"統計","type":0,"sectionRef":"#","url":"adguard-for-android/features/statistics/","content":"","keywords":""},{"title":"リクエスト数​","type":1,"pageTitle":"統計","url":"adguard-for-android/features/statistics/#リクエスト数","content":"このセクションには、ブロックされた広告とトラッカーの数、およびリクエストの合計数が表示されます。 リクエストは、データの種類別（モバイルデータ通信、Wi-Fi通信、すべてのデータ）に表示できます。 「最新アクティビティ」（旧名：フィルタリングログ）には、AdGuard によって処理された最後の 10,000 件のリクエストが表示されます。 3 つのドット メニュー (⋮) で「カスタマイズ」をタップして、ステータス (* レギュラー*、* ブロック済み*、* 変更済み*、ホワイトリストに登録済み) または送信元 (ファーストパーティ、サードパーティ) をもとにリクエストの表示を調整できます。 各リクエストをタップするとその詳細が表示され、ワンタップでブロックまたはブロック解除のルールを追加できます。 "},{"title":"データ使用量​","type":1,"pageTitle":"統計","url":"adguard-for-android/features/statistics/#データ使用量","content":"このセクションには、選択したデータタイプ (モバイルデータ、Wi-Fi、すべて) のダウンロードおよびアップロードされたデータ量と節約されたデータ通信量が表示されます。 節約した通信量、アップロード、またはダウンロードのそれぞれをタップすると、時間の経過に伴うデータ使用量のグラフが表示されます。 "},{"title":"アプリ​","type":1,"pageTitle":"統計","url":"adguard-for-android/features/statistics/#アプリ","content":"このセクションには、デバイスにインストールされているすべてのアプリの統計が表示されます。 ブロックされた広告やトラッカーの数、または送信されたリクエストの数でアプリを並べ替えることができます。 「すべてのアプリを見る」をタップすると、広告、トラッカー、リクエストの数で並べ替えられたアプリのリストが開きます。  各アプリをタップすると、送信したリクエストやアクセス先のドメインや企業など、そのアプリの詳しい統計情報が表示されます。 "},{"title":"企業に関する統計​","type":1,"pageTitle":"統計","url":"adguard-for-android/features/statistics/#企業に関する統計","content":"このセクションには、デバイスがリクエスト送信する企業が表示されます。 これは一体どういうことなのか？ AdGuard は、デバイスがリクエストをどのドメインに送信するのかを検出し、それらがどの企業に属しているかを検出します。 企業のデータベースはGitHubにあります。 "},{"title":"DNS統計​","type":1,"pageTitle":"統計","url":"adguard-for-android/features/statistics/#dns統計","content":"このセクションには、「DNS通信を保護」機能によって処理されたリクエストに関する情報が表示されます。 送信されたDNSリクエストの総数と、AdGuard によってブロックされたリクエストの数を数字とグラフで確認できます。 節約された通信量やダウンロードおよびアップロードされたデータ量の統計も表示されます。 "},{"title":"バッテリーの使用状況​","type":1,"pageTitle":"統計","url":"adguard-for-android/features/statistics/#バッテリーの使用状況","content":"このセクションには、過去 24 時間に AdGuard によって消費されたデバイスリソースの統計が表示されます。 ここで表示されるデータは、デバイスの設定に表示される統計と異なる場合があります。 これの原因は、AdGuard がフィルタリングしたアプリの通信を全部 AdGuard に帰属させてしまうことです。 そのため、デバイス設定では、AdGuard が実際よりも多くのリソースを消費しているかのように誤表示されます。 バッテリーと通信量の消費に関する問題について詳しくはこちら "},{"title":"トラッキング防止","type":0,"sectionRef":"#","url":"adguard-for-android/features/protection/tracking-protection/","content":"トラッキング防止 info この記事では、システムレベルでお使いのデバイスを保護する多機能広告ブロッカー、「AdGuard for Android」について書いています。 デバイス全体を保護するこのアプリはこちらからダウンロードできます。 この機能は、「AdGuardによる保護」タブ（画面下部の左から2番目の盾アイコン）をタップ → 「トラッキング防止」にあります。 「トラッキング防止」（旧名：「ステルスモード」）機能は、ウェブサイトがあなたに関する情報（IPアドレス、ブラウザやオペレーティングシステムに関する情報、画面の解像度、ユーザーが訪問した、またはリダイレクトされたページなど）を収集することを防ぎます。 また、Cookie（クッキー）をブロックすることもできます。Cookie（クッキー）を使って、ウェブサイトはあなたのブラウザをマークしたり、個人設定やユーザー設定を保存したり、次回訪問時にあなたを識別したりします。 「トラッキング防止」には、3つのプライバシー保護レベル（「スタンダード」「高め」「厳格」）と、ユーザーによって設定されるレベル（「カスタム」）が1つあります。 各既定レベルの内容は以下の通りです: スタンダード ① トラッカー（個人情報追跡）をブロックする この機能は、「AdGuard 追跡防止フィルタ」を使用して、オンラインカウンターやウェブ解析ツールからあなたを保護します。 ② ウェブサイトに追跡しないよう要求する この機能は、Global Privacy ControlおよびDo Not Trackシグナルをあなたが訪問するウェブサイトに送信し、あなたの行動の追跡を無効にするようウェブアプリに要求します。 ③ X-Client-Dataヘッダーを削除する この機能により、Google Chromeのバージョンや変更に関する情報がGoogleドメイン（DoubleClickやGoogle Analyticsを含む）に送信されるのを防ぎます。 高め ① トラッカー（個人情報追跡）をブロックする この機能は、「AdGuard 追跡防止フィルタ」を使用して、オンラインカウンターやウェブ解析ツールからあなたを保護します。 ② URLからトラッキングパラメータを削除する この機能は、「AdGuard URL追跡フィルタ」を使用して、ページURLから utm_* や fb_ref などといったトラッキングパラメータを削除します。 ③ 自分の検索クエリを隠す 訪問したウェブサイトに対するクエリを検索エンジンから隠します。 ④ ウェブサイトに追跡しないよう要求する この機能は、Global Privacy ControlおよびDo Not Trackシグナルをあなたが訪問するウェブサイトに送信し、あなたの行動の追跡を無効にするようウェブアプリに要求します。 ⑤ サードパーティCookieの自動削除 この機能はサードパーティCookieの有効期間を180分に制限します。 caution この機能は、強制的にサードパーティのクッキー（Cookie）有効期限を切らせた後、それらすべてを削除します。 これには、SNSやその他の第三者サービスのログイン用クッキーも含まれますので、 一部のウェブサイトでは定期的に再ログインが必要になったり、その他のクッキー（Cookie）関連問題が発生する場合があります。 トラッキング（追跡）用Cookieのみをブロックするには、「スタンダード」保護レベルを使用してください。 ⑤ X-Client-Dataヘッダーを削除する この機能により、Google Chromeのバージョンや変更に関する情報がGoogleドメイン（DoubleClickやGoogle Analyticsを含む）に送信されるのを防ぎます。 厳格 ① トラッカー（個人情報追跡）をブロックする この機能は、「AdGuard 追跡防止フィルタ」を使用して、オンラインカウンターやウェブ解析ツールからあなたを保護します。 ② URLからトラッキングパラメータを削除する この機能は、「AdGuard URL追跡フィルタ」を使用して、ページURLから utm_* や fb_ref などといったトラッキングパラメータを削除します。 ③ 自分の検索クエリを隠す 訪問したウェブサイトに対するクエリを検索エンジンから隠します。 ④ ウェブサイトに追跡しないよう要求する この機能は、Global Privacy ControlおよびDo Not Trackシグナルをあなたが訪問するウェブサイトに送信し、あなたの行動の追跡を無効にするようウェブアプリに要求します。 ⑤ サードパーティCookieの自動削除 この機能はサードパーティCookieの有効期間を180分に制限します。 caution この機能は、強制的にサードパーティのクッキー（Cookie）有効期限を切らせた後、それらすべてを削除します。 これには、SNSやその他の第三者サービスのログイン用クッキーも含まれますので、 一部のウェブサイトでは定期的に再ログインが必要になったり、その他のクッキー（Cookie）関連問題が発生する場合があります。 トラッキング（追跡）用Cookieのみをブロックするには、「スタンダード」保護レベルを使用してください。 ⑤ WebRTCをブロックする この機能は、WebRTCをブロックします（WebRTCは、プロキシやVPNを使用しても実際のIPアドレスを漏らす可能性のある脆弱性です）。 ⑥ プッシュAPIをブロックする この機能は、ブラウザがサーバーからのプッシュメッセージを受信しないようにします。 ⑦ 位置情報APIをブロックする この機能は、ブラウザがあなたのGPSデータにアクセスしてあなたの位置を特定することを防ぎます。 ⑧ サードパーティからリファラを隠す どのウェブサイトを訪問したりしているのかをサードパーティに知られないようにします。 本来のページのURLを含むHTTPヘッダーを非表示にし、デフォルトヘッダーまたはカスタムヘッダーに置き換えます。（カスタムヘッダーは自分で設定できます） ⑨ ユーザエージェントを隠す この機能は、から識別情報を削除します。User-Agentヘッダーには通常、ブラウザの名前やバージョン、オペレーティングシステム、言語設定などという情報が含まれています。 ⑩ X-Client-Dataヘッダーを削除する この機能により、Google Chromeのバージョンや変更に関する情報がGoogleドメイン（DoubleClickやGoogle Analyticsを含む）に送信されるのを防ぎます。 「トラッキング防止」で個々の設定を微調整し、カスタム設定にしたりすることもできます。 各設定には、その役割を理解するのに役立つ説明がついています。 さまざまな「トラッキング防止」設定の効果について詳しくはこちらをご覧ください。※一部の設定はウェブサイトやブラウザ拡張機能の機能に干渉する可能性があるため、注意しながらご使用ください。","keywords":""},{"title":"インストール方法","type":0,"sectionRef":"#","url":"adguard-for-android/installation/","content":"","keywords":""},{"title":"How to install AdGuard for Android TV","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/adguard-for-android-tv/","content":"","keywords":""},{"title":"Installing AdGuard for Android TV via browser​","type":1,"pageTitle":"How to install AdGuard for Android TV","url":"adguard-for-android/solving-problems/adguard-for-android-tv/#installing-adguard-for-android-tv-via-browser","content":"Install the TV Bro browser on your Android TV. Download and install AdGuard for Android TV: Open the installed TV Bro browser on your Android TV.In the address bar of the browser, type https://agrd.io/tvapk and press Enter or follow the link.The browser will start downloading the AdGuard for Android TV installation file automatically.Once the download is complete, select Downloads in the browser control bar, then select the downloaded file.In a warning message, allow installing files from the browser.Return to your browser, open Downloads, and click the downloaded file.In the system window that appears, click Install, then Done or Open. Done, AdGuard for Android TV is installed. Launch AdGuard for Android TV: After the installation is complete, find the AdGuard app in the list of installed apps on your Android TV.Click the AdGuard icon to launch the app.Follow the on-screen instructions to complete the setup. "},{"title":"Installing AdGuard for Android TV via ADB​","type":1,"pageTitle":"How to install AdGuard for Android TV","url":"adguard-for-android/solving-problems/adguard-for-android-tv/#installing-adguard-for-android-tv-via-adb","content":"Make sure that Android Debug Bridge (ADB) is installed on your computer. If not, you can follow the instructions on XDA Developers: ADB Installation Guide. Download AdGuard for Android TV. In your TV settings, go to System → About and press the build number seven times to unlock developer options. Enable USB debugging. Write down the IP address of your Android TV: On your Android TV, navigate to Settings.Select System → About.Find Network and select Wi-Fi or Ethernet, depending on your connection type.Go to the network section and find IP address. Note down this IP address. Connect to Android TV via ADB: Open the terminal or command prompt on your computer.Enter the command adb connect and paste the IP address of your TV.The connection will be established. Install AdGuard for Android TV via ADB: In the terminal, enter the command adb install Downloads/adguard_tv.apk. If necessary, replace Downloads/adguard_tv.apk with your path.Wait for a message in the terminal indicating the successful installation of the app. "},{"title":"動作環境​","type":1,"pageTitle":"インストール方法","url":"adguard-for-android/installation/#動作環境","content":"OS version: Android 7.0 or higher RAM: 2 GB以上 Free disk space: 500 MB "},{"title":"AdGuard for Android のインストール方法​","type":1,"pageTitle":"インストール方法","url":"adguard-for-android/installation/#adguard-for-android-のインストール方法","content":"【AdGuardがGoogle Playにない理由】これは、Googleがネットワークレベルの広告ブロッカー（つまり、他のアプリの広告をブロックするアプリ）のGoogle Playでの配布を禁止しているためです。 You will find more information about Google restrictive policy in our blog. この理由で、AdGuard for Androidは直接AdGuardウェブサイトから手動でインストールする必要があります。 方法は以下の通りです。 Download the app on your device. Here are a few ways you can do this: head over to our website and tap the Download buttonstart the browser and type in the following URL: https://adguard.com/apkor scan this QR code: Allow installing apps from unknown sources. Once the file download is complete, tap Open in the notification. A popup will appear. Tap Settings, navigate to Install unknown apps, and grant permission for the browser you've used to download the file. Install the app. Once the browser has obtained the necessary permissions, the system will ask you if you want to install the AdGuard app. Tap Install. You will then be asked to read AdGuard's License agreement and Privacy policy. You can also participate in product development. To do this, check the boxes for Send crash reports automatically and Send technical and interaction data. Then tap Continue. Create a local VPN. In order to filter all traffic directly on your device and not route it through a remote server, AdGuard needs to establish a VPN connection. Enable HTTPS filtering. It is not a mandatory option, however, we advice to turn it on for the best ad-blocking quality. If your device is running Android 7–9, you'll be prompted to install a root certificate and configure HTTPS filtering after the local VPN setup. After you tap Install now, a prompt will appear asking you to authenticate the certificate installation with a password or fingerprint. If you have Android 10+ on your device, then after creating a local VPN, you will see the main app screen with a snack bar at the bottom with a suggestion to enable HTTPS filtering: tap Enable and follow the instructions on the next screen or check the article about certificate installation for more information. "},{"title":"АdGuardのアンインストールや再インストール​","type":1,"pageTitle":"インストール方法","url":"adguard-for-android/installation/#аdguardのアンインストールや再インストール","content":"If you need to uninstall AdGuard on your mobile device, open Settings and choose Apps (Android 7) or Apps &amp; notifications (Android 8+). Find AdGuard in the list of installed apps and press Uninstall.  To reinstall AdGuard, just download the apk file again and follow the steps outlined in the Installation section. Uninstallation is not required beforehand. "},{"title":"バッテリーとデータ通信の消費量について","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/battery/","content":"","keywords":""},{"title":"AdGuardのバッテリー使用状況統計画面​","type":1,"pageTitle":"バッテリーとデータ通信の消費量について","url":"adguard-for-android/solving-problems/battery/#adguardのバッテリー使用状況統計画面","content":"AdGuard for Android アプリ →「統計」（画面下左から3番目のアイコン）→「バッテリーの使用状況」でアクセスできます。  この画面では、過去24時間以内のAdGuardによるバッテリー消費量を示すグラフが表示されています。また、グラフをタップすることで、より詳細な1時間ごとのデータも確認できます。 そのほか、関連データの数値的な内訳と短い技術的な説明もあります。 "},{"title":"AdGuard の本当のバッテリー消費量はどのくらいですか？​","type":1,"pageTitle":"バッテリーとデータ通信の消費量について","url":"adguard-for-android/solving-problems/battery/#adguard-の本当のバッテリー消費量はどのくらいですか","content":"まず、少し理論を整理し、必要なデータへのリンク挙げたいと思います。を Androidは、各メーカーから提供されているいわゆるパワープロファイルに基づき、トラフィック消費量を算出します: https://source.android.com/devices/tech/power/values.html パワープロファイルの主な部分は、デバイスの各コンポーネントのバッテリー消費を定義するmAh単位の値のセットです: https://source.android.com/devices/tech/power/values.html 例えば、上の表から: wifi.active = WiFiデータ通信によって追加の31mAが消費（mAh）される。 radio.active = モバイルデータ通信によって追加の100-300mAが消費（mAh）される。 cpu.active= 100-200mA additional consumption in mAh caused by CPU load. AdGuard by itself almost doesn't consume any traffic, so for the sake of evaluating power consumption let's get rid of 'Mobile/Wi-Fi packets' and stick to 'CPU'. 消費量の計算式: “CPU TIME (ms)” X “cpu.active” / (60 60 1000) = “POWER USE mAh” この式に実数を入れてみましょう。 スクリーンショットからCPUの合計をミリ秒に換算します：506000。 2GHzのcpu.active係数はおよそ225mAhになります。 最終結果: 506000 ✖️ 225 / (60 ✖️ 60 ✖️ 1000) = 31,625mAh "},{"title":"結論​","type":1,"pageTitle":"バッテリーとデータ通信の消費量について","url":"adguard-for-android/solving-problems/battery/#結論","content":"AdGuard の実際のバッテリー消費量は、Androidのシステム統計で表示されているよりも、数倍少ないです。 220mAhなどではなく、31～40mAhといったところです。 一方、ブラウザーの消費量は66mAhではなく、〜200mAhであるべきです。 "},{"title":"Known compatibility issues with Android apps","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/compatibility-issues/","content":"","keywords":""},{"title":"VPN apps​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#vpn-apps","content":"If you are using AdGuard in the Local VPN filtering mode, you cannot run other VPN apps at the same time. To solve this problem, we suggest that you: Use AdGuard VPN — its Integrated mode allows two apps to operate simultaneouslyConfigure your VPN app to act as an outbound proxy and set up a local outbound proxy using the parameters from the third-party appSwitch to the Automatic proxy mode. When you do that, AdGuard will no longer use local VPN and will reconfigure iptables insteadSwitch to the Manual proxy mode. To do this, go to Settings → Filtering → Network → Routing mode Compatibility The Automatic proxy mode is only accessible on rooted devices. For Manual proxy, rooting is required on devices running on Android 10 or later. "},{"title":"Private DNS​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#private-dns","content":"The Private DNS feature was introduced in Android Pie. Before version Q, Private DNS didn't break AdGuard DNS filtering logic and the DNS forwarding through AdGuard worked normally. But starting from version Q, the presence of Private DNS forces apps to redirect traffic through the system resolver instead of AdGuard. See Android devs blog for more details. To solve the problem with Private DNS, use the $network rule Some device manufacturers keep Private DNS settings hidden and set 'Automatic' mode as a default one. Thus, disabling Private DNS is impossible but we can make the system think that the upstream is not valid by blocking it with a $network rule. For instance, if the system uses Google DNS by default, we can add rules |8.8.4.4^$network and |8.8.8.8^$network to block Google DNS. "},{"title":"Unsupported browsers​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#unsupported-browsers","content":""},{"title":"UC Browsers: UC Browser, UC Browser for x86, UC Mini, UC Browser HD​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#uc-browsers-uc-browser-uc-browser-for-x86-uc-mini-uc-browser-hd","content":"To be able to filter HTTPS traffic, AdGuard requires the user to add a certificate to the device's trusted user certificates. Unfortunately, UC-family browsers don't trust user certificates, so AdGuard cannot perform HTTPS filtering there. To solve this problem, move the certificate to the system certificate store Compatibility Requires root access. "},{"title":"Dolphin Browser: Dolphin Browser, Dolphin Browser Express​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#dolphin-browser-dolphin-browser-dolphin-browser-express","content":"AdGuard cannot filter its traffic when operating in the Manual proxy mode because this browser ignores system proxy settings. Use the Local VPN filtering mode to solve this problem "},{"title":"Opera mini: Opera mini, Opera mini with Yandex​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#opera-mini-opera-mini-opera-mini-with-yandex","content":"Opera mini drives traffic through a compression proxy by default and AdGuard is not able to decompress and filter it at the same time. There is no solution at this moment "},{"title":"Puffin Browser: Puffin Browser, Puffin Browser Pro​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#puffin-browser-puffin-browser-puffin-browser-pro","content":"Puffin Browser drives traffic through a compression proxy by default and AdGuard is not able to decompress and filter it at the same time. There is no solution at this moment "},{"title":"Firefoxブラウザへのセキュリティ証明書の手動インストール","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/firefox-certificates/","content":"","keywords":""},{"title":"【対策①】​","type":1,"pageTitle":"Firefoxブラウザへのセキュリティ証明書の手動インストール","url":"adguard-for-android/solving-problems/firefox-certificates/#対策","content":"note この方法は、Android版Firefoxのバージョン90.0以降で動作します。 Firefox (およびそれをベースにしたブラウザ) がAdGuard証明書を信頼できるようにするには、以下を行ってください: Run the browser. Go to Settings → About Firefox. Tap the Firefox logo five times. Navigate to Settings → Secret Settings. Toggle Use third party CA certificates. "},{"title":"【対策②】​","type":1,"pageTitle":"Firefoxブラウザへのセキュリティ証明書の手動インストール","url":"adguard-for-android/solving-problems/firefox-certificates/#対策-1","content":"note This method will only work on rooted devices. Install and configure ADB; On the Windows platform, Samsung owners may need to install this utility. Activate the developer mode and enable USB debugging: Open the Settings app on your phone;Go to System section (last item in the settings menu). In this section, find the sub-item About phone;Tap the Build number line 7 times. After that, you will receive a notification that You are now a developer (If necessary, enter an unlock code for the device);Open System Settings → Developer Options → Scroll down and enable USB debugging → Confirm debugging is enabled in the window Allow USB debugging after reading the warning carefully. Install the Firefox browser (release version); Open the AdGuard settings (gear icon in the bottom right corner) → Filtering → Network → HTTPS filtering → Security certificate → Instructions for Firefox → Install for old versions; Open the folder data/data/org.mozilla.firefox/files/mozilla using adb shell su and cd data/data/..., then browse to the folder named xxxxxxx.default and memorize its name; In the specified folder we are interested in two files: cert9.dbkey4.db We need to move these files to a folder of the browser where the security certificate issue occurred: data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyy.default. The full command will look like this: adb shell sucp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxxx.default/cert9.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.defaultcp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxxx.default/key4.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.default In case you received the system notification permission denied, you should first move the specified files to the permission-free directory. And after that you should move them to the necessary folder in your Firefox browser. The full command should look something like this: adb shell sucp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxx.default/cert9.db sdcard/Downloadcp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxx.default/key4.db sdcard/Downloadcp -R sdcard/Download/cert9.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.defaultcp -R sdcard/Download/key4.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.default If adb shell su does not work, you should try adb shell initially, and then su. "},{"title":"Problems caused by extending restricted settings","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/extending-restricted-settings/","content":"Problems caused by extending restricted settings info This article is about AdGuard for Android, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app In an effort to improve user privacy, Google has expanded the restriction settings in Android 15. More settings, such as App usage access, now require an additional permission to be enabled. Since the Firewall and Detect Samsung Pay features require the App usage access setting to be enabled for them to work properly, you may have experienced problems using them. To resolve these issues, please follow the steps below: note AdGuard has a strict no-logging policy, which means that we do not collect your data or send it to third parties. We only ask for access to data without which the application cannot function. On your Android device, open the Settings app.Tap Apps.Tap AdGuard If you can't find it, first tap See all apps or App info. Tap More (⁝) → Allow restricted settings. Follow the on-screen instructions. All done! Now the Firewall and Detect Samsung Pay features will work correctly.","keywords":""},{"title":"How to get HAR files","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/har/","content":"","keywords":""},{"title":"What are HAR files?​","type":1,"pageTitle":"How to get HAR files","url":"adguard-for-android/solving-problems/har/#what-are-har-files","content":"The HAR (HTTP ARchive) format is a JSON-formatted archive file for logging of a web browser's interaction with a site. The specifications of HAR format defines an archival data for HTTP transactions that used by a browser to export detailed information about web pages it loads. More detailed description of HAR file format and its specification you can find at softwareishard.com website. "},{"title":"How to get HAR files​","type":1,"pageTitle":"How to get HAR files","url":"adguard-for-android/solving-problems/har/#how-to-get-har-files","content":"Sometimes we need to analyze it to block specific ads that are difficult to reproduce for some reason. To get HAR files follow these steps: Open AdGuard and go to Settings (⚙ icon in the lower right corner).Tap General →Advanced → Low-level settings.Scroll down and activate Capture HAR in the Filtering section.Open the app and perform the necessary actions to reproduce the problem.Turn Capture HAR off.Go back to Advanced.Tap Export logs and system info → Allow (if necessary) → Save. Please send the file with logs (that you've got as a result) to the AdGuard support service. note Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message. "},{"title":"How to analyze HAR files​","type":1,"pageTitle":"How to get HAR files","url":"adguard-for-android/solving-problems/har/#how-to-analyze-har-files","content":"Here are some sources that we can recommend to analyze HAR files: HTTP Archive Viewer master is a HAR analyzer tool, visualizes HTTP Archive (HAR) log files created by HTTP tracking tools.Fiddler is a web debugging proxy, lets you capture, inspect, monitor all HTTP(S) traffic between your computer and the Internet, mock requests, and diagnose network issues. "},{"title":"How to protect AdGuard from being disabled by the system","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/background-work/","content":"","keywords":""},{"title":"Asus​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#asus","content":"Information on Asus devices is still far from being exhaustive so there may be more issues than listed here. We're going to update this part of the article when we know more. The main source of potential problems with background work on Asus devices is associated with the optimization app called Power Master. It is pre-installed and has pretty aggressive default settings, e.g. to block apps from starting and to kill background tasks when your screen turns off. To make sure apps background processing works, set up the following: Go to Mobile Manager → PowerMaster → Settings (or Battery-saving options) → Uncheck Clean up in suspend Go to Mobile Manager → PowerMaster → Settings (or Battery-saving options) → Uncheck Auto-deny apps from auto starting Alternatively, instead of unchecking Auto-deny apps from auto starting entirely, you can go to Settings → Battery-saving options → Auto-start manager → AdGuard and uncheck it. "},{"title":"Xiaomi​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#xiaomi","content":"Xiaomi (and especially MIUI) devices are among the most troublesome ones when it comes to background work. They are known to limit background processes and have non-standard permissions with a lack of proper documentation to top it off. Sometimes apps just don't work right on Xiaomi phones and there's little that can be done about that. Below are some actions you might attempt to perform if you run into any trouble regarding AdGuard's background work on various Xiaomi devices. "},{"title":"MIUI 12.0.8+​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-1208","content":"To let your AdGuard app run successfully in the background, do the following: In Settings → Apps → Manage apps → scroll down to locate AdGuard, set Autostart to “On”.  Scroll down to Battery saver, tap it, and set to “No restrictions”.  In Other Permissions, set all possible permissions to “On” Run the Security app. Tap on the Gear icon at the top-right corner of the screen.  Tap Boost speed in Feature Settings.  Tap Lock apps.  In the Lock apps screen, set the toggle switch for the AdGuard app to On.  That’s all! You’ve successfully pinned the AdGuard app. "},{"title":"MIUI 12​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-12","content":"Go to Settings → Apps → Manage apps → AdGuard.  Set Autostart to “On”Set all possible permissions in Other Permissions to “On”Set Battery saver to No restrictions  Now launch the active apps manager by swiping up from the bottom of the screen and look for the AdGuard app.  Tap and hold it until a menu pops up. Select a lock icon.  The lock icon should appear above the app window.  "},{"title":"MIUI 10-11​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-10-11","content":"To let your app run successfully in the background, configure its settings as follows: Set Autostart to “On”  Settings → Battery &amp; performance → switch-off Battery saver function  Then open App battery saver settings → AdGuard → No restrictions  "},{"title":"All models​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#all-models","content":"The following steps should be performed on any Xiaomi device that keeps killing the AdGuard app: Power management​ Please enable: Settings → Advanced Settings → Battery manager → set Power plan to PerformanceDevice Settings → Advanced Settings → Battery Manager → Protected apps — AdGuard needs to be ProtectedDevice Settings → Apps → AdGuard → Battery → Power-intensive prompt and Keep running after screen offSettings → Additional Settings → Battery &amp; Performance → Manage apps’ battery usage and here: Switch Power Saving Modes to “Off”Choose the following options: Saving Power in The Background → Choose apps → AdGuard → Background Settings → No restrictions App battery saver​ Set Security → Battery → App Battery Saver → AdGuard to No restriction App pinning​ To set up AdGuard's background work for Xiaomi devices you should pay attention to Battery and Permissions. Tap the Recent tasks button and swipe AdGuard down to make options visible (as shown on the screenshot): Tap on the lock icon. This will stop Xiaomi from closing AdGuard automatically. It should look like this: Go to Battery Select the battery saver app Find and select AdGuard Set up the following Background settings: Go to Permissions Select Autostart Make sure that autostart function is enabled for AdGuard: "},{"title":"Samsung​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#samsung","content":"On many Samsung devices, any app that is unused for 3 days will not be able to start from background. You should turn off Adaptive battery and Put apps to sleep options wherever possible to prevent that. Note that after an app or OS update, these settings often revert to their default values and will need to be turned off again. "},{"title":"Android 11+​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-11","content":"On Android 11, Samsung will prevent apps (including AdGuard) from working in background by default unless you exclude them from battery optimizations. To make sure AdGuard will not get killed in the background: Lock AdGuard in Recent Open Recent apps.Find AdGuard.Long-press the icon of the AdGuard app. To keep AdGuard working properly: Go to Settings → Apps → AdGuard → Battery → Optimize battery usage In the drop-down menu, select All. Then find AdGuard on the list and set the state for it to Don’t optimize (on some models, there may be a switch that you need to toggle off). On some devices, the relevant setting may be named differently and be located in other places. Among the possible paths is: Settings → Apps → (⁝) menu → Special Access → Optimize battery usage → Find AdGuard on the list and uncheck it Disable automatic optimization. To do so: Open Battery → (⁝) menu → Choose Automation → Toggle off all of the settings there Again, the exact path may differ, for example on some devices you should go to: Phone Settings → Device care → Tap the (⁝) 3-dot menu → Advanced → Disable Auto optimization and Optimize settings If your phone has it, disable Adaptive battery: Open phone Settings → Battery → More battery settings → Toggle off Adaptive battery Disable Sleeping apps (the exact name of this setting and the path to it may vary depending on the device): Open phone Settings → Battery → Background usage limits → Disable Put unused apps to sleep "},{"title":"Android 9 & 10​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-9--10","content":"Go to Phone settings → Device care → Tap on the Battery item → (⁝) 3-dot menu → Settings and uncheck Put unused apps to sleep and Auto-disable unused apps. Check that Phone settings → Apps → Sleep as Android → Battery → Background restriction is set to App can use battery in background for AdGuard. Remove AdGuard from Sleeping apps. To do that: Go to Phone settings → Device care Tap Battery Tap the 3-dot menu → Settings Tap Sleeping apps Wake up AdGuard using the trashcan icon "},{"title":"Old Samsung devices​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#old-samsung-devices","content":"For early Samsung devices, there is no huge need for setting up the background operation, but if in your case the AdGuard app is getting closed or disappears from the recent tasks after a while, do the following: Tap the Recent tasks button, tap the Additional settings icon. It should look like this: Tap Lock Apps: Tap on the lock icon "},{"title":"Huawei​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei","content":"Huawei and their Android customization EMUI belongs to the most troublesome on the market with respect to non-standard background process limitations. On default settings, virtually all apps that work in background will face problems and ultimately break. "},{"title":"App Launch on some EMUI 8, 9 and 10 devices (Huawei P20, Huawei P20 Lite, Huawei Mate 10…)​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#app-launch-on-some-emui-8-9-and-10-devices-huawei-p20-huawei-p20-lite-huawei-mate-10","content":"This feature may or may not be available for all devices or may be labeled differently. Go to phone Settings → Battery → App launch Turn off Manage all automatically Set AdGuard to Manage manually and enable all toggles. Disable Startup manager that prevents apps from running automatically after the phone starts up. Go to Settings → All → Startup manager → Toggle AdGuard off Also for reliable background processes you may need to uninstall PowerGenie as detailed below. "},{"title":"EMUI 9+ devices and PowerGenie​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#emui-9-devices-and-powergenie","content":"note On phones with EMUI 9+ (Android P+) there is a task killer app called PowerGenie which forces to quit all apps not whitelisted by Huawei and does not give users any configuration options. See below how to uninstall it. Huawei is extremely inventive in breaking apps on their devices. In addition to all the non-standard power management measures described below, they introduced a task killer app built right into EMUI 9 on Android Pie. It is called PowerGenie and it kills all apps that are not on its whitelist. You cannot add custom apps on their pre-defined whitelist. This means there is no other way to achieve proper app functionality on Huawei than uninstalling PowerGenie. Unfortunately, this is a system app that can only be fully uninstalled using ADB (Android Debug Bridge). Source XDA forum. You need to: It is not confirmed, but it might be possible to just disable PowerGenie in Phone settings → Apps. If this setting is present in your device's settings, you may skip the following steps. However, it would need to be re-applied every time you reboot your device. If there is no such setting, follow this instruction: Install ADB on your computer; Connect your phone with a data cable; Enable Developer options; Enable USB debugging within Developer options on your phone; Run the following commands on your computer: adb shell pm uninstall --user 0 com.huawei.powergenie adb shell pm uninstall -k --user 0 com.huawei.android.hwaps If AdGuard keeps getting killed, also try running adb shell pm stopservice hwPfwService "},{"title":"EMUI 6+ devices (and some EMUI 5 devices)​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#emui-6-devices-and-some-emui-5-devices","content":"Phone settings → Advanced Settings → Battery manager → Power plan set to Performance;Phone Settings → Advanced Settings → Battery Manager → Protected apps — set AdGuard as Protected;Phone Settings → Apps → Your app → Battery → Power-intensive prompt [uncheck] and Keep running after screen off [check];Phone settings → Apps → Advanced (At the bottom) → Ignore optimizations → Press Allowed → All apps → Find AdGuard on the list and set to Allow. Huawei P9 Plus​ Open device settings → Apps → Settings → Special access → choose Ignore battery optimization → select Allow for AdGuard. "},{"title":"Huawei P20, Huawei Honor 9 Lite and Huawei Mate 9 Pro​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei-p20-huawei-honor-9-lite-and-huawei-mate-9-pro","content":"Open device settings → Battery → App launch → set AdGuard to Manage manually and make sure everything is turned on. "},{"title":"Huawei P20, Huawei P20 Lite, Huawei Mate 10​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei-p20-huawei-p20-lite-huawei-mate-10","content":"Phone settings → Battery → App launch → set AdGuard to Manage manually and make sure everything is turned on. Also for reliable background processes you may need to uninstall PowerGenie as described above. "},{"title":"Early Huawei​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#early-huawei","content":"Old Huawei devices are the easiest to set up, it is enough to perform two simple steps to lock AdGuard in the background so it won't be terminated by battery saving or background killer process. Tap the Recent tasks button: Tap on the lock icon: Besides, to set up the background work of AdGuard more effectively, you should open device settings and do the following: Go to Settings → open Battery Manager → set Power plan to Performance;Then choose Protected apps in the Battery Manager and check if AdGuard is Protected;Go to Apps in the main settings and tap AdGuard there → choose Battery → enable Power-intensive prompt and Keep running after screen is off;Then in the Apps section open Settings (at the bottom) → Special access → choose Ignore battery optimization → press Allowed → All apps → find AdGuard on the list and set it to Deny. "},{"title":"Meizu​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#meizu","content":"Meizu has almost the same approach to the background process limitations as Huawei and Xiaomi. So you can avoid disabling the background work of AdGuard and any other app by adjusting the following settings: Go to Advanced Settings → open Battery Manager → set Power plan to Performance;Then choose Protected apps in the Battery Manager and check if AdGuard is Protected;Go to Apps section and tap AdGuard there → choose Battery → enable Power-intensive prompt and Keep running after screen is off. "},{"title":"Nokia​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia","content":"Nokia devices running Android 9+ have The Evenwell Power saver disabled, which was the main culprit for killing background processes. If AdGuard still gets killed on your Nokia phone, check out the legacy instruction. "},{"title":"Nokia 1 (Android Go)​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia-1-android-go","content":"Install ADB on your computer; Connect your phone with a data cable; Enable Developer options; Enable USB debugging within Developer options on your phone; Uninstall the com.evenwell.emm package via the following ADB commands: adb shell pm uninstall --user 0 com.evenwell.emm "},{"title":"Nokia 3.1 and 5.1​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia-31-and-51","content":"On these devices there is a task killer called DuraSpeed that terminates all background apps. It can't be uninstalled or disabled by regular means. These actions require ADB, and even then, when disabled, DuraSpeed will re-enable itself on reboot. You need a tasker app like MacroDroid for automatic DuraSpeed's disabling. Install ADB on your computer; Connect your phone with a data cable; Enable Developer options; Enable USB debugging within Developer options on your phone; Grant MacroDroid (or your choice of automation app) the ability to write to the global settings store by entering this command: adb shell pm grant com.arlosoft.macrodroid android.permission.WRITE_SECURE_SETTINGS Create a task triggered at Device Boot that performs the following: System Setting: type Global, name setting.duraspeed.enabled, value -1System Setting: type System, name setting.duraspeed.enabled, value -1System Setting: type Global, name setting.duraspeed.enabled, value 0System Setting: type System, name setting.duraspeed.enabled, value 0 note You need both Global and System type settings. The screenshot shows only Global as an example. ::: "},{"title":"Other Nokia models​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#other-nokia-models","content":"Go to phone Settings → Apps → See all apps. Tap on the right top corner menu → Show system. Find Power saver app on the list, select it and tap Force close. It will remain stopped for a while but will restart at some point. From now on, AdGuard should work normally and use the standard Android battery optimizations until Power Saver restarts. An alternative, more permanent solution for more tech-savvy users: Install ADB on your computer; Connect your phone with a data cable; Enable Developer options; Enable USB debugging within Developer options on your phone; Uninstall the com.evenwell.powersaving.g3 package via the following ADB commands: adb shell pm uninstall --user 0 com.evenwell.powersaving.g3 "},{"title":"Oppo​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#oppo","content":"Sometimes background services are being killed (including accessibility services, which then need re-enabling) when you turn the screen off. So far, a workaround for this is: Go to Security Centre → tap Privacy Permissions → Startup manager and allow AdGuard app to run in background. Other solutions: Pin AdGuard to the recent apps screenEnable AdGuard in the app list inside the security app’s “startup manager” and “floating app list” (com.coloros.safecenter / com.coloros.safecenter.permission.Permission)Turn off battery optimizations "},{"title":"OnePlus​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#oneplus","content":"Devices with OxygenOS on board are the most problematic, with its OS-specific cache cleaning and free RAM, including OS optimization. In addition, OxygenOS can interrupt the AdGuard's work if you do not use it for a while. To avoid these unwanted consequences, follow these steps. "},{"title":"Locking the app​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#locking-the-app","content":"Go to Settings Battery → Battery optimization Find AdGuard Tap on it and select Don't optimize option Tap Done to save Open recent apps menu (as showed on this screenshot): Lock AdGuard app: caution On some OnePlus phones there is also a thing called App Auto-Launch and Deep Optimization which essentially prevents apps from working in the background. Please disable it for AdGuard. "},{"title":"Battery optimization​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#battery-optimization","content":"Open device settings → Battery → Battery optimization → switch to the All apps list (top menu) → choose AdGuard → activate Don’t optimize Open device settings → Battery → Battery Optimization → (⁝) three-dot menu → Advanced Optimization → Disable Deep Optimization "},{"title":"App Auto-Launch​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#app-auto-launch","content":"App Auto-Launch (on some OnePlus phones) essentially prevents apps from working in the background. Please disable it for AdGuard. "},{"title":"Enhanced / Advanced optimization​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#enhanced--advanced-optimization","content":"For OnePlus 6 and above: Open System settings → Battery → Battery optimization → (⁝) three-dot menu → Advanced optimizationDisable Deep optimization / Adaptive BatteryDisble Sleep standby optimization. OnePlus tries to learn when you are usually asleep, and in those times it will then disable the phone’s network connections. This setting will prevent push notifications from being delivered. For OnePlus below 6: Turn off System settings → Battery → Battery optimization → (⁝) three-dot menu → Enhanced optimization. "},{"title":"Recent apps clearing behaviour​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#recent-apps-clearing-behaviour","content":"Normally when you swipe an app away, it won’t close. On OnePlus this may however work in a different way. Recent app clear behaviour manager might be set up in a way that swiping the app to close will kill it. To return it to the “normal” mode: Go to Settings → Advanced → Recent app management → Switch to Normal clear "},{"title":"Sony​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#sony","content":"Sony was the first mobile OS developer to introduce non-standard background process optimization. It is called Stamina mode and it instantly breaks all background processes if enabled. To solve this: Go to Settings → Battery → Disable STAMINA mode  On Android 11+, on the same screen with STAMINA mode, there is a setting called Adaptive battery, you should disable it too. You also need to be set AdGuard as Excepted from Power-saving feature: System settings ​→ Apps &amp; Notifications ​→ Advanced ​→ Special app access ​→ Power saving feature → Switch AdGuard to Excepted "},{"title":"Wiko​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#wiko","content":"Wiko devices are problematic in terms of non-standard background process optimizations. To let AdGuard work in background, do the following: Go to Phone Assistant → Battery → turn off Eco ModeGo back and go to Manual modeTap on the Gear icon on top right → Background apps whitelist → Select AdGuard "},{"title":"Android stock devices Pixel/Nexus/Nubia/Essential​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-stock-devices-pixelnexusnubiaessential","content":"Android stock OS normally does not conflict with apps working in the background, but if you are facing any issues you will need to switch on the Always-on VPN mode. Go to Settings → Network and Internet Tap VPN and choose AdGuard Set up Always-on VPN mode "},{"title":"Moving the CA certificate to the system store on rooted devices","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/","content":"","keywords":""},{"title":"How to install AdGuard's certificate to the system store​","type":1,"pageTitle":"Moving the CA certificate to the system store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#how-to-install-adguards-certificate-to-the-system-store","content":"Open AdGuard → Settings → Filtering → Network → HTTPS filtering → Security certificates. If you don't have any certificate yet, install the AdGuard Personal CA into the user store. This will allow AdGuard to filter HTTPS traffic in browsers. Install the AdGuard Intermediate CA into the user store. You'll need it to run the adguardcert Magisk module that allows you to move certificates to the system store. Install the latest release of the adguardcert Magisk module. Open Magisk → Modules → Install from storage and select the downloaded adguardcert file. This will move the AdGuard Personal CA from the user store to the system store. Tap Reboot. After the transfer, the AdGuard Personal CA in the system store will allow you to filter HTTPS traffic in apps, while the AdGuard Intermediate CA in the user store will allow you to filter HTTPS traffic in Chromium-based browsers (see below why). "},{"title":"Known issues with Chrome and Chromium-based browsers​","type":1,"pageTitle":"Moving the CA certificate to the system store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#known-issues-with-chrome-and-chromium-based-browsers","content":"Chrome and other Chromium-based browsers require Certificate Transparency (CT) logs for certificates located in the system store. CT logs don't contain information about certificates issued by HTTPS-filtering apps. Therefore, AdGuard requires an additional certificate in the user store to filter HTTPS traffic in these browsers. "},{"title":"Bromite browser​","type":1,"pageTitle":"Moving the CA certificate to the system store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#bromite-browser","content":"In addition to the above issue, Bromite doesn't trust certificates in the user store by default. To filter HTTPS traffic there, open Bromite, go to chrome://flags, and set Allow user certificates to Enabled. This applies to both rooted and non-rooted devices. "},{"title":"How to collect debug logs","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/log/","content":"","keywords":""},{"title":"Collecting debug log​","type":1,"pageTitle":"How to collect debug logs","url":"adguard-for-android/solving-problems/log/#collecting-debug-log","content":"To collect debug log and send it to us you need to perform following steps: Go to Settings → General → Advanced.Tap Logging level and set it to Debug.Reproduce the problem and try to remember the exact time it occurred.Wait a while, then return to Settings and choose the Support tab. Tap Report a bug and complete the required fields. Don't forget to check the Send app logs and system info checkbox. Finally tap Send. If you're interested in following the resolution of your issue and engaging in a dialogue with the developers, we recommend that you take the following steps after completing the first three: Wait a while, then return to the Advanced screen and export logs via Export logs and system info. Then report a bug on GitHub by following these instructions.After creating an issue on GitHub, send the log file to devteam@adguard.com. Include the time of the bug and attach a link to your issue or its number (it appears as #number next to the title). Alternatively, you can upload the log file to Google Drive and send it to devteam@adguard.com. Add the file link to your GitHub issue "},{"title":"How to get system logs","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/logcat/","content":"","keywords":""},{"title":"Capture a bug report from a device​","type":1,"pageTitle":"How to get system logs","url":"adguard-for-android/solving-problems/logcat/#capture-a-bug-report-from-a-device","content":"To get a bug report directly from your device, do the following: Be sure you have Developer options enabled. In Developer options, tap Take bug report. Select the type of bug report you want and tap Report. note After a moment, you will see a notification that the bug report is ready (see Figure 2). ::: ![Bug report *mobile](https://cdn.adtidy.org/public/Adguard/kb/newscreenshots/En/Android3.1/bugreporteen.png)  To share the bug report, tap the notification. Send this log to our support team. note Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message to support. ::: "},{"title":"Capture a bug report via Logcat​","type":1,"pageTitle":"How to get system logs","url":"adguard-for-android/solving-problems/logcat/#capture-a-bug-report-via-logcat","content":"On devices with Android 7 and below, it is not possible to send a bug report automatically. Then you can capture it manually via Logcat — a standard Android command-line tool that dumps a log of system messages. Follow this instruction: Part #1: prepare the device Switch device to the developer mode. To do this: go to Settings → About → tap Build Number 7 times. Go to Developer Options. Enable USB debugging. Increase Logger buffer sizes to 4 MB per log buffer. 4 MB should be enough for storing the logs we need until you're able to do the second part (getting the log from the device); Part #2: reproduce the problem It is important to reproduce the problem after you're done with the first part. 問題を再現します。 Remember/write down the date and time of reproduction and include it in the email to our support later. Part #3: get the log Connect your device to a PC with a USB cable. Download Android SDK Platform Tools. Choose the appropriate download link for your OS from the Downloads section. Once you tap the link, a ZIP file will be downloaded. You can extract the ADB (Android Debug Bridge) files from the ZIP file and store them wherever you want. Test whether ADB is working properly: connect your Android device to your computer using a USB cable, open the Command Prompt, PowerShell or Terminal and run the following command: adb devices An example of a successful result: Then run the following command (insert the relevant path): adb logcat -v threadtime -d &gt; C:\\Program Files\\platform-tools\\logs.txt Email the created txt file as well as the time the problem was reproduced (from part #2) to our support team at support@adguard.com. "},{"title":"Alternative way for ROOT users​","type":1,"pageTitle":"How to get system logs","url":"adguard-for-android/solving-problems/logcat/#alternative-way-for-root-users","content":"Download and run Logcat. Choose Record in the menu. Choose a name for a log file or just press OK. Now you can press Home button, CatLog will continue recording the log in background. Reproduce the issue. Open CatLog and press Stop record in the menu. Send this log to our support team. note Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message to support. "},{"title":"Android 11以上での証明書インストール方法","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/manual-certificate/","content":"Android 11以上での証明書インストール方法 info This article is about AdGuard for Android, a multifunctional ad blocker that protects your device at the system level. 実際に使ってみるには、AdGuardアプリをダウンロードしてください。 HTTPSトラフィック（通信）をフィルタリングできるようになるには、AdGuardはデバイスのユーザーストレージに証明書をインストールする必要があります。（※ほとんどの広告がHTTPSを使用しているため、HTTPSフィルタリングは広告ブロック性能にとって非常に重要です。） On older versions of the Android OS this was done automatically, but on Android 11 and later users have to install it manually. AdGuard証明書をインストールする方法は以下の通りです: 「HTTPS フィルタリングがオフになっています」という通知が表示されたら、「有効にする」をタップします。 すると、3つの説明画面が順番に表示されます: HTTPSトラフィックをフィルタリングする理由AdGuardによるHTTPSフィルタリングが安全である理由AdGuard証明書の必要性 Consecutively tap Next → Next → Save certificate. 開いたダウンロードフォルダで右下の「保存」をタップします。 After saving, tap Open Settings. Tap More security settings → Encryption &amp; credentials → Install a certificate → CA certificate. You might see a warning. If so, tap Install anyway and enter your PIN if necessary. Select the AdGuard certificate file. Its name should look like adguard_1342_020322.crt. これで完了です。 証明書が正常にインストールされると、HTTPSフィルタリングが有効になります。 Please note that the steps provided are based on the Google Pixel 7 smartphone. 別のAndroidデバイスをお使いの場合、正確なメニュー名やオプションは多少異なる場合があります。 For easier navigation consider searching for a certificate by entering “certificate” or “credentials” in the settings search bar. 証明書の手動インストール中に問題が発生した場合（たとえば、証明書をインストールしたにもかかわらず、AdGuardアプリが証明書を無視し続けるなど）、以下のいずれかの解決策をお試しください。 AdGuardを再起動してみる正しい証明書（AdGuard Personal CA）をもう一度インストールしてみてください。 それでも問題が発生し、証明書をインストールできない場合は、サポートチームの support@adguard.com （日本語対応）までご連絡ください。","keywords":""},{"title":"How to use Samsung Pay with AdGuard in South Korea","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/samsungpay-with-adguard-in-south-korea/","content":"How to use Samsung Pay with AdGuard in South Korea info This article is about AdGuard for Android, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app A number of users have encountered an issue where Samsung Pay does not work while AdGuard is running. This issue occurs almost exclusively on devices registered in South Korea. What is causing this issue? Sometimes Samsung Pay does not work on devices with VPN services running, and AdGuard is one of these apps. By default, AdGuard uses a local VPN to filter traffic, which can cause problems when using Samsung Pay. As a consequence, users had to disable AdGuard when making payments with Samsung Pay. This can be avoided with the Detect Samsung Pay feature. When this option is enabled, the AdGuard app is paused whenever the user opens the Samsung Pay app and resumes when the app is closed. note This feature will work only if the Local VPN filtering mode is chosen in AdGuard settings. If another mode is being used, Samsung Pay will function without any interruptions. To enable Detect Samsung Pay, follow these steps: Go to Settings → General → Advanced→ Low-level settings. Scroll to Detect Samsung Pay and move the slider to the right. Tap Allow permissions and give AdGuard access to information about the use of other apps. We need it to collect statistics about the operation of Samsung Pay in order for the Detect Samsung Pay feature to work. After enabling this feature, when you switch from Samsung Pay to AdGuard, the following message will appear as shown in the screenshot. Alternatively, you can disable filtering for Samsung Pay in App management. Simply go to the App management screen (third tab from the bottom), find Samsung Pay in the list, and turn off the switch at Route traffic through AdGuard.","keywords":""},{"title":"Low-level settings guide","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"How to reach Low-level settings​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#how-to-reach-low-level-settings","content":"caution Changing Low-level settings can cause problems with the performance of AdGuard, may break the Internet connection or compromise your security and privacy. This section should only be opened if you know what you are doing, or you were asked to do so by our support team. To go to Low-level settings, open the AdGuard app and tap the gear icon in the lower right corner of the screen. Then choose General → Advanced → Low-level settings. "},{"title":"Low-level settings​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#low-level-settings","content":"For AdGuard v4.0 for Android we've completely redesigned the low-level settings: divided them into thematic blocks, made them clearer, added validation of entered values and other safety valves, got rid of some settings, and added others. "},{"title":"DNS protection​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#dns-protection","content":"Fallback upstreams​ Here you can specify the fallback DNS resolver(s) to be used if the configured server is unavailable. There are three options: Automatic DNS, None, and Custom DNS. If no fallback server is specified, the Automatic DNS — the system DNS or AdGuard DNS — will be used. None means no fallback at all. Selecting Custom DNS allows you to list IPv4 and IPv6 server addresses to use as upstreams. Fallback domains​ Here you can list domains that will be forwarded directly to fallback upstreams if they exist. Detect search domains​ If this setting is enabled, AdGuard will detect search domains and automatically forward them to fallback upstreams. Bootstrap upstreams​ Bootstrap DNS for DoH, DoT, and DoQ servers. The Automatic DNS — the system DNS or AdGuard DNS — is used by default. By selecting Custom DNS, you can list IPv4 and IPv6 server addresses to use as bootstrap upstreams. Blocking mode for adblock-style rules​ Here you can specify the response type for domains blocked by DNS rules based on adblock rule syntax (for instance, ||example.org^). Respond with REFUSEDRespond with NXDOMAINRespond with Custom IP address (IPv4 and IPv6 addresses can be specified here) Blocking mode for hosts rules​ Here you can specify the response type for domains blocked by DNS rules based on hosts rule syntax (for instance, &lt;ip&gt; &lt;domain&gt; 0.0.0.0 example.com). Respond with REFUSEDRespond with NXDOMAINRespond with Custom IP address (IPv4 and IPv6 addresses can be specified here) DNS request timeout​ Here you can specify the time in milliseconds that AdGuard will wait for the response from the selected DNS server before resorting to fallback. If you don’t fill in this field or enter an invalid value, the value of 5000 will be used. Blocked response TTL​ Here you can specify the TTL (time to live) value that will be returned in response to a blocked request. DNS cache size​ Here you can specify the maximum number of cached responses. Default value is 1000. ECH blocking​ If enabled, AdGuard strips Encrypted Client Hello parameters from DNS responses. Ignore unavailable outbound proxy​ If this setting is enabled, AdGuard will send DNS requests directly when the outbound proxy is unavailable. Try HTTP/3 for DNS-over-HTTPS upstreams​ If this setting is enabled, AdGuard will use HTTP/3 to speed up DNS query resolution for DoH upstreams. Otherwise, AdGuard will revert to its default behavior and use HTTP/2 to send all DNS requests for DNS-over-HTTPS. SERVFAIL failure response​ If this setting is enabled and all upstreams, including fallback ones, fail to respond, AdGuard will send a SERVFAIL response to the client. Use fallback for non-fallback domains​ If this setting is enabled, AdGuard will use fallback upstreams for all domains. Otherwise, fallback upstreams will only be used for fallback domains and search domains if the corresponding option is enabled. Validate DNS upstreams​ If this setting is enabled, AdGuard will test DNS upstreams before adding or updating custom DNS servers. Filter secure DNS​ If this setting is on, AdGuard will apply all enabled DNS filters and DNS user rules to encrypted DNS-over-HTTPS (DoH) traffic and not only to plain DNS. DoH traffic mostly comes from Chrome and other browsers that have a Secure DNS (or similar) setting. You can use Filter secure DNS in two different modes: Filter on the fly. In this mode, AdGuard applies all enabled DNS filters and DNS user rules to DoH traffic but doesn’t redirect it to the local DNS proxy. If a DNS server is specified in the browser’s settings, this server will handle the DoH traffic for this browser Redirect to DNS proxy. In this mode, AdGuard applies all enabled DNS filters and DNS user rules to DoH traffic by redirecting it to the local DNS proxy. The DNS server specified in the AdGuard’s DNS settings will handle all DoH traffic "},{"title":"Filtering​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#filtering","content":"Capture HAR​ If this setting is enabled, AdGuard will capture HAR files. It will create a directory named “har” inside the app cache directory and add there information about all filtered HTTP requests in HAR 1.2 format that can be analyzed with the Fiddler program. Use it only for debugging purposes! "},{"title":"HTTPSフィルタリング​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#httpsフィルタリング","content":"Encrypted Client Hello​ Every encrypted Internet connection has an unencrypted part. This is the very first packet which contains the name of the server you are connecting to. Encrypted Client Hello technology is supposed to solve this issue and encrypt that last bit of unencrypted information. To benefit from it, enable the Encrypted Client Hello option. It uses a local DNS proxy to look for the ECH configuration for the domain. If it is found, ClientHello packet will be encrypted. OCSP checking​ If this setting is enabled, AdGuard will perform asynchronous OCSP checks to get the revocation status of a website's SSL certificate. If an OCSP check is completed within the required timeout, AdGuard will immediately block the connection if the certificate is revoked or establish the connection if the certificate is valid. If the verification takes too long, AdGuard will allow the connection while continuing to check the certificate status in the background. If the certificate is revoked, current and future connections to the domain will be blocked. Redirect DNS-over-HTTPS requests​ If this setting is enabled, AdGuard will redirect DNS-over-HTTPS requests to the local DNS proxy in addition to plain DNS requests. We recommend disabling fallback upstreams and using only encrypted DNS servers to maintain privacy. Filter HTTP/3​ If this setting is enabled, AdGuard will filter requests sent over HTTP/3 in addition to other request types. "},{"title":"Outbound proxy​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#outbound-proxy","content":"Show the Filter DNS requests setting​ If this is enabled, the Filter DNS requests switch will be displayed in the Add proxy server dialog. Use it to enable filtering of DNS requests passing through the specified proxy. "},{"title":"Protection​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#protection","content":"Port ranges​ Here you can specify port ranges that should be filtered. Log removed HTML events​ If this setting is enabled, AdGuard will record blocked HTML elements in Recent activity. Scriplet debugging​ If this setting is enabled, debugging in scriptlets will be activated, and the browser log will record when scriptlet rules are applied. Excluded apps​ Here you can list package names and UIDs that you want to exclude from AdGuard protection. QUIC bypass packages​ Here you can specify package names for which AdGuard should bypass QUIC traffic. Reconfigure Automatic proxy when network changes​ If this setting is enabled, the AdGuard protection will restart to reconfigure the automatic proxy settings when your device connects to another network. This setting only applies if Routing mode is set to Automatic proxy. IPv6 filtering​ If this setting is enabled, AdGuard will filter IPv6 networks if an IPv6 network interface is available. IPv4 ranges excluded from filtering​ Filtering for the IPv4 ranges listed in this section is disabled. IPv6 ranges excluded from filtering​ Filtering for the IPv6 ranges listed in this section is disabled. TCP keepalive for outgoing sockets​ If this setting is enabled, AdGuard will send a keepalive probe after the specified time period to ensure that the TCP connection is alive. Here, you can specify the idle time before starting keepalive probes and the time between keepalive probes for an unresponsive peer. After a system-defined number of unsuccessful attempts to get a response from the server, the system automatically closes the TCP connection. "},{"title":"Local VPN settings​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#local-vpn-settings","content":"Recovery delay for revoked VPN​ Here you can set the time of a delay in milliseconds before AdGuard tries to restore VPN protection after it has been revoked by a third-party VPN app or by deleting the VPN profile. The default value is 5000 ms. Reschedule delay for revoked VPN recovery​ Here you can set the time of a delay in milliseconds before AdGuard reschedules the restoration of VPN protection after it has been revoked by a third-party VPN app or by deleting the VPN profile. The default value is 5000 ms. MTU​ Here you can set the maximum transmission unit (MTU) of the VPN interface. The recommended range is 1500-1900 bytes. Restore VPN automatically​ If this setting is enabled, AdGuard’s local VPN will be automatically re-enabled after being turned off due to network absence, tethering, or low-power mode. Packet capture (PCAP)​ If this setting is enabled, AdGuard will create a file timestamp.pcap (for instance, 1682599851461.pcap) in the app cache directory. This file lists all network packets transferred through the VPN and can be analyzed with the Wireshark program. Include Wi-Fi gateway in VPN routes​ If this setting is enabled, the gateway IP addresses will be added to VPN routes when on Wi-Fi. IPv4 address​ Here you can enter the IP address that will be used to create a TUN interface. By default, it is 172.18.11.218. Forcibly route LAN IPv4​ If this setting is enabled, AdGuard will filter all LAN connections, including local IPv4 network traffic, even if the Route all LAN IPv4 connections option is enabled. Route all LAN IPv4 connections​ If this setting is enabled, AdGuard will exclude LAN connections from filtering for simple networks. This may not work for complex networks. This setting only applies if Forcibly route LAN IPv4 is disabled. IPv6 address​ Here you can enter the IP address that will be used to create a TUN interface. By default, it is 2001:db8:ad:0:ff::. "},{"title":"その他​","type":1,"pageTitle":"Low-level settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#その他","content":"Detect Samsung Pay​ If this setting is enabled, AdGuard protection will be paused while Samsung Pay is in use. Korean users require this feature as they experience issues with Samsung Pay when AdGuard is enabled. "},{"title":"Certificate installation in a Secure folder","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/secure-folder/","content":"Certificate installation in a Secure folder info This article is about AdGuard for Android, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app If you install AdGuard to the Secure folder on your Android (this applies mainly to Samsung devices), you may face some difficulties when installing the HTTPS certificate. The thing is, the Secure folder has its own space where the certificates are stored. However, if you do everything according to the regular certificate installation instructions (described here), the certificate will be installed into the main memory and will play no role for your ad blocker in the Secure folder. To solve this problem and install the certificate for your AdGuard for Android into the Secure folder's storage, please follow these instructions instead: After installing the app and connecting the local VPN, tap ENABLE next to the HTTPS filtering is off message.Tap Next → Next → Save it now → Save certificate.Save the certificate (at this stage, you can rename it to make it easier to locate it later, which you will need to do).After the Installation instructions popup appears, DO NOT tap Open Settings.Minimize the app and go to the Secure folder.Tap the three-dot menu and go to Settings → Other security settings.Tap Security certificates → Install from device storage → CA certificate → Install anywayConfirm installation with your graphic key/password/fingerprint.Find and select the previously saved certificate, then tap Done.Return to the AdGuard app and navigate back to the main screen. You may have to swipe and restart the app to get rid of the HTTPS filtering is off message.完了です！ The certificate has been installed.","keywords":""},{"title":"Problems caused by multiple user profiles","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/multiple-user-profiles/","content":"","keywords":""},{"title":"Problems caused by multiple user profiles​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#problems-caused-by-multiple-user-profiles","content":"On Android 9 and later, if AdGuard is installed for more than one user profile on your device, you may encounter problems when uninstalling the app. When you uninstall AdGuard from one user profile, the app will still appear on the app list, but you won't be able to uninstall or reinstall it. This happens because AdGuard is installed for a different user profile on the device. If you try to reinstall AdGuard after an unsuccessful removal attempt, you will see the error message “You can't install the app on your device”. To solve this problem, you need to uninstall the application for all users: go to Settings → All apps → AdGuard. Tap the three-dot menu in the top right corner and select Uninstall for all users.  "},{"title":"制限付きプロファイルが原因の問題​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#制限付きプロファイルが原因の問題","content":"制限付きプロファイル（アカウント）のあるAndroid 7以降デバイスの一部（特にSamsung Galaxy S10系端末）で起こる問題です。 このようなプロファイルがある場合、AdGuardは、VPNを使用する他アプリケーションと同様に、VPNトラフィックの選択的なフィルタリングに対する制限がかかってしまいます。 その結果、AdGuardはローカルVPNモードでの保護を起動できなくなります。 また、この状況の理由の1つは、デバイスでデュアルアプリ/デュアルメッセンジャーを使用していることです。 以下に、この問題が発生した場合の対策をまとめました。 "},{"title":"解決方法​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#解決方法","content":"現在対処方法は3つございます（多くの方にとって方法②が一番便利かと思いますが）。 "},{"title":"【方法①】ADB経由でAdGuardに権限を与える​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#方法adb経由でadguardに権限を与える","content":"note This approach is available starting from AdGuard v3.5 nightly 6. 古いバージョンを使用している場合は、こちらからのNightly最新バージョンを入手できます（もしくはAdGuardアプリ内設定で「アップデートチャンネル」を「Nightly」に切り替えてアプリをアップデートできます）。 Activate the developer mode and enable USB debugging: Open the Settings app phone;Go to System section (last item in the settings menu). In this section, find the sub-item About phone;Tap the Build number line 7 times. After that, you will receive a notification that You are now a developer (If necessary, enter an unlock code for the device);Open System Settings → Developer Options → Scroll down and enable USB debugging → Confirm debugging is enabled in the window Allow USB debugging after reading the warning carefully. note 上記に関してまだご不明やお困りな点ございましたら、こちらでさらに詳しい手順をご確認ください。 ::: Install and configure ADB; On the Windows platform, Samsung owners may need to install this utility. USBケーブルを使用してADBをインストールしたコンピューターまたはラップトップにAndroidデバイスを接続します。 PCでコマンドラインを開きます。 Windowsを使用している場合はCmd.exemacOSを使用している場合はターミナル adb shell pm grant com.adguard.android android.permission.INTERACT_ACROSS_USERS というコマンドを入力してEnterを押します。これで完了です。 "},{"title":"【方法②】制限付きアカウントを削除する​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#方法制限付きアカウントを削除する","content":"多くの端末の場合、 [端末設定→詳細設定→複数ユーザー→制限付きプロファイルを削除する]という手順になります。 ユーザーアカウント管理についてはこちらにてご確認いただけます。 note In some cases restricted user accounts are created implicitly and cannot be removed. たとえば、SamsungまたはLGデバイスでデュアルメッセンジャーまたはデュアルアプリ機能を使用する場合です。 これらのケースで問題を解決する方法を以下に記載いたしました。 "},{"title":"【方法③】ローカルHTTPプロキシモードでAdGuardを使用する（ルート権限が必要になります）​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#方法ローカルhttpプロキシモードでadguardを使用するルート権限が必要になります","content":"To enable this mode, open AdGuard Settings → Network → Filtering method → Local HTTP proxy "},{"title":"LGとSamsungデバイスの場合​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#lgとsamsungデバイスの場合","content":"LGまたはSamsung端末には「デュアルアプリ」または「デュアルメッセンジャー」機能を使用することにより、制限付きプロファイルが作成され、VPN起動の問題が発生する可能性があります。 この問題を解決するには、デュアル機能を無効にする必要があります。 "},{"title":"Samsung​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#samsung","content":"端末設定を開く高度な設定をタップ下にスクロールしてデュアルメッセンジャーをタップDisable the Dual messenger for all apps;端末画面オフにして5～10分程度放置する画面のロックを解除し、再度VPNプロファイルの作成を試みてください。 "},{"title":"LG端末​","type":1,"pageTitle":"Problems caused by multiple user profiles","url":"adguard-for-android/solving-problems/multiple-user-profiles/#lg端末","content":"端末設定を開く「便利な機能」を開く（端末によっては「一般」や他のメニュー名称の場合もあります）下にスクロールして、「デュアルアプリ」をタップRemove all apps from the list;端末を再起動する "},{"title":"How to set up outbound proxy","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/outbound-proxy/","content":"","keywords":""},{"title":"Proxy configuration examples​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#proxy-configuration-examples","content":"In this article we give examples of how to set up some of the most popular proxies to work with AdGuard. "},{"title":"How to use AdGuard with Tor​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#how-to-use-adguard-with-tor","content":"Open AdGuard and go to Settings → Filtering → Network → Proxy. Download “Orbot: Proxy with Tor” directly from Google Play or by tapping Integrate with Tor and then Install. Open Orbot and press the Start button on the application's main screen. Go back to the Proxy screen of AdGuard. Tap the Integrate with Tor button. All the required fields will be pre-filled: Field\tValueProxy type\tSOCKS4 or SOCKS5 Proxy host\t127.0.0.1 Proxy port\t9050 Or you can tap Proxy server → Add proxy server, enter these values manually, and set Orbot as a default proxy. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. Now AdGuard will forward all traffic through Orbot. If you disable Orbot, Internet connection will be unavailable until you disable outbound proxy settings in AdGuard. "},{"title":"How to use AdGuard with PIA (Private Internet Access)​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#how-to-use-adguard-with-pia-private-internet-access","content":"Here we presume that you are already a PIA VPN client and have it installed on your device. Open AdGuard and go to Settings → Filtering → Network → Proxy → Proxy server. Tap the Add proxy server button and enter the following data: Field\tValueProxy type\tSOCKS5 Proxy host\tproxy-nl.privateinternetaccess.com Proxy port\t1080 You also need to fill out the Username/Password fields. To do so, log in to the Client Control Panel on the PIA website. Tap the Generate Password button under the Generate PPTP/L2TP/SOCKS Password section. A username starting with “x” and a random password will be shown. Use them to fill out the Proxy username and Proxy password fields in AdGuard. Tap Save and select. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. "},{"title":"How to use AdGuard with TorGuard​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#how-to-use-adguard-with-torguard","content":"Here we presume that you are already a TorGuard client and have it installed on your device. Open AdGuard and go to Settings → Filtering → Network → Proxy → Proxy server. Tap the Add proxy server button and enter the following data: Field\tValueProxy type\tSOCKS5 Proxy host\tproxy.torguard.org or proxy.torguard.io Proxy port\t1080 or 1085 or 1090 For Username and Password fields, enter your proxy username and proxy password you have chosen at TorGuard signup. Tap Save and select. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. "},{"title":"How to use AdGuard with NordVPN​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#how-to-use-adguard-with-nordvpn","content":"Open AdGuard and go to Settings → Filtering → Network → Proxy → Proxy server. Tap the Add proxy server button and enter the following data: Field\tValueProxy type\tSOCKS5 Proxy host\tany server from this list Proxy port\t1080 For Username and Password fields, enter your NordVPN Username and Password. Tap Save and select. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. "},{"title":"How to use AdGuard with Shadowsocks​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#how-to-use-adguard-with-shadowsocks","content":"Here we presume that you have already configured a Shadowsocks server and a client on your device. note You should remove Shadowsocks app from filtering before setting up the process (App management → Shadowsocks → Route traffic through AdGuard) to avoid infinite loops and drops. Open AdGuard and go to Settings → Filtering → Network → Proxy → Proxy server. Tap the Add proxy server and fill in the fields: Field\tValueProxy type\tSOCKS5 Proxy host\t127.0.0.1 Proxy port\t1080 Tap Save and select. Enable the main Proxy switch and AdGuard protection to route your device's traffic through the proxy. "},{"title":"How to use AdGuard with Clash​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#how-to-use-adguard-with-clash","content":"Here we presume that you are already a Clash client and have it installed on your device. Open Clash and go to Settings → Network → Route System Traffic and toggle the switch. This will set Clash to proxy mode. Open AdGuard and go to App management. Choose Clash For Android and disable Route traffic through AdGuard. This will eliminate traffic looping. Then go to Settings → Filtering → Network → Proxy → Proxy server. Tap Add proxy server and fill in the fields: Field\tValueProxy type\tSOCKS5 Proxy host\t127.0.0.1 Proxy port\t7891 "},{"title":"Limitations​","type":1,"pageTitle":"How to set up outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#limitations","content":"There is a factor that can prevent certain traffic from being routed through the outgoing proxy even after you configure AdGuard proxy settings. It can happen if you don't set up the app itself to send the traffic through AdGuard. To do it, you need to proceed to App management, choose the app, and turn on Route traffic through AdGuard. "},{"title":"How to block ads in the YouTube app","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/youtube-ads/","content":"","keywords":""},{"title":"Watch YouTube in the AdGuard app​","type":1,"pageTitle":"How to block ads in the YouTube app","url":"adguard-for-android/solving-problems/youtube-ads/#watch-youtube-in-the-adguard-app","content":" Open the YouTube app and start the video you want to watch. Tap the Share button. Select AdGuard from the list of apps. That's it! A new window with the video will open where you'll be able to watch it without being interrupted by ads. "},{"title":"Watch YouTube in a browser​","type":1,"pageTitle":"How to block ads in the YouTube app","url":"adguard-for-android/solving-problems/youtube-ads/#watch-youtube-in-a-browser","content":"Alternatively, you can also watch YouTube in a browser and there will be no ads if you have AdGuard installed and enabled. "},{"title":"How to automate AdGuard for Android","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/tasker/","content":"","keywords":""},{"title":"AdGuard interface​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#adguard-interface","content":"There are a lot of tasker apps out there, for example Tasker, AutomateIt etc. AdGuard provides an interface that allows these apps to setup various automation rules.  Thanks to this interface, any app can send a special message (called “intent”) that contains the name of the action and some additional data, if needed. AdGuard will look at this intent and perform the required actions. "},{"title":"Security concerns​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#security-concerns","content":"Isn't it dangerous to let some random apps manage what AdGuard does? It is, and that's why a password is sent along with the intent. This password will be generated by AdGuard automatically, but you can, of course, change it at any time. "},{"title":"Available actions​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#available-actions","content":"Here are actions that, when included in the intent, will be understood by AdGuard: start starts the protection, no extra data is needed; stop stops the protection, no extra data required; pause pauses the protection. The difference between this and stop is that a notification will appear that restarts the protection when you tap it. No extra data required; update checks for available filter and app updates, no additional data is needed;  dns_filtering turns DNS filtering on and off. Requires an extra flag: enable:true or enable:false enables or disables DNS filtering, accordingly. fake_dns allows resolving DNS requests on the specified proxy server. This requires an extra flag: enable:true or enable:false enables or disables the Use FakeDNS setting, respectively. note When the Use FakeDNS setting is enabled, DNS Protection will be automatically disabled. DNS requests won't be filtered locally.  dns_server switches between DNS servers, you need to include additional data: server:adguard dns switches to AdGuard DNS server; note The full list of supported provider names can be found in our known DNS providers list. server:custom switches to the previously added server named custom; server:tls://dns.adguard.com creates a new server and switches to it if the previously added servers and providers don't contain a server with the same address. Otherwise, it switches to the respective server. You can add server addresses as IP ( regular DNS), sdns://… (DNSCrypt or DNS-over-HTTPS), https://… (DNS-over-HTTPS) or tls://... (DNS-over-TLS); server:1.1.1.1, tls://1.1.1.1 creates a server with comma separated addresses and switches to it. When adding a server via server:1.1.1.1, tls://1.1.1.1, the previously added server is removed. server:system resets DNS settings to default system DNS servers.  proxy_state enables/disables the outbound proxy. Requires an extra flag: enable:true or enable:false activates or deactivates the outbound proxy, accordingly.  proxy_default sets the proxy from the list of previously added ones as default or creates a new one if server has not been added before. You need to specify additional data: server:[name] where [name] is the name of the outbound proxy from the list. Or you can configure server parameters manually: server:[type=…&amp;host=…&amp;port=…&amp;username=…&amp;password=…&amp;udp=…&amp;trust=…]. proxy_remove removes the proxy server from the list of previously added ones. server:[name] where [name] is the name of the outbound proxy from the list. Or you can configure remove parameters manually: server:[type=…&amp;host=…&amp;port=…&amp;username=…&amp;password=…&amp;udp=…&amp;trust=…]. Compulsory parameters: [type] — proxy server type: HTTPSOCKS4SOCKS5HTTPS_CONNECT [host] — outbound proxy domain or IP address; [port] — outbound proxy port (integer number from 1 to 65535); Optional parameters: [login and password] — only if proxy requires it. This data is ignored when setting up SOCKS4; [udp] applied only on SOCKS5 server type and include option UDP through SOCKS5. It is necessary to set true or false value; [trust] applies for HTTPS_CONNECT server type only and include option Trust any certificates. It is necessary to set true or false value. Example setting by name: server:MyServer manually settings: server:host=1.2.3.4&amp;port=80&amp;type=SOCKS5&amp;username=foo&amp;password=bar&amp;udp=true Don't forget to include the password as an extra and mention package name and class. You need to do so for every intent. Extra: password:******* Package name: com.adguard.android Class: com.adguard.android.receiver.AutomationReceiver note Before v4.0 the class was called com.adguard.android.receivers.AutomationReceiver but then we changed its name to com.adguard.android.receiver.AutomationReceiver. If you used this feature, please pay attention and use the new name. "},{"title":"Execution without notification​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#execution-without-notification","content":"To perform a task without showing a toast, add an additional EXTRA quiet: true "},{"title":"Example​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#example","content":" "},{"title":"Activity and statistics","type":0,"sectionRef":"#","url":"adguard-for-ios/features/activity/","content":"","keywords":""},{"title":"Statistics​","type":1,"pageTitle":"Activity and statistics","url":"adguard-for-ios/features/activity/#statistics","content":"Aside from the Activity screen, you can find global statistics on the home screen and in widgets. "},{"title":"AdGuard and AdGuard Pro","type":0,"sectionRef":"#","url":"adguard-for-ios/adguard-and-adguard-pro/","content":"AdGuard and AdGuard Pro info This article is about AdGuard for iOS, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app If you look for AdGuard in the App Store, you'll find two apps — AdGuard and AdGuard Pro. These apps are designed to block ads and trackers in Safari, other browsers, and apps, and to manage DNS protection. Don't be misled by their names, both apps block ads on smartphones and tablets by Apple. They used to differ in functionality due to the changing App Store review guidelines, but now these two apps are basically the same. If you have purchased AdGuard premium, there is no need to get AdGuard Pro, and vice versa.","keywords":""},{"title":"Advanced protection","type":0,"sectionRef":"#","url":"adguard-for-ios/features/advanced-protection/","content":"","keywords":""},{"title":"How to enable​","type":1,"pageTitle":"Advanced protection","url":"adguard-for-ios/features/advanced-protection/#how-to-enable","content":"To enable Advanced protection, open the Protection tab by tapping the second left icon at the bottom of the screen, select the Advanced protection module, activate the feature by toggling the switch slider, and follow the on-screen instructions. note The Advanced protection only works on iOS 15 and later versions. If you are using earlier versions of iOS, you will see the YouTube ad blocking module in the app instead of the Advanced protection.  "},{"title":"Compatibility with AdGuard VPN","type":0,"sectionRef":"#","url":"adguard-for-ios/features/compatibility-with-adguard-vpn/","content":"","keywords":""},{"title":"How to enable compatibility mode​","type":1,"pageTitle":"Compatibility with AdGuard VPN","url":"adguard-for-ios/features/compatibility-with-adguard-vpn/#how-to-enable-compatibility-mode","content":"If you already have AdGuard Ad Blocker when installing AdGuard VPN, integrated (compatibility) mode will turn on automatically, allowing you to use our apps at the same time. If you have installed AdGuard VPN first and only then decided to try AdGuard Ad Blocker, follow these steps to use the two apps together: Open AdGuard VPN for iOS app and select ⚙ Settings in the lower right corner of the screen.Go to App settings and select Operating mode.Switch the mode from VPN to Integrated. note In Integrated mode, AdGuard VPN's Exclusions and DNS server features are not available. "},{"title":"Low-level settings","type":0,"sectionRef":"#","url":"adguard-for-ios/features/low-level-settings/","content":"","keywords":""},{"title":"Block IPv6​","type":1,"pageTitle":"Low-level settings","url":"adguard-for-ios/features/low-level-settings/#blockipv6","content":"For any DNS query sent to get an IPv6 address, our app returns an empty response (as if this IPv6 address does not exist). Now there is an option not to return IPv6 addresses. At this point the description of this function becomes too technical: configuring or disabling IPv6 is the exclusive domain of advanced users. Presumably, if you are one of them, it will be good to know that we now have this feature, if not — there is no need to dive into it. "},{"title":"Bootstrap and Fallback servers​","type":1,"pageTitle":"Low-level settings","url":"adguard-for-ios/features/low-level-settings/#bootstrap-fallback","content":"Fallback is a backup DNS server. If you chose a DNS server and something happened to it, a fallback is needed to set the backup DNS server until the main server responds. With Bootstrap, it’s a little more complicated. For AdGuard for iOS to use a custom secure DNS server, our app needs to get its IP address first. For this purpose, the system DNS is used by default, but sometimes this is not possible for various reasons. In such cases, Bootstrap could be used to get the IP address of the selected secure DNS server. Here are two examples to illustrate when a custom Bootstrap server might help: When a system default DNS server does not return the IP address of a secure DNS server and it is not possible to use a secure one.When our app and third-party VPN are used simultaneously and it is not possible to use System DNS as a Bootstrap. "},{"title":"DNS protection","type":0,"sectionRef":"#","url":"adguard-for-ios/features/dns-protection/","content":"","keywords":""},{"title":"DNS implementation​","type":1,"pageTitle":"DNS protection","url":"adguard-for-ios/features/dns-protection/#dns-implementation","content":" This section has two options: AdGuard and Native implementation. Basically, these are two methods of setting up DNS. In Native implementation, the DNS is handled by the system and not the app. This means that AdGuard doesn't have to create a local VPN. Sadly, this will not help you circumvent system restrictions and use AdGuard alongside other VPN-based applications — if any VPN is enabled, native DNS is ignored. Consequently, you won't be able to filter traffic locally or to use our brand new DNS-over-QUIC protocol (DoQ). "},{"title":"DNS servers​","type":1,"pageTitle":"DNS protection","url":"adguard-for-ios/features/dns-protection/#dns-servers","content":"The next section you'll see on the DNS Protection screen is DNS server. It shows the currently selected DNS server and encryption type. To change either, tap the button to enter the DNS server screen.  Servers differ by their speed, employed protocol, trustworthiness, logging policy, etc. By default, AdGuard will suggest several DNS servers from among the most popular ones (including AdGuard DNS). Tap any to change the encryption type (if such option is provided by the server's owner) or to view the server's homepage. We added labels such as No logging policy, Ad blocking, Security to help you make a choice. In addition, at the bottom of the screen there is an option to add a custom DNS server. It supports regular, DNSCrypt, DNS-over-HTTPS, DNS-over-TLS, and DNS-over-QUIC servers. HTTP basic authentication for DNS-over-HTTPS​ This feature brings the authentication capabilities of the HTTP protocol to DNS, which does not have built-in authentication. Authentication in DNS is useful if you want to restrict access to your custom DNS server to specific users. To enable this feature: In AdGuard DNS, go to Server settings → Devices → Settings and change the DNS server to the one with authentication. Clicking Deny other protocols will remove other protocol usage options, leaving only DNS-over-HTTPS authentication enabled and preventing its use by third parties. Copy the generated address.  In AdGuard for iOS, go to the Protection tab → DNS protection → DNS server and paste the generated address into the Add a custom DNS server field. Save and select the new configuration. To check if everything is set up correctly, visit our diagnostics page. "},{"title":"Network settings​","type":1,"pageTitle":"DNS protection","url":"adguard-for-ios/features/dns-protection/#network-settings","content":" Users can also handle their DNS security on the Network settings screen. Filter mobile data and Filter Wi-Fi enable or disable DNS protection for the respective network types. Further down, at Wi-Fi exceptions, you can exclude particular Wi-Fi networks from DNS protection (for example, you might want to exclude your home network if you use AdGuard Home). "},{"title":"DNS filtering​","type":1,"pageTitle":"DNS protection","url":"adguard-for-ios/features/dns-protection/#dns-filtering","content":"DNS filtering allows you to customize your DNS traffic by enabling AdGuard DNS filter, adding custom DNS filters, and using the DNS blocklist/allowlist. How to access: Protection (the shield icon in the bottom menu bar) → DNS protection → DNS filtering  DNS filters​ Similar to filters that work in Safari, DNS filters are sets of rules written according to special syntax. AdGuard will monitor your DNS traffic and block requests that match one or more rules. You can use filters such as AdGuard DNS filter or add hosts files as filters. Multiple filters can be added simultaneously. To know how to do it, get acquainted with this exhaustive manual. Allowlist and Blocklist​ On top of DNS filters, you can have targeted impact on DNS filtering by adding single domains to Blocklist or to Allowlist. Blocklist even supports the same DNS syntax, and both of them can be imported and exported, just like Allowlist in Safari content blocking. "},{"title":"アシスタント","type":0,"sectionRef":"#","url":"adguard-for-ios/features/assistant/","content":"","keywords":""},{"title":"Assistant​","type":1,"pageTitle":"アシスタント","url":"adguard-for-ios/features/assistant/#assistant","content":" Assistant is a tool that helps you manage filtering in Safari right from the browser without switching back to the app. To see it, do the following: open Safari and tap the arrow-in-a-box symbol. Then scroll down to AdGuard/AdGuard Pro (depending on the app you use) and tap it to fetch a window with several options: Enable on this page.Turn the switch off to add the current domain to the Allowlist.Block an element on this page.Tap it to enter the 'Element blocking' mode: choose any element on the page, adjust the size by tapping '+' or '–', preview if necessary and then tap the checkmark icon to confirm. The selected element will be hidden from the page and a corresponding rule will be added to User rules. Remove or disable it to revert the change.Report an issue on this page.Opens a web reporting tool that will help you send a report to our support team in just a few taps. Use it if you noticed a missed ad or an incorrect blocking on the page. tip On iOS 15 devices, the Assistant features are available through AdGuard Safari Web Extension, which enhances the capabilities of AdGuard for iOS and allows you to take advantage of iOS 15. With this web extension, AdGuard can apply advanced filter rules and, as a result, block more ads. "},{"title":"How to block YouTube ads","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/block-youtube-ads/","content":"","keywords":""},{"title":"How to block ads in the YouTube app​","type":1,"pageTitle":"How to block YouTube ads","url":"adguard-for-ios/solving-problems/block-youtube-ads/#how-to-block-ads-in-the-youtube-app","content":"Open the YouTube app.Choose a video and tap Share.Tap More, then select Block YouTube Ads (by AdGuard). AdGuard will open its ad-free video player. "},{"title":"SafariでYouTube広告をブロックする方法​","type":1,"pageTitle":"How to block YouTube ads","url":"adguard-for-ios/solving-problems/block-youtube-ads/#safariでyoutube広告をブロックする方法","content":"tip Make sure you've given AdGuard access to all websites. You can check it in Safari → Extensions → AdGuard. Then open AdGuard and enable Advanced protection. Safariで youtube.com を開くChoose a video and tap Share.Tap Block YouTube Ads (by AdGuard). AdGuard will open its ad-free video player. "},{"title":"Safari protection","type":0,"sectionRef":"#","url":"adguard-for-ios/features/safari-protection/","content":"","keywords":""},{"title":"Content blockers​","type":1,"pageTitle":"Safari protection","url":"adguard-for-ios/features/safari-protection/#content-blockers","content":"Content blockers serve as 'containers' for filtering rules that do the actual job of blocking ads and tracking. AdGuard for iOS contains six content blockers: General, Privacy, Social, Security, Custom, and Other. Previously Apple only allowed each content blocker to contain a maximum of 50K filtering rules, but with iOS 15 release the upper limit has moved to 150K rules. All content blockers, their statuses, which thematic filters they currently include, and a total number of used filtering rules can be found on the respective screen in Advanced settings (tap the gear icon at the bottom right → General → Advanced settings → Content blockers).  tip Keep all content blockers enabled for the best filtering quality. "},{"title":"Filters​","type":1,"pageTitle":"Safari protection","url":"adguard-for-ios/features/safari-protection/#filters","content":"Content blockers' work is based on filters, also sometimes referred to as filter lists. Each filter is a list of filtering rules. If you have an enabled ad blocker when browsing, it constantly checks the visited pages and elements on them against these filtering rules, and blocks anything that matches. Rules are developed to block ads, trackers, and more. All filters are grouped into thematic categories. To see the full list of these categories (not to be confused with content blockers), open the Protection section by tapping the shield icon, then go to Safari protection → Filters.  There are eight of them, each category unites several filters that serve and share a common purpose, i.e. blocking ads, social media widgets, cookie notices, protecting the user from online scams. To decide which filters suit your needs, read their descriptions and navigate by the labels (ads, privacy, recommended, etc.). note More enabled filters does not guarantee that there will be less ads. A large number of various filters enabled simultaneously reduces the quality of ad blocking. Custom filters category is empty by default for users to add there their filters by URL. You can find filters on the Internet or even try to create one by yourself. "},{"title":"User rules​","type":1,"pageTitle":"Safari protection","url":"adguard-for-ios/features/safari-protection/#user-rules","content":"Here you can add new rules — either by entering them manually, or by using the AdGuard manual blocking tool in Safari. Use this tool to customize Safari filtering without adding an entire filter list. Learn how to create your own ad filters. But please note that many of them won't work in Safari on iOS.  "},{"title":"Allowlist​","type":1,"pageTitle":"Safari protection","url":"adguard-for-ios/features/safari-protection/#allowlist","content":"The third section of the Safari protection screen. If you want to disable ad blocking on a certain website, Allowlist will be of help. It allows you to add domains and subdomains to exclusions. AdGuard for iOS has an Import/Export feature, so the allowlist from one device can be easily transferred to another. "},{"title":"Other features","type":0,"sectionRef":"#","url":"adguard-for-ios/features/other-features/","content":"","keywords":""},{"title":"Dark theme​","type":1,"pageTitle":"Other features","url":"adguard-for-ios/features/other-features/#dark-theme","content":"  Residing right at the top of Settings → General screen, this setting allows you to switch between dark and light themes. "},{"title":"Widgets​","type":1,"pageTitle":"Other features","url":"adguard-for-ios/features/other-features/#widgets","content":" AdGuard supports widgets that provide quick access to Safari content blocking and DNS protection switches, and also show global requests stats. "},{"title":"Auto-update over Wi-Fi only​","type":1,"pageTitle":"Other features","url":"adguard-for-ios/features/other-features/#auto-update-over-wi-fi-only","content":"If this setting is enabled, AdGuard will use only Wi-Fi for background filter updates. "},{"title":"Invert the Allowlist​","type":1,"pageTitle":"Other features","url":"adguard-for-ios/features/other-features/#invert-the-allowlist","content":"An alternative mode for Safari filtering, it unblocks ads everywhere except for the specified websites from the list. Disabled by default. "},{"title":"Advanced mode​","type":1,"pageTitle":"Other features","url":"adguard-for-ios/features/other-features/#advanced-mode","content":"Advanced mode unlocks Advanced settings. We don't recommend messing with those, unless you know what you're doing or you have consulted with technical support first. "},{"title":"Reset statistics​","type":1,"pageTitle":"Other features","url":"adguard-for-ios/features/other-features/#reset-statistics","content":"Clears all statistical data, such as number of requests, etc. "},{"title":"Reset settings​","type":1,"pageTitle":"Other features","url":"adguard-for-ios/features/other-features/#reset-settings","content":"This option will reset all your settings. "},{"title":"Support​","type":1,"pageTitle":"Other features","url":"adguard-for-ios/features/other-features/#support","content":"Use this option to contact support, report a missed ad (although we advise to use the Assistant or AdGuard's Safari Web extension for your own convenience), export logs or to make a feature request. "},{"title":"About​","type":1,"pageTitle":"Other features","url":"adguard-for-ios/features/other-features/#about","content":"Contains the current version of the app and an assortment of rarely needed options and links. "},{"title":"Low-level Settings guide","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"How to reach the Low-level settings​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#how-to-reach-the-low-level-settings","content":"caution Changing Low-level settings can cause problems with the performance of AdGuard, may break the Internet connection or compromise your security and privacy. This section should only be opened if you know what you are doing, or you were asked to do so by our support team. To go to Low-level settings, tap the gear icon at the bottom right of the screen to open Settings. Select the General section and then toggle on the Advanced mode switch, after that the Advanced settings section will appear below. Tap Advanced settings to reach the Low-level settings section. "},{"title":"Low-level settings​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#low-level-settings","content":""},{"title":"Tunnel mode​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#tunnel-mode","content":"There are two main tunnel modes: Split and Full. Split-Tunnel mode provides compatibility of AdGuard and so-called &quot;Personal VPN&quot; apps. In Full-Tunnel mode no other VPN can work simultaneously with AdGuard. There is a specific feature of Split-Tunnel mode: if DNS proxy does not perform well, for example, if the response from the AdGuard DNS server was not returned in time, iOS will &quot;amerce&quot; it and reroute traffic through DNS server, specified in iOS settings. No ads are blocked at this time and DNS traffic is not encrypted. In Full-Tunnel mode only the DNS server specified in AdGuard settings is used. If it does not respond, the Internet will simply not work. Enabled Full-Tunnel mode may cause the incorrect performance of some programs (for instance, Facetime), and lead to problems with app updates. By default, AdGuard uses Split-Tunnel mode as the most stable option. There is also an additional mode called Full-Tunnel (without VPN icon). This is exactly the same as Full-Tunnel mode, but it is set up so that the VPN icon is not displayed in the system line. "},{"title":"Blocking mode​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#blocking-mode","content":"In this module you can select the way AdGuard will respond to DNS queries that should be blocked: Default — respond with zero IP address when blocked by adblock-style rules; respond with the IP address specified in the rule when blocked by /etc/hosts-style rulesREFUSED — respond with REFUSED codeNXDOMAIN — respond with NXDOMAIN codeUnspecified IP — respond with zero IP addressCustom IP — respond with a manually set IP address "},{"title":"Block IPv6​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#block-ipv6","content":"By moving the toggle to the right, you activate the blocking of IPv6 queries (AAAA requests). AAAA-type DNS requests will not be resolved, hence only IPv4 queries can be processed. "},{"title":"Blocked response TTL​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#blocked-response-ttl","content":"Here you can set the period for a device to cache the response to a DNS request. During the specified time to live (in seconds) the request can be read from the cache without re-requesting the DNS server. "},{"title":"Bootstrap servers​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#bootstrap-servers","content":"For DNS-over-HTTPS, DNS-over-TLS, and DNS-over-QUIC a bootstrap server is required for getting the IP address of the main DNS server. If not specified, the DNS server from iOS settings is used as the bootstrap server. "},{"title":"Fallback servers​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#fallback-servers","content":"Here you can specify an alternate server to which a request will be rerouted if the main server fails to respond. If not specified, the system DNS server will be used as the fallback. It is also possible to specify none, in this case, there will be no fallback server set and only the main DNS server will be used. "},{"title":"Background app refresh time​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#background-app-refresh-time","content":"Here you can select the frequency at which the application will check for filter updates while in the background. Note that update checks will not be performed more often than the specified period, but the exact intervals may not be respected. "},{"title":"AdGuard for iOS インストール方法","type":0,"sectionRef":"#","url":"adguard-for-ios/installation/","content":"","keywords":""},{"title":"動作環境​","type":1,"pageTitle":"AdGuard for iOS インストール方法","url":"adguard-for-ios/installation/#動作環境","content":""},{"title":"iPhone​","type":1,"pageTitle":"AdGuard for iOS インストール方法","url":"adguard-for-ios/installation/#iphone","content":"iOS 11.2以上 "},{"title":"iPad​","type":1,"pageTitle":"AdGuard for iOS インストール方法","url":"adguard-for-ios/installation/#ipad","content":"iPadOS 11.2以上 "},{"title":"iPod touch​","type":1,"pageTitle":"AdGuard for iOS インストール方法","url":"adguard-for-ios/installation/#ipod-touch","content":"iOS 11.2以上 "},{"title":"AdGuard for iOS インストール方法​","type":1,"pageTitle":"AdGuard for iOS インストール方法","url":"adguard-for-ios/installation/#adguard-for-ios-インストール方法","content":"「AdGuard」はApp Storeにある無料アプリ（プレミアム機能を提供するアプリ内課金あり）です。 To install it on your device, open the App Store and tap the Search icon on the bottom of the screen.  Type adguard in the search bar and tap the string adGuard which will be among search results.  On the opened page of the App Store tap GET under the string AdGuard - adblock&amp;privacy and then tap INSTALL. 必要に応じてApple IDのパスワードを入力してください。 インストールが完了するのを待ちます。  "},{"title":"AdGuard Pro for iOS インストール方法​","type":1,"pageTitle":"AdGuard for iOS インストール方法","url":"adguard-for-ios/installation/#adguard-pro-for-ios-インストール方法","content":"「AdGuard Pro」はApp Store一括購入のアプリであり、プレミアム機能が有効状態の「AdGuard」アプリと完全に同じ機能を提供します。 To install it on your device run the App Store application and tap the Search icon on the bottom of the screen.  Type adguard in the search form, and then tap the string adGuard pro - adblock which will be shown among search results.  On the opened page of the App Store tap the button with the cost of the license under the string AdGuard Pro - adblock, and then tap BUY. 必要に応じてApple IDのパスワードを入力してください。 インストールが完了するのを待ちます。  【ライセンス有効化方法】アプリ内でAdGuardアカウントの認証情報を入力することで有効化できます。(※「AdGuard Pro」はApp Storeで一括購入されるアプリなので、ライセンスキーが使えるのは「AdGuard」アプリになります。 ライセンスキーでプレミアム機能が有効化された「AdGuard」アプリと「AdGuard Pro」アプリは完全に同機能を提供しますので、どちらか一つあれば十分です。) "},{"title":"AdGuard使用時FaceTime不具合の対処法","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/facetime-compatibility-issues/","content":"AdGuard使用時FaceTime不具合の対処法 info この記事では、システムレベルでお使いのデバイスを保護する多機能広告ブロッカー、「AdGuard for iOS」について書いています。 To see how it works, download the AdGuard app 「Full-Tunnel」モードは、他のVPNアプリケーションとの互換性だけでなく、FaceTimeとのAdGuard互換性も阻害する可能性があることが判明しております。 一部のユーザーは、iOS用AdGuardアプリが「Full-Tunnel」モードの場合、デバイス上でFaceTimeが機能しないという問題に遭遇しています。 AdGuardが「Full-Tunnel（VPNアイコンなし）」モードになっている場合、FaceTimeが動作する可能性は高いですが、１００％安定した動作は保証できません。 AdGuard使用時にFaceTimeを使用し、ビデオ/オーディオ通話が停止しないようにするには、「Split-Tunnel」モードに切り替えてください。（※この不具合は、「DNS通信を保護」がオンの場合にのみ発生します。） 【「Split-Tunnel」モードに切り替える方法】 Go to AdGuard for iOS Settings → General settings.「高度な設定モード」のスイッチをオンにして、その下に現れる「詳細設定」をタップTunnelモード → Split-Tunnel を選択してください。 完了です！ これで、FaceTimeの互換性に問題はないはずです。","keywords":""},{"title":"Safari Web extension","type":0,"sectionRef":"#","url":"adguard-for-ios/web-extension/","content":"","keywords":""},{"title":"What it does​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#what-it-does","content":"By default, Safari provides only basic tools to content blockers. These tools don't allow the level of performance that can be found in content blockers on other operating systems (Windows, Mac, Android). For example, AdGuard apps on other platforms can use such effective weapons against ads as CSS rules, CSS selectors, and scriptlets. Unfortunately, these instruments are absolutely irreplaceable when dealing with more complex cases such as pre-roll ads on YouTube, for example. AdGuard's Safari Web extension compliments AdGuard by giving it the ability to employ these types of filtering rules. Besides that, AdGuard's Safari Web extension can be used to quickly manage AdGuard for iOS right from the browser. Tap the Extensions button — it's the one with a jigsaw icon, depending on your device type it may be located to the left or to the right of the address bar. Find AdGuard in the list and tap it.  On iPads AdGuard's Safari Web extension is accessible directly by tapping the AdGuard icon in the browser's address bar. You will see the following list of options: Enabling/disabling protection on the website. Turning the switch off will disable AdGuard completely for the current website and add a respective exclusion rule. Turning the switch back on will resume protection for the website and delete the rule. Any such change will require some time to take effect. Blocking elements on the page manually. Tap the Block elements on this page button to prompt a pop-up for element blocking. Select any element on the page you want to hide, adjust the selection zone, then preview changes and confirm the removal. A corresponding filtering rule will be added to AdGuard (that you can later disable or delete to revert the change). Report an issue. Swipe up to bring out the Report an issue button. Use it to report a missed ad or any other problem that you encountered on the current page. "},{"title":"How to enable AdGuard's Safari Web extension​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#how-to-enable-adguards-safari-web-extension","content":"note AdGuard's Safari Web extension requires access to the web pages' content to operate, but doesn't use it for any purpose other than blocking ads. "},{"title":"In the iOS settings​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#in-the-ios-settings","content":"The Web extension is not a standalone tool and requires AdGuard for iOS. If you don't have AdGuard for iOS installed on your device, please install it first and complete the onboarding process to prepare it for work. Once done, open Settings → Safari → Extensions.   Find ALLOW THESE EXTENSIONS section and then find AdGuard among the available extensions.  Tap it, then toggle the switch. On the same screen, set the All Websites permission for AdGuard to either Allow or Ask. If you choose Allow, you won't have to give permission every time you visit a new website. If you are unsure, choose Ask to grant permissions on a per-site basis.  "},{"title":"In Safari​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#in-safari","content":"Alternitavely, you can also turn AdGuard extension on from the Safari browser. Tap the Extensions button (if you don't see it next to the address bar, tap the aA icon).  Then find the Manage Extensions option in the list and tap it. In the opened window turn on the switch next to AdGuard.   If you use this method, you may have to go to Safari settings to grant AdGuard extension the necessary permissions anyway. You should now be able to see AdGuard among the available extensions. Tap it and then the yellow i icon. Enable Advanced protection by tapping the Turn on button and confirming the action. note If you use AdGuard for iOS without Premium subscription, you won't be able to enable Advanced protection. Alternatively, you can enable Advanced protection directly from the app, in the Protection tab (second from the left in the bottom icon row). AdGuard's Safari Web extension only works on iOS versions 15 and later. "},{"title":"プレミアム機能を有効にする方法","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/premium-activation/","content":"プレミアム機能を有効にする方法 info この記事では、システムレベルでお使いのデバイスを保護する多機能広告ブロッカー、「AdGuard for iOS」について書いています。 To see how it works, download the AdGuard app AdGuard for iOSアプリのプレミアム機能を有効にするには、2つの方法があります: Purchase a subscription. Just tap the Get Premium plaque anywhere in the app and follow the on-screen instructions. 2. プランを選んで、「無料お試しスタート」をタップ 3. これで、プレミアム機能をご利用いただけます。 Use an AdGuard license (you can purchase it at the AdGuard website). Log into your AdGuard personal account via the app: go to AdGuard app → Settings → License screen and tap the Login button there. 2. AdGuardアカウントのメールアドレスとパスワードを入力してログインする （また、有効なライセンスキーをメールアドレス欄に直接入力して、プレミアム機能を有効にすることもできます。） 3.これで、アカウントにあるライセンスが認証され、AdGuardプレミアム機能が有効化します。 As an alternative, you can just enter a valid license key in the e-mail field leaving password field blank to activate Premium features. note AdGuard Pro for iOS (our other iOS app) can only be purchased from App Store.","keywords":""},{"title":"Browser Assistant","type":0,"sectionRef":"#","url":"adguard-for-mac/features/browser-assistant/","content":"","keywords":""},{"title":"仕組み​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/features/browser-assistant/#仕組み","content":"AdGuard Browser Assistant is a browser extension. It allows you to quickly manage the AdGuard app: Enable or disable protection for a specific website (a toggle under the website name)Pause protection for 30 secondsDisable protection (the pause icon in the upper right corner)Manually block an adOpen the filtering logReport incorrect blockingOpen AdGuard settingsView website certificate and manage HTTPS filtering (the lock icon next to the website name) "},{"title":"How to install​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/features/browser-assistant/#how-to-install","content":"When you install AdGuard for Mac, you will be prompted to install Browser Assistant for your default browser. If you skip this step, you can install it later. From settings: Open the AdGuard menu.Click the gear icon and select Preferences.Switch to the Assistant tab.Click Get the Extension next to your default browser.Install Assistant from your browser’s extension store.  From the website: Open the Assistant page.Under your browser name, select Install.Install Assistant from your browser’s extension store. note In rare cases, a browser may be incompatible with Assistant. To manage AdGuard from your browser, you can install the legacy Assistant instead. "},{"title":"Legacy Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/features/browser-assistant/#legacy-assistant","content":"The legacy Assistant is the previous version of AdGuard Browser Assistant. It’s a userscript that doesn’t require additional installation. While the legacy Assistant does its job well, it has several drawbacks: It has fewer features than the extension version.You have to wait for the userscript to be inserted into a webpage — sometimes it doesn’t load immediately.You can’t hide the Assistant icon on the page. We recommend that you use the legacy Assistant only if the new Assistant is not available. "},{"title":"How to enable system-wide filtering in AdGuard for iOS","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/system-wide-filtering/","content":"","keywords":""},{"title":"システムワイドブロックについて​","type":1,"pageTitle":"How to enable system-wide filtering in AdGuard for iOS","url":"adguard-for-ios/solving-problems/system-wide-filtering/#システムワイドブロックについて","content":"iOSでのシステムワイドブロックとは、Safariブラウザ以外、つまり他のアプリやブラウザで、ネットワークレベルで広告やトラッカー（個人情報追跡ソフト）をブロックすることです。 This article will tell you how to enable it on your iOS device. On iOS, the only way to block ads and trackers system-wide is to use DNS filtering. First, you have to enable DNS protection. To do so: Open AdGuard for iOS.Tap Protection icon (the second icon in the bottom menu bar).Turn DNS protection switch on.  Now, if your purpose is to block ads and trackers system-wide, you have three options: Use AdGuard DNS filter (Protection (the shield icon in the bottom menu) → DNS protection → DNS filtering → DNS filters → AdGuard DNS filter).Use AdGuard DNS server (Protection (the shield icon in the bottom menu) → DNS protection → DNS server → AdGuard DNS) or another blocking DNS server to your liking.Add a custom DNS filter/hosts file to your liking. The first and third option have several advantages: You can use any DNS server at your discretion and you are not tied up to a specific blocking server, because the filter does the blocking.You can add multiple DNS filters and/or hosts files (although using too many might slow down AdGuard).  "},{"title":"How to add custom DNS filter/hosts file​","type":1,"pageTitle":"How to enable system-wide filtering in AdGuard for iOS","url":"adguard-for-ios/solving-problems/system-wide-filtering/#how-to-add-custom-dns-filterhosts-file","content":"You can add any DNS filter or hosts file you like. For the sake of the example, let's add OISD Blocklist Big. Copy this link: https://big.oisd.nl (it's a link for OISD Blocklist Big filter)Open Protection (the shield icon in the bottom menu) → DNS protection → DNS filtering → DNS filters.Tap Add a filter.Paste the link into the filter URL field.Tap Next → Add.  Add any number of other DNS filters the same way by pasting a different URL at step 4. 様々なフィルターやそのリンクはこちらで確認することができます。 "},{"title":"拡張機能","type":0,"sectionRef":"#","url":"adguard-for-mac/features/extensions/","content":"","keywords":""},{"title":"AdGuard Assistant (legacy)​","type":1,"pageTitle":"拡張機能","url":"adguard-for-mac/features/extensions/#adguard-assistant-legacy","content":"This userscript allows you to manage AdGuard protection directly from your browser. While the new Assistant is a browser extension that can be installed from your browser’s store, the legacy Assistant is a userscript that doesn’t require additional installation. Some features are common to both assistants: Enable or disable protection for a specific websitePause protection for 30 secondsManually block an adReport incorrect blocking However, the new Assistant is more advanced. It also allows you to manage AdGuard protection for all websites, check the website’s certificate, manage HTTPS filtering, and open the filtering log or the app’s settings. We recommend that you use the legacy Assistant only if the new Assistant is not available. "},{"title":"AdGuard Extra​","type":1,"pageTitle":"拡張機能","url":"adguard-for-mac/features/extensions/#adguard-extra","content":"This userscript solves the most complex ad blocking issues when regular rules aren’t enough. It also prevents websites from circumventing ad blockers and re-inserting blocked ads. We recommend that you keep it enabled at all times. To install a userscript, click +. You can find userscripts at greasyfork.org. "},{"title":"DNS","type":0,"sectionRef":"#","url":"adguard-for-mac/features/dns/","content":"","keywords":""},{"title":"DNS protection​","type":1,"pageTitle":"DNS","url":"adguard-for-mac/features/dns/#dns-protection","content":"The DNS section contains one feature, DNS protection, with multiple settings: ProvidersフィルタBlocklistホワイトリスト  If you enable DNS protection, DNS traffic will be managed by AdGuard. "},{"title":"Providers​","type":1,"pageTitle":"DNS","url":"adguard-for-mac/features/dns/#providers","content":"Under Providers, you can select a DNS server to encrypt your DNS traffic and block ads and trackers if necessary. We recommend AdGuard DNS. For more advanced configuration, you can set up a private AdGuard DNS server or add a custom one by clicking the + icon in the lower left corner. "},{"title":"フィルタ​","type":1,"pageTitle":"DNS","url":"adguard-for-mac/features/dns/#フィルタ","content":"DNS filters apply ad-blocking rules at the DNS level. Such filtering is less precise than regular ad blocking, but it’s particularly useful for blocking an entire domain. To add a DNS filter, click +. You can find more DNS filters at filterlists.com. "},{"title":"Blocklist​","type":1,"pageTitle":"DNS","url":"adguard-for-mac/features/dns/#blocklist","content":"Domains from this list will be blocked. To add a domain, click +. You can add domain names or DNS filtering rules using a special syntax. To export or import a blocklist, open the context menu. "},{"title":"ホワイトリスト​","type":1,"pageTitle":"DNS","url":"adguard-for-mac/features/dns/#ホワイトリスト","content":"Domains from this list aren’t filtered. To add a domain, click +. To export or import an allowlist, open the context menu. "},{"title":"フィルタ","type":0,"sectionRef":"#","url":"adguard-for-mac/features/filters/","content":"","keywords":""},{"title":"フィルタ​","type":1,"pageTitle":"フィルタ","url":"adguard-for-mac/features/filters/#フィルタ","content":" Filter lists are sets of rules written using a special syntax. AdGuard interprets and implements these rules to block ads, trackers, and annoyances. Some filters (for example, AdGuard Base filter, Tracking Protection filter, or EasyList) are pre-installed, others can be installed additionally. We recommend enabling the following filters: AdGuard ベースフィルタAdGuard Tracking Protection filter and AdGuard URL Tracking filterAdGuard Annoyances filterFilters for your language These filters are important for blocking most ads, trackers, and annoying elements. For more advanced ad blocking, you can use custom filters and user rules. To add a filter, click + in the lower left corner of the list. To enable a filter, select its checkbox. "},{"title":"ユーザールール​","type":1,"pageTitle":"フィルタ","url":"adguard-for-mac/features/filters/#ユーザールール","content":"In AdGuard for Mac, user rules are located in Filters. To create a rule, click +. To enable a rule, select its checkbox. To export or import rules, open the context menu.  "},{"title":"一般","type":0,"sectionRef":"#","url":"adguard-for-mac/features/general/","content":"","keywords":""},{"title":"How to open app settings​","type":1,"pageTitle":"一般","url":"adguard-for-mac/features/general/#how-to-open-app-settings","content":"To configure AdGuard for Mac, click the gear icon in the upper right corner of the main window and select Preferences.  "},{"title":"一般​","type":1,"pageTitle":"一般","url":"adguard-for-mac/features/general/#一般","content":" "},{"title":"Do not block search ads and website self-promoting ads​","type":1,"pageTitle":"一般","url":"adguard-for-mac/features/general/#do-not-block-search-ads-and-website-self-promoting-ads","content":"This feature prevents AdGuard from blocking search ads and self-promotions on websites. This can be useful, for example, when you’re shopping online and want to see discounts offered by some websites. Instead of adding these websites to the allowlist, you can exclude self-promotions and search ads from filtering. "},{"title":"Activate language-specific filters automatically​","type":1,"pageTitle":"一般","url":"adguard-for-mac/features/general/#activate-language-specific-filters-automatically","content":"This feature detects the language of the website you’re visiting and automatically activates appropriate filters for more accurate ad blocking. This is especially helpful if you change languages frequently. "},{"title":"Launch AdGuard at login​","type":1,"pageTitle":"一般","url":"adguard-for-mac/features/general/#launch-adguard-at-login","content":"This feature automatically launches AdGuard automatically after you restart your computer. This helps keep AdGuard protection active without having to manually open the app. "},{"title":"Hide menu bar icon​","type":1,"pageTitle":"一般","url":"adguard-for-mac/features/general/#hide-menu-bar-icon","content":"This feature hides AdGuard’s icon from the menu bar but keeps AdGuard running in the background. If you want to disable AdGuard completely, click Quit AdGuard in the main window menu. "},{"title":"ホワイトリスト​","type":1,"pageTitle":"一般","url":"adguard-for-mac/features/general/#ホワイトリスト","content":"Websites added to this list aren’t filtered. You can also access allowlisted websites from User rules. "},{"title":"Main window","type":0,"sectionRef":"#","url":"adguard-for-mac/features/main/","content":"Main window info This article is about AdGuard for Mac, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app The main window of AdGuard for Mac allows you to enable or disable the AdGuard protection. It also gives you a quick overview of the app’s stats: ads, trackers, and threats blocked since you’ve installed AdGuard or since your last stats reset. By clicking the gear icon, you can access settings, check for app and filter updates, contact support, and manage your license.","keywords":""},{"title":"Network","type":0,"sectionRef":"#","url":"adguard-for-mac/features/network/","content":"","keywords":""},{"title":"一般​","type":1,"pageTitle":"Network","url":"adguard-for-mac/features/network/#一般","content":" "},{"title":"Automatically filter applications​","type":1,"pageTitle":"Network","url":"adguard-for-mac/features/network/#automatically-filter-applications","content":"By default, AdGuard blocks ads and trackers in most browsers (Tor Browser is an exception). This setting allows AdGuard to block ads in apps as well. To manage filtered apps, click Applications. "},{"title":"Filter HTTPS protocol​","type":1,"pageTitle":"Network","url":"adguard-for-mac/features/network/#filter-https-protocol","content":"This setting allows AdGuard to filter the secure HTTPS protocol, which is currently used by most websites and apps. By default, websites with potentially sensitive information, such as banking services, are not filtered. To manage HTTPS exclusions, click Exclusions. By default, AdGuard doesn’t filter websites with Extended Validation (EV) certificates. If needed, you can enable the Filter websites with EV certificates option. "},{"title":"Outbound proxy​","type":1,"pageTitle":"Network","url":"adguard-for-mac/features/network/#outbound-proxy","content":"You can set up AdGuard to route all your device’s traffic through your proxy server. "},{"title":"HTTP proxy​","type":1,"pageTitle":"Network","url":"adguard-for-mac/features/network/#http-proxy","content":"You can use AdGuard as an HTTP proxy server. This will allow you to filter traffic on other devices connected to the proxy. Make sure your Mac and your other device are connected to the same network and enter the proxy port on the device you want to route through your proxy server (usually in the network settings). To filter HTTPS traffic as well, transfer AdGuard’s proxy certificate to this device. Learn more about installing a proxy certificate "},{"title":"Security","type":0,"sectionRef":"#","url":"adguard-for-mac/features/security/","content":"","keywords":""},{"title":"Phishing and malware protection​","type":1,"pageTitle":"Security","url":"adguard-for-mac/features/security/#phishing-and-malware-protection","content":" AdGuard has a database of fraudulent, phishing, and malicious domains. If you enable Phishing and malware protection, AdGuard will warn you every time you’re about to visit a dangerous website. Even if only some parts of the website are dangerous, AdGuard will check it and display a warning. This is safe. As AdGuard checks hash prefixes, not URLs, it doesn’t know what websites you visit. Learn more about AdGuard’s security checks note AdGuard is not an antivirus software. It can’t stop you from downloading suspicious files or delete existing viruses. "},{"title":"ステルスモード","type":0,"sectionRef":"#","url":"adguard-for-mac/features/stealth/","content":"","keywords":""},{"title":"Advanced privacy protection​","type":1,"pageTitle":"ステルスモード","url":"adguard-for-mac/features/stealth/#advanced-privacy-protection","content":" Advanced privacy protection protects your privacy by deleting cookies, UTM tags, online counters, and analytics systems. It doesn’t let websites collect your IP address, device and browser parameters, search queries, and personal information. Learn more about Stealth Mode settings "},{"title":"How to install AdGuard on macOS High Sierra and above","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/high-sierra-compatibility/","content":"How to install AdGuard on macOS High Sierra and above info This article is about AdGuard for Mac, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app During the Installation of AdGuard on macOS High Sierra (or later versions) you may see a message: &quot;System Extension Blocked&quot;. This is a new security mechanism that appeared in High Sierra, it requires you to explicitly allow the installation of a third-party system extension. To complete the installation of AdGuard you have to manually allow loading the extension in System Preferences → Security &amp; Privacy → General. Click the &quot;Allow&quot; button, and after that you will be able to proceed with the installation as normal.","keywords":""},{"title":"インストール/アンインストール","type":0,"sectionRef":"#","url":"adguard-for-mac/installation/","content":"","keywords":""},{"title":"動作環境​","type":1,"pageTitle":"インストール/アンインストール","url":"adguard-for-mac/installation/#動作環境","content":"Operating system version: macOS 10.15 (64 bit) or higher RAM: 2 GB以上 対応ブラウザ: Safari, Google Chrome, Opera, Yandex.Browser, Mozilla Firefox, およびその他のmacOSと互換性のあるブラウザ 空きディスク容量: 120 MB "},{"title":"インストール方法​","type":1,"pageTitle":"インストール/アンインストール","url":"adguard-for-mac/installation/#インストール方法","content":"To install AdGuard for Mac on your computer, launch your browser, type adguard.com in the address bar, and press Download on the page that opens.  Wait for AdguardInstaller.dmg to download and double-click its icon in the list of downloaded files on the Dock panel.  表示されたインストールアプリでAdGuardアイコンをダブルクリックしてください。  AdGuard初インストールの際に、OSからの警告が表示されます。 「開く」を押してください。  次に、「インストール」を押してください。  インストーラが必要なファイルをダウンロード完了するのをお待ちください。  AdGuardアプリを使用するにはmacOS管理者アカウントのパスワードが必要になります。 Enter the password when prompted in the dialogue box and press OK.  次に、自分に合わせて設定を簡単にカスタマイズできるチュートリアル画面表示されます。 「はじめる」を押して微調整を開始するか、 「スキップ」を押して今はスキップすることができます。  これで、お使いのMacへのAdGuardインストールは完了です！ "},{"title":"アンインストール​","type":1,"pageTitle":"インストール/アンインストール","url":"adguard-for-mac/installation/#アンインストール","content":""},{"title":"レギュラー​","type":1,"pageTitle":"インストール/アンインストール","url":"adguard-for-mac/installation/#レギュラー","content":"まず、Finderを開いてください。  「アプリケーション」→ 「AdGuard」アイコンを右クリック→「こみ箱に入れる」  "},{"title":"アドバンスド​","type":1,"pageTitle":"インストール/アンインストール","url":"adguard-for-mac/installation/#アドバンスド","content":"※この手順は、技術的なことが分かる場合、またはAdGuardサポートに「アドバンスドアンインストール」を案内された場合にのみ使用してください。 また、最初に「通常のアンインストール」手順のステップをすべて行ってください。 After that, delete following AdGuard files: /Library/Application Support/AdGuard Software/com.adguard.mac.adguard (folder)~/Library/Preferences/com.adguard.mac.adguard.plist (file)~/Library/Group\\ Containers/TC3Q7MAJXF.com.adguard.mac (folder)/Library/LaunchDaemons/com.adguard.mac.adguard.adguard-pac.daemon.plist (file)/Library/LaunchDaemons/com.adguard.mac.adguard.adguard-tun-helper.daemon.plist (file)/Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-pac.daemon.log (file)/Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-tun-helper.daemon.log (file) To do so, open the Terminal app, then enter and execute the following commands: sudo rm -R &quot;/Library/Application Support/AdGuard Software/com.adguard.mac.adguard&quot; rm -R &quot;$HOME/Library/Application Support/com.adguard.mac.adguard&quot; rm $HOME/Library/Preferences/com.adguard.mac.adguard.plist rm -R &quot;$HOME/Library/Group Containers/TC3Q7MAJXF.com.adguard.mac&quot; find &quot;$HOME/Library/Application Support&quot; -name &quot;com.adguard.browser_extension_host.nm.json&quot; -delete sudo rm /Library/LaunchDaemons/com.adguard.mac.adguard.adguard-pac.daemon.plist sudo rm /Library/LaunchDaemons/com.adguard.mac.adguard.adguard-tun-helper.daemon.plist sudo rm /Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-pac.daemon.log sudo rm /Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-tun-helper.daemon.log Run the Activity Monitor app. 検索ツールを使用して「cfprefsd」プロセスを見つける ユーザーで実行されているプロセス（ルートで実行されているものではないほう）を停止します。 そうするにはプロセスをクリックして、左上の「X」をクリックしてください。 Confirm the action in the dialogue window. AdGuardアドバンスドアンインストール完了です。 "},{"title":"Advanced Settings guide","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/advanced-settings/","content":"","keywords":""},{"title":"How to reach Advanced Settings​","type":1,"pageTitle":"Advanced Settings guide","url":"adguard-for-mac/solving-problems/advanced-settings/#how-to-reach-advanced-settings","content":"caution Changing Advanced Settings may cause problems with AdGuard's performance, break the Internet connection, or compromise your security and privacy. Make changes to this section only if you are sure of what you are doing or our support team has asked you to do it. To find Advanced Settings, open AdGuard, click the gear icon, select Advanced, then select Advanced Settings. "},{"title":"Advanced Settings​","type":1,"pageTitle":"Advanced Settings guide","url":"adguard-for-mac/solving-problems/advanced-settings/#advanced-settings","content":"network.extension.exclude.domains The listed domains will be excluded from filtering in the Network Extension mode. Use a comma or line break to separate values. network.extension.exclude.ports The listed ports will be excluded from filtering in the Network Extension mode. Use a comma or line break to separate values. network.extension.route.exclude The listed routes will be excluded from filtering in the Network Extension mode. Set routes using an IP address or destination CIDR. Separate values with commas or line breaks. network.extension.http.downgrade.bundleids Here you can specify a list of applications for which the HTTP/2 protocol will be downgraded to HTTP/1.1 in the Network Extension filtering mode. The bundle ID should be separated by a comma or a line break. network.extension.monterey.force.split.tunnel Here you can prohibit AdGuard from using the &quot;default route&quot; which is enabled by default in the Network Extension mode on macOS Monterey. AdGuard uses &quot;default route&quot; to disable iCloud Private Relay and Protect Mail Activity, as it cannot operate in unison with them. You will find more information about the problem in this article. network.extension.dns.redirect.exclude.bundleids Here you can specify a list of applications that make DNS queries directly not via system DNS resolver (for example, some VPN clients or DNS filtering applications). DNS filtering will be disabled for them in the Network Extension mode. The bundle IDs should be separated by a comma or line break. network.dns.filter.secure.request Redirects secure DNS requests to a local DNS proxy, if there is one available. network.https.ocsp.check By setting true, you enable HTTPS certificate revocation checking. network.tcp.keepalive.enabled Periodically sends TCP packets over an idle connection to ensure that it remains active and to renew NAT timeouts. network.tcp.keepalive.interval.seconds Idle time, in seconds, before sending a keepalive probe. If 0 is specified, the system will use the default value. network.tcp.keepalive.timeout.seconds Time, in seconds, before sending another keepalive probe to an unresponsive peer. If 0 is specified, the value selected by the system will be used. network.https.ech.enabled Uses a local DNS proxy to look for configs in the ECH Config Lists. If found, encrypts ClientHellos. network.https.enforce.certificate.transparency Verifies the authenticity of all certificates for the domain based on Chrome Certificate Transparency Policy. network.https.filter.http3.enabled By setting true, you allow AdGuard to filter traffic sent over HTTP/3, the latest version of the HTTP protocol based on QUIC. network.filtering.localnetwork By setting true, you enable local network filtering. network.filtering.localhost By setting true, you enable LoopBack filtering. dns.proxy.bootstrap.ips Here you can enter the IP addresses of the DNS servers that will be used to determine the address of the encrypted DNS server. dns.proxy.fallback.ips Here you can specify a list of IP addresses of DNS servers that will be used as backups in case the encrypted DNS server fails to respond. dns.proxy.fallback.on.upstreams.failure.enabled Normal queries will be redirected to a fallback upstream if all normal upstreams fail. dns.proxy.detect.search.domains This option enables automatic detection of the local network domain, which will be automatically redirected to the fallback DNS server instead of the main DNS server. dns.proxy.fallback.domains Here you can list domains for which the fallback DNS server will be used instead of the main DNS server. dns.proxy.adblockrules.blocking.mode Here you can specify the type of DNS server response to blocked requests, corresponding to ad-blocker-style rules. 0 — respond with REFUSED1 — respond with NXDOMAIN2 — respond with 0.0.0.0 or the addresses specified in dns.proxy.blocking.response.IPv4.address and/or dns.proxy.blocking.response.IPv6.address dns.proxy.hostrules.blocking.mode Here you can specify the type of DNS server response to blocked requests, corresponding to hosts rules: 0 — respond with REFUSED1 — respond with NXDOMAIN2 — respond with 0.0.0.0 or the addresses specified in dns.proxy.blocking.response.IPv4.address and/or dns.proxy.blocking.response.IPv6.address dns.proxy.blocking.response.IPv4.address Here you can specify the IPv4 address that will be returned in response to blocked &quot;A&quot; requests when dns.proxy.adblockrules.blocking.mode or dns.proxy.hostrules.blocking.mode is set to the response type &quot;ADDRESS&quot;. dns.proxy.blocking.response.IPv6.address Here you can specify the IPv6 address that will be returned in response to blocked &quot;AAAA&quot; requests when dns.proxy.adblockrules.blocking.mode or dns.proxy.hostrules.blocking.mode is set to the response type &quot;ADDRESS&quot;. dns.proxy.block.AAAA.requests Here you can enable IPv6 DNS query blocking. dns.proxy.blocked.response.TTL.in.seconds Here you can specify the TTL (time to live) value that will be returned in response to a blocked request. dns.proxy.parallel.upstream.queries.enabled All upstreams are queried simultaneously. The first response is returned. dns.proxy.servfail.on.upstreams.failure.enabled Responds to upstream failure with a SERVFAIL packet. dns.proxy.http3.enabled Enables HTTP/3 for DNS-over-HTTPS upstreams to accelerate connection. dns.proxy.block.encrypted.client.hello.response Removes the Encrypted Client Hello parameters from responses. stealth.antidpi.http.split.fragment.size Adjusts the size of the HTTP request fragmentation. Valid values: 1–1500. If an invalid size is specified, the system will use the default value. stealth.antidpi.clienthello.split.fragment.size This option specifies the size of TCP packet fragmentation, which helps avoid deep packet inspection. Valid values: 1–1500. If an invalid size is specified, the system will use the default value. stealth.antidpi.http.space.juggling Adds extra space between the HTTP method and the URL and removes space after the &quot;Host:&quot; field. stealth.antidpi.split.delay.millisecond Here you can specify the delay, in milliseconds, after sending the first fragment, if fragmentation is performed. subscription.link.interception.userscript Activate this feature if you want AdGuard to automatically intercept the URLs of userscripts and open the installation window. subscription.link.interception.filter Activate this feature if you want AdGuard to automatically intercept subscription URLs (for example, abp:subscribe, etc.) and open the custom filter setup window. "},{"title":"Compatibility issues with different macOS versions","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/big-sur-issues/","content":"","keywords":""},{"title":"Currently existing problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#currently-existing-problems","content":"Every year Apple releases a new version of macOS, introducing innovative solutions and adding new useful features. But some of them, such as Network Extensions API (Big Sur) or iCloud Private Relay (Monterey), cause some problems to many applications, AdGuard not being an exception. In this article we go over the known issues specific to each macOS version and possible ways to solve them. "},{"title":"Monterey 12: currently existing problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#monterey-12-currently-existing-problems","content":"These problems aren't fixed by Apple yet, or fixed only partially. Compatibility with iCloud Private Relay​ Currently, AdGuard and iCloud Private Relay cannot work at the same time. AdGuard has no ability to block ads because iCloud Private Relay encrypts traffic before AdGuard can filter network connections. When iCloud Private Relay is active, any filtering (including local filtering) becomes impossible. Thus, AdGuard can't filter traffic or perform DNS filtering in Safari. That's why by default, AdGuard uses the &quot;default route&quot; which disables iCloud Private Relay. For a deeper understanding of this problem, read this article. Recommended solution We recommend using AdGuard together with a more traditional VPN service such as AdGuard VPN. Alternative solution You can prevent AdGuard from using the &quot;default route&quot; by disabling it. It can be done via Advanced Settings → network.extension.monterey.force.split.tunnel. Note that enabling this setting will cause the problems described above.  Compatibility with Protect Mail Activity​ Apple's Mail app now uses a proxy to hide a user's IP address when downloading images from emails. However, it won't work if there's an active VPN connection. As it treats AdGuard as a VPN, it won't preload images automatically. For a deeper understanding of this problem, read this article. Recommended solution At this point, we recommend using a more traditional VPN service, such as AdGuard VPN, instead of the newer Apple privacy features. "},{"title":"Monterey 12, Big Sur 11.6 and later: currently existing problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#monterey-12-big-sur-116-and-later-currently-existing-problems","content":"These problems aren't fixed by Apple yet, or fixed only partially. Compatibility with Cisco AnyConnect​ AdGuard will not work together with Cisco AnyConnect while in the Network Extension mode. You have to switch AdGuard to Automatic Proxy mode. To do so, follow this instruction. Compatibility with Flutter​ This problem is solved in Flutter 2.2, released in June 2021. But to fix it for applications developed in Flutter, you need to wait for updates. If you use Flutter alongside AdGuard in &quot;Network Extension&quot; mode (or any other &quot;Transparent Proxy&quot;-type app) in Monterey or Big Sur, you will run into problems: projects won't open and Flutter will be effectively broken. We have already reported this bug to Apple. Meanwhile, you can use these temporary solutions: Use AdGuard in Automatic Proxy mode. Disable SIP and switch AdGuard to Kernel Extension mode as explained here. VPN apps with legacy API​ Despite AdGuard is displayed as a VPN in system settings, it shouldn't cause any conflicts when working alongside other VPN-based apps. However, if you're using a VPN-based app that was downloaded from outside App Store, there's a chance it uses the old VPN API and you have to exclude it from filtering: Open AdGuard's menu.Select Preferences....Switch to the Network tab.Click the Applications... button.Find the app you want to exclude and uncheck the checkbox next to it.  "},{"title":"Already fixed problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#already-fixed-problems","content":"These problems have been fixed by Apple by now but can be encountered in the older versions of macOS Big Sur. "},{"title":"Compatibility with Little Snitch 5​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#compatibility-with-little-snitch-5","content":"At this moment, Network Extension mode in AdGuard isn't compatible with Little Snitch 5. When both are running, there's a chance to encounter issues with various apps' behavior, even if they aren't filtered by AdGuard. This problem is directly caused by a bug in Big Sur, and we've already informed Apple about it. This leaves us to believe that this issue will get resolved in one of the next updates. It needs to be said that this problem can't be solved by disabling connections monitoring in Little Snitch, because this action doesn't unload Little Snitch's extension from the system. We recommend to switch to Automatic Proxy filtering mode when running AdGuard alongside with Little Snitch on Big Sur, at least until Apple fixes the bug. "},{"title":"Compatibility with local proxies​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#compatibility-with-local-proxies","content":"note Now AdGuard can filter local proxies (mostly) without any problems. If you encounter any issues in OS versions 11.1+, or if you're using Big Sur 11.0, remove the local proxy from System settings and configure an upstream proxy in AdGuard by following the instruction below. To configure an upstream proxy in AdGuard for Mac in Big Sur: Open AdGuard's settings Preferences → Network → Outbound proxy.Choose HTTP, HTTPS, SOCKS4 or SOCKS5, depending on your proxy type.Fill in the fields: host is the IP address of your proxy server,port is the desired port number to be used by the proxy server,user and password are corresponding username and password of your proxy (if needed). Ignore either or both when not applicable. If you run into any problems, please contact our tech support at support@adguard.com. Example 1: Configuring an upstream Shadowsocks proxy​ Here's an example of how to configure an upstream proxy for Shadowsocks. First of all, you need a working server side for your proxy. Most likely, to set it up, you would use a JSON file like this (server and password values were chosen randomly here): { &quot;server&quot;:&quot;111.222.333.444&quot;, &quot;server_port&quot;:8388, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;barfoo!&quot;, &quot;timeout&quot;:600, &quot;method&quot;:&quot;chacha20-ietf-poly1305&quot; }  tip You can find more information about how to get started on Shadowsocks website. Then you'd have to install Shadowsocks client on your Mac. Make sure that you select 'Manual Mode' or 'Auto Mode' in its settings! The configuration won't work if you select 'Global Mode' (or 'Auto Mode' in Big Sur versions prior to 11.1).  Now go to AdGuard menu → Advanced → Advanced Settings... and set the Value area of the upstream.proxy setting to socks5://localhost:1080. Notice that you need to use &quot;local_port&quot; value from the JSON file here. Because Shadowsocks uses SOCKS5, you also need to set the value of the upstream.proxy.socks5udp setting in AdGuard Advanced Settings to true to make AdGuard route UDP traffic to the proxy server. Example 2: Configuring an upstream Surge proxy​ In Big Sur v11.1+, there are no known conflicts between AdGuard and Surge proxy. If you are using an older version of Big Sur (prior to 11.1), check that System Proxy in the bottom right corner is disabled. Otherwise, Surge won't work with AdGuard. On the other hand, Enhanced Mode can be enabled without causing a conflict in any Big Sur version.  Now go to Preferences → Network → Outbound proxy and fill in the fields. For SOCKS5 proxy type: host: localhostport: 6153 For HTTP proxy type:host: localhostport: 6152 "},{"title":"Alternatives to using a Network Extension​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#alternatives-to-using-a-network-extension","content":"It's impossible to foresee each and every possible problem that can pop up in Big Sur or Monterey, there are countless various hardware/software and settings configurations. If you face any compatibility issues, please contact our support team, but feel free to try one of these workarounds first. "},{"title":"Using \"Automatic proxy\" filtering mode​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#automatic-proxy","content":"If you face problems in Big Sur or Monterey which can't be resolved by any of the methods above, you can try switching AdGuard to Automatic proxy mode. Open AdGuard's menu.Select Preferences....Switch to the Network tab.Click the Select Mode... button.Select Automatic Proxy.  Now AdGuard has automatically added a .pac file to your Mac's network settings, so that the system will consider AdGuard a proxy and try to send all traffic through AdGuard. note Some apps may ignore this system setting and their traffic will not be filtered. "},{"title":"Enabling Kernel Extension in Big Sur and Monterey​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#kernel-extension","content":"By default AdGuard uses Network Extension framework in Big Sur and Monterey as the old Kernel Extension framework is disabled there. This can cause some compatibility problems, but to enable Kernel Extension back, you need to disable System Integrity Protection (SIP) first. To disable SIP, follow this instruction: Click the Apple symbol in the Menu bar.Click Restart…Hold down Command-R to reboot into Recovery Mode.Click Utilities.Select Terminal.Type csrutil disable.Press Return or Enter on your keyboard.Click the Apple symbol in the Menu bar.Click Restart… Now that SIP is disabled, this is how you enable Kernel Extension:  Open AdGuard's menu.Select Preferences....Switch to the Network tab.Click the Select Mode... button.Select Kernel Extension.Confirm that you want to switch to Kernel Extension. caution However, we only recommend using this method if everything else fails, as this may lead to unexpected issues. "},{"title":"Installation problems solving","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/installation-issues/","content":"","keywords":""},{"title":"\"Installation failed\" error in macOS Catalina​","type":1,"pageTitle":"Installation problems solving","url":"adguard-for-mac/solving-problems/installation-issues/#installation-failed-error-in-macos-catalina","content":"During the installation you can face an error like this:  Follow this instruction to solve the problem: Restart your MacAs your Mac restarts, press and hold down the Command(⌘) + R keys immediately upon hearing the startup chime. Hold the keys until the Apple logo appears to get the computer into Recovery mode.From the top bar select Utilities → Terminal, and execute this command: csrutil disableRestart the Mac and log into Administrator's profileOpen the Finder window and select from the top bar Go → Go to Folder and type ~/private/Create a folder named tmp and type in your passwordLaunch AdGuard installation As the installation is completed, restart your Mac in Recovery mode using the instruction above and execute csrutil enable command in Terminal to enable system protection. "},{"title":"iCloud Private Relay and AdGuard","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/icloud-private-relay/","content":"","keywords":""},{"title":"Problem description in a nutshell​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#problem-description-in-a-nutshell","content":"By default, AdGuard uses the &quot;default route&quot; which disables iCloud Private Relay. Currently, AdGuard and iCloud Private Relay cannot work at the same time. AdGuard cannot block ads because iCloud Private Relay encrypts traffic before AdGuard can filter network connections. When iCloud Private Relay is active, any filtering (including local filtering) becomes impossible. Thus, AdGuard can't filter traffic or perform DNS filtering in Safari. Yet, AdGuard still filters traffic in other browsers. To keep using iCloud Private Relay, consider installing AdGuard for Safari. The same applies to using any VPN apps on Mac: you have to choose between using iCloud Private Relay or a VPN service. "},{"title":"In detail​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#in-detail","content":"AdGuard for Mac now uses macOS built-in socket filtering based on the network extensions API. This new and rather buggy mechanism replaced good old Kernel extensions. Over the last 1.5 years, we've reported more than 20(!) bugs to Apple regarding their new filtering method. The network extensions API has a VPN-like configuration with a list of route-like entries. On Big Sur, AdGuard developed &quot;split-tunnel&quot; rules to avoid creating the &quot;default route&quot; rule because it causes problems on early Big Sur releases. On Monterey, iCloud Private Relay got introduced. Privacy features of the Mail app also use Private Relay servers. As a consequence, AdGuard can't work together with iCloud Private Relay and the Mail app privacy features: iCloud Private Relay is applied to connections at the library level — before they reach the socket level, where AdGuard operates.iCloud Private Relay uses QUIC, which AdGuard can't filter in filtered apps because HTTP/3 filtering is not yet available.Consequently, AdGuard blocks QUIC, including iCloud Private Relay traffic — otherwise, ad blocking is impossible.When you use iCloud Private Relay and switch AdGuard into the &quot;split-tunnel&quot; mode, you can't open websites in Safari.To work around this issue for Monterey, we apply the &quot;default route&quot; rule. When Private Relay sees that rule, it disables itself automatically. So, AdGuard works seamlessly on Monterey, but iCloud Private Relay gets disabled. network.extension.monterey.force.split.tunnel restores the &quot;Big Sur&quot; behavior, but this option may break access to websites due to (3) and (4). We keep searching for a solution to this issue. One of the options is implementing HTTP/3 filtering. "},{"title":"Recommended solution​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#recommended-solution","content":"We recommend using AdGuard together with a more traditional VPN service such as AdGuard VPN. "},{"title":"Alternative solution​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#alternative-solution","content":"You can prevent AdGuard from using the &quot;default route&quot; by disabling the &quot;default route&quot;. It can be done via Advanced Settings → network.extension.monterey.force.split.tunnel.  Bear in mind that, in this case, you'll face the issues described above. "},{"title":"macOSでAdGuardアプリが起動しない問題","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/launch-issues/","content":"","keywords":""},{"title":"macOS 11以降でのAdGuard起動問題​","type":1,"pageTitle":"macOSでAdGuardアプリが起動しない問題","url":"adguard-for-mac/solving-problems/launch-issues/#macos-11以降でのadguard起動問題","content":"Big Sur、Monterey、Venturaのオペレーティングシステムで AdGuard for Mac の起動に問題がある場合は、こちらの手順をご利用ください: Macを再起動し、 リカバリー（復旧）モードに入るSIPを無効にする（ユーティリティーメニューから「ターミナル」を起動し、 csrutil disableと入力します）Macを再起動するAdGuardアプリを閉じ、「ターミナル」を開き、 systemextensionsctl resetと入力します。Macを再起動し、リカバリー（復旧）モードに入るSIPを有効にする（ユーティリティーメニューから「ターミナル」を起動し、 csrutil enableと入力します）AdGuardアプリを起動し、保護をオンにします。 "},{"title":"macOS 10以下でのAdGuard起動問題​","type":1,"pageTitle":"macOSでAdGuardアプリが起動しない問題","url":"adguard-for-mac/solving-problems/launch-issues/#macos-10以下でのadguard起動問題","content":"Sierra、Mojave、Catalinaのオペレーティングシステムで AdGuard for Mac の起動に問題がある場合は、こちらの手順をご利用ください: 「ターミナル」を開き、ls -@lOae /private/var/db/KernelExtensionManagementというコマンドを入力する（以下のスクリーンショットのように）restricted フラグがなし（-）になっていることを確認してください。 Reboot your Mac in recovery mode.Open Utilities → Terminal.Enter csrutil disable.Enter administrator password.Reboot your Mac.Open Terminal and enter the following command: sudo chflags restricted /private/var/db/KernelExtensionManagement.Reboot your Mac in recovery mode.Open Utilities → Terminal → Enter csrutil enable → Enter administrator password → Reboot your Mac.Enable AdGuard protection. "},{"title":"Manual certificate installation","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/manual-certificate-installation/","content":"Manual certificate installation info This article is about AdGuard for Mac, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app AdGuard for Mac needs to install the root certificate into certificate storage to be able to filter HTTPS traffic. This action is performed automatically in most cases as you run the app for the first time, but users of Gecko-based browsers (Firefox, Waterfox etc.) who have a master password set up for their browser may be required to take additional steps (because these browsers use their own certificate storage instead of the system one). They need to either enter the master password when prompted (to grant AdGuard access to the certificate storage) or manually install the certificate. To manually install the certificate into Firefox-like browser: Open Preferences Go to Privacy &amp; Security → Certificates Click View Certificates Navigate to the Authorities tab and click the Import... button Select file /Library/Application Support/AdGuard Software/com.adguard.mac.adguard/AdguardCore/Adguard Personal CA.cer or just download it from http://local.adguard.org/cert using a Chromium-based browser (e.g Google Chrome or new Edge) and with a HTTPS-filtering running in AdGuard Exact actions required for different Gecko-based browsers may vary, but the general sequence and the path to AdGuard Personal CA.cer file will be the same. P.S.: For Setapp application version the file path is the following: /Library/Application Support/com.adguard.mac.adguard-setapp/AdguardCore/Adguard Personal CA.cer","keywords":""},{"title":"Protect Mail Activity and AdGuard","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/protect-mail-activity/","content":"","keywords":""},{"title":"In a nutshell​","type":1,"pageTitle":"Protect Mail Activity and AdGuard","url":"adguard-for-mac/solving-problems/protect-mail-activity/#in-a-nutshell","content":"Apple's Mail app now uses a proxy to hide a user's IP address when downloading images from emails.  However, it won't work if there's an active VPN connection. As it treats AdGuard as a VPN, it won't preload images automatically. Apple explains this issue here. "},{"title":"In detail​","type":1,"pageTitle":"Protect Mail Activity and AdGuard","url":"adguard-for-mac/solving-problems/protect-mail-activity/#in-detail","content":"AdGuard for Mac now uses macOS built-in socket filtering based on the network extensions API. This new and rather buggy mechanism replaced good old Kernel extensions. Over the last 1.5 years, we've reported more than 20(!) bugs to Apple regarding their new filtering method. The network extensions API has a VPN-like configuration with a list of route-like entries. On Big Sur, AdGuard used &quot;split-tunnel&quot; rules to avoid creating the &quot;default route&quot; rule because it causes problems on early Big Sur releases. These problems were solved in Monterey so nothing prevents us from using the &quot;default route&quot; rule. On Monterey, iCloud Private Relay got introduced. Privacy features of Mail.app also use Private Relay servers. As a consequence, AdGuard can't work together with iCloud Private Relay and Mail app privacy features: iCloud Private Relay is applied to connections at the library level — before they reach the socket level, where AdGuard operates.iCloud Private Relay uses QUIC, which AdGuard can't filter because HTTP/3 filtering is not yet available.Consequently, AdGuard blocks QUIC, including iCloud Private Relay traffic – otherwise, ad blocking is impossible.When you use iCloud Private Relay and switch AdGuard into the &quot;split-tunnel&quot; mode, you can't open websites in Safari.To work around this issue for Monterey, we apply the &quot;default route&quot; rule. When Private Relay sees that rule, it disables itself automatically. So, AdGuard works seamlessly on Monterey, but iCloud Private Relay gets disabled. network.extension.monterey.force.split.tunnel restores the &quot;Big Sur&quot; behavior, but this option may break access to websites due to (3) and (4). We keep searching for a solution to this issue. One of the options is implementing HTTP/3 filtering. "},{"title":"Recommended solution​","type":1,"pageTitle":"Protect Mail Activity and AdGuard","url":"adguard-for-mac/solving-problems/protect-mail-activity/#recommended-solution","content":"At this point, we recommend using a more traditional VPN service, such as AdGuard VPN, instead of the newer Apple privacy features. "},{"title":"Incompatibility with Screen Time","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/screen-time-issues/","content":"Incompatibility with Screen Time info This article is about AdGuard for Mac, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app If you have Content Restrictions enabled in Screen Time while AdGuard is on, you may experience problems loading web pages. To check if Content Restrictions are active: Go to System Settings → Screen Time → Content &amp; Privacy → Content Restrictions Check if the setting for Access to Web Content is set to Limit Adult Websites If this setting is on, pages won’t load. To continue using AdGuard, disable Content &amp; Privacy in Screen Time, and then restart the system.","keywords":""},{"title":"Protection cannot be enabled","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/protection-cannot-be-enabled/","content":"Protection cannot be enabled info This article is about AdGuard for Mac, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app If AdGuard Protection cannot be enabled for some reason, perform the following steps: Click the AdGuard icon at the menu bar and go to Advanced → Reset settings... → Quit AdGuard... In the Spotlight Search, type Terminal, enter sudo rm -R /Library/Application\\ Support/com.adguard.adguard and execute. Restart your computer. Open the Terminal again, type ls -al /Library/StagedExtensions/Library/Application\\ Support/com.adguard.adguard/ and execute. You should receive the following: No such file or directory. Start AdGuard and enter your login information when prompted.","keywords":""},{"title":"Tor Browserでのフィルタリングを設定する方法","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/tor-filtering/","content":"Tor Browserでのフィルタリングを設定する方法 info This article is about AdGuard for Mac, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app デフォルトでは、Tor BrowserはAdGuardの「フィルタリングされるアプリ」リストに追加されます。 しかし、Torをフィルタリングするためには、AdGuardはTorのセキュリティ設定を変更する必要がある。 変更することにより、TorはAdGuardのCA証明書を信頼するようになります。 Torをフィルタリングすることにして、 「設定」→「ネットワーク」→「アプリ…」でTorにチェックを入れると、AdGuardは以下のダイアログボックスを表示します: Torの設定を更新することで、AdGuardは以下を設定します: security.enterprise_roots.enabled: true この設定により、Torはルート証明書を信頼するようになります。 詳しくはこちら。 security.cert_pinning.enforcement_level: 1 Public Key Pinning は、ウェブサイトとユーザー間の接続が正当であることを保証するためのセキュリティ対策です。 これは、なかでもウェブサイトが信頼する公開キー（pin）のリストを公開することで実現されます。 enforcement levelを「1」に設定すると、カスタム CA に対してpinningは実施されなくなります。 詳しくはこちら。 変更を適用するには、Tor Browserを再起動してください。 If you manually change these settings, Tor filtering will be stopped.","keywords":""},{"title":"What is a content blocker?","type":0,"sectionRef":"#","url":"adguard-for-safari/features/content-blockers/","content":"What is a content blocker? コンテンツブロッカーとは、テーマ別のフィルタ群です。 Privacy-related filters are included in the content blocker with the corresponding name — AdGuard Privacy. コンテンツブロッカーが設計された理由は2つあります：フィルタを構成するためと、Appleの制約に適合させるためです。 In 2019, Apple put limitations on ad blockers for Safari, allowing them to use only 50,000 filtering rules simultaneously. 広告ブロッカーとして十分なフィルタリングクオリティを提供するにはこの数では不十分であったため（AdGuard ベースフィルタだけでも30,000のフィルタリングルールがある）、AdGuard for Safari を6つのコンテンツブロッカーに分割し、それぞれに最大50,000のルールを含ませることにしました。 In 2022, Apple increased the filtering rule limit for each content blocker to 150,000 rules applied simultaneously. そのため、AdGuard for Safari では、6つのコンテンツブロッカーすべてを使って、最大90万のルールを有効にすることができます。 上限が引き上げられたとはいえ、コンテンツブロッカーの構造は変わっていません。 「コンテンツブロッカー」画面では、どのコンテンツブロッカーが有効になっているか、それぞれのコンテンツブロッカが使用しているルールの数、どのフィルタが機能しているかを確認できます。 tip 有効になっているフィルタは「フィルタ」タブで管理できます。 「コンテンツブロッカー」画面では、すでに有効になっているフィルターのリストのみが表示されます。","keywords":""},{"title":"Safari拡張機能","type":0,"sectionRef":"#","url":"adguard-for-safari/extensions/","content":"","keywords":""},{"title":"Safari拡張機能とは​","type":1,"pageTitle":"Safari拡張機能","url":"adguard-for-safari/extensions/#safari拡張機能とは","content":"Safari拡張機能は、Safariウェブブラウザで機能を追加する小さなソフトウェアプログラムです。 ブラウザに内蔵されていない機能を追加することで、ユーザーはブラウジング体験をカスタマイズして改善させることができます。 AdGuard for Safari は、主にSafariで開かれたウェブサイトにフィルタリングルールを適用するために拡張機能を使用します。 "},{"title":"仕組み​","type":1,"pageTitle":"Safari拡張機能","url":"adguard-for-safari/extensions/#仕組み","content":"ウェブサイト上の広告、トラッキング、迷惑要素をブロックするために、AdGuardはフィルタリングルールを使用します。 AdGuard フィルタとユーザーのカスタムフィルタのルールは、Safari が読み取れるものに変換され、6つのSafari拡張機能に統合されます: AdGuard 一般AdGuard プライバシーAdGuard ソーシャルAdGuard セキュリティAdGuard その他 各コンテンツブロッカー拡張機能において、最大150,000の有効フィルタリングルールが許可されています。 ほとんどのフィルタグループのルール数は150,000を超えません。 ただし、言語特化フィルタやカスタムフィルタを有効にしすぎると、制限を超える可能性があります。 このような場合、制限を超えたルールの中から、ランダムには一部のルールが自動的に無効化されるため、誤った広告ブロックの可能性が出てきます。 必要なフィルタ以外は有効にしないことを強くお勧めします。 もう一つの、「AdGuard for Safari」という拡張機能は、Safariの検索バーの横にAdGuardアイコンを追加し、複雑な広告をブロックするための高度なルールを使用できるようにします。  では、それぞれの拡張機能について詳しく説明いたします。 "},{"title":"6個のコンテンツブロッカー拡張機能​","type":1,"pageTitle":"Safari拡張機能","url":"adguard-for-safari/extensions/#6個のコンテンツブロッカー拡張機能","content":"「AdGuard 一般」は、フィルタ&lt;からのルールを適用します。これらのフィルタは、フィルタ → 広告ブロッキング および フィルタ → 言語特化フィルタ で見つけることができます。 この拡張機能は、効果的な広告ブロックに焦点を当て、特定の言語の広告のフィルタリング、お含みます。 「AdGuard プライバシー」は、 フィルタ → プライバシーにあるフィルタのルールを適用します。 あらゆるトラッキング（個人情報追跡）メカニズムをブロックし、あなたのブラウジングアクティビティとオンラインプライバシーが保護されるようにします。 「AdGuard ソーシャル」は、SNS系フィルタからのルールを適用します。これらのフィルタは、フィルタ → SNSウィジェット および フィルタ → 迷惑要素 で見つけることができます。 ポップアップ、ソーシャルメディアボタン（いいね！、シェアなど）、オンラインアシスタントウィンドウ、および Web ページ上のその他の煩わしい要素をブロックします。 「AdGuard セキュリティ」は、 フィルタ → セキュリティにあるフィルタのルールを適用します。 この拡張機能は、潜在的に有害な要素を識別してブロックし、悪意のあるコンテンツからユーザーを保護します。 「AdGuard その他」は上記のカテゴリーに該当せず、 フィルタ → その他にあるフィルタのルールを適用します: 検索広告と自己宣伝のブロックを解除するフィルタ、AdGuard DNS フィルタ、AdGuard 実験的フィルタ 「AdGuard カスタム」は、独自に追加したフィルタのルールをカスタムフィルタに適用します。 ユーザールールとホワイトリストルールはすべての拡張機能に含まれています。 "},{"title":"「AdGuard for Safari」拡張機能​","type":1,"pageTitle":"Safari拡張機能","url":"adguard-for-safari/extensions/#adguard-for-safari拡張機能","content":"「AdGuard for Safari」という拡張機能は検索バーの横にあるAdGuardアイコンを有効にします。 特定のウェブサイトに対して広告ブロックを素早くオン・オフにしたい場合や、手動で広告をブロックしたい場合に便利です。 また、Safariがサポートするフォーマットに変換できない高度なルールもこの拡張機能に含まれています。 高度なルールにはCSSルール、CSSセレクタ、scriptletsが含まれ、これらのおかげでAdGuardはYouTubeなどの複雑な広告をブロックすることができます。 "},{"title":"Safariの拡張機能を管理する方法​","type":1,"pageTitle":"Safari拡張機能","url":"adguard-for-safari/extensions/#safariの拡張機能を管理する方法","content":"Safariを開き、画面左上の Safari をクリックしてメニューを展開します。 環境設定...をクリックします。🧩「拡張機能」タブを選択します。  "},{"title":"AdGuard for Safari にアクセス権限が必要な理由​","type":1,"pageTitle":"Safari拡張機能","url":"adguard-for-safari/extensions/#adguard-for-safari-にアクセス権限が必要な理由","content":"AdGuard for Safari 拡張機能を有効にすると、ウェブページのコンテンツへのアクセスと閲覧履歴へのアクセスが必要になります。 これらのアクセス権限が必要な理由は以下の通りです: ウェブページのコンテンツへのアクセスは、手動による広告ブロックや高度なブロックルールを正しく機能させるために必要です。閲覧履歴へのアクセスは、Webサイトの保護ステータスを確認し、どの高度なルールを適用すべきかを判断するために必要です。 ※AdGuardは、アクセス権限を通じて得たデータを他の目的で使用したり、誰かと共有したりすることは一切ありません。 詳しくは、プライバシーポリシーをご覧ください。 "},{"title":"AdGuardについて","type":0,"sectionRef":"#","url":"adguard-for-safari/features/about/","content":"AdGuardについて 「このアプリについて」タブでは、AdGuard for Safari の現在のバージョンに関する情報や法的文書へのリンクをご確認いただけます。 GitHubリポジトリへのリンクもあります。 GitHubでは、製品開発のプロセスを確認し、機能要求を作成したり、バグを報告したりすることができます。 Reminder AdGuard for Safari can be downloaded for free from the App Store. A detailed setup instruction is available in the Knowledge base.","keywords":""},{"title":"AdGuard カスタム","type":0,"sectionRef":"#","url":"adguard-for-safari/features/content-blockers/adguard-custom/","content":"AdGuard カスタム If you need more filters, you can add them to AdGuard Custom. カスタムフィルタを追加するには、該当するフィールドにフィルタのURLまたはローカルファイルのパスを入力します。 You can find new filters at filterlists.com.","keywords":""},{"title":"AdGuard 一般","type":0,"sectionRef":"#","url":"adguard-for-safari/features/content-blockers/adguard-general/","content":"AdGuard 一般 AdGuard General is a content blocker that combines the most essential filters for blocking ads. 特に、「AdGuard ベースフィルタ」は常に有効にしておくことをお勧めします。","keywords":""},{"title":"AdGuard プライバシー","type":0,"sectionRef":"#","url":"adguard-for-safari/features/content-blockers/adguard-privacy/","content":"AdGuard プライバシー このコンテンツブロッカーは、カウンターやその他のウェブ解析・追跡ツールに対抗する主要なツールです。 The AdGuard Tracking Protection filter is enabled by default.","keywords":""},{"title":"AdGuard その他","type":0,"sectionRef":"#","url":"adguard-for-safari/features/content-blockers/adguard-other/","content":"AdGuard その他 AdGuard Other contains filters with various functions. 例えば、検索広告や自己宣伝広告のブロックを解除するフィルターがあります。 場合によっては、この種の広告は他の広告よりも関連性が高く、邪魔にならないため、探しているものを正確に見つけるのに役立つので、有効にすることが便利だったりします。 Disclaimer We don’t have any ‘acceptable ads’ paid by advertisers. Instead, we provide users with an option to see search ads and websites' self-promotion.","keywords":""},{"title":"AdGuard セキュリティ","type":0,"sectionRef":"#","url":"adguard-for-safari/features/content-blockers/adguard-security/","content":"AdGuard セキュリティ このコンテンツブロッカーは、いくつかのセキュリティ関連フィルタを統合しています。 Malware Domains Blocklist blocks domains that are notorious for spreading malware and spyware. Spam404 protects you from Internet fraudsters. NoCoin Filter List disrupts browser-based cryptominers, such as Coinhive.","keywords":""},{"title":"AdGuard ソーシャル","type":0,"sectionRef":"#","url":"adguard-for-safari/features/content-blockers/adguard-social/","content":"AdGuard ソーシャル AdGuard Social contains filters against social media buttons, widgets, scripts, and icons. ポップアップ、モバイルアプリのバナー、クッキー同意通知など、その他の迷惑要素フィルターもこのセクションに含まれます。 To enable them, find Social Widgets in the Filters tab.","keywords":""},{"title":"一般","type":0,"sectionRef":"#","url":"adguard-for-safari/features/general/","content":"","keywords":""},{"title":"一般設定タブ​","type":1,"pageTitle":"一般","url":"adguard-for-safari/features/general/#一般設定タブ","content":" 最初のタブである「一般設定」画面においては、通知、更新頻度、システム起動時の AdGuard 起動など、基本的なことを設定できます。 メニューバーに AdGuard アイコンを表示するかどうかを設定することもできます。 There you can also turn on content blockers to block ads, trackers, annoyances, etc. "},{"title":"ユーザールール","type":0,"sectionRef":"#","url":"adguard-for-safari/features/rules/","content":"ユーザールール ユーザールールは、広告ブロックの効果をカスタマイズするために使用することができます。 ユーザールールは、手動で追加することも、インポートすることも、ページ上の要素をブロックしたときに自動的に作成することもできます。 To add your own filering rules, use a special syntax.","keywords":""},{"title":"フィルタ","type":0,"sectionRef":"#","url":"adguard-for-safari/features/filters/","content":"フィルタ フィルタとは、特別な構文で書かれたルールのリストです。 これらのルールに従って、コンテンツブロッカーはウェブトラフィックをフィルタリングし、広告や悪質なウェブサイトへのリクエストをブロックすることができるようになります。 Filters are combined into eight thematic categories: Ad Blocking, Privacy, Social widgets, Annoyances, Security, Language-specific filters, Custom, and Other filters. Read more about AdGuard filters or ad filtering in general. 「フィルタ」タブでは、カテゴリー全体または個別のフィルタを有効・無効にすることができます。 「フィルタ」タブでの変更は、（「一般設定」タブにある）「コンテンツブロッカー」セクションにも反映されます。","keywords":""},{"title":"フィルタリングが機能せず、広告がブロックされない","type":0,"sectionRef":"#","url":"adguard-for-safari/solving-problems/ads-not-blocked/","content":"","keywords":""},{"title":"対処法​","type":1,"pageTitle":"フィルタリングが機能せず、広告がブロックされない","url":"adguard-for-safari/solving-problems/ads-not-blocked/#対処法","content":"Safariを開きます。左上のメニューで「Safari」をクリックします。「環境設定…」→「拡張機能」をクリックします。Clear the checkboxes for AdGuard’s extensions: Custom, General, Other, Privacy, Security, Social, AdGuard for Safari, and AdGuard Assistant.Safari を再起動します。Safari→「環境設定...」→「拡張機能」に戻り、AdGuardのコンテンツブロッカー拡張機能６つを再度有効にします。AdGuard for Safari アプリを開きます。「フィルタ」タブに移動します。「更新を確認する」をクリックします。フィルタが更新されるまで、AdGuard for Safari のウィンドウを閉じないでください。 それでも広告がブロックされない場合は、support@adguard.com （日本語対応）までお問い合わせください。 特定のページやウェブサイトのみで問題がある場合は、ブラウザから直接報告できます。Safariの検索バーの横にある AdGuard for Safari アイコンをクリックし、サイト上問題報告の「問題を報告する」をクリックします。 "},{"title":"AdGuard for Safari のログを収集する方法","type":0,"sectionRef":"#","url":"adguard-for-safari/solving-problems/logs/","content":"","keywords":""},{"title":"ログを収集する方法​","type":1,"pageTitle":"AdGuard for Safari のログを収集する方法","url":"adguard-for-safari/solving-problems/logs/#ログを収集する方法","content":"AdGuard for Safari アプリを開きます。下にスクロールし、「ログをエクスポートする」をクリックします。.zipファイルを保存する場所を指定し、「保存」をクリックします。 Now you can send this file to support@adguard.com or attach it to your bug report on GitHub. AdGuard is committed to protecting your privacy. We strictly follow our Privacy Policy and do not collect any private information about users. Before sending your logs to the support team, please review the file as it may contain additional information that you don’t want to share. If it contains such personal information, we recommend that you delete it first. AdGuard for Safari の GitHub リポジトリを開き、New issue をクリックします。ログファイルを devteam@adguard.com に送信してください。 メールにバグの発生時刻とissueへのリンクまたはissue番号（番号はissueタイトルの横に#○○として表示されます）を記載してください。 もう一つの方法として、ログファイルをGoogle Driveにアップロードして、devteam@adguard.comにリンクを送りください。 GitHub のissueにもファイルへのリンクを追加してください。 "},{"title":"AdGuard for Safari を無効にしてもフィルタリングが停止しない時","type":0,"sectionRef":"#","url":"adguard-for-safari/solving-problems/filters-after-disable/","content":"","keywords":""},{"title":"対処法​","type":1,"pageTitle":"AdGuard for Safari を無効にしてもフィルタリングが停止しない時","url":"adguard-for-safari/solving-problems/filters-after-disable/#対処法","content":"Safariを開きます。左上のメニューで「Safari」をクリックします。「環境設定…」→「拡張機能」をクリックします。Clear the checkboxes for AdGuard’s extensions: Custom, General, Other, Privacy, Security, Social, AdGuard for Safari, and AdGuard Assistant.Safari を再起動します。Safari→「環境設定...」→「拡張機能」に戻り、AdGuardのコンテンツブロッカー拡張機能６つを再度有効にします。 これで、問題はなくなるはずです。つまり、AdGuard for Safari がオンな場合にはフィルタリング（広告ブロック）は有効になり、オフの場合はフィルタリングが無効になります。 "},{"title":"インストール方法","type":0,"sectionRef":"#","url":"adguard-for-safari/installation/","content":"","keywords":""},{"title":"AdGuard for Safari のインストール方法​","type":1,"pageTitle":"インストール方法","url":"adguard-for-safari/installation/#install","content":"「AdGuard for Safari」はApp Storeにある無料アプリです。 お使いのデバイスにインストールする方法以下の通りです。 Mac App Store を開き、AdGuard for Safari を検索します。 「入手」→「インストール」→「開く」を押します。 AdGuard for Safari を設定するには、Safariの設定でAdGuard拡張機能を有効にします。 note AdGuard for Safari が正しく機能するためには、全部の拡張機能が必要というわけではありません。 例えば、 アイコン 拡張機能のチェックボックスにチェックを入れると、Safari内の検索バーの横に AdGuard for Safari アイコンが表示されるようになります。 そかし、すべてのAdGuard拡張機能を有効にしておいたほうがお勧めです。 ::: ![チェック入り拡張機能](https://cdn.adtidy.org/content/Kb/ad_blocker/safari/adguard-for-safari-extensions-checked.png)  AdGuard をウェブサイトに対して有効にするには、コンテンツブロッカー設定がオンになっている必要があります。 すべてのウェブサイトに対して有効にするか、必要なウェブサイトを選択して有効にすることができます。 note このステップは、iOS 9.0以降、Safari 10を搭載したmacOS 10.11、およびmacOS 10.12以降で必要です。 ::: 【macOSの場合】Safari→右上の「Safari」メニューを開く→「環境設定…」→「Webサイト」→「コンテンツブロッカー」をクリックします。 すべての Web サイトに対して AdGuard for Safari を有効にするには、「これ以外のWebサイト訪問時」を「オン」にします。  【iOSの場合】設定アプリ →「Safari」→「コンテンツブロッカー」→「すべての Web サイト」のスイッチをオンにします。  ステップ1～4を完了すると、AdGuard for Safari が機能し始め、 さらなる設定を行うことができるようになります。 "},{"title":"AdGuard for Safari のアンインストール（削除）方法​","type":1,"pageTitle":"インストール方法","url":"adguard-for-safari/installation/#uninstall","content":"AdGuard for Safari をアンインストールする手順は以下の通りです: AdGuard for Safari アプリを終了します。 Safari の環境設定を開く（Safari→右上の「Safari」メニューを開く→「環境設定…」） 「拡張機能」タブを選択します。 拡張機能のリストが表示され、AdGuardには8つの拡張機能があります。 ８つのAdGuard拡張機能すべてのチェックボックスのチェックを外し、それぞれの「アンインストール」ボタンを押します。 この時点で通知が表示されます: 「Finderで表示」を押し、アプリをゴミ箱に移動します。 これで、AdGuard for Safari はお使いのデバイスから削除されます。 "},{"title":"AdGuard for Safari が macOS Sonoma のプライベートタブで機能しない問題","type":0,"sectionRef":"#","url":"adguard-for-safari/solving-problems/private-sonoma/","content":"","keywords":""},{"title":"対処法​","type":1,"pageTitle":"AdGuard for Safari が macOS Sonoma のプライベートタブで機能しない問題","url":"adguard-for-safari/solving-problems/private-sonoma/#対処法","content":"Safariを開きます。左上のメニューで「Safari」をクリックします。「環境設定…」→「拡張機能」をクリックします。すべてのAdGuard拡張機能の、「プライベートブラウジングで許可する」チェックボックスにチェックを入れます。 それでも広告がブロックされない場合は、support@adguard.com （日本語対応）までお問い合わせください。 特定のページやウェブサイトのみで問題がある場合は、ブラウザから直接報告できます。Safariの検索バーの横にある AdGuard for Safari アイコンをクリックし、サイト上問題報告の「問題を報告する」をクリックします。 "},{"title":"Browser Assistant","type":0,"sectionRef":"#","url":"adguard-for-windows/browser-assistant/","content":"","keywords":""},{"title":"Benefits​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#benefits","content":""},{"title":"Independence​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#independence","content":"AdGuard Browser Assistant is a browser extension, it is installed in a browser, so there is no need to wait for the userscript to be injected into the filtered web page, as it was with the preceding one. In other words, it is more autonomous from the main AdGuard app. Still, Browser Assistant needs the installed AdGuard for Windows, because there is no point in using the extension without the app. "},{"title":"Compatibility with the main app​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#compatibility-with-the-main-app","content":"If you got into the habit of using our previous AdGuard Ad Blocker extension, you might like the solution that we have developed for the new Browser Assistant. Background information: In previous versions of the AdGuard Browser Extension (before v3.5), if you had it installed along with the AdGuard for Windows app, the extension took over the functions of Assistant, stopped filtering itself and relied on the app to do this. The extension and the app worked in conjunction but sometimes the integration would fail. Some websites would stop being protected by the desktop program and be backed up only by the less powerful extension. When using the Browser Assistant, all these problems don’t matter as there can be no conflicts in essence. The role of the Browser Assistant is well-defined and it can’t hinder the functioning of the main app, so there is no need to worry. "},{"title":"Separate tab in Settings​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#separate-tab-in-settings","content":"The new Browser Assistant has its own tab in AdGuard for Windows settings, along with Stealth Mode, Browsing security, Parental Control and others. There you will find a link to download the extension for your default browser. Besides, there is a checkbox to enable the legacy Assistant.  "},{"title":"Legacy Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#legacy-assistant","content":"Legacy Assistant is the previous version of Assistant, which is a mere userscript, not a browser extension. Basically, there are two cases when you might want to pick it instead of the new Browser Assistant: The new Assistant is not available for your browser.You are used to the green shield icon and want to leave things as they were. "},{"title":"How to install AdGuard Browser Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#how-to-install-adguard-browser-assistant","content":"If you want to install the Browser Assistant for your default browser, you can do it directly from the app settings, but you also have an opportunity to install it for other browsers. AdGuard Browser Assistant is available for all popular browsers: Chrome, Firefox, Edge, Opera, and Yandex. To install the one you need (or many, it is not prohibited but even encouraged), go to our website, click the browser icon and tap the Install button. That’s it! "},{"title":"Documentation for admins","type":0,"sectionRef":"#","url":"adguard-for-windows/admins-documentation/","content":"","keywords":""},{"title":"1. Download the MSI​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#msi-download","content":"Download the AdGuard MSI x86 Download the AdGuard MSI x64 "},{"title":"2. Configure the settings for your network​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#settings-configuring","content":"On machines that are joined to an Active Directory domain, policy settings may also be stored in the registry under HKEY_LOCAL_MACHINE in the following path: Software\\Policies\\AdGuard\\. The only supported policy is LicenseKey. If this policy is set, AdGuard will prefer it over what user can enter in the interface. This license key will be used for checking license status. "},{"title":"3. Make sure that AdGuard servers are available​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#servers-available","content":"AdGuard connects to two hosts: api.adguard.org and filters.adtidy.org. Make sure that both servers are available. "},{"title":"4. Push the MSI out to your network​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#msi-push","content":"If you usually use SMS or other tools, use them to push out the AdGuard MSI just as you would normally do with any other installation bundle. Otherwise, you can run the MSI on the target machine directly (and silently) with this command: Msiexec /q /i AdGuard.msi If you need to roll out an update, use this command: Msiexec /q /i AdGuard.msi REINSTALL=ALL REINSTALLMODE=vomus note You must run these commands with admin privileges. If you want to install AdGuard on a Windows 7 computer, make sure that it has .NET 4 Client Profile installed: https://www.microsoft.com/en-us/download/details.aspx?id=24872 note If you have installed AdGuard for Windows from an MSI file, AdGuard will not be updated automatically. To allow manual updates: In versions released after v7.16, delete the ForbidCheckUpdates parameter or set its value to NO (case-insensitive) in the registry under HKEY_LOCAL_MACHINE\\SOFTWARE\\Adguard. In v7.16 and earlier versions, set to YES (case-insensitive) the AllowCheckUpdates parameter for the HKEY_LOCAL_MACHINE\\SOFTWARE\\Adguard key on x86 OS or HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Adguard key on x64 OS. Any other value or no value for this parameter will disable automatic updates. Please note that such installation of the application and manual updates are not recommended and can cause technical problems. "},{"title":"5. Test your installation​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#installation-test","content":"On a target machine, launch AdGuard. Open the license screen to check that it uses the one you've set. You might need to click &quot;Refresh status&quot; to make AdGuard validate the license key. "},{"title":"ルール数制限関連問題","type":0,"sectionRef":"#","url":"adguard-for-safari/solving-problems/rule-limit/","content":"","keywords":""},{"title":"Safari コンテンツブロッカールール数の制限​","type":1,"pageTitle":"ルール数制限関連問題","url":"adguard-for-safari/solving-problems/rule-limit/#safari-コンテンツブロッカールール数の制限","content":"AdGuard for Safari は、Content Blocking APIを使用して、Safariブラウザのページにフィルタリングルールを適用します。 現在、一つのコンテンツブロッカー拡張機能には、最大150,000ルールの使用が許可されています。 AdGuard for Safari には6つのコンテンツブロッカーがあります: AdGuard 一般AdGuard プライバシーAdGuard ソーシャルAdGuard セキュリティAdGuard その他AdGuard カスタム これで合計90万ものフィルタリングルールをできることになります。 ただし、一つの拡張機能には最大150,000のルールしか含めることができません。 この制限を超えると、ルールの一部が適用されなくなってしまい、 広告ブロックの不具合・不十分さにつながる可能性があります。 "},{"title":"ルールの上限を超えているかどうかを確認する方法​","type":1,"pageTitle":"ルール数制限関連問題","url":"adguard-for-safari/solving-problems/rule-limit/#ルールの上限を超えているかどうかを確認する方法","content":"AdGuard for Safari アプリを開きます。下にスクロールし、「コンテンツブロッカー」をクリックします。各コンテンツブロッカーの下には、有効なフィルタの数と有効なルールの数が表示されます。 いずれかのコンテンツブロッカーで150,000以上のルールが有効になっている場合、一部のフィルタまたはユーザールールを無効にする必要があります。 「フィルタ」タブに移動し、問題のあるフィルタカテゴリーを選択し、不要なフィルターやユーザールールを無効にしてください。 "},{"title":"拡張機能","type":0,"sectionRef":"#","url":"adguard-for-windows/features/extensions/","content":"","keywords":""},{"title":"Network​","type":1,"pageTitle":"拡張機能","url":"adguard-for-windows/features/extensions/#network","content":"The penultimate module is dedicated to network filtering, and here you will find additional network-related options. Two of them are enabled by default: Enable traffic filtering and Filter HTTPS protocol. These are important extra precautions to better filter your web space. Most websites are now using HTTPS, and the same applies to advertising. From many sites, like youtube.com, facebook.com and twitter.com, it is impossible to remove ads without HTTPS filtering. So keep the Filter HTTPS protocol feature enabled unless you have a strong reason not to.  In this module you can check the checkbox &quot;Use AdGuard as an HTTP proxy&quot; to use AdGuard as a regular HTTP proxy which will filter all traffic passing through it. You can also enable the Filter websites with EV certificates feature. Extended Validation (EV) SSL Certificates offer a stronger safety guarantee; owners of such websites have to pass a thorough and globally standardized identity verification process defined by EV guidelines. Which is the reason why some users trust websites with such certificates and prefer not to filter them. At last, there is a section with proxy settings. There you can specify which proxy server AdGuard should use to update filters, get new versions and so on. "},{"title":"AdGuard VPN​","type":1,"pageTitle":"拡張機能","url":"adguard-for-windows/features/extensions/#adguard-vpn","content":"The last section is dedicated to AdGuard VPN — an ideal tool that provides security and anonymity each time you browse the Internet. You can download it by clicking the Download button or go to the AdGuard VPN website by clicking the Homepage button. How does AdGuard VPN work? Without going into technical details, we can say that VPN creates a secure encrypted tunnel between the user's computer or mobile device and a remote VPN server. In this way, data confidentiality is preserved, as well as the anonymity of the user, because a third-party observer sees the IP address of the VPN server and not the actual user's IP. What AdGuard VPN does: hides your real whereabouts and helps you stay anonymouschanges your IP address to protect your data from trackingencrypts your traffic to make it unreadable to third partieslets you configure where to use VPN and where not to (exclusions feature) To get more information about AdGuard VPN dive into the AdGuard VPN Knowledge Base. "},{"title":"Home screen","type":0,"sectionRef":"#","url":"adguard-for-windows/features/home-screen/","content":"Home screen info この記事では、システムレベルでお使いのデバイスを保護する多機能広告ブロッカー、「AdGuard for Windows」について書いています。 To see how it works, download the AdGuard app AdGuard for Windows is an easy-to-use tool that blocks annoying banners, popups, video ads, and trackers. But that's not all: it helps you save traffic, load web pages faster, and protect your computer from undesirable and potentially malicious websites. AdGuard also protects you from phishing websites and keeps your kids away from inappropriate content. Once you start AdGuard for Windows, you will see the main screen of the app. Its most noticeable detail is the enable/disable protection button. Also, on this screen you can monitor blocked ads, trackers and threats statistics, find out the current version of the app or update it. Furthermore, there are four tabs in the upper right corner: Settings, Support, License, and About. Each of these is worth talking about separately.","keywords":""},{"title":"Other features","type":0,"sectionRef":"#","url":"adguard-for-windows/features/others/","content":"","keywords":""},{"title":"サポート​","type":1,"pageTitle":"Other features","url":"adguard-for-windows/features/others/#サポート","content":" By clicking the Support tab you will open a dialog box through which you can report a bug, submit a feature request, or simply share your opinion of the product. "},{"title":"ライセンス​","type":1,"pageTitle":"Other features","url":"adguard-for-windows/features/others/#ライセンス","content":" This tab contains information about your license. Here you can: find out the license type (nightly build, beta or release), the number of devices available for simultaneous connection to AdGuard, the license expiration date;click the button to go to the license purchase page, and activate, reset or recover a license. "},{"title":"AdGuardについて​","type":1,"pageTitle":"Other features","url":"adguard-for-windows/features/others/#adguardについて","content":" In addition to information about the current version of the program, this tab provides some useful links to Licese agreement, Privacy policy, Acknowledgements, Discussions, and Version history pages. "},{"title":"Check for updates​","type":1,"pageTitle":"Other features","url":"adguard-for-windows/features/others/#check-for-updates","content":" To check for filters and userscripts updates, click the rotating arrows icon in the upper right corner of the app's main screen. "},{"title":"Tray menu​","type":1,"pageTitle":"Other features","url":"adguard-for-windows/features/others/#tray-menu","content":"To save you time navigating around AdGuard menus, many of the frequently used options and settings are available from the tray menu. To call the menu, right-click the AdGuard icon in the tray. It will offer you the following options: enable protectiondisable protection: completely or for 30 secondsgo to Settingsopen the Tools and Advanced menuscheck for filter updatescheck for app updatesto recall the last pop-up messagereach the Support and About sectionsclose AdGuard, but continue filteringexit AdGuard "},{"title":"Settings","type":0,"sectionRef":"#","url":"adguard-for-windows/features/settings/","content":"","keywords":""},{"title":"General settings​","type":1,"pageTitle":"Settings","url":"adguard-for-windows/features/settings/#general-settings","content":"Here you can set the language and theme (Dark or Light), enable AdGuard launching at system start-up and silent automatic updates, choose the update channel and filter update check interval. Also Settings is the place to go if AdGuard for Windows is not working properly and the support team asked you to collect Debug logs.  At the very bottom of the screen you will find Advanced Settings. Changing some of them mindlessly may potentially cause problems with AdGuard's performance, break the Internet connection or compromise your security and privacy. That's why we suggest you open this section only if you are sure of what you are doing or our support team has asked you about it. If you want to know what can be set up in Advanced Setting read the dedicated article. "},{"title":"Ad Blocker​","type":1,"pageTitle":"Settings","url":"adguard-for-windows/features/settings/#ad-blocker","content":"This is the main module of AdGuard for Windows that removes ads from the websites you visit and from the apps installed on your device. To filter out advertising and privacy-threatening content such as banners, pop-ups, or trackers AdGuard uses different filters: groups of rules with a similar purpose written with a special syntax. To understand what filters are and how they work read this article.  In the Ad Blocker module you can: enable automatic activation of language-specific filters,disable search ads and self-promotion blocking,activate pre-installed filters such as AdGuard Base filter,install filters from the list or add a custom filter by clicking the Add a filter button,make changes to existing rule groups using the Filter editor button,see all the requests sent by browsers and apps installed on your computer by clicking the Filtering log button. From there you can also block or unblock any request by creating a custom rule,compose a filter from your own rules written manually, imported or created with the AdGuard Assistant extension. Before you start manually writing your own rules read our detailed syntax guide. "},{"title":"ステルスモード​","type":1,"pageTitle":"Settings","url":"adguard-for-windows/features/settings/#ステルスモード","content":"Many websites gather information about their visitors, such as their IP addresses, information about the browser and operating system installed, screen resolution, and even what page the user came or was redirected from. Some web pages use cookies to mark the browser and save your personal settings, user preferences, or &quot;recognize&quot; you upon your next visit. Stealth Mode safeguards your personal information from such data and statistics gathering systems.  You can flexibly adjust the work of Stealth Mode: for instance, you can prohibit the website to receive the search request you used to find it on the Internet, automatically delete both third-party and website’s own cookies, and disable location sharing in your browser that can be used to track your whereabouts. To learn everything about Stealth Mode and its many options, read this article. "},{"title":"ブラウジング・セキュリティ​","type":1,"pageTitle":"Settings","url":"adguard-for-windows/features/settings/#ブラウジングセキュリティ","content":"Browsing security gives strong protection against malicious and phishing websites. No, AdGuard for Windows is not an antivirus. It will neither stop the download of a virus when it's already started, nor delete the already existing ones. But it will warn you if you're about to proceed to a website whose domain has been added to our &quot;untrusted sites&quot; database, or to download a file from such website. You can find more information about how this module works in the dedicated article. In this module you can enable notifications to block requests to malicious and phishing sites,activate sound notifications,agree to submit anonymous security-related info to the AdGuard server to help us keep the malicious and phishing websites database up to date.  In case you want to learn more about Browsing security, read this article. "},{"title":"DNS Protection​","type":1,"pageTitle":"Settings","url":"adguard-for-windows/features/settings/#dns-protection","content":"There are three significant reasons why you might want to explore the DNS protection settings. First, to avoid being tracked by your ISP. Every time you open a website, for example google.com, your browser sends a request to a DNS server to get the IP address of the website in return. Usually, the DNS server belongs to your ISP, which allows them to track your online activity. Second, to encrypt you DNS traffic. And the third one is to block content on DNS level.  In the DNS protection module of AdGuard for Windows you can select the DNS servers from known DNS providers, including AdGuard DNS that blocks ads and trackers, AdGuard DNS Family Protection that in addition blocks adult content, or AdGuard DNS Non-filtering that provides a secure and reliable connection, but doesn't filter anything. You can even add custom DNS servers. Also there is an option to add custom rules using DNS rule syntax. And if necessary, you can add DNS filters of your choice. "},{"title":"Parental Control​","type":1,"pageTitle":"Settings","url":"adguard-for-windows/features/settings/#parental-control","content":"There are several websites to which access should be restricted from a PC used by children. This task is accomplished by Parental Control.  The module checks the contents of web pages opened in the browser and filters those with content undesirable for children: images and texts for adults, crude language, violence, drug propaganda, etc. Parental Control settings are password-protected so that the child is not able to go round the restrictions. This module not only blocks directions to undesirable sites but can also delete the links that are inappropriate for children from the search results. In the Parental Control module you can enable the Safe search and manage the blocklist and the allowlist to customize how this option works. You can also check the Block executable files download box to prevent your child from downloading and installing software on the computer. There are two more options in the Parental Control module: you can select a specific Windows user to be protected by Parental Control and set a password to protect AdGuard settings from change.  "},{"title":"Browser Assistant​","type":1,"pageTitle":"Settings","url":"adguard-for-windows/features/settings/#browser-assistant","content":" From this tab you can easily proceed to install AdGuard Browser Assistant, which primary function is to manage filtering directly from the browser. We explained more about how to work with it and what to do if there is no Browser Assistant for your browser in the separate article. "},{"title":"インストール/アンインストール","type":0,"sectionRef":"#","url":"adguard-for-windows/installation/","content":"","keywords":""},{"title":"動作環境​","type":1,"pageTitle":"インストール/アンインストール","url":"adguard-for-windows/installation/#動作環境","content":"オペレーティングシステム: Microsoft Windows 11、10、8.1、8、7、Vista RAM: 512MB以上 ディスクの空き容量: 150MB ブラウザ: Microsoft Edge、Microsoft Internet Explorer (全バージョン)、Opera、Google Chrome、Yandex.Browser、Mozilla Firefox、およびその他のブラウザ。 "},{"title":"AdGuard installation​","type":1,"pageTitle":"インストール/アンインストール","url":"adguard-for-windows/installation/#adguard-installation","content":"Microsoft Windowsを搭載したPCやタブレットでAdGuardを使用するには、インストールパッケージをダウンロードして、インストールプログラムを起動する必要があります。 以下の操作を行ってください: Go to the AdGuard website in the address bar and click Download on the opened page. When the download is finished, press the Open button shown in the Downloads bar or click the file name adguardInstaller.exe. You’ll see the User Account Control dialogue box requesting to allow the app to make changes to your PC. Click Yes. Next, choose the folder on your PC for the app to be installed to. If you do not agree with the default installation path, press Browse, select the folder for AdGuard installation in the Browse For Folder window, and confirm your choice by clicking OK. You can also install AdGuard to a new folder by clicking Make New Folder and entering its name. To create a desktop shortcut for AdGuard, check the Create a desktop shortcut box. Press Install to proceed with installation. Wait for the installation to complete and click Finish. Congratulations! You have successfully installed AdGuard on your computer. On the screen you will see the main window where you can change the app’s settings. "},{"title":"AdGuard for Windows をアンインストールする方法​","type":1,"pageTitle":"インストール/アンインストール","url":"adguard-for-windows/installation/#uninstall","content":""},{"title":"通常方法​","type":1,"pageTitle":"インストール/アンインストール","url":"adguard-for-windows/installation/#通常方法","content":"If you need to uninstall or reinstall AdGuard, do the following: 【Microsoft Windows 10・11 の場合】 「スタート」をクリックしてスタートメニューを開き、「設定」を選択します。 開いたウィンドウでアプリアイコンをクリックします。 アプリウィンドウの左側のリストから、「アプリと機能」を選択します。 「AdGuard」をリストから選択し、「アンインストール」をクリックします。 開いたダイアログボックスで「アンインストール」をクリックして確認します。  For Microsoft Windows 8: Right-click the empty space in the lower left corner of the task bar and select Control Panel. プログラムセクションでプログラムのアンインストールをクリックし、インストールされているアプリのリストからAdGuardを選択して、リストの真上にあるアンインストールボタンを押します。 開いたウィンドウで「AdGuardのアンインストール」をクリックして動作を確認します。  For Microsoft Windows 8.1: Right-click the Start button and select Control Panel. プログラムセクションでプログラムのアンインストールをクリックし、インストールされているアプリのリストからAdGuardを選択して、リストの真上にあるアンインストールボタンを押します。 開いたウィンドウで「AdGuardのアンインストール」をクリックして動作を確認します。 【Microsoft Windows 7の場合】 スタートメニューを開きます。 検索ボックスに「コントロールパネル」と入力します。 プログラムセクションでプログラムのアンインストールをクリックし、インストールされているアプリのリストからAdGuardを選択して、リストの真上にあるアンインストールボタンを押します。 開いたウィンドウで「AdGuardのアンインストール」をクリックして動作を確認します。  "},{"title":"アドバンスド方法​","type":1,"pageTitle":"インストール/アンインストール","url":"adguard-for-windows/installation/#advanced","content":"In case regular uninstall doesn't work for any reason, you can try to use an advanced method. First of all, you need to download the uninstaller tool created by our developers. Extract the archive to any folder on your PC and run the Adguard.UninstallUtility.exe file, and allow the app to make changes to your device. Then follow the instruction below: Select AdGuard Ad Blocker and Standard uninstall type, then click Uninstall.  Click OK once the warning window pops up:  Wait until uninstall is finished — there will be a phrase Uninstall complete and a prompt to restart your computer:  caution Follow the next steps only if performing the first two steps wasn’t enough for some reason. We strongly suggest contacting our support before using steps 3-4 of advanced uninstall instruction. Select AdGuard Ad Blocker and Extended uninstall type, then click Uninstall. Clcik Yes, continue in the window prompt.  Click OK once the warning window pops up:  Wait until uninstall is finished — there will be a phrase Uninstall complete and a prompt to restart your computer:  AdGuard is successfully uninstalled! "},{"title":"How to collect AdGuard logs","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/adguard-logs/","content":"","keywords":""},{"title":"Debug logs​","type":1,"pageTitle":"How to collect AdGuard logs","url":"adguard-for-windows/solving-problems/adguard-logs/#debug-logs","content":"Open the AdGuard settings. Go to the General Settings section, scroll down to the end of the screen and switch the Logging Level to Debug. Reproduce the issue. We strongly advise to take note of the exact time when you reproduced the issue: it will help our support team to find relevant log entries and solve the problem faster. Export the recorded logs using the Export Logs button. Save the archive to any folder. Important: after exporting the logs, set the logging level back to Standard. Debug logging level will slow down the application. Send the archive to the AdGuard support service at support@adguard.com, describe the problem and don't forget to mention the time when you reproduced the issue. "},{"title":"Trace logs​","type":1,"pageTitle":"How to collect AdGuard logs","url":"adguard-for-windows/solving-problems/adguard-logs/#trace-logs","content":"Sometimes support team members may ask you to send trace logs. Then you will need to do the following: Stop AdGuard by right-clicking the AdGuard icon in the tray menu and choosing Exit AdGuard: Please don't leave the service running: Open the console (type cmd in the start panel). Run the application with the command C:\\&quot;Program Files&quot;\\Adguard\\Adguard.exe /trace regardless of Windows bitness if you have installed AdGuard v7.16 for Windows or later. If you have an older version of AdGuard for Windows, run the application with the command C:\\&quot;Program Files (x86)&quot;\\Adguard\\Adguard.exe /trace if you are using 64-bit Windows, and C:\\&quot;Program Files&quot;\\Adguard\\Adguard.exe /trace if you are using 32-bit. Reproduce the issue. We strongly advise to take note of the exact time when you reproduced the issue: it will help our support team to find relevant log entries and solve the problem faster. Export the recorded logs using the Export Logs button. Don't worry if the log file is large. We need to know as much detail as possible to fix your problem. "},{"title":"Common installer errors","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/common-installer-errors/","content":"","keywords":""},{"title":"Error 5: Access Denied​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-5","content":"This error occurs when there's something wrong with permissions. There may be several different reasons why AdGuard installer doesn't have the permissions it requires to properly finish the installation process. You can try the following steps: Temporarily disable your antiviruses. Some of them may interfere with the installation, depending on the severity of their settings. Choose a different installation folder. It is possible that the current installation folder has some access restrictions. Also make sure you don't select an external drive, a virtual drive, etc. Reboot your computer. Sometimes the permission issues are temporary and can be solved by restarting the PC. "},{"title":"Error 112: Disk is full, Error 1632: Temporary folder full or inaccessible​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-112","content":"These are two different errors with very similar solutions. As their names suggest, AdGuard installer didn't find enough disk space to complete the installation. There are several things you can attempt to fix the problem: Uninstall some programs or delete unnecessary files from the drive you were trying to install AdGuard to. Download, install, and run AdwCleaner, a free piece of software by Malwarebytes. It will, among other things, clean your system from all kinds of extra &quot;leftover&quot; files that remain after incorrectly uninstall programs and such. It will help clean up some disk space. Reboot your computer. Sometimes temporary files can take up a considerable amount of disk space, and restarting your PC is the most reliable way to get rid of them. "},{"title":"Error 1601: Windows Installer is not accessible​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1601","content":"You could say this is a particular sub-case of Error 1603. The possible solutions are similar: Start and re-register Microsoft Installer service. It requires some work. 1) Press Win + R and enter services.msc. 2) Find in the list and double click Windows Installer. 3) Hit Start button under Service status and hit OK. If the service status is running, you should click Stop first and then hit Start. 4) Press Win + R, type and enter msiexec /unregister and hit Enter. 5) Press Win + R again, type and enter msiexec /regserver and hit Enter Reboot the PC and start the installation all over again. Sometimes that's enough to fix the problem. "},{"title":"Error 1602: Canceled by user​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1602","content":"If you got this error code, chances are you have interrupted the installation process manually in one way or another. What you can do is: Don't close the installer window. When the installation is complete, it will close automatically. If a dialogue window pops up during the installation, hit &quot;Yes&quot; to grant the installer the required permissions. Clicking &quot;No&quot; will cancel the installation. Don't start other processes while the installation process is going on. "},{"title":"Error 1603: Fatal error during installation​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1603","content":"The error sounds scarier than it actually is. In reality, this is a rather generic error that can have many different causes, and some of them are easily fixed. Try the following solutions: Press the Win key, search for Command Prompt and run it. There, type in sfc /scannow and press Enter. Choose a different installation folder. It is possible that the current installation folder has some access restrictions. Also make sure you don't select an external drive, a virtual drive, etc. Uninstall AdGuard using our special uninstall tool and then repeat the installation. Start and re-register Microsoft Installer service. It requires some work. 1) Press Win + R and enter services.msc. 2) Find in the list and double click Windows Installer. 3) Hit Start button under Service status and hit OK. If the service status is running, you should click Stop first and then hit Start. 4) Press Win + R, type and enter msiexec /unregister and hit Enter. 5) Press Win + R again, type and enter msiexec /regserver and hit Enter Acquire full permissions on the drive for installation. It is possible that the error 1603 occurs because you don’t have full permissions on the file location. It's also not as easy as some of the other solutions: 1) Open File Explorer, right-click the drive containing the installation location and select Properties. 2) Go to Security tab and click Edit. 3) Single-click SYSTEM and ensure that the Allow box of every item in Permissions for SYSTEM is checked (if it is checkable). Do the same check for Administrators. 4) Click OK to go back to Properties dialog. Then click Advanced. 5) Click Change Permissions. 6) On Permissions tab, double-click Administrators. 7) Select This folder, subfolders and files for Applies to field and check all the available Basic permissions. After that, hit OK. 8) Do the same operation above (from item 7) for SYSTEM. 9) Click OK all the way out. Try installing AdGuard again. "},{"title":"Error 1618: Another installation is already in progress​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1618","content":"This error occurs when there are several instances of AdGuard installer launched at the same time. What to do if you get this error: Reboot your PC and start the installer again. When you restart the computer, all ongoing processes will stop, including all copies of the installer. Don't make multiple clicks on the installer even if doesn't start right away. Sometimes it may take a few seconds to display the installer UI. "},{"title":"Error 1638: Another version of this product is already installed​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1638","content":"It's very likely that you've already installed AdGuard before. Check if AdGuard is already installed on your computer. You can do it by pressing the Win key and typing in AdGuard. Maybe there's some leftover files from a previous AdGuard installation. Uninstall AdGuard using our special uninstall tool and then repeat the installation. "},{"title":"Other errors​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#other","content":"If you've encountered an error that's not listed above, it is possible that we can solve it by ourselves. But in order to do that, we need log files from you. Please perform the following steps: Find and archive AdGuard installation logs as it is described in this article. Find and save to disk Event Viewer logs. This article explains how to do that. Please email all these files from two previous steps to the support team at support@adguard.com and describe the problem in the message body. Our tech support agents will reply to you as soon as possible. "},{"title":"Certificate-related issues","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/connection-not-trusted/","content":"","keywords":""},{"title":"Potential Security Risk error in Firefox-based browsers​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#potential-security-risk-error-in-firefox-based-browsers","content":" Old FireFox versions, as well as browsers based on them, do not trust certificates from the system storage, but only those from their local storage. Since v68, FireFox trusts the system certificates, but you still can face the &quot;Connection is untrusted&quot; error. If something like this happens, first try to click the Reinstall Certificate button — you will find it in the Network tab.  If that doesn't help, follow the instructions for manually adding the AdGuard certificate to the FireFox storage. This instruction is for Firefox browser. Names of buttons and menu items may differ in other Firefox-based browsers. Run AdGuard. Go to http://local.adguard.org/cert and click the Download button. The browser should start downloading cert.cer file. note You can also open the download page by clicking the link via the AdGuard app at Settings → Network → HTTPS filtering. ::: ![Certificate settings](https://cdn.adtidy.org/content/kb/ad_blocker/windows/solving-problems/link.jpeg)  Open your browser and then open Settings. Go to Privacy &amp; Security tab. Scroll down to Certificates and click the View Certificates button. Select Authorities tab. Click Import.... Browse the downloaded cert.cer file and click Open. Check the Trust this CA to identify websites box and then click OK. You've successfully installed AdGuard certificate. Restart the browser and the error should go away. "},{"title":"Yandex.Browser certificate warning​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#yandexbrowser-certificate-warning","content":"If you are a user of both AdGuard for Windows and Yandex.Browser you may have come across this warning:  "},{"title":"Why is this happening​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#why-is-this-happening","content":"Both AdGuard and Yandex take users' security on the Internet very seriously. Current Yandex policy is to warn their users about any certificate that is not recognized by the browser. This is not unsubstantiated, because sometimes malicious apps can inject their own certificates and use this to harm the system and steal private data. However, AdGuard also adds its certificate to the trusted ones. This leads to the warning message you have encountered. "},{"title":"How to solve the problem​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#how-to-solve-the-problem","content":"The easiest way is to click the Go to site button. This will tell Yandex.Browser to remember AdGuard certificate as a trusted one, at least for a while. Normally, you won't have to see this message anymore, but it is not beyond the realm of possibility for it to appear occasionally, for whatever reasons. In such cases, simply press the same button again (make sure it is AdGuard's certificate!). Disabling the HTTPS filtering in AdGuard will also prevent Yandex.Browser from showing this message again, but it comes with a big price: all ads that are loaded by HTTPS (including Yandex's own ads) will show up — on such websites as YouTube, Facebook, Instagram, and many more. We strongly advise against it if you want to keep the quality of ad blocking high. "},{"title":"Possible DNS leaks","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/dns-leaks/","content":"","keywords":""},{"title":"Bootstrap DNS address​","type":1,"pageTitle":"Possible DNS leaks","url":"adguard-for-windows/solving-problems/dns-leaks/#bootstrap-dns-address","content":"The DNS server addresses could be written as IPs or as domain names. In the case of IP addresses there are no difficulties: AdGuard forwards the DNS request directly to the server specified in the DNS protection module. However, encrypted DNS server addresses, like DoT or DoH, are most often written as domain names. In this case, to first resolve the encrypted DNS server address, AdGuard sends a DNS query to the bootstrap address, which is by default a system DNS server. This connection is what check services perceive as a leak. To eliminate this leak: go to the Advanced settingsscroll down to the List of custom bootstrap addresses sectionenter the custom bootstrap address in IP address format (you may use the list of known DNS providers)click Save "},{"title":"Fallback DNS server​","type":1,"pageTitle":"Possible DNS leaks","url":"adguard-for-windows/solving-problems/dns-leaks/#fallback-dns-server","content":"It could happen that AdGuard cannot reach the specified server because of a weak internet connection, an expiration of timeout set by default or some server related issues. In this case, it will connect to the fallback server, which is by default a system DNS server. This connection will also be considered by the check service as a leak. To eliminate this leak: go to the Advanced settingsscroll down to the Fallback servers sectioncheck the Use custom servers optionthen find the List of custom fallback servers section and enter custom fallback servers one per line or go to the Advanced settingsscroll down to the Fallback servers sectioncheck the Don’t use fallback servers option or go to the Advanced settingsscroll down to the DNS server timeout period sectionenter an arbitrary large number "},{"title":"How to collect AdGuard installation logs","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/installation-logs/","content":"How to collect AdGuard installation logs info この記事では、システムレベルでお使いのデバイスを保護する多機能広告ブロッカー、「AdGuard for Windows」について書いています。 To see how it works, download the AdGuard app If any problems occur during the installation of AdGuard, the support team might ask you to collect and send them AdGuard installation logs. In this case you need to: Select Run command in Start menu or press Win + R on the keyboard. Type in %tmp% and click OK. In the opened folder select all files starting with Adguard and add them to archive (using WinRAR or any other archiving software). Send this archive to AdGuard tech support at support@adguard.com.","keywords":""},{"title":"How to create a dump file","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/dump-file/","content":"How to create a dump file info この記事では、システムレベルでお使いのデバイスを保護する多機能広告ブロッカー、「AdGuard for Windows」について書いています。 To see how it works, download the AdGuard app To diagnose the reasons for potential problems that users might encounter while using AdGuard, the support team might need the process dump file. The dump file helps developers to see the processes that were executed in the application over a given period of time. Below you can check on the instructions of how to collect the dump file on your PC. Press Ctrl + Shift + Esc and click Task Manager In the upper menu bar select Details Right-click the process that you want to create the dump file for (for example, the support team may ask you to create a dump for Adguard.exe) In the drop-down menu click Create dump file The file was created successfully! After you’ve created the dump file, please navigate to the file location. You should be prompted to open the folder containing the dump file right after its creation. Otherwise, you will be able to find it inside the %tmp% folder. The created dump file (.DMP) has the same name as the name of the process you chose in the previous steps. The file is quite large, so please compress it into an archive before sending to support. note AdGuard for Windows has two running processes (Adguard.exe and AdguardSvc.exe). So you need to create the dump file separately for each process. When you send the dump files to the support team, please also attach the AdGuard application logs so we have a better chance at solving the problem. Here you can check the instructions on how to collect the log file.","keywords":""},{"title":"Known issues of AdGuard for Windows","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/known-issues/","content":"","keywords":""},{"title":"AdGuard for Windows and AdGuard VPN for Windows compatibility issues​","type":1,"pageTitle":"Known issues of AdGuard for Windows","url":"adguard-for-windows/solving-problems/known-issues/#adguard-for-windows-and-adguard-vpn-for-windows-compatibility-issues","content":"Once you install AdGuard for Windows and AdGuard VPN for Windows, they just start working together without any effort on your part. However, changing some of their default settings may cause the apps to work incorrectly when they run at the same time. There are two specific settings in AdGuard for Windows: Use redirect driver mode and Filter localhost. By default, the first is disabled, and the second is enabled. Changing any of these settings will inevitably disrupt AdGuard's filtering if both AdGuard Ad Blocker and AdGuard VPN are enabled on your device. Changing these settings is only necessary to resolve issues related to the simultaneous operation of AdGuard Ad Blocker and network-level apps such as antiviruses, VPNs, and network filters. If you come across a situation where you need to change the default state of the above settings and still want AdGuard Ad Blocker and AdGuard VPN to work simultaneously and correctly — create an issue on GitHub so we can help you personally. We are currently working on overcoming the above-listed limitations of the simultaneous work of our apps. "},{"title":"How to collect Windows system logs","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/system-logs/","content":"How to collect Windows system logs info この記事では、システムレベルでお使いのデバイスを保護する多機能広告ブロッカー、「AdGuard for Windows」について書いています。 To see how it works, download the AdGuard app To analyze and diagnose different problems that may potentially arise, the AdGuard support service might need Windows system log files. Windows event logs contain records about all errors that occurr with the installed software, including AdGuard. Below is the brief instruction describing the way to get the log files and to send them to our support service if necessary. Press Win + R In the window that appears type in eventvwr and click OK: Event Viewer window appears as shown in the picture. To save files that we need, do the following: Open Application: Event Viewer (Local) → Windows Logs → Application. Right-click Application and in the drop-down menu select Save All Events As... Select a name and where to save, click Save. Select Display information for the following languages. You need to check the checkbox next to English. Click OK. Open System: Event Viewer (Local) → Windows Logs → System. Right-click System and in the drop-down menu select Save All Events As... Choose a destination folder, enter the name, click Save. Select Display information for the following languages. You need to tick the box next to English. Click OK. Please send the two files that you've recently saved to support@adguard.com.","keywords":""},{"title":"二要素認証","type":0,"sectionRef":"#","url":"general/account/2fa/","content":"","keywords":""},{"title":"設定方法​","type":1,"pageTitle":"二要素認証","url":"general/account/2fa/#設定方法","content":"AdGuardアカウント にログインし、「設定」タブに移動します:  「パスワードと2FA（二要素認証）」セクションまでスクロールダウンし、「有効にする」をクリックします:  画面の手順をもとに認証アプリをインストールして、認証アプリでQRコードをスキャンします:  【重要】 二要素認証のバックアップコードをメモ・保存しておいてください。このコードは端末を紛失したり盗まれたりした場合にアカウントを復帰するために必要です。 設定が正しく完了していれば、次回アカウントにログインしたときにこのように、二要素認証の画面が表示されます:  モバイル認証アプリを使ってコードを読み取り、入力します。 これでログイン完了です。 ※認証エラーが発生した場合は、端末の時計を確認してください。 時計が同期していないことがエラーの原因である可能性があるため、必要に応じて調整してください。 "},{"title":"AdGuard アカウントでできること","type":0,"sectionRef":"#","url":"general/account/features/","content":"","keywords":""},{"title":"AdGuard アカウント設定の管理​","type":1,"pageTitle":"AdGuard アカウントでできること","url":"general/account/features/#adguard-アカウント設定の管理","content":"AdGuard アカウントの「設定」セクションで、パスワードの更新またはリセット、メールアドレスの変更、 二要素認証の有効化、AdGuard が保存するお客様のデータの表示、アカウントおよび通知の言語の選択を行うことができます。 また、このセクションでは、AdGuardからのメール配信設定を管理することもできます: トランザクションメール（購入完了通知、ライセンスの有効期限に関する通知など）の受け取りAdGuardの月刊ニュースレターの受け取りAdGuardのキャンペーンやスペシャルオファーに関するメールの受け取りメールを開封したことをAdGuardに知らせるか知らせないかを設定 "},{"title":"ライセンスを管理​","type":1,"pageTitle":"AdGuard アカウントでできること","url":"general/account/features/#ライセンスを管理","content":"「ライセンス」セクションでは、ライセンスとそれにバインド（紐付け）されているデバイスを管理できます。 AdGuardライセンスに対してできること: デバイスに紐付けする・紐付けを解除する更新・延長アップグレード解約 お支払い方法と情報を変更することもできます。 AdGuard 広告ブロッカーライセンスにバインド（紐付け）されているデバイスは、バインド（紐付け）を解除したり、デバイス名を変更したりできます。 いらないデバイスの横にある✖️アイコンをクリックすると、バインド（紐付け）を解除できます。 "},{"title":"ご購入履歴​","type":1,"pageTitle":"AdGuard アカウントでできること","url":"general/account/features/#ご購入履歴","content":"「ご購入履歴」セクションには、AdGuard アカウントの登録時メールアドレスを使用して購入したすべてのライセンスが表示されます。 また、購入日、オーダー番号、支払い方法、購入金額に関する情報も掲載されています。 "},{"title":"サポート・お問い合わせ​","type":1,"pageTitle":"AdGuard アカウントでできること","url":"general/account/features/#サポートお問い合わせ","content":"「サポート」タブには、AdGuard 製品に関する問題を解決したり、よくあるご質問への回答を見つけたりするのに役立つリンクが含まれています。 6つのセクションがあります：「よくあるご質問（FAQ）、バグ報告・機能リクエストを送る、不適切なブロックを報告、サポート・お問い合わせ、ナレッジベース、意見交換 "},{"title":"WFP driver","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/wfp-driver/","content":"WFP driver info この記事では、システムレベルでお使いのデバイスを保護する多機能広告ブロッカー、「AdGuard for Windows」について書いています。 To see how it works, download the AdGuard app To filter network traffic, AdGuard uses a network driver. There are two options: TDI driver and WFP driver. While WFP driver is generally preferrable and is enabled by default for all newer Windows OS versions (Windows 8 and newer), it can potentially cause compatibility problems, especially with some antiviruses. These problems and subsequent errors can be very different in each case. If you encounter a problem that you suspect might be caused by this, you can always switch to the older but more stable TDI network driver. To do so: Go to Settings → Network. Disable WFP driver as it’s done in this picture:","keywords":""},{"title":"Advanced (low-level) Settings guide","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"How to reach Advanced Settings​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#how-to-reach-advanced-settings","content":"To go to Advanced settings, in the main windows click Settings → General Settings and scroll down to Advanced Settings. Alternatively, select Advanced → Advanced settings... in the tray menu. "},{"title":"Advanced Settings​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#advanced-settings","content":"Once you open Advanced Settings, you will be presented with the following options: "},{"title":"Block TCP Fast Open​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#block-tcp-fast-open","content":"If enabled, AdGuard will block TCP Fast Open in the Edge browser. To apply settings, you need to restart the browser. "},{"title":"Use Encrypted ClientHello​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#use-encrypted-clienthello","content":"Every encrypted Internet connection has an unencrypted part. This is the very first packet which contains the name of the server you are connecting to. Encrypted Client Hello technology is supposed to solve this issue and encrypt that last bit of unencrypted information. To benefit from it, enable the Use Encrypted ClientHello option. It uses a local DNS proxy to look for the ECH configuration for the domain. If it is found, ClientHello packet will be encrypted. "},{"title":"Check websites' certificate transparency​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#check-websites-certificate-transparency","content":"Verifies the authenticity of all certificates for the domain based on Chrome Certificate Transparency Policy. If the certificate does not comply with the Chrome Certificate Transparency Policy, AdGuard will not filter the website. Chrome, in turn, will block it. "},{"title":"Enable SSL/TLS certificate revocation checks​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#enable-ssltls-certificate-revocation-checks","content":"Once enabled, this option runs asynchronous OCSP checks to check whether the website’s SSL/TLS certificate is revoked. If the OCSP check completes within the minimum timeout, AdGuard will immediately apply the result: block the connection if the certificate is revoked or establish a connection if the certificate is valid. If the verification takes too long, AdGuard will establish a connection and continue checking in the background. If the certificate is revoked, current and future connections to the domain will be blocked. "},{"title":"Show AdGuard VPN in Settings​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#show-adguard-vpn-in-settings","content":"Enabling this option allows you to display the AdGuard VPN tab in Settings for easy opening of the app and the product's website. "},{"title":"Exclude app from filtering by entering the full path​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#exclude-app-from-filtering-by-entering-the-full-path","content":"If you want AdGuard not to filter any specific application, specify the full path to them and the apps will be excluded from filtering. Separate different paths by semicolons. "},{"title":"Enable AdGuard pop-up notifications​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#enable-adguard-pop-up-notifications","content":"Enable this feature to see AdGuard pop-up notifications. They do not appear too often and contain only important information. You can also use the tray menu to recall the last pop-up notification. "},{"title":"Automatically intercept filter subscription URLs​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#automatically-intercept-filter-subscription-urls","content":"Enable this feature if you want AdGuard to automatically intercept filter subscription URLs (i.e. abp:subscribe and alike) and to open a custom filter installation dialog. "},{"title":"Filter HTTP/3​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#filter-http3","content":"If this option is enabled, AdGuard will filter requests sent over HTTP/3 in addition to other request types. "},{"title":"Use redirect driver mode​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#use-redirect-driver-mode","content":"If this option is enabled, AdGuard intercepts all the traffic and redirects it to the local proxy server for further filtering. Otherwise, AdGuard will filter all the traffic on the fly, without redirection. In this case, the system will consider AdGuard to be the sole application that connects to the Internet (other applications are routed through it). The downside is that it will make the system Firewall less effective. The upside is that this approach works a little bit faster. "},{"title":"Open main window at system start-up​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#open-main-window-at-system-start-up","content":"Enable this option to make the main AdGuard window open after the system is loaded. Note that it doesn't affect whether the actual filtering service is launched or not, this setting is located in Settings → General Settings "},{"title":"Enable filtering at system start-up​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#enable-filtering-at-system-start-up","content":"Starting from v7.12, by default, AdGuard's service does not filter traffic after OS startup if the option Launch AdGuard at system start-up is disabled. In other words, the AdGuard's service is started in “idle” mode. Enable this option to make AdGuard filter traffic even if the app is not launched. note Before v7.12, the AdGuard service started in filtering mode by default (even if the Launch AdGuard at system start-up was disabled). If you were satisfied with the old behavior, enable this option. "},{"title":"Filter localhost​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#filter-localhost","content":"If you want AdGuard to filter loopback connections, check the box. This option will always be on if you have AdGuard VPN installed, because otherwise it won't be able to work. "},{"title":"Exclude specified IP ranges from filtering​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#exclude-specified-ip-ranges-from-filtering","content":"If you don't want AdGuard to filter particular subnets, enable this feature and specify the IP ranges in the CIDR notation (e.g. 98.51.100.14/24) in the IP ranges excluded from filtering section below. "},{"title":"Enable HAR writing​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#enable-har-writing","content":"This option should be enabled only for debugging purposes. If you tick the checkmark, AdGuard will create a file that contains information about all filtered HTTP requests in HAR 1.2 format. This file can be analyzed with the Fiddler app. Note that it may slow down your web browsing significantly. "},{"title":"Add an extra space to the plain HTTP request​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#add-an-extra-space-to-the-plain-http-request","content":"Adds extra space between the HTTP method and the URL and removes space after the &quot;Host:&quot; field to avoid deep packet inspection. For instance, the request GET /foo/bar/ HTTP/1.1 Host: example.org will be converted to GET /foo/bar/ HTTP/1.1 Host: example.org This option is only applied when the Protect from DPI Stealth mode option is enabled. "},{"title":"Adjust size of fragmentation of initial TLS packet​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#adjust-size-of-fragmentation-of-initial-tls-packet","content":"Specifies the size of the TCP packet fragmentation, avoiding deep packet inspection. This option only affects secured (HTTPS) traffic. If this option is enabled, AdGuard splits the initial TLS packet (the ClientHello packet) into two parts: the first one has the specified length and the second one has the rest, up to the length of the whole initial TLS packet. Valid values: 1–1500. If invalid size is specified, the value selected by the system will be used. This option is only applied when the Protect from DPI Stealth mode option is enabled. "},{"title":"Plain HTTP request fragment size​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#plain-http-request-fragment-size","content":"Adjusts the size of the HTTP request fragmentation. This option only affects plain HTTP traffic. If this option is enabled, AdGuard splits the initial packet into two parts: the first one has the specified length and the second one has the rest, up to the length of the whole original packet. Valid values: 1–1500. If invalid size is specified, the value selected by the system will be used. This option is only applied when the Protect from DPI Stealth mode option is enabled. "},{"title":"Show QUIC​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#show-quic","content":"Allows displaying the QUIC protocol records in the filtering log. For blocked requests only. "},{"title":"Enable TCP keepalive​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#enable-tcp-keepalive","content":"Periodically sends TCP packets over idle connection to ensure it is alive and to renew NAT timeouts. This option can be useful to bypass the strict network address translation (NAT) settings that some ISPs use. "},{"title":"TCP keepalive interval​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#tcp-keepalive-interval","content":"Here you can specify an idle time period, in seconds, before sending a keepalive probe. If 0 is specified, the value selected by the system will be used. note This setting only works when the Enable TCP keepalive option is enabled. "},{"title":"TCP keepalive timeout​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#tcp-keepalive-timeout","content":"Here you can specify time in seconds before sending another keepalive probe to an unresponsive peer. If 0 is specified, the value selected by the system will be used. note This setting only works when the Enable TCP keepalive option is enabled. "},{"title":"Block Java​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#block-java","content":"Some websites and web services still support Java Plug-Ins. The API that serves as the basis for Java plug-ins has serious security vulnerabilities. You can disable such plug-ins for security purposes. Nevertheless, even if you decide to use Block Java option, JavaScript will still be enabled. "},{"title":"DNS server timeout period​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#dns-server-timeout-period","content":"Here you can specify the time in milliseconds that AdGuard will wait for the response from the selected DNS server before resorting to fallback. If you don’t fill in this field or enter an invalid value, the value of 5000 will be used. "},{"title":"Use HTTP/3 for DNS-over-HTTPS​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#use-http3-for-dns-over-https","content":"Enables HTTP/3 for DNS-over-HTTPS upstreams to accelerate connection if the selected upstream supports this protocol. This means that enabling this option does not guarantee that all DNS requests will be sent via HTTP/3. "},{"title":"Use fallback DNS upstreams​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#use-fallback-dns-upstreams","content":"Normal queries will be redirected to the fallback upstream if all DNS requests to the selected upstreams fail. "},{"title":"Query DNS upstreams in parallel​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#query-dns-upstreams-in-parallel","content":"All upstreams will be queried in parallel and the first response is returned. Since DNS queries are made in parallel, enabling this feature increases the Internet speed. "},{"title":"Always respond to failed DNS queries​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#always-respond-to-failed-dns-queries","content":"If address resolving failed on each of the forwarded upstreams, as well as on the fallback domains, then the response to the DNS request will be SERVFAIL. "},{"title":"Enable filtering of secure DNS requests​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#enable-filtering-of-secure-dns-requests","content":"AdGuard will redirect secure DNS requests to the local DNS proxy, in addition to plain DNS requests. "},{"title":"Blocking mode for hosts rules​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#blocking-mode-for-hosts-rules","content":"Here you can select the way AdGuard will respond to domains blocked by DNS rules based on hosts rule syntax. Reply with “Refused” errorReply with “NxDomain” errorReply with a custom IP address "},{"title":"Blocking mode for adblock-style rules​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#blocking-mode-for-adblock-style-rules","content":"Here you can select the way AdGuard will respond to domains blocked by DNS rules based on adblock-style syntax. Reply with “Refused” errorReply with “NxDomain” errorReply with a custom IP address "},{"title":"Custom IPv4 address​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#custom-ipv4-address","content":"If Custom IP address is selected in Blocking mode for hosts rules or Blocking mode for adblock-style rules, this IP address will be returned in response to blocked A requests. If none are specified, AdGuard will reply with the default Refused error. "},{"title":"Custom IPv6 address​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#custom-ipv6-address","content":"If Custom IP address is selected in Blocking mode for hosts rules or Blocking mode for adblock-style rules, this IP address will be returned in response to blocked AAAA requests. If none are specified, AdGuard will reply with the default &quot;Refused&quot; error. "},{"title":"Fallback servers​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#fallback-servers","content":"Here you can specify an alternate DNS server to which a DNS request will be rerouted if the main server fails to respond within the timeout period specified in the next section. There are three options to choose from: Don’t use fallback servers;Use system default servers;Use custom servers. "},{"title":"Block ECH​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#block-ech","content":"If enabled, AdGuard strips Encrypted Client Hello parameters from responses. "},{"title":"List of custom fallback servers​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#list-of-custom-fallback-servers","content":"If you want AdGuard to use custom fallback servers, list them in this section, one per line. "},{"title":"List of custom bootstrap addresses​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#list-of-custom-bootstrap-addresses","content":"A bootstrap is an intermediate DNS server used to get the IP address of the secure DNS server you chose earlier in DNS protection. Such a &quot;middle ground&quot; is needed when using protocols that denote the server address by letters (such as DNS-over-TLS, for example). In this case, the bootstrap acts as a translator, transforming the letters into numbers your system can understand. By default, the system DNS resolver is used, and the initial bootstrap request is made through port 53. If this does not suit you, list here the IP addresses of the DNS servers that will be used to determine the address of the encrypted DNS server in the top-to-bottom order. The specified IP addresses will be applied in the order listed. If you specify invalid addresses, or no addresses at all, the system IPs will be used. "},{"title":"DNS exclusions​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#dns-exclusions","content":"All DNS requests to domains listed here will be redirected to the system default DNS server instead of the DNS server specified in the app’s settings. Also, DNS blocking rules will not be applied to such requests. "},{"title":"Exclude specified Wi-Fi networks names (SSIDs) from the DNS filtering​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#exclude-specified-wi-fi-networks-names-ssids-from-the-dns-filtering","content":"DNS protection will not include Wi-Fi networks listed in this section. Specify Wi-Fi networks names (SSIDs) one per line. This can be useful if a particular Wi-Fi network is already protected by AdGuard Home or another DNS protection system. In this case, it is superfluous to filter DNS requests again. "},{"title":"AdGuard アカウントの登録方法","type":0,"sectionRef":"#","url":"general/account/register/","content":"","keywords":""},{"title":"AdGuard アカウントとは？​","type":1,"pageTitle":"AdGuard アカウントの登録方法","url":"general/account/register/#adguard-アカウントとは","content":"AdGuard アカウント （マイ・アカウント）は、お客様の AdGuard ライセンスおよびサブスクリプション、使用しているデバイス、購入履歴、言語、その他の設定に関する情報があるユーザーアカウントです。 多くの AdGuard 製品には、AdGuard アカウントを使ってログインすることで製品をアクティベートするオプションがあります（アカウントに有効なライセンスがある場合）。 "},{"title":"AdGuard アカウントを登録する方法​","type":1,"pageTitle":"AdGuard アカウントの登録方法","url":"general/account/register/#adguard-アカウントを登録する方法","content":"アカウントを登録するには、 AdGuard の公式ウェブサイト にアクセスし、画面右上の「マイ・アカウント」を押します。 メールアドレスを入力し、パスワードを作成すると、アカウント登録されます。 tip ライセンス購入時にメールアドレスを入力した場合、またはあなたのメールアドレスに紐付けられたライセンスをギフトとして受け取った場合、そのメールアドレスに対してアカウントが自動的に作成されます。 この場合、パスワードを設定するには、購入お知らせメールまたはギフトに関するメールからリンクをたどってください。 また、上記の方法で登録することもできます。 アカウントはAdGuardアプリから作成することもできます。 「ログイン」または「認証する」ボタン（製品によって「ライセンス」画面または個別画面にあります）、メールアドレスを入力し、パスワードを作成します。 アカウントが作成されましたら、認証確認メールに記載されているリンクを使ってメールアドレス認証を行ってください。 "},{"title":"SNSアカウント経由でAdGuardアカウントを登録する方法​","type":1,"pageTitle":"AdGuard アカウントの登録方法","url":"general/account/register/#snsアカウント経由でadguardアカウントを登録する方法","content":"ソーシャルネットワーク経由でアカウントを作成するには、 こちらリンクへ進み、お持ちのアカウントにログインするだけです。 登録が完了しましたら、メールの受信トレイをチェックしてください。 パスワードを設定して完了です。 これで、AdGuard アカウントのすべての機能を使用できます。 "},{"title":"AdGuard filters","type":0,"sectionRef":"#","url":"general/ad-filtering/adguard-filters/","content":"","keywords":""},{"title":"AdGuard filters​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#adguard-filters","content":"Base filter removes ads from websites with English content. Originally based on EasyList and modified by us. View rules Tracking Protection filter — comprehensive list of various online counters and web analytics tools. Use it to hide your actions online and avoid tracking. View rules URL Tracking filter enhances privacy by removing tracking parameters from URLs. When a user opts to block tracking parameters in Stealth Mode, this filter will be enabled automatically. View rules Social media filter removes numerous &quot;Like&quot; and &quot;Tweet&quot; buttons and other social media integrations on popular websites. View rules Annoyances filter blocks irritating elements on web pages. View rules. Includes the following AdGuard filters (all of them can be enabled separately from the Annoyances filter): Cookie Notices blocks cookie notices on web pages. View rulesPopups blocks all kinds of pop-ups that are not necessary for websites' operation. View rulesMobile App Banners blocks banners that promote mobile apps of websites. View rulesWidgets blocks third-party widgets: online assistants, live support chats, etc. View rulesOther Annoyances blocks elements that do not fall under the popular categories of annoyances. View rules Filter unblocking search ads and self-promotions unblocks ads that may be useful to users. Learn more about this filter on this page. View rules Russian filter removes ads from websites in Russian. View rules German filter removes ads from websites in German. Originally based on the EasyList Germany filter and subsequently modified by us according to the complaints from users. View rules French filter removes ads from websites in French. Originally based on the Liste FR filter and subsequently modified by us according to the complaints from users. View rules Japanese filter removes ads from websites in Japanese. Originally based on the Fanboy’s Japanese filter and subsequently modified by us according to the complaints from users. View rules Dutch filter removes ads from websites in Dutch. Originally based on the EasyList Dutch filter and subsequently modified by us according to the complaints from users. View rules Spanish/Portuguese filter removes ads from websites in Spanish and Portuguese. Originally based on the Fanboy’s Spanish/Portuguese filter and subsequently modified by us according to the complaints from users. View rules Turkish filter removes ads from websites in Turkish. Created by us according to the complaints from users. View rules Chinese filter removes ads from websites in Chinese. Originally based on the EasyList China filter and subsequently modified by us according to the complaints from users. View rules Ukrainian filter removes ads from websites in Ukrainian. Learn more about this filter on this page. View rules Experimental filter serves to test some new filtering rules that can potentially cause conflicts and mess with websites' work. In case these rules perform without any issues, they get added to main filters. View rules Mobile ads filter blocks ads on mobile devices. Contains all known mobile ad networks. View rules DNS filter — composed of several other filters (AdGuard Base filter, Social media filter, Spyware filter, Mobile ads filter, EasyList and EasyPrivacy) and simplified specifically to be better compatible with DNS-level ad blocking. This filter is used by AdGuard DNS servers to block ads and tracking. View rules "},{"title":"AdGuard Filters Policy​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#adguard-filters-policy","content":"Our filter policy defines what AdGuard filters should block and what they should not, as well as the rules for adding and removing rules from filters. Read the full text of AdGuard filter policy for detailed information. "},{"title":"Contributing to AdGuard filters​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#contributing-to-adguard-filters","content":"We are blessed with a unique community that not only loves AdGuard but also gives back. Many people volunteer in various ways to make AdGuard's user experience better for everybody. You are welcome to join the band and make a difference. We will do our part and happily reward the most active community. So, what can you do? "},{"title":"Report Issues​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#report-issues","content":"We rely on the community to let us know about issues with our filters. It helps us use our time more efficiently and keep filters constantly updated. To submit a report, please use this web reporting tool. "},{"title":"Suggest Filtering Rules​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#suggest-filtering-rules","content":"You will find many open issues in the GitHub filter repository. Each one refers to a problem with a website, such as a missed ad or a false positive. Pick an issue and suggest your own rules in the comments. AdGuard filter engineers will review your suggestions and, if approved, add your rules to AdGuard filters. Here is the official documentation on the syntax of AdGuard filtering rules. Please read it carefully: it will help you create your own filtering rules. "},{"title":"Other ways to contribute​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#other-ways-to-contribute","content":"Here is a dedicated page for people willing to contribute to AdGuard in other ways. "},{"title":"How ad blocking works","type":0,"sectionRef":"#","url":"general/ad-filtering/how-ad-blocking-works/","content":"","keywords":""},{"title":"General principle​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#general-principle","content":"Filter lists, also called filters, lie at the core of any ad blocker. Filters are literally lists of rules written in a special syntax. Ad blockers can understand this complex syntax. They interpret filtering rules and perform actions on web traffic based on what the rules tell them to do: block specific elements, alter web pages in certain ways, etc.  "},{"title":"Filter lists​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#filter-lists","content":"To better understand ad blocking, it's important to know the underlying principles of how filters work. Filtering rules that make up filters are not created automatically. They are developed by filter maintainers, including professionals and volunteers, who use browser developer consoles and other tools (such as the AdGuard's filtering log) to determine which rules will block a particular ad or tracker. This description of the process is very simplistic — some ads are particularly hard to block and require multiple rules, multiple iterations, and the use of complex syntax. And even when a rule finally gets added to a filter, it doesn't mean that it stays there forever. Ads change, ways to serve the same ads on the same websites change, and the filter rules have to change, too. Sometimes rules become obsolete, a new ad appears, or a new filtering rule is needed to block the same ad. Filters are often maintained by one person, but even for a team of maintainers, it's impossible to constantly monitor the entire web. That's why many ad blockers have tools to help users easily report any filter-related issues they encounter.  AdGuard users have access to a special web reporting tool. Thanks to user complaints, filter developers can focus on correcting their filter lists and not on scouring the Internet for new and old unblocked ads. Filters can do more than just block ads. There are filters that block tracking, social media widgets, and annoyances such as cookie notices. Different users may choose different combinations of filters to match their personal preferences. There are websites like filterlists.com that are dedicated to filter lists and have huge databases. We develop and maintain our own set of filter lists that can be used with AdGuard or other ad blockers. "},{"title":"Types of filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#types-of-filtering-rules","content":"There are many types of filtering rules that serve different purposes. Depending on the ad blocker you use, and especially on your OS, some types of rules may not be supported. "},{"title":"Basic filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#basic-filtering-rules","content":"To be displayed on a web page or in an app, the ad has to be loaded from a server first. To do so, the browser or the app needs to send a web request. The most basic way of preventing an ad from appearing on your screen is to block this request so it never reaches the server, and thus there's no reply. Basically, all AdGuard Ad Blocker products can block web requests according to the active filter rules. This method is very effective at stopping the ad, but it has some drawbacks. The most obvious one is: whatever place an ad was taking up will be left empty or occupied by an ad leftover. "},{"title":"Cosmetic filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#cosmetic-filtering-rules","content":"Every web page has a Document Object Model (DOM), an HTML document containing the structure and elements of this page. As ads are also page elements, they get recorded in the DOM. Ad blockers can remove parts of the DOM, while filtering rules help them understand which parts are ads and should be removed, and which parts should be left intact. This method allows you to avoid above-mentioned blank spaces and ad leftovers, as well as perform other more complicated tasks. "},{"title":"HTML filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#html-filtering-rules","content":"In most cases, it's enough to use the above-mentioned basic and cosmetic rules to filter ads. But when it is necessary to change the HTML code of the page itself before it is loaded, you need filtering rules for HTML content. These rules allow you to specify the HTML elements to be cut out before the browser even loads the page. These rules are quite complicated and require the ad blocker to be granted certain access rights, so not all platforms support them. Currently, these rules work only in the AdGuard Firefox add-on and in the AdGuard apps for Windows, Mac, and Android. info There are other types of filtering rules, but they require more advanced technical knowledge to understand how they work. If you are interested, check out our comprehensive guide on filtering rules in the linked article. "},{"title":"Search ads and self-promotion","type":0,"sectionRef":"#","url":"general/ad-filtering/search-ads/","content":"","keywords":""},{"title":"Search ads​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#search-ads","content":"Search ads are ads that you see among search query results when using online search engines, such as Google, Bing, DuckDuckGo, etc.  These ads are always contextual: they are targeted to match the keywords you used in the query. This helps you find exactly what you are searching for. Moreover, search ads (because they go through manual moderation) are often more relevant and helpful than the rest of the search results. Another argument in defense of search ads is that they are much less intrusive than many other ad formats. "},{"title":"What is websites' self-promotion?​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#what-is-websites-self-promotion","content":"In principle, when an ad on a website promotes this particular website or closely related websites, social media, and so on, such an ad is considered a self-promoting one.  Our general stance here is very similar to the EasyList policy regarding self-promotion ads. According to our filter policy, we should not block these ads; however, we should not make an exception if such an ad gets blocked by some rule 'alongside' a regular ad. Partly, this is due to ethical reasons, but mostly because such ads are rarely too intrusive and are often useful for the visitor of the website (who is supposedly interested in this website's content). By enabling 'Search ads and self-promotion', AdGuard users can unblock some of these self-promotion ads. "},{"title":"What ads are on the list?​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#what-ads-are-on-the-list","content":"When you enable 'Search ads and self-promotion', search ads from the following search engines are shown: GoogleYahooBingAskYandexDuckDuckGoStartPage As well as all self-promotional ads that satisfy our filter policy. "},{"title":"Summary​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#summary","content":"Allowing 'Search ads and self-promotion' is a 100% optional feature that may be helpful in some cases. If you don't like it, you can turn it off at any time. It does not, and never will, include any ad types or individual ads that do not fall into one of the two categories described above. "},{"title":"AdGuard フィルタポリシー","type":0,"sectionRef":"#","url":"general/ad-filtering/filter-policy/","content":"","keywords":""},{"title":"共通基準​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#共通基準","content":"これらの基準は、すべてのフィルタのルールに等しく適用されます。 特定のサイトに対するルールは、そのサイトへの十分なウェブトラフィック量がある場合にのみ追加される。 トラフィック量は、公開されている統計情報（入手可能な場合）またはソーシャルネットワークの購読者数などの間接的指標によって決定される。 サイトのトラフィック量は、月間10万アクセスに達すれば十分とみなされる。 人気のないサイトに対するルールを追加することも検討したりしますが、最終的な決定はフィルタ開発者たちが行います。 トラフィック量が少ないサイトでも、サードパーティのアナリティクスや広告ネットワークがあるかどうかをチェックされます。コンテンツファーム（主に検索結果で上位に表示され、広告収入を得ることを目的として大量のコンテンツを制作するウェブサイト）については、フィルタ開発者たちがコンテンツの質に応じて判断する。 フィルタリングルールの品質要件: ルールはウェブサイトのパフォーマンスに悪影響を与えないこと。ブロックを解除するルールは、不必要なものを解除しないように、できるだけ具体的にしなければならない。JavaScriptルールの使用はできるだけ控えめにし、それなしでは広告のブロックが不可能な場合にのみ使用する。 "},{"title":"広告ブロック用フィルタ​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#広告ブロック用フィルタ","content":""},{"title":"用語の定義​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#用語の定義","content":"広告ブロッカーは、ウェブページ上の広告やその他の要素をフィルタリング、非表示、またはブロックするように設計されたソフトウェアまたはハードウェアツールです。 広告ブロッカーは、ユーザーエクスペリエンスを向上させ、ページの読み込み時間を短縮し、インターネットトラフィック（データ通信）の消費を減らし、広告をブロックし、ウェブサイトの閲覧やアプリケーションの使用中のプライバシーを強化し、迷惑な要素をブロックするために作成されています。 フィルタ（またはフィルタリスト）は、コンテンツをフィルタリングし、広告ブロッカーを使用してさまざまな種類の広告やその他の種類のコンテンツをブロックするために設計されたフィルタリングルールのセットです。 これらのフィルタは通常、ウェブブラウザ、プログラム、DNSサーバーのレベルで動作します。 アンチアドブロック（広告ブロック対策）は、広告ブロックを検出し、追跡、広告の再投入、広告ブロッカーの無効化（いわゆる「アドブロックウォール」）を促すなど、さまざまな方法で広告ブロックに対策することを目的としたウェブサイトやアプリケーションによって使用される技術です。 アンチアドブロック（広告ブロック対策）にはさまざまな種類があります: 代替手段を提供せずにウェブサイトのコンテンツをブロックするアンチアドブロック：サイトの利用を続けるには、ユーザーはそのサイトに対して広告ブロッカーを無効にしなければならない広告ブロッカーの使用を継続するためにサブスクリプションを購入するなどの代替オプションを提供する「アンチアドブロックウォール」行動を義務付けないメッセージ通知：ユーザーは広告ブロッカーを無効にするよう求められるが、これらのメッセージは閉じることができ、ユーザーは制限なくサイトを使い続けることができる広告ブロッカーの使用に応じて代替広告を導入：広告ブロッカーが検出された場合、サイトは代替広告を導入するペイウォール：コンテンツの一部または全部をユーザーから隠蔽し、コンテンツにアクセスするためには、有料サブスクリプションの購入を促すメッセージを表示するコンテンツマネタイゼーション手法 "},{"title":"フィルタ​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#フィルタ","content":"AdGuardの広告ブロックフィルタには以下が含まれます: AdGuard ベースフィルタAdGuard モバイル広告フィルタ言語ごとに分けられた地域フィルタ：中国語、オランダ語、フランス語、ドイツ語、日本語、ロシア語、スペイン語/ポルトガル語、トルコ語、ウクライナ語。例「AdGuard 日本語フィルタ」 "},{"title":"これらのフィルタの目的​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#これらのフィルタの目的","content":"「AdGuard ベースフィルタ」は、英語のウェブサイトや、専用フィルタがないウェブサイトの広告をブロックするように設計されています。 言語に関係なくすべてのサイトに適用される一般的なフィルタリングルールも含まれています。「AdGuard モバイル広告フィルタ」はウェブサイトのモバイル版の広告とモバイルアプリ内の広告をブロックします。 言語によるセグメンテーション・差別化はありません。地域別フィルタ（言語特化フィルタ）は、 AdGuard ベースフィルタと同じポリシーに従いますが、特定の言語のウェブサイトに限定されます。 広告ブロックフィルタの目的は、インターネットから広告を読み込むことができるウェブサイト、アプリケーション、特定のデバイス上であらゆる種類の広告をブロックすることです。ブロックする広告の種類: 【バナー】ウェブページのさまざまな部分に画像として表示される広告【ティーザー】訪問者の興味をそそり（衝撃的な見出し、注意を引く画像）、バナーのクリックを促すようにデザインされたテキストまたはグラフィカルな広告（多くの場合アニメーション）、クリックベイト【テキスト広告】リンクを含むテキスト形式の広告【モーダル広告】モーダルウィンドウ（ウィンドウ内で指定された操作を完了またはキャンセルするまで、他のウィンドウを開くことができないウィンドウ）の形で現在のコンテンツの上に突然表示される広告【ポップアンダー（Popunders）】ページ上のどこかをクリックすると、現在のウィンドウの下に別ウィンドウで開く広告【リダイレクト広告】クリックしたユーザーを自動的に別のサイトにリダイレクトするメカニズム【サイトのコンテンツに偽装した広告】 サイトのコンテンツに見せかけた広告で、クリックすると宣伝商品や無関係なコンテンツが掲載されたページが開く【動画広告】ウェブサイトやアプリケーションの動画コンテンツ内または個別の広告要素に埋め込まれた広告動画【インタラクティブ広告】ユーザーがインタラクション・相互操作できる広告（ゲームやアンケートなど、完了・クリアすると広告アイテムが表示されるようなもの）【インタースティシャル広告】モバイルデバイス上で、アプリやウェブブラウザのインターフェイスを覆うフルスクリーン広告【広告の残骸】画面・ページで大きなスペースを占有していたり、背景の中で際立っていたり、訪問者の注意を引くような広告の残りもの（ほとんど判別できないものや目立たないものを除く）【アンチアドブロック広告】主要な広告がブロックされた場合にサイトで表示される代替広告Bait elements that are used by multiple known adblock detection scripts to detect an ad blocker presence for different goals including changing the way ads are shown, fingerprinting, etc.【サイトの自己宣伝広告】※一般的なフィルタリング・ルールでブロックされている場合のみ（ 制限と例外を参照）【アンチアドブロックスクリプト】サイトの利用を妨げるアンチアドブロックスクリプト ( 制限と例外を参照)【マルウェアによって注入された広告】マルウェアによって注入された広告で、そのローディング方法や再現手順に関する詳細情報が提供されている場合【マイニング】ユーザーの同意なしに仮想通貨をマイニング（採掘）するスクリプト "},{"title":"制限と例外​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#制限と例外","content":"サイト独自の広告（自己宣伝広告）を意図的にブロックすべきではない。 ただし、一般的なフィルタリングルールによってブロックされている場合は、ブロックを解除すべきではない。ペイウォールのようなコンテンツへのアクセス関連手段はブロックしない。アンチアドブロックウォールが以下のことをしている場合、アンチアドブロックウォールはブロックされる: 広告ブロッカーの無効化や削除を強引に要求したり、ウェブサイトの利用を事実上妨害したりしている広告ブロッカーの使用がもたらす可能性のあることについて、誤解を招くような説明をしている訪問者を不正広告の危険にさらしている（ブロックされない広告が疑わしいソースから来る場合） AdGuard は、以下の基準の少なくとも1つを満たす広告ブロッカー検出メッセージをブロックしません: ウェブサイトの利用を許可していて、コンテンツの大部分を被せていない広告ブロッカーを無効にする代わりに、ユーザーのプライバシーやセキュリティを危険にさらすことのない代替手段を提供しているユーザーがウェブサイトのコンテンツに進むことができるようにしているか、またはユーザーのプライバシーやセキュリティを危険にさらすことのない、実現可能な価値交換を提供しているレガシールールの中には、これらの基準の1つ以上を満たすメッセージもブロックし続けているものがあるかもしれません。 そのようなルールが特定された場合、そのようなルールは本ポリシーに沿って取り扱われます。 公開されており、悪意のある目的のみに使用されていないマイニングプールはブロックされない。 "},{"title":"追跡防止フィルタ​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#追跡防止フィルタ","content":""},{"title":"用語の定義​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#用語の定義-1","content":"トラッキング（個人情報追跡）とは、マーケティングを目的として、ウェブサイトやアプリケーションとユーザーのやり取りに関するデータを監視・収集するプロセス、およびウェブサイトやアプリケーションの動作を分析する目的で、その機能に関するテレメトリーを取得するプロセスです。 このプロセスには、訪問ページ、滞在時間、ウェブサイト要素とのインタラクション（クリック、タップ、フォーム送信など）、その他の指標の追跡が含まれます。 これにより、ウェブサイトやアプリケーションの所有者は、ユーザーの行動をよりよく理解し、機能を最適化し、マーケティング戦略を適応させることができます。 トラッキングは、パフォーマンス、使用パターンの監視、問題の特定にも使用され、ウェブサイトやアプリケーションの安定性と品質を向上させるために必要なデータを開発者に提供します。 取得されたデータから個人を特定できなくても、こうした行為はトラッキング・追跡とみなされます。 トラッカー（追跡ソフトウェア）とは、ウェブサイトやアプリケーションで使用され、その操作や訪問者の行動に関する情報を収集するように設計されたソフトウェアです。 ウェブサイトやアプリケーションとユーザーのインタラクションを追跡し、ページ表示、滞在時間、クリック、フォーム送信、その他のイベントに関するデータを記録します。 その目的は、ユーザーの行動を分析し、ユーザーエクスピリエンスを改善し、コンテンツや広告を最適化するためのツールを、ウェブサイトやアプリケーションの所有者に提供することです。 URLトラッキングパラメータは、アナリティクス・分析システムによってURLリンクに追加される、またはウェブページ上の一部のリンクに含まれるアドレスの追加部分です。 リクエストが行われると、このURLトラッキングパラメータは分析システムやウェブサイトのバックエンドで処理され、そこから情報を抽出することができます。 例えば、URLトラッキングパラメータは、クリックや広告キャンペーンに関する情報を送信することができます。 URLトラッキングパラメータは、詐欺防止やボット検知システムにも使用されることができます。 クッキー（Cookie）は、ウェブサイトがデバイスに送信し、デバイス上で保存するファイルです。 これらのファイルには、デバイス上でサイトを機能させるために必要な情報や、ウェブサイト上での訪問者の行動を追跡するために使用される一意の識別子、広告パラメータなど、分析目的で使用される様々な情報が含まれています。 "},{"title":"フィルタ​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#フィルタ-1","content":"AdGuardの追跡防止フィルタには以下が含まれます: AdGuard 追跡防止フィルタAdGuard URL追跡防止フィルタ "},{"title":"これらのフィルタの目的​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#これらのフィルタの目的-1","content":"「AdGuard 追跡防止フィルタ」は、ユーザーの個人情報・データを収集するトラッカーをブロックし、ユーザーのオンラインプライバシーを向上させるために設計されています。 ブロックするもの: 分析システムのスクリプトウェブサイトやアプリケーション独自の追跡スクリプトマスクされたCNAMEトラッカー追跡クッキートラッキングピクセルブラウザのトラッキングAPIDetection of the ad blocker for tracking purposesGoogle Chromeのプライバシーサンドボックス機能、およびトラッキングに使用されるプライバシーサンドボックスのフォーク（Google Topics API、Protected Audience API） 「AdGuard URL追跡防止フィルタ」は、ウェブアドレスからトラッキングパラメータを削除するように設計されています。 "},{"title":"制限と例外​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#制限と例外-1","content":"トラッキング防止フィルタは、ブロックすることでウェブサイトの正しい機能が妨げられる場合には、トラッカーをブロックすべきではありません: ボット対策や詐欺対策など、ブロックするサイトの利用を妨げる場合。 例えば、PerimeterXやhCaptchaをブロックすると、サイトがキャプチャで訪問者を確認しようとする際に問題が発生します。SentryやBugsnagのようなエラー追跡システムはブロックしません。 "},{"title":"迷惑要素フィルタ​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#迷惑要素フィルタ","content":"迷惑要素フィルタは、広告ではないもののうち、サイトのインタラクションやコンテンツ閲覧の妨げとなるページ上の要素（各種モーダルウィンドウやインタラクティブフォーム、クッキーの使用同意通知やリクエスト、モバイルアプリのバナー、各種ウィジェットなど）をブロックすることで、ウェブサイトのユーザビリティを向上させるように設計されています。 "},{"title":"用語の定義​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#用語の定義-2","content":"クッキー（Cookie）使用同意通知は、ウェブサイト上のクッキーの種類と使用について説明するフォームです。 クッキー（Cookie）の使用同意通知は、ユーザーがウェブサイトを訪問した際に表示され、ウェブサイトがクッキーまたはその他のトラッキング技術を使用して個人情報を収集・使用していることをユーザーに知らせるとともに、収集した情報を共有する理由と共有先を説明します。 CMP (Consent Management Platform)は、ウェブサイトがクッキー（Cookie）の使用規則を遵守するためのソフトウェアです。 CMPは、ユーザーの同意が得られるまでクッキーの使用を制限し、特定のクッキーの受け入れとプライバシー設定の管理をユーザーに提供します。 ウィジェットは、ウェブサイトの機能を拡張するユーザーインターフェース要素です。 ウェブウィジェットはウェブページに統合され、ボタン、フォーム、バナーなどのインタラクティブな要素を含むことができます。 ウィジェットを使って、他のページへの誘導なしで特定のサービスやコンテンツへのアクセスをユーザーに提供することが可能です。 ポップアップは、現在のウェブページの上に表示されるウィンドウです。 追加情報、広告、通知、またはデータ入力フォームを表示するためのものです。 ポップアップは通常、ページのメインコンテンツの視界を遮り、閉じるためにユーザーのアクションを必要とし、苛立たしいことがあります。 "},{"title":"フィルタ​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#フィルタ-2","content":"カスタマイズしやすいように、迷惑要素フィルタは目的別に分けられています: AdGuard クッキー通知フィルタAdGuard ポップアップフィルタAdGuard モバイルアプリバナーフィルタAdGuard ウィジェットフィルタAdGuard その他の迷惑要素フィルタ「AdGuard 迷惑要素フィルタ」は上記5つの目的別フィルタをすべて含む複合フィルタです。 "},{"title":"これらのフィルタの目的​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#これらのフィルタの目的-2","content":"AdGuard クッキー通知フィルタ​ このフィルタは、クッキー（Cookie）通知とクッキー管理プラットフォーム(CMP)からのリクエストの両方をブロックするように設計されています。 クッキー通知やCMPに対しては様々な手段が適用されることがあります。 ほとんどの場合、対応するスクリプトを非表示にするか、ブロックするだけで十分です。 ただし、サイトの機能および第三者のコンテンツの表示において、クッキーの同意が必要な場合は、以下の方法を適用します: 同意要求を回避するためにはScriptletsを使用（決定がなされるまでサードパーティコンテンツの読み込みが制限されているサイトでは、実質的に適用されない）ユーザーが選択したとスクリプトがみなすように、サイトのローカルストレージにクッキーまたはキーを設定指定されたボタンをクリックし、ロードの10秒後にその実行を中断するルールを使用して、ユーザーのアクションをシミュレート。 この場合、以下のの 2 つのオプションが可能です: 拒否する（機能的なクッキーを除く（CMPシステムにもよる））　追加の分析ツールをロードするリスクが少ないため、好ましいオプションです。許可する　このオプションは、他の方法が失敗した場合の最後の手段として使用されます。 この場合、サイトが分析ツールを使用しているかどうかが追加でチェックされ、AdGuard 追跡防止フィルタによってブロックされます。 制限と例外 ルールを追加するかどうかの決定は、フィルタ開発者たちが独自に行う場合があります。ほとんどの場合、行動をシミュレートする際の選択がサイトの機能に影響を与える時にそういった対応になります（たとえば、履歴が機能しなかったり、ユーザー設定がそのようなサイトに保存されなかったりするケース）。 AdGuard ポップアップフィルタ​ 通常のサイト利用には必要ないウェブページ上のさまざまなポップアップをブロックするフィルタです。ポップアップは以下のものを含めるが、これらに限定されない: プッシュ通知受信許可の要求ニュース、プロモーション、キャンペーン、各種イベント（と、それらを受信するためのサードパーティチャンネル（Googleニュース、Telegramなど）を含む）を購読するためのポップアップやフォーム広告ブロッカーの無効化を促し、ユーザーのプライバシーを侵害するポップアップ（フィルタ開発者の判断による）その他の、ユーザーを困らせるポップアップ（フィルタ開発者の判断による） 制限と例外 プッシュ通知は、実用的な目的で使用されないサイトでのみブロックします。 例えば、電子メールのウェブクライアントや業務で使用するツールでは、このような通知はブロックしません。上記のカテゴリーに該当しないポップアップでも、ユーザーエクスピリエンスを妨げるものはブロックされることがあります。 （例えば、サイト上の登録プロンプトや、サイトの機能を紹介するポップアップなど）。 フィルタ開発者によって決定されます。コンテンツへのアクセスのためにユーザーに支払いを求めるコンテンツアクセス手段を回避してはならない。 AdGuard モバイルアプリバナーフィルタ​ モバイルアプリのインストールを促すバナーやポップアップをブロックするフィルタです。 制限と例外 ウェブサイトのヘッダーやメニューにあるバナーは、アニメーションでなく、使用可能なスペースの大部分を占めない場合はブロックされません。 フッターにバナーを設置する場合は、フィルター開発者がケースバイケースでブロックするかどうかを決定します。 通常、フッターのバナーは他の要素に対して目立たず、邪魔にならないことが多いです。 AdGuard ウィジェットフィルタ​ ウェブサイトの機能やウェブサイトとのインタラクションに不可欠でない様々なウィジェットをブロックするフィルタです: コンテンツ推奨用ウィジェット　関連記事、類似サイト、様々なパーソナライズされたおすすめ項目コンテンツと統合されておらず、ページのメインコンテンツでもないチャットウィジェットマーケティング系ウィジェット: アシスタントやボットとのコミュニケーション用チャットユーザーに表示されるおすすめ商品ウィジェット電話折り返し・お問い合わせ要求フォーム 独立したカテゴリに該当しないが、視覚的にページを乱雑にする可能性があるその他のウィジェット （例えば、天気ウィジェット、為替レート、求人情報、寄付など） 制限と例外 このフィルタは以下をブロックしません: コメント欄やライブチャットストリームなど、ページのコンテンツに密接に関連するウィジェット。ただし、非公式なストリームを持つサイトのモデレートされていないチャットは例外です（スパムや類似のコンテンツで埋め尽くされていることが多いため）。自己宣伝やサイト固有の宣伝活動のためのウィジェット寄付ウィジェット（ページの大部分を占め、コンテンツに対して目立つ場合を除く）。 ブロックするかどうかはフィルタ開発者によって決定されます。 AdGuard その他の迷惑要素フィルタ​ このフィルタは、他のフィルタに含まれない厄介な要素をブロックし、さまざまな微調整を適用するように設計されています。 その目的は以下の通りです: 迷惑な要素と見なされる場合、ウェブサイトの自己宣伝（第三者から商業的対価を受け取ることなく、サイト所有者自身が所有する商品やサービスを宣伝するあらゆるタイプの広告）をブロックする他のカテゴリーに含まれない迷惑な要素をブロックするコンテキストメニューを開く、テキストを選択する、コピーするといったページ上のアクションがブロックされている場合、ブロックを解除するウェブサイトからファイルを読み込む際のカウントダウン・タイマーを高速化する（チェックがサーバーによって制御されていない、または支障がない場合）フィルタ開発者にとって便利な様々なルールを適用する （例えば、ウェブデバッガー検出のブロック） 制限と例外 このフィルタには、ユーザーのすべてには適していないルールが含まれている可能性があります。 このフィルタを無効にすることがおすすめの場合もあります。 このフィルタにルールを追加するかどうかは、フィルター開発者がルールごとに決定します。 "},{"title":"SNS系フィルタ​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#sns系フィルタ","content":""},{"title":"フィルタ​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#フィルタ-3","content":"AdGuardのSNS用フィルタには以下が含まれます: AdGuard SNS用フィルタ "},{"title":"これらのフィルタの目的​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#これらのフィルタの目的-3","content":"このフィルタは、サードパーティのウェブサイト上のSNSウィジェット、例えば「いいね」や「シェア」ボタン、グループウィジェット、おすすめアイテム、類似のウィジェットをブロックします。 "},{"title":"制限と例外​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#制限と例外-2","content":"コメント、埋め込み投稿、投票、ソーシャルメディアログインウィジェットなど、ウェブサイトの機能やコンテンツの一部であるウィジェットはブロックされません。 ウェブサイトのSNS紹介ページへのリンクもブロックされません。 "},{"title":"その他のフィルタ​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#その他のフィルタ","content":"このグループには、広告をブロックするのに必須ではないフィルタが含まれます。 "},{"title":"用語の定義​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#用語の定義-3","content":"コンテキスト広告とは、インターネット広告の一種で、インターネットページのコンテンツ、選択されたオーディエンス、場所、時間、その他のコンテキストに基づいて広告が表示されます。 検索広告は、訪問者の検索クエリに基づいて広告が表示される、コンテキスト広告のサブクラスです。 ウェブサイトの自己宣伝とは、サイト所有者が所有する商品やサービスを宣伝するウェブサイトのバナーを指します。第三者から報酬を受け取って表示するものでははありません。 これらの広告の詳細については、検索広告に関する記事を参照してください。 "},{"title":"フィルタ​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#フィルタ-4","content":"検索広告・自己宣伝のブロック解除フィルタAdGuard DNSフィルタAdGuard 実験フィルタ "},{"title":"これらのフィルタの目的​","type":1,"pageTitle":"AdGuard フィルタポリシー","url":"general/ad-filtering/filter-policy/#これらのフィルタの目的-4","content":"検索広告・自己宣伝のブロック解除フィルタ​ このフィルタは以下のブロックを解除します: 検索エンジン（Google、Bing、Yandex、DuckDuckGoなど）の検索結果におけるコンテキスト広告ウェブサイトの自己宣伝 制限と例外 検索広告は、ユーザーの検索クエリにマッチする場合に限って、ブロックされません。 そうでなければ、広告はブロックされたままになります。自己宣伝はフィルターポリシに沿っているもののみブロック解除されます。 フィルタ開発者たちによってブロック解除の要求が拒否されることがあります。その他の広告はブロックされません。 AdGuard DNSフィルタ​ このフィルタは AdGuard DNS で使用されています。 広告ブロック用フィルタの代わりにはなりません。 制限と例外 上記の広告ブロック用フィルタと同じ。 AdGuard 実験フィルタ​ このフィルタは、ウェブサイトの機能を壊す可能性のあるルールのテストとデバッグを目的としています。 ルールは、特定のソリューションをテストする必要があるときに、フィルタ開発者によって追加されます。 このフィルタはデバッグ用に設計されているため、制限は最小限です。 制限と例外 ルールは、ウェブサイトの機能を意図的に壊すものであってはならない。ルールは、広告のブロックを解除したり、本フィルタポリシーに違反するものであってはならない。 "},{"title":"Tracking filter rules statistics","type":0,"sectionRef":"#","url":"general/ad-filtering/tracking-filter-statistics/","content":"","keywords":""},{"title":"Why do we need ad filters?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#why-do-we-need-ad-filters","content":"Let's start by defining what ad filters are. Thanks to these filters, AdGuard removes ads from websites. They are manually compiled based on your complaints about ads on websites. Ad filters are an essential element of AdGuard — their quality determines the overall quality of AdGuard ad blocking. However, there is a downside. Over the years, more and more ad filters have been appearing. And the more ad filters are there, the more memory AdGuard consumes, thus slowing down the rendering of web pages. At the same time, some of the filters start to expire, gradually becoming a dead weight that has no use, only consumes memory, and slows down the program. "},{"title":"Why do we need statistics?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#why-do-we-need-statistics","content":"We want to solve the problem of outdated filtering rules once and for all. But we need your help to do so. By gathering statistics on used filtering rules, we detect and remove the rules that are no longer used. As a result, it will help all those who use AdGuard. If your computer is powerful enough, it won’t really affect you. But the difference will be very noticeable for users of low-power netbooks or tablets. "},{"title":"What kind of statistics will be sent?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#what-kind-of-statistics-will-be-sent","content":"If you enable the Send statistics for ad filters usage option, the following information is sent periodically: Extension versionBrowser type (Chrome/Firefox/Opera/Yandex.Browser/Safari).List of enabled ad filters.The list that consists of the following elements: The domain name of the websiteThe number of recent page viewsThe list of filtering rules and Filter ID which were activated on this websiteThe domain name of blocked requests is sent for URL rules The list is created based on the website's visit statistics since the last time statistical data was sent. The collected statistics will be sent periodically to our server for analysis and filter optimization. It's important to note that all the statistics we get are averaged and anonymized. We don't use these statistics for any purpose other than optimizing the filters, and we do not sell this data to third parties. You can read about it in our Privacy policy. "},{"title":"What does tracking filter rules statistics fraught with?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#what-does-tracking-filter-rules-statistics-fraught-with","content":"For the vast majority of users, the change in computer speed will not be really noticeable. However, netbook and tablet users may notice a slight slowdown. Periodically, we will send the gathered statistics to the server. The size of the transmitted data is not very large and is comparable to the size of an average web page. "},{"title":"AdGuard のインストール方法","type":0,"sectionRef":"#","url":"general/how-to-install/","content":"AdGuard のインストール方法 インストールしたいAdGuardアプリ・ブラウザ拡張機能に応じて、以下のリンクから関連記事をご覧ください。 AdGuard for Android AdGuard for iOS AdGuard for Windows AdGuard for Mac AdGuard ブラウザ拡張機能 AdGuard for Safari AdGuard コンテンツブロッカー","keywords":""},{"title":"Phishing and malware protection","type":0,"sectionRef":"#","url":"general/browsing-security/","content":"","keywords":""},{"title":"How does AdGuard check websites?​​","type":1,"pageTitle":"Phishing and malware protection","url":"general/browsing-security/#how-does-adguard-check-websites","content":"Each time you visit a website, your local client exchanges information with our backend server in the form of hashes and hash prefixes. Based on this exchange, the local client determines whether or not the website is listed in the potentially dangerous websites database. There is a difference in the scope of this check for apps and extensions. "},{"title":"In apps​","type":1,"pageTitle":"Phishing and malware protection","url":"general/browsing-security/#in-apps","content":"AdGuard provides the best possible protection by inspecting both the pages and all objects loaded on them. AdGuard checks URLs and domain names using hash prefixes, not the full URLs, so our servers retain no information about the websites you visit and your personal information is completely safe. Our servers respond to the app’s query with a list of all possible addresses that match the hash prefix. When a potential threat is detected based on hash matches, access to that website is immediately blocked.  "},{"title":"In browser extensions​","type":1,"pageTitle":"Phishing and malware protection","url":"general/browsing-security/#in-browser-extensions","content":"Our browser extensions can only check domain names, not full URLs. They are also unable to check subqueries. This means that if there are potentially malicious elements on the page, they will be loaded even if the page itself is from a safe domain. The extension won’t be able to protect against them. It's also important to note that the check performed is asynchronous, i.e. it happens at the same time as the page is loaded, so it’s possible that malware could be loaded as well. "},{"title":"Setting up phishing and malware protection in AdGuard products​","type":1,"pageTitle":"Phishing and malware protection","url":"general/browsing-security/#setting-up-phishing-and-malware-protection-in-adguard-products","content":"For Windows: Activate the Browsing Security module in the Settings menu  For Mac: Enable the Security module in Preferences  For Android: Turn on Browsing Security in the Protection tab  For iOS: Although there’s no separate module, you can go to Safari protection → Filters → Security and enable the available filters. Additionally, enable DNS protection and select one of the AdGuard DNS servers  For Browser extensions: Enable Phishing and malware protection in the Settings tab. For enhanced protection, go to Filters → Security and activate available filters  For Private AdGuard DNS: Enable malware protection in Server settings under Security  "},{"title":"What we block​","type":1,"pageTitle":"Phishing and malware protection","url":"general/browsing-security/#what-we-block","content":"We maintain two primary filters: one that protects against phishing and fraudulent websites that attempt to steal user credentials, and another that blocks access to websites known to distribute malware, which could lead to data loss, information leaks, or damage to your device. These filters also protect you from websites with various scams and fraudulent schemes. For more detailed information, refer to this Wikipedia article. "},{"title":"Maintaining our filters​","type":1,"pageTitle":"Phishing and malware protection","url":"general/browsing-security/#maintaining-our-filters","content":"AdGuard maintains an extensive database of phishing and malware websites, and it’s updated regularly and automatically as new threats are discovered. We collect information from a variety of reliable, high-quality sources, both public and from other companies, and aggregate it into a common database of dangerous sites. We automatically analyze complaints about suspicious sites and spend a great deal of time keeping the database up-to-date, cleaning up false positives, and implementing mechanisms to prevent them in the future. "},{"title":"Want to help?​​","type":1,"pageTitle":"Phishing and malware protection","url":"general/browsing-security/#want-to-help","content":"Any help is welcome! If you encounter a phishing or malware website, please report it to support@adguard.com. "},{"title":"False-positive responses​​","type":1,"pageTitle":"Phishing and malware protection","url":"general/browsing-security/#false-positive-responses","content":"Occasionally, some non-malicious websites are added to AdGuard’s filters. We do our best to reduce the percentage of false positives, but they still occur. If you encounter this behavior from AdGuard, please report the false positive to our technical support at support@adguard.com. "},{"title":"If you are suspicious about a website​","type":1,"pageTitle":"Phishing and malware protection","url":"general/browsing-security/#if-you-are-suspicious-about-a-website","content":"If you suspect that a certain website might be dangerous, check it first by using our security check tool.  "},{"title":"Known issues","type":0,"sectionRef":"#","url":"general/https-filtering/known-issues/","content":"","keywords":""},{"title":"Known issues​","type":1,"pageTitle":"Known issues","url":"general/https-filtering/known-issues/#known-issues","content":"HTTPS filtering in AdGuard has its drawbacks. Almost all of them are scheduled to be eliminated in the next few AdGuard versions. All the issues known to us and the ETAs on their fixes are listed below. "},{"title":"Inspecting the original certificate​","type":1,"pageTitle":"Known issues","url":"general/https-filtering/known-issues/#inspecting-the-original-certificate","content":"The most important drawback of the HTTPS filtering mechanism is that it hides the real certificate of a website. You cannot simply check its original certificate because you can only see the one issued by AdGuard. This problem is solved in Browser Assistant. This browser extension helps you manage filtering directly from the browser and allows you to inspect the original certificate of any website. "},{"title":"Certificate Transparency​","type":1,"pageTitle":"Known issues","url":"general/https-filtering/known-issues/#certificate-transparency","content":"Thanks to modern cryptography, browsers can usually detect malicious websites that are provisioned with forged or fake SSL certificates. However, current cryptographic mechanisms aren’t so good at detecting malicious websites if they’re provisioned with mistakenly issued certificates or certificates that have been issued by a certificate authority (CA) that’s been compromised or gone rogue. Certificate Transparency aims to remedy these certificate-based threats by making the issuance and existence of SSL certificates open to scrutiny by domain owners, CAs, and domain users. AdGuard products which use CoreLibs starting with version 1.11 will implement a policy based on Chrome Certificate Transparency Policy. "},{"title":"Have remarks or suggestions?​","type":1,"pageTitle":"Known issues","url":"general/https-filtering/known-issues/#have-remarks-or-suggestions","content":"If you’d like to add something, report any errors, or ask a question, please contact us at: devteam@adguard.com. "},{"title":"What is HTTPS filtering","type":0,"sectionRef":"#","url":"general/https-filtering/what-is-https-filtering/","content":"","keywords":""},{"title":"What is HTTPS?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#what-is-https","content":"HTTPS (HyperText Transfer Protocol Secure) is an extension of the HTTP protocol that supports encryption to increase security. This protocol is used to securely transmit valuable information like personal data, credit card details, etc. Using HTTPS is highly advantageous because encrypted traffic is protected against eavesdropping by a third party, and we can only welcome this. HTTPS acceptance has been growing in recent years, mainly because it is encouraged by Google and also due to the emergence of a free certificate authority Let’s Encrypt. The diagram below describes the difference between plain HTTP protocol and secure HTTPS protocol.  "},{"title":"What is a security certificate?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#what-is-a-security-certificate","content":"Simply put, HTTPS means data encryption. But there’s still a problem: how can you be sure that you’ve established an encrypted connection with the right website? That’s where security certificates come into play. A certificate serves as proof that the website is really what it tells you it is. If a website doesn’t have such a certificate, or if the certificate contains incorrect information, the browser will not allow you to establish a secure connection. It is important that the certificate a website uses is issued by a certificate authority (CA) trusted by your browser. Such a CA guarantees that the SSL certificate is, indeed, issued to the website’s owner. "},{"title":"Why does AdGuard need to be able to filter HTTPS?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#why-does-adguard-need-to-be-able-to-filter-https","content":"Most websites are now using HTTPS, and the same applies to advertising. Here are a few popular websites where you can’t remove ads without HTTPS filtering: youtube.com, facebook.com, and twitter.com. "},{"title":"How does HTTPS filtering work?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#how-does-https-filtering-work","content":"If it were easy, HTTPS wouldn’t be that secure. When a browser attempts to connect to a server, AdGuard establishes two secure connections: one with the browser (or another app) and the other with the server. The browser must trust AdGuard and the connections it creates. For this purpose, AdGuard generates a special (and unique) root certificate and installs it into the system and, when it is required, into some browsers (e.g., Firefox). Thus, AdGuard can see what is happening inside the secure connection and do its job — block ads and trackers. For better understanding we depicted this process:  "},{"title":"Does my traffic remain encrypted and secure?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#does-my-traffic-remain-encrypted-and-secure","content":"Of course! Your connection with a remote server remains encrypted and secure. AdGuard, just like your browser, checks the server’s certificate before deciding whether to filter it or not. However, HTTPS filtering has its drawbacks. The most important one is that it hides from the browser the actual certificate of the website. Instead, the browser sees the certificate issued by AdGuard. Because of this, we have taken additional measures to improve connection security. "},{"title":"Financial websites and websites with sensitive personal data​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#financial-websites-and-websites-with-sensitive-personal-data","content":"By default, AdGuard doesn’t filter any information on websites of banks, payment systems, or websites with valuable personal data. We maintain a list of thousands of exclusions. If you believe some website should be added to this list, please let us know. "},{"title":"Extended Validation (EV) certificates​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#extended-validation-ev-certificates","content":"AdGuard allows you to disable filtering for all websites that use extended validation certificates. An EV certificate offers a higher level of security and provides more guarantees than a regular certificate, proving that the website is not fraudulent or fake. "},{"title":"Problems related to HTTPS filtering​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#problems-related-to-https-filtering","content":"A 2017 study shows that 5 to 10% of HTTPS connections are established by HTTPS-filtering applications. It is usually done by various kinds of antivirus software. The bad news is that 24 out of 26 tested antiviruses reduced, in various ways, the connection security level, while two-thirds created connections prone to hacking. The researchers came to a simple conclusion: the Internet security community should pay close attention to applications that filter secure connections. And the developers of such software must pay serious attention to the quality of filtering implementations. We would like to note that AdGuard was not tested in the above study. We ran estimates according to their set of tests, and at the time of testing, we could have received the maximum score — A*. However, this score is not perfect. During the study, the researchers identified some issues that were omitted in the final evaluation. Here at AdGuard, we fully agree with those conclusions. Moreover, we would like to be as open with users as possible and talk about the problems we are currently experiencing and the steps we are taking to improve the quality and security of the filtering mechanism. The list of these problems is sorted by priority. Most of the problems discovered in the above study are related to certificate validation mechanisms. This is what we want to focus on first. We are working on a separate certificate validation library. Moreover, we want to make it open source. A separate article lists all the known drawbacks of HTTPS filtering in AdGuard and our plans to fix them. HTTPS filtering issues on Android 7+​ Starting from Android 7, developers have to explicitly indicate that their apps trust user-installed certificates. Not everyone wants to, or bothers with it. What does it mean for AdGuard? AdGuard installs a user certificate to be able to filter HTTPS traffic. If an app doesn't trust this certificate, its HTTPS traffic will not be filtered. What to do? The first thing worth mentioning is that many apps (even modern ones) still trust user certificates. Nothing has changed in this regard. Almost all browsers also trust such certificates. There may be some exotic browsers that do not, but they are a rare exception to common practice. Finally, if your device is rooted, you can move the AdGuard certificate to the system storage. This way, you don't have to worry about any permissions a particular app may or may not have — HTTPS traffic will be filtered for modern apps just as well as for older ones. Please keep in mind that in this case, some additional security restrictions (e.g., HPKP or Expect-CT) apply to AdGuard. "},{"title":"How to manually check HTTPS quality?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#how-to-manually-check-https-quality","content":"There are several dedicated websites where you can check the quality of your HTTPS connection. These websites check if your browser (or, in our case, your browser plus AdGuard) is susceptible to common vulnerabilities. If you plan to use any program that filters HTTPS, not necessarily AdGuard (e.g., an antivirus), we advise that you check the connection quality on these websites. https://www.ssllabs.com/ssltest/viewMyClient.htmlhttps://www.howsmyssl.com/https://badssl.com/ "},{"title":"Local.adguard.org domain","type":0,"sectionRef":"#","url":"general/https-filtering/local-adguard-com-domain/","content":"","keywords":""},{"title":"Technical explanation​","type":1,"pageTitle":"Local.adguard.org domain","url":"general/https-filtering/local-adguard-com-domain/#technical-explanation","content":"But what's going on and why is it done? Please read the technical explanation below. AdGuard is a network-level content blocker so it cannot simply add custom JavaScript and CSS to webpages like what browser extensions do. However, doing this is crucial for quality content blocking.In order to do it AdGuard injects a &quot;content script&quot; that looks like this: &lt;script src=&quot;https://local.adguard.org/.../content-script.js&quot;&gt;. This &quot;content script&quot; takes care of cosmetic filtering, hides or removes ad content from the web pages.Connections to the IP address of the local.adguard.org domain are intercepted by AdGuard on the network level and processed locally. This is why that domain has a &quot;static&quot; IP address that does not change for years. Why do we need to use a real IP address for that? We cannot use 127.0.0.1 as the browsers won't accept it.Using some IP address from the private subnets is possible, but this solution has two downsides. First, there is a slight chance of intersecting with an existing intranet service and breaking access to it.Second, some DNS servers may consider this a DNS rebinding attack and refuse to respond to local.adguard.org. "},{"title":"Verification​","type":1,"pageTitle":"Local.adguard.org domain","url":"general/https-filtering/local-adguard-com-domain/#verification","content":"This is easy to verify. If you disable AdGuard, you'll see that it is simply impossible to establish connection to local.adguard.org since there is no server with that address. Just try opening it in your browser when AdGuard is disabled. "},{"title":"有効化する方法","type":0,"sectionRef":"#","url":"general/license/activation/","content":"","keywords":""},{"title":"AdGuard for Windows を有効にする方法​","type":1,"pageTitle":"有効化する方法","url":"general/license/activation/#adguard-for-windows-を有効にする方法","content":"ライセンス/試用期間の有効期限切れに関する通知画面で、「認証する」をクリックします。 または、メイン画面の右上にある「ライセンス」を選択し、「ライセンスを認証する」をクリックします。 ご希望の方法（アカウントもしくはライセンスキー）を使ってライセンスを認証します。 ライセンスがメール アドレスにバインド（紐付け）されている場合は、 「AdGuard アカウント」をクリックするか、そのメールアドレスに関連付けられているソーシャルアカウントを選択します。 または、ライセンスキーを入力して認証することもできます。 "},{"title":"AdGuard for Mac を有効にする方法​","type":1,"pageTitle":"有効化する方法","url":"general/license/activation/#adguard-for-mac-を有効にする方法","content":"ライセンス/試用期間の有効期限切れに関する通知画面で、「認証する」をクリックします。 または、AdGuard を開いて歯車⚙アイコンをクリックし、「ライセンス」をクリックします。 開いたウィンドウで、「ライセンスを認証する」をクリックします。 ご希望の方法（アカウントもしくはライセンスキー）を使ってライセンスを認証します。 ライセンスがメール アドレスにバインド（紐付け）されている場合は、 「AdGuard アカウント」をクリックするか、そのメールアドレスに関連付けられているソーシャルアカウントを選択します。 または、ライセンスキーを入力して認証することもできます。 "},{"title":"AdGuard for Android を有効にする方法​","type":1,"pageTitle":"有効化する方法","url":"general/license/activation/#adguard-for-android-を有効にする方法","content":"右下の歯車⚙アイコン（設定）をタップし、 「ライセンス」を選択します。 「ライセンスを認証する」をタップします。 ご希望の方法（アカウントもしくはライセンスキー）を使ってライセンスを認証します。 ライセンスがメール アドレスにバインド（紐付け）されている場合は、 「メールアドレスで続ける」をタップするか、そのメールアドレスに関連付けられているソーシャルアカウントを選択します。 または、ライセンスキーを入力して認証することもできます。 "},{"title":"AdGuard for iOS を有効にする方法​","type":1,"pageTitle":"有効化する方法","url":"general/license/activation/#adguard-for-ios-を有効にする方法","content":"右下の歯車⚙アイコン（設定）をタップし、 「ライセンス」を選択します。 画面右上の「ログイン」をタップします。 メールアドレスまたはソーシャルアカウントを使ってログインすることで、ライセンスを認証します。 "},{"title":"旧ライセンスに関するFAQ","type":0,"sectionRef":"#","url":"general/license/legacy/","content":"","keywords":""},{"title":"旧ライセンスについて​","type":1,"pageTitle":"旧ライセンスに関するFAQ","url":"general/license/legacy/#旧ライセンスについて","content":"当初、AdGuard製品のアクティベーションのために、以下の種類のライセンスが用意されていました: スタンダード　AdGuard for Windows/AdGuard for Mac で使えるライセンス モバイル　AdGuard for Android/AdGuard for iOS で使えるライセンス プレミアム　モバイル＋スタンダード（つまり、PC/Macでもモバイルでも使えるライセンス） スタンダードライセンスおよびモバイルライセンスは、1台〜9台版を購入することが可能でした。 スタンダートはPCのみ、モバイルはスマートフォン・タブレットのみで使用可能でした。 プレミアムライセンスは、2～18台のデバイスで使用することが可能でした。 購入時に選択したデバイス数（「2+2」、「3+3」など）に応じて、同数のパソコンとモバイルデバイスでAdGuardを同時に有効化することが可能でした。。 例えば、2+2のプレミアムライセンスをお持ちだった場合、2台のパソコンと2台のスマホ・タブレットにライセンスを使用することが可能だったということです。 あるいは、例えば9+9（合計18台）の場合、9台のパソコンと9台のスマホ・タブレットにライセンスを使用することが可能でした。 全タイプ (スタンダート、モバイル、プレミアム) において、1年ラと永久のオプションがありました。 2019年10月、AdGuardは新しいライセンス形態に切り替わりました。それ以降、ライセンスは引き続き1年版または永久版を購入できますが、台数によるタイプはパーソナル （デバイス3台版）またはファミリー（デバイス9台版）となっています。 もう一つの変更点は、新タイプのライセンスキーは、PC・モバイルに関係なく、どのデバイスでも、どのような組み合わせでも使用できるようになったことです。 例えば、パーソナルライセンスは、Windows/Android/Mac/iOS のうちのどの3台にも使用することができます（例：Windowsパソコン1台、スマホ1台、iPhone 1台）。 "},{"title":"旧ライセンスは現在どのような扱いか？​","type":1,"pageTitle":"旧ライセンスに関するFAQ","url":"general/license/legacy/#旧ライセンスは現在どのような扱いか","content":"スタンダードライセンスは自動的にユニバーサル化され、パソコンだけでなく、どのようなデバイスでも使用できるようになりました。 モバイルライセンスは、従来通り、プラットフォームが限定されています（スマホまたはタブレット端末でのみ使用可能）。 プレミアムライセンスも従来通り、プラットフォーム制限があります。 また、 プレミアムライセンスは、AdGuardアカウントではデバイスの総数で表示されるようになりましたが、今まで通り、デスクトップ◯台＋モバイル◯台のセットで有効にするしかできませんのでご注意ください。 例えば、1+1キーはこんな風に表示されます:  しかし、合計2台にもかかわらず、使用できる台数は、パソコン1台とモバイル端末1台となります。 すべての旧式ライセンスには、AdGuardアカウントに「(旧)」というバッジがついています。 また、更新時やアップグレード時には、自動的に新しいタイプに変換されます。 しかし、いくつかのニュアンスがあります。 では、どのライセンスを新しいタイプに変換できるのかとその方法について見てみましょう。 "},{"title":"旧キーを持っています。 更新・アップグレードする方法は？​","type":1,"pageTitle":"旧ライセンスに関するFAQ","url":"general/license/legacy/#旧キーを持っています-更新アップグレードする方法は","content":"更新用ページまたはAdGuardアカウントで確認することができます。  「ライセンス」タブで、キーごとにどのようなアクションが可能かを確認することができます。 以下、具体的な例を挙げて説明しております。 "},{"title":"1〜3台用ライセンス​","type":1,"pageTitle":"旧ライセンスに関するFAQ","url":"general/license/legacy/#13台用ライセンス","content":"1台、2台、3台用の1年ライセンスは、パーソナルまたはファミリーのいずれかに変更可能です。  保護したいデバイスの台数に応じてお選びください。 更新の代わりに永久版に切り替えることもできます。  永久版ライセンスは、技術的な制約によりファミリー（9台版）にのみ変換可能です。  "},{"title":"4台以上用ライセンス​","type":1,"pageTitle":"旧ライセンスに関するFAQ","url":"general/license/legacy/#4台以上用ライセンス","content":"この場合、1年版 キーは、ファミリーライセンスにのみ変換することができます。  4台以上用永久版ライセンスは、技術的な制約によりファミリー（9台版）にのみ変換可能です。  "},{"title":"9台以上用ライセンス​","type":1,"pageTitle":"旧ライセンスに関するFAQ","url":"general/license/legacy/#9台以上用ライセンス","content":"特別に入手されたプレミアムキー（5+5以上）および10台以上用カスタムキー。 これらはかなり特殊なケースですので、ライセンスを永久版にアップグレードしたい場合は、partners@adguard.com までご連絡ください。 お客様の特殊ライセンスの構成に応じて、特別なご提案をさせていただきます。 "},{"title":"購入・アップグレードする方法","type":0,"sectionRef":"#","url":"general/license/payment-options/","content":"","keywords":""},{"title":"ライセンスを購入する方法​","type":1,"pageTitle":"購入・アップグレードする方法","url":"general/license/payment-options/#purchase","content":"AdGuardライセンスは adguard.com にてご購入いただけます。 （Visa、Mastercard、Apple Pay、Google Pay、PayPal、Alipay、銀聯など、さまざまなお支払い方法をご利用いただけます。） 次の仮想通貨もご利用いただけます：Bitcoin, Ethereum, Litecoin, Tether iOS用「AdGuard Pro」は、App Storeで購入することができます。 また、AdGuard広告ブロッカーライセンスは、様々な販売代理店からも販売されています。 ※AdGuard製品が各アプリストアや販売代理店で入手可能かどうかは、お住まいの国によって異なります。 "},{"title":"ライセンスをアップグレードする方法​","type":1,"pageTitle":"購入・アップグレードする方法","url":"general/license/payment-options/#upgrade","content":"ライセンスをアップグレードすることで、以下のように AdGuard 製品をより活用できます: 利用可能端末台数を増やすには、 AdGuardパーソナルライセンス（3台用）をファミリーライセンス（9台用）にアップグレードします。また、サブスクリプションを期限なく使える永久版ライセンスにアップグレードすることも可能です。 お持ちのライセンスはAdGuardアカウントにてアップグレードいただけます。 そうするには、AdGuardアカウントで、「永久版にアップグレードする」または「利用可能端末台数を増やす」をクリックしてください。  "},{"title":"解約・返金する方法","type":0,"sectionRef":"#","url":"general/license/cancel-refund/","content":"","keywords":""},{"title":"サブスクリプションを解約・停止する方法​","type":1,"pageTitle":"解約・返金する方法","url":"general/license/cancel-refund/#サブスクリプションを解約停止する方法","content":"サブスクリプションは、AdGuardアカウントでキャンセルすることができます。 その方法以下の通りです: お使いのAdGuardアカウントにアクセスします。 メニューで「ライセンス」を押します。 解約したいサブスクリプションの下の「サブスクリプションを解約する」をクリックします。 ※解約されたサブスクリプションは、有効期限まで有効のままで、有効期間が終了するまでご利用いただけます。 note ※App Storeで購入したサブスクリプションは、App StoreのアカウントまたはiOS端末の設定で解約する必要があります。 "},{"title":"返金を受ける方法​","type":1,"pageTitle":"解約・返金する方法","url":"general/license/cancel-refund/#返金を受ける方法","content":"当社の販売条件に基づき、お客様が https://adguard.com で購入したAdGuardライセンスキーの全額返金を受けることができます。 返金をご希望の場合は、AdGuardサポートチーム（ support@adguard.com （日本語対応））まで、ご購入の際にご利用になられたお支払い方法を明記の上、返金ご希望であることをご連絡ください。 以下のような場合、返金をお断りすることがありますのでご了承ください: ライセンス購入日から61日間以上経過した場合ライセンスがAdGuard公式サイトではなく販売代理店から購入されたものである場合ライセンスが App Store から購入されたものである場合ライセンスキーのアップグレードまたは延長という一部返金をご希望の場合 "},{"title":"移行する方法","type":0,"sectionRef":"#","url":"general/license/transfer/","content":"","keywords":""},{"title":"ライセンスを他のデバイスに移行する方法​","type":1,"pageTitle":"移行する方法","url":"general/license/transfer/#transfer","content":"ライセンスキーは、限られた数のデバイスで有効化することができます。 ライセンスキーが最大数のデバイスで使われている場合、ライセンスキーを再度使用する前に、いずれかのデバイスをバインド（紐付け）解除する必要があります。 "},{"title":"デバイスのバインド（紐付け）を解除する方法​","type":1,"pageTitle":"移行する方法","url":"general/license/transfer/#デバイスのバインド紐付けを解除する方法","content":"【方法①】AdGuard アプリで「ライセンスをリセット」または「ログアウト」をクリックします。 【方法②】お使いのAdGuardアカウントでデバイスを削除します: お使いのAdGuardアカウント→「AdGuard 広告ブロッカー」 タブを押します。 紐付けを解除したいデバイスをクリックします。 「削除する」を押します。 必要な台数のデバイスを解除したら、新しいデバイスでAdGuardアカウントにログインすることができるようになります。 そうすると、ライセンスはその新しいデバイスにバインド（紐付け）されます。 "},{"title":"ライセンスを他のAdGuardアカウントに移行する方法​","type":1,"pageTitle":"移行する方法","url":"general/license/transfer/#transferaccount","content":"移行したいライセンスがあるAdGuardアカウントにアクセスします。 「ライセンス」タブを開きます。 移行したいライセンスの「アカウントから紐付け解除する」を押します。 「バインドを解除」を押します（※ライセンスキーを忘れないようメモなどしておいてください）。 ライセンスの移行先AdGuardアカウントにアクセスします。 「ライセンス」タブを開きます。 右上の「ライセンスを紐付けする」を押します。 このアカウントへ移行したいライセンスキーを入力する（ステップ４のもの） 万が一、移行元アカウントにアクセスできない場合は、AdGuardサポートチーム support@adguard.com （日本語対応）までご連絡ください。 "},{"title":"AdGuard ライセンスとは?","type":0,"sectionRef":"#","url":"general/license/what-is/","content":"","keywords":""},{"title":"AdGuard ライセンスの種類​","type":1,"pageTitle":"AdGuard ライセンスとは?","url":"general/license/what-is/#adguard-ライセンスの種類","content":"ご購入ページでは、以下のライセンスの種類があります: 1年サブスクリプション - これらのライセンスは毎年自動的に更新されますが、手動で延長することもできます。 パーソナル（デバイス3台用）ファミリー（デバイス9台用） 永久 - これらのライセンスには有効期限はなく、ずっとご利用いただけます。 パーソナル（デバイス3台用）ファミリー（デバイス9台用） また、他のソースから購入したり、無料で入手できるライセンスもあります: 試用ライセンスは、製品のフル機能を無料でお試しいただける期間限定の無料ライセンスです。 AdGuard for Windows - 14日間無料AdGuard for Mac - 14日間無料AdGuard for Android - 7日間無料 販売代理店ライセンス および付与ライセンスは、期間限定と非期間限定の両方があります。 有効期限のあるライセンスは、手動でのみ更新できます。 パーソナル（デバイス3台用）ファミリー（デバイス9台用） iOS用「AdGuard Pro」アプリのライセンス は、App Storeを通じて購入および管理され、同じApple IDを持つiOSおよびiPadOSデバイスでのみ使用できます。 tip デバイス台数制限を増大するには、ライセンスをアップグレードすることができます。 "},{"title":"AdGuard ライセンスの使用方法​","type":1,"pageTitle":"AdGuard ライセンスとは?","url":"general/license/what-is/#adguard-ライセンスの使用方法","content":"ライセンスをデバイスで使用するには、ライセンスに関連付けられているメールアドレスを使用して AdGuard アプリにログインします。 ライセンスがまだメールアドレスにバインド（紐付け）されていない場合は、AdGuardアカウントでバインドできます。 これを行うには、AdGuardアカウントで「ライセンス」画面を開き、「ライセンスを紐付けする」をクリックします。 または、AdGuard アプリにライセンスキーを直接入力するというライセンス使用方法もあります。 "},{"title":"ライセンスキー​","type":1,"pageTitle":"AdGuard ライセンスとは?","url":"general/license/what-is/#ライセンスキー","content":"ライセンスキーとは、AdGuard 広告ブロッカーのライセンスを表す一意の文字列です。 お客様がライセンスを購入する際に使用したメールアドレスに自動的に登録されるか、または販売代理店から AdGuard ライセンスを購入する際に提供されます。 ライセンスキーで以下のことが可能です: AdGuardアカウントがなくても、AdGuard製品内でライセンスを有効にすることができます。ライセンスをお持ちのAdGuardアカウントに紐付け・紐付け解除をすることができます。 ※ライセンスの紐付けを解除するときは、必ず最初にライセンスキーを保存・メモしてください。 ライセンスキーは、ライセンスの再紐付けや他アカウントへの移行の際に必要になります。 "},{"title":"ライセンスキーを復元する方法​","type":1,"pageTitle":"AdGuard ライセンスとは?","url":"general/license/what-is/#ライセンスキーを復元する方法","content":"ライセンスキーを覚えていない場合は、お持ちの AdGuard アカウントを確認してください。メールアドレスに紐付けされているライセンスがすべてそこに表示されます。 代理店から購入されたライセンスキーを紛失された場合は、support@adguard.com までご連絡ください。 その際、領収書・レシートなど、ご購入を証明できるものをご用意ください。 "},{"title":"アドウェアとウイルス","type":0,"sectionRef":"#","url":"guides/adware/","content":"","keywords":""},{"title":"無料のアンチウイルスツール​","type":1,"pageTitle":"アドウェアとウイルス","url":"guides/adware/#free-antivirus","content":"たくさんあり、好みのものを使用できます。 ウイルス対策ユーティリティによるチェックで何も見つからなかったが、コンピュータの挙動がまだ不審な場合は、開いたページに広告を表示するアドウェアがないかどうかテストしてみましょう。 "},{"title":"システムからアドウェアを削除する方法​","type":1,"pageTitle":"アドウェアとウイルス","url":"guides/adware/#adware","content":"インターネット上では、この問題の対処を目的としたアプリケーションをたくさん見つけることができますので、 好きなものを使用できます。 しかし、Malwarebytesの「AdwareCleaner（アドウェアクリーナー）」、AvastのAvast One（アバストワン）、またはAdawareを使用することを強くお勧めします。 これらのアドウェアスキャナーは非常に使いやすく、ご自身でも操作できます。 例としてAdwareCleaner（アドウェアクリーナー）を取り上げましょう。 アプリがダウンロードされ、正常にインストールされたら、以下の手順を実行します: アプリケーションを起動し、「Scan now（今すぐスキャン）」をクリックします。  スキャンが完了したら、疑わしいオブジェクトを「Quarantine（検疫）」に入れる必要があります。  アイテムが検疫に移されると、不要なものをシステムから取り除くことができます。 場合によっては、クリーニングを完了させるにはシステムを再起動する必要があります。  システムが再起動されると、クリーニングが完了します。 必要であれば、いつでも行われた処理の「Report（報告）」を読むことができます。  それでも解決しない場合は、以下の手順に従って、ブラウザのすべての拡張機能とその他の設定を一時的に無効にしてください。 設定や拡張機能を無効にしても解決しない場合は、ブラウザのショートカットを再作成してみてください。 このページでは、最もよく遭遇する広告拡張機能の削除方法について説明します。 "},{"title":"ブラウザの設定と拡張機能を無効にする方法​","type":1,"pageTitle":"アドウェアとウイルス","url":"guides/adware/#instructions","content":"以下は、最も一般的なブラウザの設定と拡張機能を無効にする方法を説明しております: Google Chromeの場合 Mozilla Firefoxの場合 Operaの場合 "},{"title":"ブラウザのショートカットを再作成する方法​","type":1,"pageTitle":"アドウェアとウイルス","url":"guides/adware/#shortcuts","content":"マルウェアやアドウェアプログラムは、非常に簡単な方法でそれらのホームページをインストールします。ブラウザのデスクトップショートカットやタスクバー、スタートメニューのアイテムを置き換えるのです。 この場合の最も簡単な解決策は、すべてのショートカットを手動で削除し、自分で作り直すことです。 "},{"title":"ステルスモード","type":0,"sectionRef":"#","url":"general/stealth-mode/","content":"","keywords":""},{"title":"一般​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#general","content":""},{"title":"Hide your search queries​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#searchqueries","content":"When you get directed to a website from Google, Yahoo, or any other search engine, this option hides the search query that you used to find that website. "},{"title":"Ask websites not to track you​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#donottrack","content":"Sends the Global Privacy Control and Do Not Track signals to the websites you visit. "},{"title":"Strip tracking parameters from URLs​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#strip-tracking-parameters-from-urls","content":"If you enable this option, AdGuard will strip tracking parameters like utm_* and fb_ref from pages’ URLs. "},{"title":"Tracking methods​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#tracking-methods","content":""},{"title":"Self-destruction of third-party cookies​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#3p-cookie","content":"Websites use cookies to store your information and preferences, such as the language you selected, your location, or the list of items in your shopping cart. When you return to a website, your browser sends back the cookies belonging to that website, which allows it to &quot;remember&quot; your data. Third-party cookies are those implemented by a website that is different from the one you are currently browsing. For example, cnn.com may have a Facebook &quot;Like&quot; widget on its homepage. This widget will implement a cookie that may be read later by Facebook. Some advertisers use such cookies to track what other sites you visit where their ads are placed. Set a time period (in minutes) at the end of which all third-party cookies will be destroyed. Set the timer to 0 to block them completely. caution This setting deletes all third-party cookies, including the information of your logins through social networks or other third-party services. You may have to periodically re-log in to some websites and face other cookie-related issues. To block only tracking cookies, use AdGuard Tracking Protection filter. "},{"title":"Self-destruction of first-party cookies​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#1p-cookie","content":"Set a time period (in minutes) at the end of which all cookies will be destroyed. Set the timer to 0 to block them completely. caution We do not recommend enabling this option as it may severely interfere with the work of certain websites. "},{"title":"Disable cache for third-party requests​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#3p-cache","content":"When a browser addresses a page, the server assigns an ETag to that page. This ETag is used by the browser to cache the page's contents. Upon subsequent requests, the browser sends the ETag to the corresponding server, thus letting the server learn the visitor’s identity. As long as the site's files are cached, the ETag is sent every time your browser addresses this site. If the site has embedded content from another server (such as an image or iframe), that server can track your activities without your knowledge. "},{"title":"Block third-party Authorization header​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#3p-auth","content":"&quot;Authorization&quot; header value is cached by the browser, and then is sent alongside every request to that domain. It means that it can be used for tracking purposes just like cookies. "},{"title":"Browser API​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#browser-api","content":""},{"title":"Block WebRTC​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#webrtc","content":"WebRTC (Web Real-Time Communication) is a technology that allows direct streaming of data between browsers and apps. It can let others know your true IP address, even if you use a proxy or VPN. Enabling this option can disrupt the work of certain browser applications, such as messengers, chats, cinemas, or games. "},{"title":"Block Push API​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#push","content":"The Push API enables servers to send messages to web applications regardless of the activity status of your browser. Thus, you may see notifications from various websites even if your browser is hidden in the tray or not launched. Enable this option to block the browser's Push API completely. "},{"title":"Block Location API​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#location","content":"Enabling this option will prevent the browser from sending GPS data that could be used to determine your location, modify your search results, or otherwise influence your web experience. "},{"title":"Block Flash​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#flash","content":"The Flash Player plugin has become increasingly vulnerable to such online threats as viruses and hackers; it may also significantly affect website loading time. Turning this setting on makes AdGuard block browsers' ability to detect components (such as plugins and ActiveXObject objects) that allow Flash to display content. This effectively means that browsers are unable to support Flash. "},{"title":"Block Java​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#java","content":"Some websites and web services still use the old technology to support Java plugins. The Java plugin API, which is the basis of Java plugins, has serious security flaws. For security purposes, you can disable such plugins. Nevertheless, even if you decide to use the &quot;Block Java&quot; option, JavaScript will still be enabled. "},{"title":"その他​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#miscellaneous","content":""},{"title":"Hide Referer from third parties​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#referer","content":"Referer is an HTTP header used in browser-to-server requests. It contains the URL of the request source. When you navigate from one page to another, Referer saves the URL of the initial page. The server that hosts the destination web page often has software that parses Referer and extracts various pieces of information from it. Enabling the Hide Referer from third-parties option hides the current website from third-party sites by altering the HTTP header. You can also set an arbitrary value for Referer by entering it into the Custom Referer field. To use default Referer, leave the field blank. Note that to be able to filter traffic, AdGuard applications 'intercept' browser-to-server requests. Requests to ad, tracking, and phishing servers may be altered before sending them to the server or blocked completely. Same goes for the Hide Referer from third parties option: AdGuard intercepts HTTP(S) requests, in particular to remove or change the Referer header if this option is enabled. However, it happens only after these requests “leave” the browser. This means that if you monitor Referer inside the browser (for example, with the help of Chrome's Developer Tools), you will see the original Referer because the request hasn't reached AdGuard yet. You can use software like Fiddler to make sure that Referer gets altered correctly. On the opposite, due to the nature of all browser extensions, AdGuard Browser Extension works 'inside' the browser. It will alter the Referer right then and there, so Developer Tools will show the desired Referer for your requests. "},{"title":"Hide your User-Agent​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#useragent","content":"When you visit a website, your browser sends its information to the server. It looks like a text line that is part of an HTTP request that begins with &quot;User-Agent:&quot;. It usually includes the name and version of the browser, the operating system, and language settings. We cut User-Agent from identifying information so that advertisers cannot obtain it. You can also set an arbitrary value for User-Agent by entering it into the Custom User-Agent field. To use default User-Agent, leave the field blank. "},{"title":"Hide your IP address​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#ip","content":"Stealth Mode cannot hide your IP address. However, we can conceal it so that websites you visit will think you are a proxy. Sometimes this helps, and websites ignore your true IP address. You can set an arbitrary IP address, which you would like others to perceive as yours, by simply entering it into the corresponding field. To use the default IP address, leave the field blank. "},{"title":"Remove X-Client-Data header from HTTP requests​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#xclientdata","content":"It forbids Google Chrome from sending its version and modification information with requests to Google domains (including Double Click and Google Analytics). "},{"title":"Protect from DPI​","type":1,"pageTitle":"ステルスモード","url":"general/stealth-mode/#dpi","content":"The Deep Packet Inspection is a system of deep analysis and filtering of traffic by packet content, as well as the accumulation of statistical data. Using this technology, ISPs have the ability to control the passing traffic and limit access to content for their clients. AdGuard can modify outgoing packet data so that the client does not fall under the DPI blocking criteria. This means that by enabling this option, users can get access to the content they want. Not all DPI systems can be bypassed at this time, but we are constantly working to improve this. The &quot;Protect from DPI&quot; feature is already implemented in AdGuard for Windows, AdGuard for Mac, and AdGuard for Android. "},{"title":"プッシュ通知をブロックする方法","type":0,"sectionRef":"#","url":"guides/block-push-notifications/","content":"","keywords":""},{"title":"Google Chrome の場合​","type":1,"pageTitle":"プッシュ通知をブロックする方法","url":"guides/block-push-notifications/#google-chrome-の場合","content":"ブラウザの右上にある3点アイコン（︙）をクリックし、「設定」を選択します。「プライバシーとセキュリティ」 → 「サイトの設定」 → 「通知」 に移動します。デフォルトの動作で、「サイトに通知の送信を許可しない」を選択します。 または、「動作のカスタマイズ」でサイト固有に通知を設定することもできます。 "},{"title":"Firefox の場合​","type":1,"pageTitle":"プッシュ通知をブロックする方法","url":"guides/block-push-notifications/#firefox-の場合","content":"ブラウザの右上にある三本線アイコン（☰）をクリックし、「設定」を選択します。左側のメニューから「プライバシーとセキュリティ」を選択します。権限セクションまで下にスクロールし、通知の横にある「設定」ボタンをクリックします。以前に承認したすべてのWebサイトの通知を停止するには、「すべてのWebサイトを削除」をクリックします。 あるいは、Webサイトごとの通知設定を管理することもできます。すべてのプッシュ通知リクエストを一度に停止するには、「通知の許可を求める新しいリクエストをブロックする」を選択することもできます。「変更を保存」をクリックします。 "},{"title":"Safari の場合​","type":1,"pageTitle":"プッシュ通知をブロックする方法","url":"guides/block-push-notifications/#safari-の場合","content":"メニューバーの「Safari」→「設定…」をクリックします。「Webサイト」タブを開きます。左側のサイドバーで「通知」を選択します。すべての通知リクエストをブロックするには、「通知の送信許可要求をWebサイトに許可」のチェックを外します。 または、ブロックしたいサイトごとに「拒否」を選択します。 "},{"title":"Microsoft Edge の場合​","type":1,"pageTitle":"プッシュ通知をブロックする方法","url":"guides/block-push-notifications/#microsoft-edge-の場合","content":"ブラウザの右上にある3点アイコン（︙）をクリックし、「設定」を選択します。左側のサイドバーで、「Cookie とサイトの許可」をクリックします。下にスクロールして、「サイトの権限」の下にある「通知」をクリックします。Microsoft Edge 内のすべてのブラウザー通知をブロックするには、[送信前に確認する] をオフに切り替えます。または、「ブロック」セクションに、ブロックしたいサイトごとにドメインを追加することもできます。 "},{"title":"AdGuard を使ってプッシュ通知をブロックする​","type":1,"pageTitle":"プッシュ通知をブロックする方法","url":"guides/block-push-notifications/#adguard-を使ってプッシュ通知をブロックする","content":"今後同様の広告を回避するには、AdGuard アプリから直接プッシュ通知をブロックすることもできます。 "},{"title":"Windows の場合​","type":1,"pageTitle":"プッシュ通知をブロックする方法","url":"guides/block-push-notifications/#windows-の場合","content":"AdGuard アプリを開いて、 「設定」 → 「ステルスモード」に移動します。「ブラウザAPI」セクションまでスクロールダウンします。「プッシュAPIをブロックする」を有効にします。 "},{"title":"Mac の場合​","type":1,"pageTitle":"プッシュ通知をブロックする方法","url":"guides/block-push-notifications/#mac-の場合","content":"AdGuard アプリを開いて、 「設定」に移動します。ステルスモードタブで、「ブラウザAPI」に進みます。「プッシュAPIをブロックする」を有効にします。 "},{"title":"Google ファミリーリンクでHTTPSフィルタリングを有効にする方法","type":0,"sectionRef":"#","url":"guides/family-link-certificate/","content":"Google ファミリーリンクでHTTPSフィルタリングを有効にする方法 Google ファミリーリンクを使用しているデバイスでHTTPSフィルタリングを有効にするには、以下の手順に従ってAdGuard証明書をインストールしてください: 万が一に備えてバックアップを作成してください。 お子様のアカウントをデバイスから削除します: お子様の端末で、設定 → アカウント → Googleお子様のアカウントをタップして、削除するオプションがあるかどうか確認してください。 そのようなオプションがない場合は、次のステップに進んでください。画面右上の3つの点をタップし、アカウントを削除するオプションがあるかどうかを確認します。Follow the instructions removing the child’s account from the device AdGuardを起動し、CAファイルをインストールします。 お子様のアカウントをデバイスで復元します: お子様の端末で、設定 → アカウント → Google → アカウントを追加お子様のアカウントにサインインします。画面の指示に従って、お子様のアカウントを設定してください。","keywords":""},{"title":"ユーザースクリプト","type":0,"sectionRef":"#","url":"general/userscripts/","content":"","keywords":""},{"title":"Recommended AdGuard scripts​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#recommended-adguard-scripts","content":"These userscripts come directly from the AdGuard developers, and we can guarantee that they are effective and safe. For some of the userscripts developed by others that we consider good and reliable, scroll down to the next section. You can also find some of the popular websites with scripts below, but remember that whenever you download a userscript from an unknown source, you expose yourself to a certain risk, as some scripts may be harmful to your computer. "},{"title":"AdGuard Extra​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#adguard-extra","content":"An extension that blocks ads in difficult cases when the usual filter-based approach is not enough. AdGuard Extra comes pre-installed with all premium AdGuard versions, so you don't need to do anything to enable it. However, if you want to use it alongside AdGuard Browser Extension or any other ad blocker, you'll need to use an additional extension. Learn more about this userscript and how to install it on GitHub.  "},{"title":"AdGuard Popup Blocker​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#adguard-popup-blocker","content":"The name speaks for itself: it blocks pop-ups — one of the most annoying types of ads on web pages. Learn more about this userscript, its key features, and how to install it on GitHub.  "},{"title":"AdGuard Assistant (legacy version)​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#adguard-assistant-legacy-version","content":"This custom extension is designed to control filtering directly from the browser page (manual blocking, exclusion of the site, etc.). note This version of Assistant is legacy and there is no point in using it on new systems, since it has been replaced with the full-fledged Browser Assistant. But the legacy Assistant might be of help if there is no Browser Assistant for your browser. If this is your case, your can learn how to install AdGuard Assistant on GitHub. "},{"title":"Disable AMP​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#disable-amp","content":"A script that is only pre-installed in AdGuard for Android. It disables AMP (Accelerated Mobile Pages) on the Google search results page. Learn more about this userscript and how to install it on GitHub.  "},{"title":"Top picks outside AdGuard​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#top-picks","content":"These userscripts are not developed by AdGuard and therefore we can't give a 100% guarantee that they are safe and/or work at all times. However, in our experience they deserve a recommendation as they've all earned their good reputation. "},{"title":"Don't track me Google​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#dont-track-me-google","content":"This script removes Google's tracking feature from the links in Google search results. It speeds up the loading of search results and allows you to right-click or tap to copy the link URL. Its source code is available on GitHub. This userscript can be downloaded from GreasyFork and installed in any AdGuard CoreLibs-based app. "},{"title":"microShield​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#microshield","content":"A userscript for people who visit Korean websites and some international websites. The microShield userscript blocks Ad-Shield advertisement and anti-adblock. Its original source code is available at asdefuser and AdShield Defuser. This userscript can be installed in AdGuard CoreLibs-based apps, Violentmonkey, Tampermonkey, and quoid/userscripts. Learn more about microShield and how to install it on GitHub. "},{"title":"Where can you get more userscripts?​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#more-userscripts","content":"As userscripts are mainly created by enthusiasts, you should be cautious when installing them. Any script from an unknown source carries a potential risk. Yet, there is a great variety of interesting scripts that, if installed carefully and responsibly, can really make using some websites more convenient. Here we will describe some of the most popular userscript catalogs. "},{"title":"Stylish (userstyles.org)​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#stylish-userstylesorg","content":"Userstyles.org is a catalog of user styles, but it allows you to load them as userscripts. Thus, any user style can be installed via AdGuard. Be careful if you decide to install an unpopular script — there's a risk it might be harmful. "},{"title":"Greasy Fork​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#greasy-fork","content":"Greasy Fork is a userscript catalog by Stylish creators. Unlike the above-mentioned userstyles.org, the scripts in this catalog undergo moderation, so their credibility is much higher. "},{"title":"OpenUserJS.org​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#openuserjsorg","content":"OpenUserJS.org is an open source userscript catalog written in nodeJS. It doesn't have moderation so stay alert to any suspicious scripts. "},{"title":"Community​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#community","content":"If you like the idea of personifying your browser with the help of userscripts, and you have any questions, you can ask them on one of these websites: StackoverflowFreeNodeReddit "},{"title":"Development​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#development","content":""},{"title":"Request license​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#request-license","content":"If you are developing your own custom script and want to test how it works with AdGuard, request a beta license key for the app. To get it, please send an email to devteam@adguard.com with the following information: Subject: Userscript author license request Body: Please tell us about the userscripts you are working on. Here is a mailto link. "},{"title":"Compatibility​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#compatibility","content":"Metadata block​ Supported properties​ @name @namespace @description @version @match @include @exclude @grant @connect @require @resource @downloadURL @updateURL @supportURL @homepageURL @homepage @website @source @run-at @noframes @icon @iconURL @defaulticon @icon64 @icon64URL  Unsupported properties​ These properties will be simply ignored by Adguard. @unwrap  Supported GM functions​ AdGuard supports both old GM_ functions and new GM4 API that use GM object. Values​ note All listed old Greasemonkey functions are deprecated but still supported. GM.info / GM_info GM.setValue / GM_setValue GM.getValue / GM_getValue GM.listValues / GM_listValues GM.deleteValue / GM_deleteValue GM.getResourceUrl / GM_getResourceURL GM.setClipboard / GM_setClipboard GM.xmlHttpRequest / GM_xmlhttpRequest GM.openInTab / GM_openInTab GM.notification unsafeWindow GM_getResourceText GM_addStyle GM_log  Here you can find more information about Greasemonkey API. "},{"title":"Example​","type":1,"pageTitle":"ユーザースクリプト","url":"general/userscripts/#example","content":"// ==UserScript== // @name Name as shown to the user when locale is english or unknown // @name:ru Name as shown to the user when locale is russian // @description Description as shown to the user when locale is english or unknown // @description:ru Description as shown to the user when locale is russian // @icon https://myhomepage.com/myuserscript.png // @version 1.0.0.0 // @downloadURL https://dl.myhomepage.org/myuserscript.user.js // @updateURL https://dl.myhomepage.org/myuserscript.meta.js // @homepageURL https://myhomepage.com/myuserscript // @include * // @exclude *://website.com/* // @resource https://myhomepage.com/myuserscript.css // @require https://myhomepage.com/mylibrary.js // @grant property:settings // @grant GM_getValue // @grant GM_setValue // @grant GM_deleteValue // @grant GM_listValues // @grant GM_getResourceText // @grant GM_getResourceURL // @grant GM_addStyle // @grant GM_log // @grant GM_setClipboard // @grant GM_xmlhttpRequest // @grant unsafeWindow // @grant GM_info // @grant GM_openInTab // @grant GM_registerMenuCommand // @run-at document-start // ==/UserScript== !function(){( console.log(&quot;I am loaded!&quot;); )}();  "},{"title":"HARファイルを収集する方法","type":0,"sectionRef":"#","url":"guides/collect-har-file/","content":"","keywords":""},{"title":"Google Chrome の場合​","type":1,"pageTitle":"HARファイルを収集する方法","url":"guides/collect-har-file/#chrome","content":"ChromeでHARファイルを作成する手順は以下の通りです: 問題が発生しているURLにアクセスします。 （※まだ問題を再現しないでください） デベロッパーツールを開きます: Chromeのメニューを使って：メニュー（⋮） → その他のツール → デベロッパー ツールキーボードを使って： Ctrl+Shift+C、または Ctrl+Alt+I、または ⌥+⌘+I （Mac の場合） ネットワーク（Network）タブをクリックします。 ネットワークタブの左上にある丸いボタンを探し、赤い録画中モードになっていることを確認します。 グレー色になっている場合は、クリックして録画を開始してください（ボタンは赤くなります）。 クリアボタン（録画ボタンの隣にある、丸に線が入ったボタン）を使って、以前のアクティビティをすべてクリアします。 ネットワークタブの「ログを保存」（Preserve log）チェックボックスを選択します。 「キャッシュを無効にする」（Disable cache）チェックボックスにチェックを入れます。 問題を再現してください。 ダウンロードアイコンを押して、コンテンツ付きHARとして（Save as HAR with content）.harファイルを保存します。 問題の詳細な説明を添えて、保存したHARファイルを AdGuard サポート (support@adguard.com) までお送りください。 可能でしたら、問題に関するスクリーンショットも添付いただけると大変助かります。 "},{"title":"Microsoft Edge の場合​","type":1,"pageTitle":"HARファイルを収集する方法","url":"guides/collect-har-file/#edge","content":"問題が発生しているURLにアクセスします。 （※まだ問題を再現しないでください） デベロッパーツールを開きます: Edgeのメニューを使って：メニュー（⋮） → その他のツール → デベロッパーツールキーボードを使って： Ctrl+Shift+C、または Ctrl+Alt+I、または ⌥+⌘+I （Mac の場合） ネットワーク（Network）タブをクリックします。 ネットワークタブの左上にある丸いボタンを探し、赤い録画中モードになっていることを確認します。 グレー色になっている場合は、クリックして録画を開始してください（ボタンは赤くなります）。 クリアボタン（録画ボタンの隣にある、丸に線が入ったボタン）を使って、以前のアクティビティをすべてクリアします。 ネットワークタブの「ログを保存」（Preserve log）チェックボックスを選択します。 「キャッシュを無効にする」（Disable cache）チェックボックスにチェックを入れます。 問題を再現してください。 ダウンロードアイコンを押して、コンテンツ付きHARとして（Save as HAR with content）.harファイルを保存します。 問題の詳細な説明を添えて、保存したHARファイルを AdGuard サポート (support@adguard.com) までお送りください。 可能でしたら、問題に関するスクリーンショットも添付いただけると大変助かります。 "},{"title":"Mozilla Firefox の場合​","type":1,"pageTitle":"HARファイルを収集する方法","url":"guides/collect-har-file/#firefox","content":"FirefoxでHARファイルを作成する手順は以下の通りです: 問題が発生しているURLにアクセスします。 （※まだ問題を再現しないでください） デベロッパーツールをネットワークモードで開きます: メニューを使って：メニュー → Web Developer → Networkキーボードを使って：Ctrl+Shift+C、Macの場合は #+⌘+E ネットワークタブの左上にある再生／一時停止ボタンに注目してください。 ボタンは再生モードになっていることをご確認ください。 グリッドに情報が表示されている場合は、再生/一時停止ボタンの隣にある「ゴミ箱を空にする」ボタンをクリックして情報を消去してください。 NetworkタブのPersist Logsチェックボックスを選択します。 「キャッシュを無効にする」（Disable cache）チェックボックスにチェックを入れます。 問題を再現してください。 グリッドを右クリックし、「Save all as HAR」を選択してセッションを.harファイルとして保存します。 問題の詳細な説明を添えて、保存したHARファイルを AdGuard サポート (support@adguard.com) までお送りください。 可能でしたら、問題に関するスクリーンショットも添付いただけると大変助かります。 "},{"title":"Internet Explorer 11 の場合​","type":1,"pageTitle":"HARファイルを収集する方法","url":"guides/collect-har-file/#ie11","content":"Internet Explorer 11 でHARファイルを作成する手順は以下の通りです: 問題が発生しているURLにアクセスします。 （※まだ問題を再現しないでください） デベロッパーツールをネットワークモードで開きます: ツールの歯車メニューから：開発者ツール→ネットワークタブキーボードから：F12 → Networkタブ ネットワークタブの左上にあるプロファイリングセッションの再生ボタンと停止ボタンに注目してください。 録画中、再生ボタンは灰色、停止ボタンは赤色になります。 再生モードにしてください。 ネットワークタブの[セッションをクリア]ボタンを使用して、下のグリッドに表示されているセッション情報をすべてクリアします。 アイコンにカーソルを合わせるとボタン・操作の名前が表示されます。 セッションをクリアボタンは、×印の三本線のアイコンです。 「キャッシュを無効にする」（Disable cache）チェックボックスにチェックを入れます。 問題を再現してください。 NetworkタブのSave to diskボタン（Export as HAR）をクリックして、セッションを.harファイルとして保存します。 問題の詳細な説明を添えて、保存したHARファイルを AdGuard サポート (support@adguard.com) までお送りください。 可能でしたら、問題に関するスクリーンショットも添付いただけると大変助かります。 "},{"title":"Safari の場合​","type":1,"pageTitle":"HARファイルを収集する方法","url":"guides/collect-har-file/#safari","content":"Safari でHARファイルを作成する手順は以下の通りです: 画面上部のSafariメニューバーにある「開発」メニューを開きます。 表示されていない場合は、Safari → 環境設定 → 詳細一番下の「メニューバーに&quot;開発&quot;メニューを表示する」というチェックボックスをオンにします。 問題が発生しているURLにアクセスします。 （※まだ問題を再現しないでください） 「Web インスペクタを表示」→「ネットワーク」タブを開きます: Safariメニューバー → Web インスペクタを表示 → ネットワーク【キーボードを使う場合】⌥+⌘+I → 「ネットワーク」タブ ネットワークタブの左側にある「その他のフィルターオプション...」メニュー内の「ログを保存」チェックボックスをオンにします。 「ネットワーク」タブの右端にある「ゴミ箱の削除」アイコンをクリックして、現在のネットワーク項目を消去します。 キーボードの場合：⌘+K 「キャッシュを無効にする」チェックボックスにチェックを入れます。 問題を再現してください。 ゴミ箱を空にするアイコンの隣にあるエクスポートアイコンをクリックして、セッションを.harファイルとして保存します。 問題の詳細な説明を添えて、保存したHARファイルを AdGuard サポート (support@adguard.com) までお送りください。 可能でしたら、問題に関するスクリーンショットも添付いただけると大変助かります。 "},{"title":"Android の場合​","type":1,"pageTitle":"HARファイルを収集する方法","url":"guides/collect-har-file/#android","content":"Android でHARファイルを作成する手順は以下の通りです: AdGuard アプリを開き、⚙「設定」を開きます。 「詳細設定」をタップします。 「ローレベル設定」をタップします。 「pref.har.capture」を有効にします（保護を再起動する必要があります）。 問題を再現してください（アプリ・ブラウザ等を開き、広告を表示させるために必要な操作を行います）。 「pref.har.capture」をオフにします。 戻って「ログとシステム情報をエクスポート」→「保存」をタップします。 "},{"title":"Windows の場合​","type":1,"pageTitle":"HARファイルを収集する方法","url":"guides/collect-har-file/#windows","content":"⚙「設定」 →「一般設定」→「詳細設定」を開き、下にスクロールします。 「HAR記録を有効にする」チェックボックスにチェックを入れます。 問題を再現します。 「一般設定」→「ログをエクスポート」→「保存」をクリックします。 ステップ２の該当するチェックボックスのチェックを外して、HAR記録を無効にします。 "},{"title":"BSoDエラーを修正するためのminidumpファイルを作成する方法","type":0,"sectionRef":"#","url":"guides/minidump/","content":"","keywords":""},{"title":"ミニダンプ（minidump）ファイルとは何ですか?​","type":1,"pageTitle":"BSoDエラーを修正するためのminidumpファイルを作成する方法","url":"guides/minidump/#ミニダンプminidumpファイルとは何ですか","content":"ミニダンプファイルは、システムクラッシュの性質に関する情報を含むファイルです。 ブルースクリーンが表示される直前に作成され、問題解決に使える最低限の有益な情報が含まれています。 ミニダンプファイルの拡張子は通常.dmpです。 note Windows 10では、ブルースクリーンにストップコードとQRコードが表示されます。 ユーザーはこの情報を使って、特定の問題をウェブで検索することができます。 ミニダンプファイルを作成するオプションはデフォルトでは無効になっているので、ファイルの使い方を詳しく説明する前に、作成を有効にする方法を詳しく見てみましょう。 "},{"title":"minidumpファイルを作成するためにWindowsをセットアップする方法​","type":1,"pageTitle":"BSoDエラーを修正するためのminidumpファイルを作成する方法","url":"guides/minidump/#minidumpファイルを作成するためにwindowsをセットアップする方法","content":"Even if you don’t experience any BSoD crash errors, you can still set this option — this is a general recommendation, not necessarily related to AdGuard products. ミニダンプファイルを自動的に作成するには、以下の手順に従ってください: Windowsの検索バーに「sysdm.cpl」と入力し、「開く」をクリックします。 システム・プロパティ・コントロールパネル・メニューウィンドウが画面に表示されます。 tip Alternatively, click Settings → System → About → Advanced system settings. ::: ![システムプロパティ *mobile_border](https://cdn.adtidy.org/blog/new/c2huSystem_Properties.jpeg)  詳細設定タブに移動します。 スタートアップとリカバリセクションで、設定をクリックします。 以下の3つのオプションを有効にします: システムログにイベントを書き込む自動的に再起動デバッグ情報の書き込み → 小型メモリーダンプ（256kb） OKをクリックして設定を適用します。 コンピュータを再起動します。 これでミニダンプファイルが有効になりました。 これで、システムがクラッシュしたときに自動的に作成されます。 note デフォルトでは、ミニダンプファイルは%SystemRoot%\\Minidumpフォルダに保存されます。 ディレクトリの場所は好きなように変更できますが、多くのプログラムはデフォルトでこの場所を探すように設定されていることにご注意ください。 "},{"title":"プロキシ証明書のインストール方法","type":0,"sectionRef":"#","url":"guides/proxy-certificate/","content":"","keywords":""},{"title":"証明書のダウンロードとインストール方法​","type":1,"pageTitle":"プロキシ証明書のインストール方法","url":"guides/proxy-certificate/#証明書のダウンロードとインストール方法","content":"ルーティングしたいデバイスのオペレーションシステム（Windows/Mac/Android/iOS）に応じて、以下のいずれかの手順を使ってください: "},{"title":"Windows の場合​","type":1,"pageTitle":"プロキシ証明書のインストール方法","url":"guides/proxy-certificate/#windows","content":"AdGuard がインストール済みパソコンのIPアドレスをメモしてください。 AdGuard による保護がオンになっていることを確認してください。 Windowsパソコンでは、AdGuard アプリ内の設定⚙️の「ネットワーク」タブにある「AdGuard をHTTPプロキシとして使用する」チェックボックスにチェックを入れます。 For Mac, go to Settings → Preferences → Network and enable HTTP proxy. AdGuard がインストールされているパソコンで、こちらのリンクをたどってください： http://local.adguard.org/cert 「ダウンロード」ボタンをクリックしてください。 ダウンロードが開始されない場合は、Firefoxなど、別のブラウザでお試しください。 Transfer the downloaded cert.cer file to the Windows device whose traffic you want to route through AdGuard. USBケーブル、Bluetooth、クラウドサービスなどで転送を行うことができます。 そのデバイスで、「Win」ボタン（スタートメニュー）を押し、「コンピューター証明書の管理」と入力して、Enterキーを押します。 証明書 - ローカル コンピュータページで、「信頼されたルート証明機関」→「証明書」フォルダを見つけます。 「証明書」フォルダを右クリックし、「すべてのタスク」→「インポート」をクリックします。 「証明書のインポート ウィザード」ページで、 「次へ」をクリックします。 「参照」をクリックします。 cert.cer証明書ファイルに移動して選択し、「開く」→「次へ」をクリックします。 「すべての証明書を次のストアに配置」チェックボックスにチェックを入れます。 証明書ストアフィールドが信頼されたルート証明機関を表示していることを確認し、「次へ」をクリックします。 「完了」をクリックします。 Win キーを押して、「設定」を開きます。 「ネットワーク &amp; インターネット」→「プロキシ」を選びます。 「設定の自動検出」をオフに切り替えます。 「プロキシサーバーの使用」タブの「設定」をクリックします。 トグルをオンにします。 「プロキシIPアドレス」には、コンピュータのIPアドレス（ステップ1からのもの）を入力します。 「ポート」には、デスクトップ版AdGuardアプリのネットワーク設定で選択したポートを入力します。 「保存」をクリックします。 "},{"title":"Mac の場合​","type":1,"pageTitle":"プロキシ証明書のインストール方法","url":"guides/proxy-certificate/#mac","content":"AdGuardがインストール済みコンピュータのIPアドレスをメモしてください。 AdGuard による保護がオンになっていることを確認してください。 Windowsパソコンでは、AdGuard アプリ内の設定⚙️の「ネットワーク」タブにある「AdGuard をHTTPプロキシとして使用する」チェックボックスにチェックを入れます。 For Mac, go to Settings → Preferences → Network and enable HTTP proxy. ブラウザを使用してこちらのリンクをたどってください： http://local.adguard.org/cert 「ダウンロード」ボタンをクリックしてください。 ダウンロードが開始されない場合は、Firefoxなど、別のブラウザでお試しください。 ダウンロードした cert.cer ファイルを、トラフィックを AdGuard 経由でルーティングさせたいMacデバイスに転送します。 USBケーブル、Bluetooth、AirDrop、クラウドサービスなどで転送を行うことができます。 ダウンロードした証明書ファイルをダブルクリックします。 管理者パスワードを入力し、「キーチェーンの変更」をクリックします。 Spotlight（右上の検索🔍アイコン）にアクセスし、「キーチェーンアクセス」と入力し、検索結果から「キーチェーンアクセス」を選択します。 「システム」で、追加した証明書をハイライトします。 右クリックして、コンテキストメニューで「情報を見る」を選択します。 「信頼情報」を展開して、証明書の信頼ポリシーを表示します。 Secure Sockets Layer (SSL)で、「常に信頼する」を選択します。 「システム環境設定」→「ネットワーク」を開き、上のほうのアクティブな接続を選択します。 「詳細...」をクリックし、「プロキシ」タブに移動します。 「Webプロキシ(HTTP)」と「セキュアWebプロキシ(HTTPS)」という2つのチェックボックスにチェックを入れます。 「サーバー」フィールドに、この手順のステップ１にメモしておいたコンピュータの IP アドレスを入力します。 「ポート」には、デスクトップ版AdGuardアプリのネットワーク設定で選択したポートを入力します。 "},{"title":"Android の場合​","type":1,"pageTitle":"プロキシ証明書のインストール方法","url":"guides/proxy-certificate/#android","content":"AdGuardがインストール済みコンピュータのIPアドレスをメモしてください。 AdGuard による保護がオンになっていることを確認してください。 Windowsパソコンでは、AdGuard アプリ内の設定⚙️の「ネットワーク」タブにある「AdGuard をHTTPプロキシとして使用する」チェックボックスにチェックを入れます。 For Mac, go to Settings → Preferences → Network and enable HTTP proxy. AdGuardがインストール済みのデバイスで、ブラウザを使用してこちらのリンクをたどってください： http://local.adguard.org/cert 「ダウンロード」ボタンをタップしてください。 ダウンロードが開始されない場合は、Firefoxなど、別のブラウザでお試しください。 ダウンロードした cert.cer ファイルを、トラフィックを AdGuard 経由でルーティングさせたいAndroidデバイスに転送します。 USBケーブル、Bluetooth、クラウドサービスなどで転送を行うことができます。 ダウンロードした cert.cer 証明書を見つけてタップし、ファイルを開き、指示に沿って証明書をインストールします。 Androidデバイスはデフォルトでは証明書を信頼しないため、警告が表示されますが、無視して大丈夫です。 端末によっては、端末のパスワードの入力を求められる場合があります。 入力してから「OK」を押します。 そうすると、証明書がインストールされます。 アクティブなWi-Fiネットワークの詳細設定を開きます。 プロキシタイプ を 手動に変更します。 「プロキシホスト名」には、パソコンのIPアドレス（ステップ1からのもの）を入力します。 「プロキシポート」には、デスクトップ版AdGuardアプリのネットワーク設定で選択したポートを入力します。 "},{"title":"iOS （iPhone/iPad）の場合​","type":1,"pageTitle":"プロキシ証明書のインストール方法","url":"guides/proxy-certificate/#ios","content":"AdGuardがインストール済みコンピュータのIPアドレスをメモしてください。 AdGuard による保護がオンになっていることを確認してください。 Windowsパソコンでは、AdGuard アプリ内の設定⚙️の「ネットワーク」タブにある「AdGuard をHTTPプロキシとして使用する」チェックボックスにチェックを入れます。 For Mac, go to Settings → Preferences → Network and enable HTTP proxy. AdGuardがインストール済みのデバイスで、ブラウザを使用してこちらのリンクをたどってください： http://local.adguard.org/cert 「ダウンロード」ボタンをタップします。 ダウンロードが開始されない場合は、Firefoxなど、別のブラウザでお試しください。 ダウンロードした cert.cer ファイルを、トラフィックを AdGuard 経由でルーティングさせたいiOSデバイスに転送します。 USBケーブル、Bluetooth、クラウドサービスなどで転送を行うことができます。 iOSデバイスで、設定アプリ→「プロファイルがダウンロードされました」を開き、右上隅にある「インストール」をタップします。 パスワードを入力してインストールを確認します。 「完了」をタップします。 設定→一般→バージョン情報→証明書の信頼設定。 「Adguard Personal CA」の横のスイッチを有効にします。 証明書のインストール完了です。 接続しているWi-Fi ネットワークを選んで、「プロキシを設定」を開きます。 プロキシタイプ を 手動に変更します。 「プロキシホスト名」には、パソコンのIPアドレス（ステップ1からのもの）を入力します。 「プロキシポート」には、デスクトップ版AdGuardアプリのネットワーク設定で選択したポートを入力します。 "},{"title":"バグ・不具合を報告する方法","type":0,"sectionRef":"#","url":"guides/report-bugs/","content":"","keywords":""},{"title":"始める前に​","type":1,"pageTitle":"バグ・不具合を報告する方法","url":"guides/report-bugs/#始める前に","content":""},{"title":"バグ・不具合を報告するタイミング​","type":1,"pageTitle":"バグ・不具合を報告する方法","url":"guides/report-bugs/#バグ不具合を報告するタイミング","content":"お使いのAdGuard製品が最新バージョンであることを確認し、最新でない場合はアップデートしてください。最新バージョンでバグがすでに修正されている可能性があります。 GitHubでバグが以前に報告されていないかどうかを確認してください。 未解決のissueと解決済みのssueの両方をチェックしておくことをお勧めします。  "},{"title":"問題を説明する方法​","type":1,"pageTitle":"バグ・不具合を報告する方法","url":"guides/report-bugs/#問題を説明する方法","content":"できるだけ多くの詳細を記載するようにしてください。これにより、バグの再現と修正がより簡単になります。 バグ報告で歓迎される内容は以下のとおりです: AdGuardアプリのバージョンお使いのOSのバージョン問題に気づいた日時問題に気づく寸前にどんな操作をしていたか、アプリに何が起こったか。 問題を再現するための手順。問題が再発したかどうか、またその頻度はどれくらいかVPNやウイルス対策ソフトを使用しているかどうか "},{"title":"ログを収集する方法​","type":1,"pageTitle":"バグ・不具合を報告する方法","url":"guides/report-bugs/#ログを収集する方法","content":"ログの収集については、各プラットフォームの専用記事をお読みください。 "},{"title":"バグレ報告や機能リクエストに投票する方法​","type":1,"pageTitle":"バグ・不具合を報告する方法","url":"guides/report-bugs/#バグレ報告や機能リクエストに投票する方法","content":"新機能やバグ修正の実装をサポートしたい場合は、GitHubで投票することができます。 投票するには、絵文字で反応するだけで結構です。   リアクションアイコンは問題の右上隅または下部にあります。 "},{"title":"問題を報告する方法（各プラットフォーム向け）​","type":1,"pageTitle":"バグ・不具合を報告する方法","url":"guides/report-bugs/#問題を報告する方法各プラットフォーム向け","content":""},{"title":"AdGuard for Windows​","type":1,"pageTitle":"バグ・不具合を報告する方法","url":"guides/report-bugs/#adguard-for-windows","content":"Windows版のGitHubレポをチェックして、問題がまだ報告されていないことを確認してください。 新しいissueを作成するページを開き、Bug reportを選択してください。 フォームに記入してください。 可能であれば、スクリーンショットまたは画面録画を添付してください。  "},{"title":"AdGuard for Mac​","type":1,"pageTitle":"バグ・不具合を報告する方法","url":"guides/report-bugs/#adguard-for-mac","content":"Mac版AdGuardのGitHubレポをチェックして、問題がまだ報告されていないかを確認してください。 新しいissueを作成するためのページを開き、&lt;1&gt;Bug report&lt;/1&gt;を選択してください。 フォームに記入してください。 可能であれば、スクリーンショットまたは画面録画を添付してください。 "},{"title":"AdGuard for Android​","type":1,"pageTitle":"バグ・不具合を報告する方法","url":"guides/report-bugs/#adguard-for-android","content":"Android版AdGuardのGitHubレポをチェックして、問題がまだ報告されていないかを確認してください。 新しいissueを作成するためのページを開き、Bug reportを選択してください。 フォームに記入してください。 可能であれば、スクリーンショットまたは画面録画を添付してください。 "},{"title":"AdGuard for iOS​","type":1,"pageTitle":"バグ・不具合を報告する方法","url":"guides/report-bugs/#adguard-for-ios","content":"iOS版AdGuardのGitHubレポをチェックして、問題がまだ報告されていないかを確認してください。 新しいissueを作成するためのページを開き、Bug reportを選択してください。 フォームに記入してください。 可能であれば、スクリーンショットまたは画面録画を添付してください。 "},{"title":"AdGuard ブラウザ拡張機能​","type":1,"pageTitle":"バグ・不具合を報告する方法","url":"guides/report-bugs/#adguard-ブラウザ拡張機能","content":"ブラウザ拡張機能版AdGuardのGitHubレポをチェックして、問題がまだ報告されていないかを確認してください。 新しいissueを作成するためのページを開き、Bug reportを選択してください。 フォームに記入してください。 可能であれば、スクリーンショットまたは画面録画を添付してください。 "},{"title":"AdGuard for Safari​","type":1,"pageTitle":"バグ・不具合を報告する方法","url":"guides/report-bugs/#adguard-for-safari","content":"AdGuard for Safari のGitHubレポをチェックして、問題がまだ報告されていないかを確認してください。 新しいissueを作成するためのページを開き、Bug reportを選択してください。 フォームに記入してください。 可能であれば、スクリーンショットまたは画面録画を添付してください。 "},{"title":"ウェブサイトやアプリでの問題を報告する方法","type":0,"sectionRef":"#","url":"guides/report-website/","content":"","keywords":""},{"title":"ウェブサイトを報告する方法​","type":1,"pageTitle":"ウェブサイトやアプリでの問題を報告する方法","url":"guides/report-website/#report","content":"note ※AdGuardアプリまたはAdGuardブラウザアシスタント経由でご報告を送信しますとと、ほとんどの情報は自動入力されて便利です。 お手数ですが、スクリーンショットだけはご自身で作成し添付してください。 なお、報告フォームの直リンクを使ってご報告される場合は、情報を全部手入力することが必要になります。 広告の再挿入やWebサイトの誤表示などを報告する方法: "},{"title":"AdGuard ブラウザ拡張機能の場合​","type":1,"pageTitle":"ウェブサイトやアプリでの問題を報告する方法","url":"guides/report-website/#extension","content":"ブラウザで🛡アイコンをクリックして、AdGuardブラウザ拡張機能を開く「問題・不具合を報告する」をクリックする  フォームを入力した後、 GitHubにおいて問題に対する「issue」が自動的に作成されます。 そのissueのリンクも表示されますので、ご報告いただいた問題への対応の進捗状況をリンク先issueにて監視することができます。 "},{"title":"AdGuard for Windows の場合​","type":1,"pageTitle":"ウェブサイトやアプリでの問題を報告する方法","url":"guides/report-website/#windows","content":"AdGuardブラウザアシスタントを開き、 「問題・不具合を報告する」を押す  問題報告用フォームに残りの必要事項を記入してください（ほとんどの情報は自動入力されます）フォームを入力した後、 GitHubにおいて問題に対する「issue」が自動的に作成されます。 そのissueのリンクも表示されますので、ご報告いただいた問題への対応の進捗状況をリンク先issueにて監視することができます。 "},{"title":"AdGuard for Android の場合​","type":1,"pageTitle":"ウェブサイトやアプリでの問題を報告する方法","url":"guides/report-website/#android","content":"AdGuardアプリ内で設定を開く「お客様サポート」→「不適切なブロックを報告する」を選択  フォームを入力した後、 GitHubにおいて問題に対する「issue」が自動的に作成されます。 そのissueのリンクも表示されますので、ご報告いただいた問題への対応の進捗状況をリンク先issueにて監視することができます。 "},{"title":"AdGuard for Mac の場合​","type":1,"pageTitle":"ウェブサイトやアプリでの問題を報告する方法","url":"guides/report-website/#mac","content":"AdGuardブラウザアシスタントを開き、 「問題・不具合を報告する」を押します。  問題報告用フォームに残りの必要事項を記入してください（ほとんどの情報は自動入力されます）フォームを入力した後、 GitHubにおいて問題に対する「issue」が自動的に作成されます。 そのissueのリンクも表示されますので、ご報告いただいた問題への対応の進捗状況をリンク先issueにて監視することができます。 "},{"title":"AdGuard for iOS の場合​","type":1,"pageTitle":"ウェブサイトやアプリでの問題を報告する方法","url":"guides/report-website/#ios","content":"AdGuardアプリ内で設定（左下の⚙）を開く「お客様サポート」→「不適切なブロックを報告する」を選択  問題報告用フォームに残りの必要事項を記入してください（ほとんどの情報は自動入力されます）フォームを入力した後、 GitHubにおいて問題に対する「issue」が自動的に作成されます。 そのissueのリンクも表示されますので、ご報告いただいた問題への対応の進捗状況をリンク先issueにて監視することができます。 "},{"title":"問題報告用フォーム記入する方法​","type":1,"pageTitle":"ウェブサイトやアプリでの問題を報告する方法","url":"guides/report-website/#form","content":"note ※AdGuardアプリまたはAdGuardアシスタント経由で問題報告を送信しますとと、ほとんどの情報が自動入力されて便利です。 お手数ですが、スクリーンショットだけはご自身で作成し添付してください。 なお、報告フォームの直リンクを使ってご報告される場合は、情報を全部手入力することが必要になります。 最初に、お使いの製品とそのバージョンを記入してください。 問題の種類とサードパーティ製ソフトウェア（アンチウイルス、セキュリティソフト、VPNなど）の使用に関する情報を追加してください。 問題が発生したページのURLとブラウザ（アプリの場合はそのアプリのダウンロードリンク）を入力してください。 アプリの設定状況を指定してください: 使用中のフィルタDNSフィルタリング、ステルスモードなどという機能が有効の場合は、その設定 問題がわかるようなスクリーンショットを添付してください。 ※スクリーンショットは公開されるため、個人情報（メールアドレス、電話番号など）は、モザイク（ぼかし）などをかけて見えないようにしてください。 フィルタ開発者が状況を理解するのに役立つ追加情報を提供してください。 また、GitHubのアカウントをお持ちであれば、よかったらご記載ください（AdGuardのエンジニアが追加情報を必要とする場合に連絡できるようにするためです）。 ご報告の内容を確認して、フォームを送信してください。 報告送信完了画面では、問題への対応の進捗状況を確認できるGitHub上issueのリンクが表示されます。 "},{"title":"問題の診断方法​","type":1,"pageTitle":"ウェブサイトやアプリでの問題を報告する方法","url":"guides/report-website/#issue","content":"この方法は、困難を恐れず、自分で問題を見つけようとすることに抵抗がない人向けです。 HTMLやCSSに関する特別なスキルや深い知識は必要ありません。 例えば、お気に入りのWebサイトが開かない、認証が壊れている、一部のページ要素が正しく表示されないといった状況に直面したとします。 特定のフィルタ・拡張機能・ステルスモードの設定などを使用していることが原因である可能性があります。 これらの問題を診断する方法は、以下の通りです。 "},{"title":"フィルタ​","type":1,"pageTitle":"ウェブサイトやアプリでの問題を報告する方法","url":"guides/report-website/#フィルタ","content":"広告ブロッカーをオフにする問題がなくなった場合は、広告ブロッカーを再び有効にし、フィルタを1つずつ無効にしてください。 この方法で、ページを「壊している」フィルタを特定することができます。どのフィルタがページを「壊している」のかがわかったら、問題報告用フォーム（上記参照）に記入する際に、それを開発者に知らせてください。 この場合、初期設定に戻すことが望ましいです。すべてのフィルタをオフにしても結果が出ない場合は、 @@||example.com^$document,extensionというルールを適用してください （「example.com」は、問題を見つけたサイトに置き換えてください）。それでも問題がなくならない場合は、以下の「ステルスモード」という項目を参照してください。 "},{"title":"ステルスモード​","type":1,"pageTitle":"ウェブサイトやアプリでの問題を報告する方法","url":"guides/report-website/#ステルスモード","content":"AdGuardアプリでステルスモードをオフにするこれで問題が解決した場合は、ステルスモードをオンにして、その設定項目を1つずつオフにしながら、問題が再現するかを確認してください。 この方法で、ページを「壊している」設定項目を特定することができます。どの設定がページを「壊している」のかがわかったら、問題報告用フォーム（上記参照）に記入する際に、それを開発者に知らせてください。 この場合、初期設定に戻すことが望ましいです。問題がなくならない場合は、以下の「拡張機能」の項を参照してください。 "},{"title":"拡張機能​","type":1,"pageTitle":"ウェブサイトやアプリでの問題を報告する方法","url":"guides/report-website/#拡張機能","content":"AdGuardアプリ内で「拡張機能」をオフにするこれで問題が再現しなくなった場合は、拡張機能をオンにして、その設定項目を1つずつオフにしながら、問題が再現するかを確認してください。 この方法で、ページを「壊している」設定を特定することができます。どの設定がページを「壊している」のかがわかったら、問題報告用フォーム（上記参照）に記入する際に、それを開発者に知らせてください。 この場合、初期設定に戻すことが望ましいです。 "},{"title":"サードパーティ（他社製）ブロッカー​","type":1,"pageTitle":"ウェブサイトやアプリでの問題を報告する方法","url":"guides/report-website/#サードパーティ他社製ブロッカー","content":"一部のブラウザやウイルス対策ソフト（Brave、Kasperskyなど）には広告ブロック機能が組み込まれています。 そのような機能は、サイトの動作に影響を与え、問題を引き起こす可能性があります。 このようなプログラムを使用している場合、問題がAdGuard側にあることを確認してください。AdGuardのフィルタリングを無効にして、問題を再現してみてください。 AdGuardオフでも問題が再現する場合は、他のアプリケーションやブラウザが原因であることになります。 AdGuardが原因の場合は、上記の段落のそれぞれの手順をご利用ください。 "},{"title":"スクリーンショットを撮る方法","type":0,"sectionRef":"#","url":"guides/take-screenshot/","content":"","keywords":""},{"title":"Android の場合​","type":1,"pageTitle":"スクリーンショットを撮る方法","url":"guides/take-screenshot/#android","content":"Android端末でスクリーンショットを撮るには、機種やメーカーによってさまざまな方法があります。 通常、Android では次のボタンの組み合わせでスクリーンショットを撮れます: 音量下げるボタンと電源ボタンを同時に押す こうすることによって画面全体をキャプチャして、写真として保存できます。 撮ったスクリーンショットはギャラリーの「スクリーンショット」フォルダーで確認することができます。 古いデバイスの場合は、以下の組み合わせを使用できます: ホームボタンと電源ボタンを同時に押す戻るボタンと電源ボタンを同時に押す Android 8 以降では、他の操作でスクリーンショットを撮ることもできます。たとえば、画面上で手を 90 度の角度でスワイプしてスクリーンショットをトリガーしたり (Samsung デバイス)、3 本の指で下にスワイプしたり (OnePlus デバイス) するなどという方法もあったりします。 スクリーンショットを撮るためのオプションは、メーカーやモデルによって異なります。 デバイスの設定を確認し、最適な方法を見つけてください。 さらに、端末でスクリーンショットを撮る専用アプリを使用できます。たとえば、 Screenshot Easy、 Screenshot Ultimate、 Screenshot Snapなどです。 "},{"title":"iOS （iPhone/iPad）の場合​","type":1,"pageTitle":"スクリーンショットを撮る方法","url":"guides/take-screenshot/#ios","content":"iOS端末（古いものを除く）であれば、標準的なツールを使ってスクリーンショットを撮ることができます。 iPhone/iPadでスクリーンショットを撮るには、次の組み合わせを使用します: 電源（サイド）ボタンと ホーム ボタンを同時に押し、すばやく離す 【iPhone X以降の場合】 電源（サイド）ボタンと 音量アップボタンを同時に押し、すばやく離す こうすることによって画面全体をキャプチャして、写真として保存できます。 標準の「フォト」アプリで先ほどとったスクリーンショットを見つけることができます。 "},{"title":"Windows の場合​","type":1,"pageTitle":"スクリーンショットを撮る方法","url":"guides/take-screenshot/#windows","content":"Windowsでスクリーンショットを撮るには、 PrtScnキーを押します。 一部のノートパソコンでは、 Fn を押しながら PrtScn を押す必要があります。 ※PrtScn（Print Screen）キーは、キーボードによってPrntScrn、PrtScn、PrtScr、PrtSc と略し方が異なる場合がありますのでご注意ください。 Windowsは画面全体をキャプチャし、クリップボードにコピーします。 現在使用中ウィンドウのスクリーンショットを撮るには、次の組み合わせを使用します: Alt を押しながら、 PrtScn (機種によっては Fn + Alt + PrtScn) を押します。 画面上の特定領域のスクリーンショットを撮るには、次の組み合わせを使用します: **Win + Shift + S** スクリーンショットを撮った後、クリップボードに保存されます。 ほとんどの場合、 Ctrl + V というショートカットキーで、現在編集中の文書にペーストすることができます。 また、スクリーンショットをファイルに保存する必要がある場合は、標準の「ペイント」プログラム（または画像を扱うことができるその他のアプリ）を開いてください。 Ctrl+V 、または貼り付けボタン（通常、画面の左上隅）をクリックしてスクリーンショットを貼り付け、保存してください。 Windows 8 と 10 では、 Win + PrtScn というショートカットで、非常に素早くスクリーンショットを撮ることができます。 これらのキーを押すと同時に、スクリーンショットは自動的にファイルとして「写真」→「スクリーンショット」フォルダに保存されます。 また、スクリーンショットを撮るための専用プログラム「 Snipping Tool 」があり、コンピュータのスタートメニューにある標準プログラムの中から見つけることができます。 Snipping Tool を使用すると、デスクトップの任意の領域または画面全体をキャプチャできます。 このプログラムを使ってスクリーンショットを撮った後、画像を編集し、コンピュータの任意のフォルダに保存することができます。 そのほか、 「PicPick」「Nimbus Screenshot」「Screenshot Captor」「Snipaste」「Monosnap」など、コンピュータでスクリーンショットを撮るための様々なアプリを使ってみることも可能です。 "},{"title":"macOS の場合​","type":1,"pageTitle":"スクリーンショットを撮る方法","url":"guides/take-screenshot/#mac","content":"Macでスクリーンショットを撮るには、以下のショートカットを使用します: **⌘ Cmd + Shift + 3 を同時に押します。 こうすることによって画面全体がキャプチャされ、ファイルとしてデスクトップに保存されます。 現在使用中ウィンドウのスクリーンショットを撮るには、次の組み合わせを使用します: *⌘ Cmd + Shift + 4 + Space* を同時に長押しします。 ポインターがカメラアイコンに変わります。 撮りたいウィンドウをクリックすると、キャプチャします。 （スクリーンショットの撮影をキャンセルするには、Escボタンを押します。） 画面上の特定領域のスクリーンショットを撮るには、次の組み合わせを使用します: **⌘ Cmd + Shift + 5 を押します。 十字をドラッグして必要な領域を選択します。 マウスまたはトラックパッドを離すとスクリーンショットが撮影されます（Escキーで撮影をキャンセルできます）。 タッチバー (MacBook Pro)のスクリーンショットを撮るには、以下のショートカットを使用します: **⌘ Cmd + Shift + 6 を同時に押します。 こうすることによってタッチバー全体がキャプチャされ、ファイルとしてデスクトップに保存しされます。 スクリーンショットを保存せずにクリップボードにコピーするには、 Ctrl を押しながら、上記のいずれかのショートカットを押してください。 その後、 Cmd + V で、（クリップボードから）スクリーンショットを現在編集中の文書、画像、アプリなどに貼り付けることができます。 また、 「プレビュー」アプリを使用して、 「スクリーンショットを撮る」 を選択することによって、スクリーンショットを撮る（選択した領域、ウィンドウ、または画面全体）ことができます。 「プレビュー」では、スクリーンショットを JPG、TIFF、PDF、その他のファイル形式で保存することができます。 "},{"title":"Credits & Acknowledgements","type":0,"sectionRef":"#","url":"miscellaneous/acknowledgements/","content":"","keywords":""},{"title":"Third-party software​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#software","content":"This is the list of libraries and other resources that really helped us with AdGuard software development process. "},{"title":"AdGuard for Windows​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#win","content":"SQLLite database engine: sqlite.orgADO.NET provider for SQLite: system.data.sqlite.org/index.html/doc/trunk/www/index.wikiJson.NET — high-performance JSON framework for .NET: www.newtonsoft.com/jsonAvalonEdit — WPF-based text editor component: avalonedit.net "},{"title":"AdGuard for Mac​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#mac","content":"Red Sweater Software, LLC for RSVerticallyCenteredTextFieldCell component: http://www.red-sweater.com/blog/148/what-a-difference-a-cell-makesIlija Tovilo for ITProgressIndicator component: github.com/iluuu1994/ITProgressIndicatorSparkle Project for Sparkle.framework component: http://sparkle-project.orgRobbie Hanson for GCDAsyncSocket component: github.com/robbiehanson/CocoaAsyncSocketTony Million for Reachability component: github.com/tonymillion/ReachabilityAugust «Gus» Mueller for Fmdb component: github.com/ccgus/fmdbStephen F. Booth for SFBCrashReporter project: github.com/sbooth/SFBCrashReporterBartosz Janda for Acextract component: github.com/bartoszj/acextractFLOPageViewController: github.com/floschliep/FLOPageViewController "},{"title":"AdGuard for Android​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#android","content":"Logback-android by Tony19: tony19.github.io/logback-androidOtto by Square: http://square.github.io/ottoRootTools Library by Stericson: github.com/Stericson/RootToolsMaterialDateRangePicker by Supratim Chakraborty: github.com/borax12/MaterialDateRangePickerHelloCharts by Leszek Wach: github.com/lecho/hellocharts-android "},{"title":"AdGuard for iOS​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#ios","content":"Reachability component by Tony Million: github.com/tonymillion/ReachabilityFmdb component by August «Gus» Mueller: github.com/ccgus/fmdbNSStringPunycodeAdditions component by Nate Weaver: github.com/Wevah/Punycode-CocoaMinizip-ng library by Nathan Moinvaziri: github.com/zlib-ng/minizip-ngLottie for iOS library by Brandon Withrow: github.com/airbnb/lottie-ios "},{"title":"AdGuard ブラウザ拡張機能​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#extension","content":"SHA256: github.com/AndersLindman/SHA256D3: github.com/d3/d3c3: github.com/c3js/c3nanobar: github.com/jacoborus/nanobarcrypto-js: github.com/brix/crypto-jsace: github.com/ajaxorg/acelodash: github.com/lodash/lodashmobx: github.com/mobxjs/mobxxstate: github.com/statelyai/xstatepunycode: github.com/mathiasbynens/punycode.jsjs-lru: github.com/rsms/js-lrutldts: github.com/remusao/tldtszod: github.com/colinhacks/zodswc: github.com/swc-project/swc "},{"title":"AdGuard for Safari​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#safari","content":"ace: github.com/ajaxorg/aceadm-zip: github.com/cthackers/adm-zipconfig: github.com/lorenwest/node-configelectron-debug: github.com/sindresorhus/electron-debugelectron-log: github.com/megahertz/electron-logelectron-remote: github.com/electron-userland/electron-remoteelectron-simple-updater: github.com/megahertz/electron-simple-updaterelectron-store: github.com/sindresorhus/electron-storeelectron-updater: github.com/electron-userland/electron-builderi18n: github.com/mashpie/i18n-noderequest-promise: github.com/request/request-promisexmlhttprequest: github.com/driverdan/node-XMLHttpRequestaxios: github.com/axios/axiosdevtron: github.com/electron-userland/devtronelectron: github.com/electron/electronelectron-osx-sign: github.com/electron/electron-osx-signelectron-rebuild: github.com/electron/electron-rebuildfind-in-files: github.com/kaesetoast/find-in-filesgulp: github.com/gulpjs/gulpgulp-hash-creator: github.com/wahaha2012/gulp-hash-creatorrequest: github.com/request/requestrequire-dir: github.com/aseemk/requireDir "},{"title":"AdGuard Browser Assistant​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#assistant","content":"React: github.com/facebook/reactwebextension-polyfill: github.com/mozilla/webextension-polyfillreact-intl: github.com/formatjs/formatjs/tree/main/packages/react-intlmobx: github.com/mobxjs/mobxmobx-react: github.com/mobxjs/mobx-reactlodash: github.com/lodash/lodashnanoid: github.com/ai/nanoidreact-modal: github.com/reactjs/react-modalclassnames: github.com/JedWatson/classnamesbabel: github.com/babel/babelaxios: github.com/axios/axioscrx: github.com/oncletom/crxeslint: github.com/eslint/eslintjest: github.com/facebook/jestpostcss: github.com/postcss/postcssweb-ext: github.com/mozilla/web-extwebpack: github.com/webpack/webpack "},{"title":"CoreLibs​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#corelibs","content":"BoringSSL: github.com/google/boringssl/blob/master/LICENSEbrotli: github.com/google/brotli/blob/master/LICENSEChromium: github.com/chromium/chromium/blob/master/LICENSEDetours: github.com/microsoft/Detours/blob/main/LICENSE.mdeDistantObject: github.com/google/eDistantObject/blob/master/LICENSEFF/FFOS libs by Simon Zolin: github.com/stsaz/ffbase/blob/master/README.mdGoogle test: github.com/google/googletest/blob/master/LICENSEhttp-parser: github.com/nodejs/http-parser/blob/master/LICENSE-MITjsmn: github.com/zserge/jsmn/blob/master/LICENSEklib: github.com/attractivechaos/klib/blob/master/khash.hlibevent: github.com/libevent/libevent/blob/master/LICENSELibreSSL: github.com/libressl-portable/openbsd/blob/master/src/lib/libssl/LICENSElwIP: lwip.wikia.com/wiki/Licenseminiz: github.com/richgel999/miniz/blob/master/LICENSEnghttp2: github.com/nghttp2/nghttp2/blob/master/COPYINGPCRE2: www.pcre.org/licence.txtSQLite: www.sqlite.org/copyright.htmlzlib: zlib.net/zlib_license.html "},{"title":"Special thanks​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#testers","content":"Also a huge thanks and gratitude to all beta testers and other engaged users, whose help in finding/eliminating all the bugs, translating AdGuard and moderating our communities was priceless. Special thanks to: ag_bug_finder — beta tester of AdGuard for WindowsAikatsui — active contributor to AdGuard HomeAndy Kleinert (AndyKl) — translator and proofreader to German in CrowdinBigDargon — contributed the hostsVN project as a source to the list of AdGuard DNSBlaz — started as a filter contributor and now working at AdGuardBoo Berry — Telegram group moderatorbuuuuuuu190 — beta testerclarke — beta testerdartrax — beta testerdja2k — beta testerEduardo Addad de Oliveira (eduardoaddad) — translator and proofreader to Portuguese and Portuguese, Brazilian in Crowdinfabjazz — beta testerGörkem Emrah Güler (gork7777) — translator and proofreader to Turkish in Crowdinhanschke — beta testeriDjay — outstanding beta tester of AdGuard for iOSImre Kristoffer Eilertsen (DandelionSprout) — maintainer of &quot;Dandelion Sprout’s Nordic Filters&quot; that are included in all AdGuard toolsIONIL — translator and proofreader to Hebrew in Crowdinitabmedia — beta testerkirasam — beta testerkrystian3w — very active filter contributorlancelot.moon — translator and proofreader to Chinese Traditional in Crowdin, beta testerLord Ami — beta testerLukas Novotny (novas78) — translator and proofreader to Czech in Crowdinmalware1 — beta testermilder — beta testerNicos18 — beta testerOizaro — translator and proofreader to Italian in CrowdinOleg Chashko — very active beta tester of AdGuard for SafariOskari Lavinto (olavinto) — translator and proofreader to Finnish in Crowdinouzbed — beta testerPentagramTr — filter contributor, namely, he has brought a lot of new things to the Turkish filterPeter Hubinsky (hubak) — translator and proofreader to Slovak in CrowdinPiQuark6046 — filter contributorrickyoh — beta testerRonin427 — beta testerSanjay Nand — beta testersaturnotaku — beta testersteve1209 — beta testerstreetwolf — beta testersuperlex — helps us with scriptlets, filters, and AdGuard for SafariTayTayTheKiller — beta testerTPS — bug finder, filter contributorYuki2718 — actively contributes to AdGuard filterszznosar — active beta tester focused on AdGuard for iOSSergey Zozulya (sviperz) — active member of our Telegram group, beta tester  We also want to thank the xda-developers users. Thank you for your helpful feedback! We always appreciate comments from our users, especially constructive ones. You can always contact us to share your thoughts about AdGuard, request new features, and submit bugs. Join the AdGuard Subreddit, Xda-developers Forum or visit our page on GitHub. "},{"title":"AdGuardフィルタに貢献する","type":0,"sectionRef":"#","url":"miscellaneous/contribute/filters/","content":"","keywords":""},{"title":"フィルタリングルール​","type":1,"pageTitle":"AdGuardフィルタに貢献する","url":"miscellaneous/contribute/filters/#filtering-rules","content":"ご存知かと思いますが、AdGuard はフィルタリング・ルールというものを使用して広告をブロックします。これらのルールは、AdGuardベースフィルタ、モバイル広告フィルタなど、カテゴリ別のブロックフィルタに分けられています。広告ブロックの仕組みについて詳しくはこちらの記事をご覧ください。 ウェブサイトは常に広告の埋め込み方を変えており、変化に対応した新しいルールを常にフィルタに追加することで、広告ブロックの効果を維持しています。 フィルターエンジニアチームが新しいルールの作成に取り組んでいますが、有志の方々のご協力やご支援もいつでも大歓迎です。 "},{"title":"始め方​","type":1,"pageTitle":"AdGuardフィルタに貢献する","url":"miscellaneous/contribute/filters/#how-to-start","content":"ブロックフィルターを扱うには、ある程度のスキルと知識が必要です。 もし、スキルをお持ちで、ルールの作り方をご存知でしたら、GitHubの「AdGuard Filters」リポジトリ に直接アクセスしてください。 そこには、広告の見逃しや誤検出など、それぞれのウェブサイトでの問題に対する多くのopen issueがあります。 好きなissueを選んで、コメントで独自のルールを提案してください。 AdGuardフィルターエンジニアがご提案を確認し、適切と判断した場合、ご指摘のルールはAdGuardのフィルターに追加されます。 If you are not yet familiar with our filtering rule syntax, or maybe need a refresher, you'll find the basics about the syntax in our Knowledge base. "},{"title":"報酬​","type":1,"pageTitle":"AdGuardフィルタに貢献する","url":"miscellaneous/contribute/filters/#rewards","content":"ご提案いただいたフィルタリングルールのうちのいくつかが承認された場合、AdGuardから報酬を受け取ることができます。 st@adguard.com にGitHubのアカウント名を添えてメールを送っていただければ、AdGuardのライセンスキーを無料で差し上げます。 報酬の対象となるためのルール数に関しては、固い条件はありません。 ルール作成作業は難しいので、通常、ご提案のルールが5件以上採用されれば報酬を受け取れます。 "},{"title":"AdGuardベータテスト","type":0,"sectionRef":"#","url":"miscellaneous/contribute/beta-testing/","content":"","keywords":""},{"title":"AdGuardベータ版テスターになる方法​","type":1,"pageTitle":"AdGuardベータテスト","url":"miscellaneous/contribute/beta-testing/#intro","content":"基本要件は簡単で、AdGuardを使用し、ベータ版が利用可能になったらアップグレードし、気づいたバグをご報告いただく、という三つだけです。 However, you will need a GitHub account to become our beta tester, so you may want to get that out of the way first. In any case, every single thing you need to know is gathered on a dedicated page. 説明を飛ばして、すぐに行動に移りたい方は、こちらからベータテスト参加をお申し込みください。 申請は1〜3営業日以内に審査され、メールで結果を返信いたします。 "},{"title":"バグ・不具合を報告する方法​","type":1,"pageTitle":"AdGuardベータテスト","url":"miscellaneous/contribute/beta-testing/#report-a-bug","content":"If you spotted a bug or just want to share your suggestion, let us know: go to GitHub, find a suitable repository, create a new issue there, and describe the bug/feature request in detail. The above method is the most preferred, but you can use others if necessary: Facebook、Redditなど、様々なSNSプラットフォームで私たちを見つけてご連絡ください。 ※技術的なことを話し合うのに一番効率的な方法とは言えません。 AdGuardアプリ内の「サポート」セクションからサポートチームにメッセージを送るか、support@adguard.com（日本語対応）までご連絡ください。 "},{"title":"iOS版AdGuardアプリでベータテスト用キーを有効にする方法​","type":1,"pageTitle":"AdGuardベータテスト","url":"miscellaneous/contribute/beta-testing/#ios","content":"すでにベータキーを受け取っていて、 adguard.com のマイ・アカウントにそのキーが追加されている場合は、アプリを開いてログイン画面（「プレミアム版でパワーアップ」→右上の「ログイン」）を開いてください。 そちらで、AdGuard アカウントの認証情報（メールアドレスとパスワード）を入力します。 そうしますと、自動的にプレミアム機能が利用できるようになります。 "},{"title":"最後に​","type":1,"pageTitle":"AdGuardベータテスト","url":"miscellaneous/contribute/beta-testing/#最後に","content":"これ以上、付け加えることはあまりありません。 わざわざ無理してバグを見つける必要はございません。 AdGuardを通常通りご利用いただけます。 ただし、バグ・不具合が見つかった場合はご報告ください。 Of course, we appreciate any additional effort. 時折、ベータ版の最新の変更点やその他の重要なニュースを含むニュースレターをお届けいたします。 いつでも配信を停止することができます。 "},{"title":"翻訳者・校正者になるには","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/become-translator/","content":"","keywords":""},{"title":"校正者になるには​","type":1,"pageTitle":"翻訳者・校正者になるには","url":"miscellaneous/contribute/translate/become-translator/#proofreaders","content":"各言語には校正者(以前はモデレーターと呼ばれていました)がいます。 そして、現在翻訳に参加している方々は皆、校正者になることができます。 では、校正者は何を担当するのでしょうか。 校正者は: 質の高い翻訳を承認（Approve）し、質の悪い翻訳を却下します。 翻訳の妥当性を確認します。 自分の言語で問いかけられた、翻訳に関連するコメントに返信します。 Every year, the best proofreaders receive gifts from AdGuard. また、活躍した翻訳者にも報酬が送られます。 翻訳の報奨制度で詳細をお読みください。 "},{"title":"複数形がある言語の場合","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/plural-forms/","content":"","keywords":""},{"title":"複数形とは？​","type":1,"pageTitle":"複数形がある言語の場合","url":"miscellaneous/contribute/translate/plural-forms/#plurals","content":"名詞がいくつかの複数形の語形を持つ言語があります。 その使い方は、示される物の数によって異なります。 For instance, English words have two word forms when speaking about something in the singular, like 'one star', and in the plural — 'two stars'. It doesn’t matter if you say five, twenty six or even five hundred thirty two stars — the ending 's' will remain the same. しかし、言語によっては、複数形が1つだけだったり、逆に2つ以上あったりもします。 英語とは対照的に、ポーランド語には名詞の複数形が3つあります。 One of them is used when speaking about something in the singular, another form is used in the plural but with numbers ending in 2–4, excluding 12–14, and the third form — for words with other numbers in front of them. Let’s take a look at this picture. ここでは、前に立つと語形が決まる数字のグループを見ることができます（ポーランド語の場合）。  理解を深めるために、1個・2個・5個の場合の英語とポーランド語の複数形を比べてみましょう。  英語の場合: ポーランド語の場合: 1. form — It takes one hour. 1. form — Zajmuje to godzinę. 2. form — It takes two hours. 2. form — Zajmuje to dwie godziny. 3. form — It takes five hours. 3. form — Zajmuje to pięć godzin.  さて、ポーランド語の 'godzinę' (「時間」) には3種類の形があるのに対し、英語では単語が形を変えるのは2回だけであることがわかります。 ポーランド語を除けば、ロシア語、セルビア語、スロバキア語、チェコ語など、3つの複数形を持つ言語やそれ以上の複数形を持つ言語がたくさんあります。 しかも、複数形に対する規則も様々です。 That's why it's so important to know how many plurals your language has, and how to use them correctly. "},{"title":"複数形がいくつあるのかは、どこで確認できますか？​","type":1,"pageTitle":"複数形がある言語の場合","url":"miscellaneous/contribute/translate/plural-forms/#where-to-learn","content":"複数形の使用が必要な翻訳に直面したとき、自分の言語にはどれだけの語形があるのか、すぐには気づけないかもしれません。 そういった情報を確認できるところをご紹介します。 Localization Guide は、幅広い言語リストを含んでいます。 The number of plural forms for different languages is shown this way: nplurals=2, nplurals=4 and so on. The numeral after the Equals sign = means the number of plural forms of the respective language. また、 Unicode Common Locale Data Repository (CLDR)で複数形に関する情報を入手することもできます。 CLDR Plural Rulesでは、10進数（1.5; 2.3; 100.1…）に対する追加の語形が示されていますが、AdGuardの翻訳ではそのような数字は使用していません。 "},{"title":"AdGuardの翻訳における複数形について​","type":1,"pageTitle":"複数形がある言語の場合","url":"miscellaneous/contribute/translate/plural-forms/#translations","content":"まず最初に、AdGuard翻訳のすべてで複数形の使用が必要というわけでもないことをお伝えしておきます。 現在、Crowdinでは、複数形の使用を伴う文字列を4種類扱っています。 それらを詳しく見ていきましょう。 "},{"title":"1. String keyが .singular, .dual, .plural で終わるフレーズ​","type":1,"pageTitle":"複数形がある言語の場合","url":"miscellaneous/contribute/translate/plural-forms/#1type","content":" その多くは、 AdGuard for Windows プロジェクトで使用されており、それぞれ1～2語で構成されています: days;extensions;hours このようなフレーズのstring keyと、複数形に関する重要な注意事項が記載されていたりする「Context」欄にご注目ください。 string keyには、 Singular, Dual, Plural という単語が含まれる場合があります（例:FormatDayDeclensionDual）。 この場合、keyで指定されているとおりに適切な複数形にしておく必要があります。 "},{"title":"2. 単数・複数の名詞をカンマで区切った文字列​","type":1,"pageTitle":"複数形がある言語の場合","url":"miscellaneous/contribute/translate/plural-forms/#2type","content":"この種の文字列のほとんどは、 AdGuard for Androidプロジェクトにあります。 こちらの例をご覧ください:  あなたの言語で名詞の複数形が3つある場合（ポーランド語のように）、すべての複数形をカンマで区切って書いてください。 hour, hours — godzinę, godziny, godzin 名詞に2つの形しかない場合、同じ形を2回書く必要はありません（※このような複数形文字列の場合のみ）。 ただし、形を2回書いても間違いにはなりません。 "},{"title":"3. Crowdin開発のパターンを使用する文字列​","type":1,"pageTitle":"複数形がある言語の場合","url":"miscellaneous/contribute/translate/plural-forms/#3type","content":"これは、複数形文字列の最も使いやすい翻訳方式です。 この場合、Crowdinは、ユーザーに対して、複数形の異なるフレーズを一定量翻訳することを提案します。 例えば、複数形が1つしかない言語の場合、翻訳するフレーズは1つ表示されます。 3つ以上の複数形がある場合、Crowdinは翻訳する文字列をさらに3つ以上に分割してくれます。 例えば、こんな感じです:  これらの文字列を翻訳する際やApprove(✔️)する際には、十分な配慮をお願いします。 「Other」欄の意味がわからない場合は、「Many」欄と同じ複数形を貼り付けてください。 「Many」欄と「Other」欄の訳語は同じになっていることが可能です。 "},{"title":"4. 縦棒記号で区切られた文字列​","type":1,"pageTitle":"複数形がある言語の場合","url":"miscellaneous/contribute/translate/plural-forms/#4type","content":"This is the most complicated type of AdGuard strings which is mostly used in the AdGuard Websites project. Pay close attention to a vertical bar sign between the sentences and %count% placeholders in original phrases — this will help you identify phrases where translations require the use of plural forms.  さて、 Standard license for %count% computer | Standard license for %count% computers。 これを正しく訳すために知っておくべきことは？ 縦棒記号で区切られた文章を「テンプレート」と呼ぶことにしましょう（異なる番号を持つフレーズのテンプレートとして機能するからです）。 例題に戻ると、英語には2つの複数形しかないので、それぞれ2つのテンプレートがあるはずです。 Standard license for *%count%* computer | Standard license for *%count%* computers where template 1 is Standard license for %count% computer, and template 2 is Standard license for %count% computers もう一つ注意しなければならないのは、通常、定義する単語の前に位置する「%count%」というプレースホルダーです。 ユーザーに見える文章では、 %count% の代わりに、選択されているテンプレートに応じて異なる数字が表示されます。 他の言語（例えば3つの複数形がある言語）の場合、テンプレートは3つで、その間に2つの縦棒記号があるはずです。 例えば、上記のフレーズをスロバキア語に翻訳する場合、 Localization Guide のルールによれば、スロバキア語には3つの語形があり、正しい訳は以下のようになります: **Štandartná licencia pre *%count%* počítač | Štandartná licencia pre *%count%* počítače | Štandartná licencia pre *%count%* počítačov**  この場合、スロバキア語の&quot;počítač&quot; (コンピュータ)という単語の3つの形式に応じて3つのテンプレートが表示されます。 形式を1個無視して、スロバキア語のテンプレートを3つではなく2つだけ使用すると、システムは特定の数字に対して適切なテンプレートを取ることができなくなります。その結果、英語の Standard license for 5 computer のように、文中に文法ミスが発生してしまいます。 Always use as many forms as there are in your language, even when the word itself has fewer word forms. 例えば、セルビア語の 'računar' （コンピュータ）には、2つの形しかありません。 しかし、セルビア語には3つの複数形があります。  したがって、英語からセルビア語への訳語はこうなるべきです: **Standardna licenca za *%count%* računar | Standardna licenca za *%count%* računara | Standardna licenca za *%count%* računara** この場合、最後の2つのテンプレートに違いがないことは明らかですが、このルールを守ることは非常に重要です。 テンプレートの数は、それぞれの言語の複数形の数を反映する必要があります。(このような複数形文字列の場合)。 "},{"title":"簡単な要約​","type":1,"pageTitle":"複数形がある言語の場合","url":"miscellaneous/contribute/translate/plural-forms/#summury","content":"AdGuardのプロジェクトを翻訳する際には、複数形の使用を必要とするフレーズに細心の注意を払う必要があります。 最初の3つの種類は簡単に対応できるのですが、4つ目の種類（縦棒記号で区切られた文字列）はより注意深く翻訳する必要があります。 もう一度繰り返しますが、縦棒記号と%count%プレースホルダーの2つの重要な要素を持つフレーズに出会ったら、以下のことを行ってください: 翻訳する言語の複数形ルールを参照してください。 The number of your templates should be consistent with the number of plural forms your language includes, even in cases some words have fewer forms themselves. Two plural forms — two templates in translations; five plural forms — five templates, etc. テンプレートとテンプレートの間は、元の文字列と同じように縦棒記号を使用することを忘れないでください。 %count%プレースホルダーを翻訳したり、変更したり、削除したりしないでください。 By following these simple rules you will help AdGuard developers avoid a lot of unnecessary complications during the localization process. "},{"title":"ガイドラインと推奨事項","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/guidelines/","content":"ガイドラインと推奨事項 翻訳を始める前に、ぜひ知っておいていただきたいことがいくつかあります。 あなたの手間を省くだけでなく、翻訳するフレーズの意味の理解が一致していることを確認するためのものです。 AdGuardのCrowdinページを開きましたら、必要なプロジェクトを選び、言語を選択してください。 特定の製品フォルダーを開いた後でも、言語の切り替えは可能です。 製品フォルダを選択し、ファイルを選択すると、翻訳を開始することができます。 note You can also change the Crowdin interface language by clicking the Settings icon in the top right corner of the page. 開いたウィンドウで、 UI languageタブにスクロールダウンしてください。 それを開き、言語を選択し、Changeをクリックしてください。 以下のガイドラインを参考にしてください。 You can filter translations by clicking this button and selecting any offered option. Easily move between the files of the project. Pay attention to the glossary terms highlighted with a dotted line in a source phrase. Usually, they are special words (like brand names) that should not be translated. You can suggest your translation for translatable terms in the AdGuard Glossary project. In Crowdin, strings can have notes that make it easier to understand and translate phrases. Look for them in the &quot;Context&quot; field of the source string. Note that source strings may also have screenshots in the Context section. They help to understand the context and convey the exact meaning. tip You can request context by clicking the &quot;REQUEST&quot; button. ::: ![crowdin *border](https://cdn.adtidy.org/public/Adguard/kb/en/ag-translations/request.png) In addition to suggesting new translations, you can also leave comments on strings. Use comments to let us know about mistakes in the source text or existing translations, make notes, or ask questions. If you see a comment left on your translation — try to respond to it. There's also a Discussions tab on the main project page that conveniently allows you to see all the comments for the specific language in this project. Crowdin provides a very useful and convenient tool called Translation Memory. With its help, you can find the previously made translations of the same words and phrases and reuse them in your translations. Once you join a project by clicking the &quot;Join&quot; button, you will see the Tasks tab on the project page, where the tasks for specific project files get created. Please pay attention to them: they usually have a higher priority. Sometimes you can find phrases with plural forms. Please be especially attentive when translating such phrases. You can read how to translate plural forms here. Using proper plural forms is extremely important: please ask us in the comments if anything is unclear. Please do not write directly to the project managers and proofreaders listed in the Project info. If you have questions about translations, you can always ask our proofreaders or admins through comments. Also, you can send an email to translate@adguard.com or ask a question in the Telegram chat. The Admins will answer you as soon as possible.","keywords":""},{"title":"AdGuard翻訳プログラム","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/program/","content":"AdGuard翻訳プログラム 免責事項: AdGuardの翻訳に関するご質問は、 translate@adguard.com にメールを送るか、もしくは Telegramチャット に参加してください。 翻訳に関しては、AdGuard は常にボランティアの方々に大変お世話になっております。 現在、私たちの製品の翻訳管理には、Crowdinプラットフォームを使用しています。 そこは、AdGuard製品の翻訳に貢献してくれる方々のための場でもあるのです。 AdGuardの翻訳を手伝ってくれるボランティアの皆様の一員になりたい方は、 翻訳者になる方法とボランティアとの協力方法を読んでください。","keywords":""},{"title":"翻訳の報奨制度について","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/rewards/","content":"","keywords":""},{"title":"Here’s how our reward system works​","type":1,"pageTitle":"翻訳の報奨制度について","url":"miscellaneous/contribute/translate/rewards/#heres-how-our-reward-system-works","content":"AdGuardの最初の1年ライセンスを受け取るには、500語を翻訳する必要があります。 2つ目のライセンスでは追加で1,000語、つまり合計1,500語の翻訳が必要です。 それ以降のライセンスは、1ライセンスにつき1,500語の翻訳が必要です。 AdGuard VPNサブスクリプションの最初の1年ライセンスを受け取るには、2,500語を翻訳する必要があります。 それ以降のサブスクリプションは、1サブスクリプションにつき2,500語の翻訳が必要です。  Just send us a request to translate@adguard.com and you’ll get the license as a token of our gratitude. Besides, the most active translators may receive proofreader status in the future, should they express such an intention, and that promises even more good stuff. Every year we present gifts with the AdGuard logo to our active proofreaders. If you want to become one of them, please write to translate@adguard.com. "},{"title":"Crowdinファイルの翻訳の優先順位","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/translation-priority/","content":"Crowdinファイルの翻訳の優先順位 Crowdinには、AdGuard Applications, AdGuard Websites, AdGuard Ad Blocker Knowledge base, AdGuard VPN Knowledge Base, AdGuard DNS Knowledge Base という5つの主要なAdGuardプロジェクトがあります。 AdGuard Applicationsプロジェクトのどのファイルや製品から始めるべきか、明確なガイドラインはありません。 お好きな製品をお選びください。 ただ、いくつか触れておきたいことがあります: Crowdinで翻訳が完了した言語のみが、AdGuardアプリのUIで表示されます。製品自体の翻訳がなければ説明文等は不要になるので、アプリストアの説明文などの翻訳は後回しにしたほうがお勧めです。 ただし、AdGuard Websitesプロジェクトの場合は異なります。 翻訳が100％完了していなくても、言語をサイトに追加することは可能です。 これはどのファイルがすでに翻訳されているかによります。 そのため、最も重要なファイルから順に翻訳されることをお勧めします（以下に記載）: AdGuard Ad Blocker website critical.resxauth.resxwelcome.resx AdGuard VPN website critical.resxauth.resx AdGuard DNS website critical.resxauth.resx Adding new strings as well as updating existing ones in these files requires special attention from the project translators and proofreaders. In addition to websites, there is a file for translating transactional emails in the AdGuard Websites project. Newly added strings in this file also have a high translation priority.","keywords":""},{"title":"ナレッジベースの更新・変更","type":0,"sectionRef":"#","url":"miscellaneous/contribute/updating-knowledge-base/","content":"","keywords":""},{"title":"変更点を提案する・新しい記事を書く方法​","type":1,"pageTitle":"ナレッジベースの更新・変更","url":"miscellaneous/contribute/updating-knowledge-base/#suggest-change","content":"上記のGitHubの機能を使って、既存記事への変更を提案したり、新しい記事をナレッジベースに追加することができます。 GitHubプラットフォームでの作業方法をあまりわからない場合は、こちらのGitHubの使い方に関するドキュメントを確認することから始めてください。 準備ができましたら、KnowledgeBaseリポジトリで作業してください。 ナレッジベースにあるすべてのテキスト・文章は、 Markdownマークアップ言語を使って書かれています。 記事の編集や執筆の際には、このことを念頭に置いてください。 こちらで、Markdownの構文について詳しく知ることができます。 ナレッジベースのウェブサイトは、現代の静的ウェブサイトジェネレータである「Docusaurus 2」を使用して構築されています。 変更または追加を提案する場合、すべてのテキストがのDocusaurus 2に準拠している必要があります。 Docusaurus 2の原則は、 このリンク先のDocusaurusガイドで確認することができます。 このナレッジベースは、お使いのコンピュータでローカルに展開することで、提案する変更をプレビューすることができます。 この方法は、本ナレッジベースのGitHubページにあるREADME.mdファイルに記載されています。 "},{"title":"記事を翻訳する方法​","type":1,"pageTitle":"ナレッジベースの更新・変更","url":"miscellaneous/contribute/updating-knowledge-base/#translate-adguard","content":"ナレッジベースの既存記事の翻訳は、 Crowdin platformを使って行われています。 Crowdinの翻訳と作業に関するすべての詳細は、AdGuard広告ブロッカーのナレッジベースにある専用記事に記載されています。 AdGuardナレッジベースの記事を翻訳する際、複数形を含む文字列に遭遇することがありますが、複数形がいっぱいある言語の場合は特に注意して翻訳してください。 別の記事で、複数形の文字列を翻訳する際に起こりうる困難について詳しく説明し、複数形に関するCrowdinプラットフォームでの作業方法について幅広く解説しています。 "},{"title":"Open issue（GitHub）に対する作業・貢献​","type":1,"pageTitle":"ナレッジベースの更新・変更","url":"miscellaneous/contribute/updating-knowledge-base/#open-issuegithubに対する作業貢献","content":"ナレッジベースの更新に関連するオープンタスクが存在することがあります。 このナレッジベースに対する他の変更を提案するのと同じ方法で、タスクの完了を高速化いただくことができます。 お好みのissueを選んで、ぜひ作業を始めてください。 issueに関してご質問等があれば、お気軽にissueのコメント欄で直接メッセージしてください。 "},{"title":"AdGuardについて書いていただく","type":0,"sectionRef":"#","url":"miscellaneous/contribute/writing-about-adguard/","content":"AdGuardについて書いていただく If you like AdGuard and want to spread the word and share your thoughts about it on social media or on a personal blog or website, this article may interest you. After sharing your experience, email pr@adguard.com and include a link to your post. The authors of the most well-written reviews will receive a free AdGuard license key. It doesn't matter if your website's audience is small or large; we value every effort. Please note that your review should be around 300 to 500 words. If you are planning to make a video about AdGuard or do anything else offbeat, please let us know in advance to avoid any possible misunderstandings. The same applies if your plan includes the use of the AdGuard logo, banners, or other visual elements. The contact email address remains the same: pr@adguard.com.","keywords":""},{"title":"How to create your own ad filters","type":0,"sectionRef":"#","url":"general/ad-filtering/create-own-filters/","content":"","keywords":""},{"title":"Comments​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#comments","content":"Any line that starts with an exclamation mark is a comment. In the list of rules it is displayed in gray color. AdGuard will ignore this line, so you can write anything you want. Comments are usually placed above the rules and used to describe what a rule does. For example: ! This is the comment. Below this line, there is an actual filtering rule. ||example.org^  "},{"title":"Examples​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#examples","content":""},{"title":"Blocking by domain name​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#blocking-by-domain-name","content":" This rule blocks: http://example.org/ad1.gifhttp://subdomain.example.org/ad1.gifhttps://ads.example.org:8000/ This rule does not block: http://ads.example.org.us/ad1.gifhttp://example.com/redirect/http://ads.example.org/ By default, such rules do not work for document requests. This means that the ||example.org^ rule will block a request made to example.org when you try to navigate to this domain from another website, but if you type example.org into the address bar and try to navigate to it, the website will open. To block the document request, you will need to use a rule with the $document modifier: ||example.org^$document. "},{"title":"Blocking exact address​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#blocking-exact-address","content":" This rule blocks: http://example.org/ This rule does not block: https://example.org/banner/img "},{"title":"Basic rule modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rule-modifiers","content":"Filtering rules support numerous modifiers that allow you to fine-tune the rule behavior. Here is an example of a rule with some simple modifiers.  This rule blocks: http://example.org/script.js if this script is loaded from example.com. This rule does not block: https://example.org/script.js if this script is loaded from example.org.https://example.org/banner.png because it is not a script. "},{"title":"Unblocking an address​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#unblocking-an-address","content":" This rule unblocks: http://example.org/banner.png even if there is a blocking rule for this address. Blocking rules with $important modifier can override exceptions. "},{"title":"Unblocking an entire website​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#unblocking-an-entire-website","content":" This rule unblocks It disables all cosmetic rules on example.com.It unblocks all requests sent from this website even if there is are blocking rules matching these requests. "},{"title":"Cosmetic rule​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-rule","content":" Cosmetic rules are based on using a special language named CSS, which every browser understands. Basically, it adds a new CSS style to the website which purpose is to hide particular elements. You can learn more about CSS in general here. AdGuard extends CSS and lets filters developers handle much more complicated cases. However, to use these extended rules, you need to be fluent in regular CSS. Popular CSS selectors Name\tCSS selector\tDescriptionID selector\t#banners\tMatches all elements with id attribute equal to banners. Class selector\t.banners\tMatches all elements with class attribute containing banners. Attribute selector\tdiv[class=&quot;banners&quot;]\tMatches all div elements with class attribute exactly equal to banners. Attribute substring selector\tdiv[class^=&quot;advert1&quot;]\tMatches all div elements which class attribute starts with the advert1 string. Attribute substring selector\tdiv[class$=&quot;banners_ads&quot;]\tMatches all div elements which class attribute ends with the banners_ads string. Attribute substring selector\ta[href^=&quot;http://example.com/&quot;]\tMatches all links that are loaded from http://example.com/ domain. Attribute selector\ta[href=&quot;http://example.com/&quot;]\tMatches all links to exactly the http://example.com/ address.  "},{"title":"Restrictions and limitations​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#restrictions-and-limitations","content":""},{"title":"Trusted filters​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#trusted-filters","content":"Some rules can be used only in trusted filters. This category includes: filter lists created by the AdGuard team,custom filter lists installed as trusted,user rules. "},{"title":"AdGuardコンテンツブロッカー​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#adguardコンテンツブロッカー","content":"AdGuard Content Blocker is an extension for Samsung and Yandex browsers that can be installed from Google Play. It is not to be confused with the fully functional AdGuard for Android that can only be downloaded from our website. Unfortunately, AdGuard Content Blocker capabilities are limited by what the browsers allow and they only support an old Adblock Plus filters syntax: Basic blocking rules with the following modifiers: $domain, $third-party, content-type modifiers.Basic exception rules with the following modifiers: $document, $elemhide.Basic element hiding rules with no extended CSS support. Because of the limitations above AdGuard Content Blocker will not be mentioned in the compatibility notes. "},{"title":"Basic rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules","content":"The most simple rules are so-called Basic rules. They are used to block requests to specific URLs. Or to unblock it, if there is a special marker &quot;@@&quot; at the beginning of the rule. The basic principle for this type of rules is quite simple: you have to specify the address and additional parameters that limit or expand the rule scope. Sub-requests Basic rules for blocking requests are applied only to sub-requests. That means they will not block the loading of the page unless it is explicitly specified with a $document modifier. Response status Browser detects a blocked request as completed with an error. Rule length Rules shorter than 4 characters are considered incorrect and will be ignored. "},{"title":"Basic rule syntax​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-syntax","content":" rule = [&quot;@@&quot;] pattern [ &quot;$&quot; modifiers ] modifiers = [modifier0, modifier1[, ...[, modifierN]]]  pattern — an address mask. Every request URL is collated to this mask. In the template, you can also use the special characters described below. Note that AdGuard truncates URLs to a length of 4096 characters in order to speed up matching and avoid issues with ridiculously long URLs.@@ — a marker that is used in rules of exception. To turn off filtering for a request, start your rule with this marker.modifiers — parameters that &quot;clarify&quot; the basic rule. Some of them limit the rule scope and some can completely change they way it works. "},{"title":"Special characters​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-special-characters","content":"* — a wildcard character. It is used to represent any set of characters. This can also be an empty string or a string of any length.|| — an indication to apply the rule to the specified domain and its subdomains. With this character, you do not have to specify a particular protocol and subdomain in address mask. It means that || stands for http://*., https://*., ws://*., wss://*. at once.^ — a separator character mark. Separator character is any character, but a letter, a digit, or one of the following: _ - . %. In this example separator characters are shown in bold: http://example.com/?t=1&amp;t2=t3. The end of the address is also accepted as separator.| — a pointer to the beginning or the end of address. The value depends on the character placement in the mask. For example, a rule swf| corresponds to http://example.com/annoyingflash.swf , but not to http://example.com/swf/index.html. |http://example.org corresponds to http://example.org, but not to http://domain.com?url=http://example.org. note |, ||, ^ can only be used with rules that have a URL pattern. For example, ||example.com##.advert is incorrect and will be ignored by the blocker. Visual representation We also recommend to get acquainted with the Adblock Plus filter cheatsheet, for better understanding of how such rules should be made. "},{"title":"Regular expressions support​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#regexp-support","content":"If you want even more flexibility in making rules, you can use Regular expressions instead of a default simplified mask with special characters. Performance Rules with regular expressions work more slowly, therefore it is recommended to avoid them or to limit their scope to specific domains. If you want a blocker to determine a regular expression, the pattern has to look like this: pattern = &quot;/&quot; regexp &quot;/&quot;  For example, /banner\\d+/$third-party this rule will apply the regular expression banner\\d+ to all third-party requests. Exclusion rule with regular expression looks like this: @@/banner\\d+/. Compatibility AdGuard Safari and AdGuard for iOS do not fully support regular expressions because of Content Blocking API restrictions (look for &quot;The Regular expression format&quot; section). "},{"title":"Wildcard support for TLD (top-level domains)​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#wildcard-for-tld","content":"Wildcard characters are supported for TLDs of the domains in patterns of cosmetic, HTML filtering and JavaScript rules. For cosmetic rules, e.g. example.*##.banner, multiple domains are matched due to the part .*, i.e. example.com, sub.example.net, example.co.uk, etc. For basic rules the described logic is applicable only for the domains specified in $domain modifier, e.g. ||*/banners/*$image,domain=example.*. Compatibility In AdGuard for Windows, Mac, Android, and AdGuard Browser Extension rules with wildcard .* match any public suffix (or eTLD). But for AdGuard for Safari and iOS the supported list of top-level domains is limited due to Safari limitations. Rules with wildcard for TLD are not supported by AdGuard Content Blocker. "},{"title":"Basic rule examples​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rule-examples","content":"||example.com/ads/* — a simple rule, which corresponds to addresses like http://example.com/ads/banner.jpg and even http://subdomain.example.com/ads/otherbanner.jpg. ||example.org^$third-party — this rule blocks third-party requests to example.org and its subdomains. @@||example.com$document — general exception rule. It completely disables filtering for example.com and all subdomains. There is a number of modifiers which can be used in exception rules. For more details, please follow the link below. "},{"title":"Basic rule modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rule-modifiers","content":"Basic modifiersContent-type modifiersException modifiers note The features described in this section are intended for experienced users. They extend capabilities of &quot;Basic rules&quot;, but in order to use them you need to have a basic understanding of the way your browser works. You can change the behavior of a &quot;basic rule&quot; by using additional modifiers. Modifiers should be located in the end of the rule after a $ sign and be separated by commas. Example: ||domain.com^$popup,third-party  "},{"title":"Basic modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-basic-modifiers","content":"The following modifiers are the most simple and frequently used. Basically, they just limit the scope of rule application. Modifier \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tAdGuard for iOS\tAdGuard for Safari\tAdGuardコンテンツブロッカー$app\t✅\t❌\t❌\t❌\t❌\t❌ $denyallow\t✅\t✅\t✅\t✅\t✅\t❌ $domain\t✅\t✅\t✅\t✅ *\t✅ *\t✅ $header\t✅\t⏳\t⏳\t❌\t❌\t❌ $important\t✅\t✅\t✅\t✅\t✅\t❌ $match-case\t✅\t✅\t✅\t✅\t✅\t✅ $method\t✅\t✅\t✅\t❌\t❌\t❌ $popup\t✅ *\t✅\t✅\t✅ *\t✅ *\t❌ $third-party\t✅\t✅\t✅\t✅\t✅\t✅ $to\t✅\t✅\t✅\t❌\t❌\t❌ note ✅ — fully supported✅ * — supported, but reliability may vary or limitations may occur; check the modifier description for more details⏳ — feature that has been implemented or is planned to be implemented but is not yet available in any product❌ — not supported $app​ This modifier lets you narrow the rule coverage down to a specific application (or a list of applications). This might be not too important on Windows and Mac, but this is very important on mobile devices where some of the filtering rules must be app-specific. Android — use the app package name, e.g. org.example.app.Windows — use the process name, e.g. chrome.exe.Mac — use the bundle ID or the process name, e.g. com.google.Chrome. For Mac, you can find out the bundle ID or the process name of the app by viewing the respective request details in the Filtering log. Examples ||baddomain.com^$app=org.example.app — a rule to block requests that match the specified mask and are sent from the org.example.app Android app.||baddomain.com^$app=org.example.app1|org.example.app2 — the same rule but it works for both org.example.app1 and org.example.app2 apps. If you want the rule not to be applied to certain apps, start the app name with the ~ sign. ||baddomain.com^$app=~org.example.app — a rule to block requests that match the specified mask and are sent from any app except for the org.example.app.||baddomain.com^$app=~org.example.app1|~org.example.app2 — same as above, but now two apps are excluded: org.example.app1 and org.example.app2. Restrictions Apps in the modifier value cannot have a wildcard, e.g. $app=com.*.music. Rules with such modifier are considered invalid. Compatibility Only AdGuard for Windows, Mac, Android are technically capable of using rules with $app modifier.On Windows the process name is case-insensitive starting with AdGuard for Windows with CoreLibs v1.12 or later. $denyallow​ $denyallow modifier allows to avoid creating additional rules when it is needed to disable a certain rule for specific domains. $denyallow matches only target domains and not referrer domains. Adding this modifier to a rule is equivalent to excluding the domains by the rule's matching pattern or to adding the corresponding exclusion rules. To add multiple domains to one rule, use the | character as a separator. Examples This rule: *$script,domain=a.com|b.com,denyallow=x.com|y.com  is equivalent to this one: /^(?!.*(x.com|y.com)).*$/$script,domain=a.com|b.com  or to the combination of these three: *$script,domain=a.com|b.com @@||x.com$script,domain=a.com|b.com @@||y.com$script,domain=a.com|b.com  Restrictions The rule's matching pattern cannot target any specific domains, e.g. it cannot start with ||.Domains in the modifier value cannot be negated, e.g. $denyallow=~x.com, or have a wildcard TLD, e.g. $denyallow=x.*. The rules which violate these restrictions are considered invalid. Compatibility Rules with $denyallow modifier are not supported by AdGuard for iOS, Safari, and AdGuard Content Blocker. $domain​ $domain limits the rule scope to requests made from the specified domains and their subdomains (as indicated by the Referer HTTP header). Syntax The modifier is a list of one or more expressions separated by the | symbol, each of which is matched against a domain in a particular way depending on its type (see below). domains = [&quot;~&quot;] entry_0 [&quot;|&quot; [&quot;~&quot;] entry_1 [&quot;|&quot; [&quot;~&quot;]entry_2 [&quot;|&quot; ... [&quot;|&quot; [&quot;~&quot;]entry_N]]]] entry_i = ( regular_domain / any_tld_domain / regexp )  regular_domain — a regular domain name (domain.com). Corresponds the specified domain and its subdomains. It is matched lexicographically.any_tld_domain — a domain name ending with a wildcard character as a public suffix, e.g. for example.* it is co.uk in example.co.uk. Corresponds to the specified domain and its subdomains with any public suffix. It is matched lexicographically.regexp — a regular expression, starts and ends with /. The pattern works the same way as in the basic URL rules, but the characters /, $, and | must be escaped with \\. info Rules with $domain modifier as regular_domain or any_tld_domain are supported by all AdGuard products. Examples Just $domain: ||baddomain.com^$domain=example.org blocks requests that match the specified mask, and are sent from domain example.org or its subdomains.||baddomain.com^$domain=example.org|example.com — the same rule, but it works for both example.org and example.com. If you want the rule not to be applied to certain domains, start a domain name with ~ sign. $domain and negation ~: ||baddomain.com^$domain=example.org blocks requests that match the specified mask and are sent from the example.org domain or its subdomains.||baddomain.com^$domain=example.org|example.com — the same rule, but it works for both example.org and example.com.||baddomain.com^$domain=~example.org blocks requests matching the pattern sent from any domain except example.org and its subdomains.||baddomain.com^$domain=example.org|~foo.example.org blocks requests sent from example.org and its subdomains, except the subdomain foo.example.org.||baddomain.com^$domain=/(^\\|.+\\.)example\\.(com\\|org)\\$/ blocks requests sent from example.org and example.com domains and all their subdomains.||baddomain.com^$domain=~a.com|~b.*|~/(^\\|.+\\.)c\\.(com\\|org)\\$/ blocks requests sent from any domains, except a.com, b with any public suffix (b.com, b.co.uk, etc.), c.com, c.org, and their subdomains. $domain modifier matching target domain: In some cases the $domain modifier can match not only the referrer domain, but also the target domain. This happens when all the following conditions are met: The request has the document content typeThe rule pattern does not match any particular domainsThe rule pattern does not contain regular expressionsThe $domain modifier contains only excluded domains, e.g. $domain=~example.org|~example.com The following predicate should be satisfied to perform a target domain matching: 1 AND ((2 AND 3) OR 4)  That is, if the modifier $domain contains only excluded domains, then the rule does not need to meet the second and third conditions to match the target domain against the modifier $domain. If some of the conditions above are not met but the rule contains $cookie or $csp modifier, the target domain will still be matched. If the referrer matches a rule with $domain that explicitly excludes the referrer domain, then the rule will not be applied even if the target domain also matches the rule. This affects rules with $cookie and $csp modifiers, too. Examples *$cookie,domain=example.org|example.com will block cookies for all requests to and from example.org and example.com.*$document,domain=example.org|example.com will block all requests to and from example.org and example.com. In the following examples it is implied that requests are sent from http://example.org/page (the referrer) and the target URL is http://targetdomain.com/page. page$domain=example.org will be matched, as it matches the referrer domain.page$domain=targetdomain.com will be matched, as it matches the target domain and satisfies all requirements mentioned above.||*page$domain=targetdomain.com will not be matched, as the pattern ||*page may match specific domains, e.g. example.page.||*page$domain=targetdomain.com,cookie will be matched because the rule contains $cookie modifier despite the pattern ||*page may match specific domains./banner\\d+/$domain=targetdomain.com will not be matched as it contains a regular expression.page$domain=targetdomain.com|~example.org will not be matched because the referrer domain is explicitly excluded. $domain modifier limitations​ Restrictions Safari does not support the simultaneous use of allowed and disallowed domains, so rules like ||baddomain.com^$domain=example.org|~foo.example.org will not work in AdGuard for iOS and AdGuard for Safari. Compatibility Rules with regular expressions in the $domain modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.11 or later. In AdGuard for Windows, Mac and Android with CoreLibs v1.12 or later the $domain modifier can be alternatively spelled as $from. $header​ The $header modifier allows matching the HTTP response having a specific header with (optionally) a specific value. Syntax $header &quot;=&quot; h_name [&quot;:&quot; h_value] h_value = string / regexp  where: h_name — required, an HTTP header name. It is matched case-insesitively.h_value — optional, an HTTP header value matching expression, it may be one of the following: string — a sequence of characters. It is matched against the header value lexicographically;regexp — a regular expression, starts and ends with /. The pattern works the same way as in the basic URL rules, but the characters /, $ and , must be escaped with \\. The modifier part, &quot;:&quot; h_value, may be omitted. In that case, the modifier matches the header name only. Examples ||example.com^$header=set-cookie:foo blocks requests whose responses have the Set-Cookie header with the value matching foo literally.||example.com^$header=set-cookie blocks requests whose responses have the Set-Cookie header with any value.@@||example.com^$header=set-cookie:/foo\\, bar\\$/ unblocks requests whose responses have the Set-Cookie header with value matching the foo, bar$ regular expression.@@||example.com^$header=set-cookie unblocks requests whose responses have a Set-Cookie header with any value. Compatibility Rules with the $header modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.11 or later. $important​ The $important modifier applied to a rule increases its priority over rules without the identical modifier. Even over basic exception rules. Go to rules priorities for more details. Examples ! blocking rule will block all requests despite of the exception rule ||example.org^$important @@||example.org^  ! if the exception rule also has `$important` modifier, it will prevail and requests won't be blocked ||example.org^$important @@||example.org^$important  $match-case​ This modifier defines a rule which applies only to addresses that match the case. Default rules are case-insensitive. Examples */BannerAd.gif$match-case — this rule will block http://example.com/BannerAd.gif, but not http://example.com/bannerad.gif. Compatibility Rules with the $match-case are supported by AdGuard for iOS and AdGuard for Safari with SafariConverterLib v2.0.43 or later. All other products already support this modifier. $method​ This modifier limits the rule scope to requests that use the specified set of HTTP methods. Negated methods are allowed. The methods must be specified in all lowercase characters, but are matched case-insensitively. To add multiple methods to one rule, use the vertical bar | as a separator. Examples ||evil.com^$method=get|head blocks only GET and HEAD requests to evil.com.||evil.com^$method=~post|~put blocks any requests to evil.com except POST or PUT.@@||evil.com$method=get unblocks only GET requests to evil.com.@@||evil.com$method=~post unblocks any requests to evil.com except POST. Restrictions Rules with mixed negated and not negated values are considered invalid. So, for example, the rule ||evil.com^$method=get|~head will be rejected. Compatibility Rules with $method modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.12 or later and AdGuard Browser Extension for Chrome, Firefox, and Edge with TSUrlFilter v2.1.1 or later. $popup​ AdGuard will try to close the browser tab with any address that matches a blocking rule with this modifier. Please note that not all the tabs can be closed. Examples ||domain.com^$popup — if you try to go to http://domain.com/ from any page in the browser, a new tab in which specified site has to be opened will be closed by this rule. Compatibility $popup modifier works best in AdGuard Browser Extension.In AdGuard for Safari and iOS, $popup rules simply block the page right away.In AdGuard for Windows, Mac, and Android, $popup modifier may not detect a popup in some cases and it will not be blocked. $popup modifier applies the document content type with a special flag which is passed to a blocking page. Blocking page itself can do some checks and close the window if it is really a popup. Otherwise, page should be loaded. It can be combined with other request type modifiers, such as $third-party and $important.Rules with $popup modifier are not supported by AdGuard Content Blocker. $third-party​ A restriction of third-party and own requests. A third-party request is a request from a different domain. For example, a request to example.org from domain.com is a third-party request. note To be considered as such, a third-party request should meet one of the following conditions: Its referrer is not a subdomain of the target domain or vice versa. For example, a request to subdomain.example.org from example.org is not a third-party requestIts Sec-Fetch-Site header is set to cross-site Examples $third-party: ||domain.com^$third-party — this rule applies to all domains, except domain.com and its subdomains. An example of a third-party request: http://example.org/banner.jpg. If there is a $~third-party modifier, the rule is only applied to the requests that are not from third parties. Which means, they have to be sent from the same domain. $~third-party: ||domain.com$~third-party — this rule is applied exclusively to domain.com. Example of a non third-party request: http://domain.com/icon.ico. note You may use a shorter name (alias) instead of using the full modifier name: $3p. $to​ $to limits the rule scope to requests made to the specified domains and their subdomains. To add multiple domains to one rule, use the | character as a separator. Examples /ads$to=evil.com|evil.org blocks any request to evil.com or evil.org and their subdomains with a path matching /ads./ads$to=~not.evil.com|evil.com blocks any request to evil.com and its subdomains, with a path matching /ads, except requests to not.evil.com and its subdomains./ads$to=~good.com|~good.org blocks any request with a path matching /ads, except requests to good.com or good.org and their subdomains. Restrictions $denyallow can not be used together with $to. It can be expressed with inverted $to: $denyallow=a.com|b.com is equivalent to $to=~a.com|~b.com. Compatibility Rules with the $to modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.12 or later and AdGuard Browser Extension with TSUrlFilter v2.1.3 or later. "},{"title":"Content-type modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#content-type-modifiers","content":"There is a set of modifiers, which can be used to limit the rule's application area to certain type of content. These modifiers can also be combined to cover, for example, both images and scripts. Compatibility There is a big difference in how AdGuard determines the content type on different platforms. For AdGuard Browser Extension, content type for every request is provided by the browser. AdGuard for Windows, Mac, and Android use the following method: first, the apps try to determine the type of the request by the Sec-Fetch-Dest request header or by the filename extension. If the request is not blocked at this stage, the type will be determined using the Content-Type header at the beginning of the server response. Examples of content-type modifiers ||example.org^$image — corresponds to all images from example.org.||example.org^$script,stylesheet — corresponds to all the scripts and styles from example.org.||example.org^$~image,~script,~stylesheet — corresponds to all requests to example.org except for the images, scripts and styles. Modifier \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tAdGuard for iOS\tAdGuard for Safari\tAdGuardコンテンツブロッカー$document\t✅\t✅\t✅\t✅\t✅\t❌ $font\t✅\t✅\t✅\t✅\t✅\t✅ $image\t✅\t✅\t✅\t✅\t✅\t✅ $media\t✅\t✅\t✅\t✅\t✅\t✅ $object\t✅\t✅\t✅\t✅\t✅\t✅ $other\t✅\t✅\t✅\t✅\t✅\t❌ $ping\t✅ *\t✅\t✅\t❌\t❌\t✅ $script\t✅\t✅\t✅\t✅\t✅\t✅ $stylesheet\t✅\t✅\t✅\t✅\t✅\t✅ $subdocument\t✅ *\t✅\t✅\t✅\t✅\t❌ $websocket\t✅\t✅\t✅\t✅ *\t✅ *\t✅ $xmlhttprequest\t✅\t✅\t✅\t✅\t✅\t✅ $webrtc 🚫\t❌\t❌\t❌\t❌\t❌\t❌ $object-subrequest 🚫\t❌\t❌\t❌\t❌\t❌\t❌ note ✅ — fully supported✅ * — supported, but reliability may vary or limitations may occur; check the modifier description for more details❌ — not supported🚫 — removed and no longer supported $document​ The rule corresponds to the main frame document requests, i.e. HTML documents that are loaded in the browser tab. It does not match iframes, there is a $subdocument modifier for these. By default, AdGuard does not block the requests that are loaded in the browser tab (e.g. &quot;main frame bypass&quot;). The idea is not to prevent pages from loading as the user clearly indicated that they want this page to be loaded. However, if the $document modifier is specified explicitly, AdGuard does not use that logic and prevents the page load. Instead, it responds with a &quot;blocking page&quot;. If this modifier is used with an exclusion rule (@@), it completely disables blocking on corresponding pages. It is equivalent to using $elemhide, $content, $urlblock, $jsinject, $extension modifiers simultaneously. Examples @@||example.com^$document completely disables filtering on all pages at example.com and all subdomains. ||example.com^$document blocks HTML document request to example.com with a blocking page. ||example.com^$document,redirect=noopframe redirects HTML document request to example.com to an empty html document. ||example.com^$document,removeparam=test removes test query parameter from HTML document request to example.com. ||example.com^$document,replace=/test1/test2/ replaces test1 with test2 in HTML document request to example.com. note You may use a shorter name (alias) instead of using the full modifier name: $doc. $font​ The rule corresponds to requests for fonts, e.g. .woff filename extension. $image​ The rule corresponds to images requests. $media​ The rule corresponds to requests for media files — music and video, e.g. .mp4 files. $object​ The rule corresponds to browser plugins resources, e.g. Java or Flash. $other​ The rule applies to requests for which the type has not been determined or does not match the types listed above. $ping​ The rule corresponds to requests caused by either navigator.sendBeacon() or the ping attribute on links. Compatibility AdGuard for Windows, Mac, and Android often cannot accurately detect navigator.sendBeacon(). Using $ping is not recommended in the filter lists that are supposed to be used by CoreLibs-based AdGuard products. Rules with $ping modifier are not supported by AdGuard for Safari and iOS. $script​ The rule corresponds to script requests, e.g. javascript, vbscript. $stylesheet​ The rule corresponds to CSS files requests. note You may use a shorter name (alias) instead of using the full modifier name: $css. $subdocument​ The rule corresponds to requests for built-in pages — HTML tags frame and iframe. Examples ||example.com^$subdocument blocks built-in page requests (frame and iframe) to example.com and all its subdomains anywhere.||example.com^$subdocument,domain=domain.com blocks built-in page requests (frame и iframe) to example.com (and its subdomains) from domain.com and all its subdomains. note You may use a shorter name (alias) instead of using the full modifier name: $frame. Compatibility In AdGuard for Windows, Mac, and Android subdocuments are being detected by the Sec-Fetch-Dest header if it is present. Otherwise, some main pages may be treated as subdocuments. Rules with $subdocument modifier are not supported by AdGuard Content Blocker. $websocket​ The rule applies only to WebSocket connections. Compatibility $websocket modifier is supported in all AdGuard products except AdGuard Content Blocker. As for AdGuard for Safari and AdGuard for iOS, it's supported on devices with macOS Monterey (version 12) and iOS 16 or higher. $xmlhttprequest​ The rule applies only to ajax requests (requests sent via javascript object XMLHttpRequest). note You may use a shorter name (alias) instead of using the full modifier name: $xhr. Compatibility AdGuard for Windows, Mac, Android when filtering older browsers cannot accurately detect this type and sometimes detects it as $other or $script. They can only reliably detect this content type when filtering modern browsers that support Fetch metadata request headers. $object-subrequest (removed)​ Removal notice $object-subrequest modifier is removed and is no longer supported. Rules with it are considered as invalid. The rule corresponds to requests by browser plugins (it is usually Flash). $webrtc (removed)​ Removal notice This modifier is removed and is no longer supported. Rules with it are considered as invalid. If you need to suppress WebRTC, consider using the nowebrtc scriptlet. The rule applies only to WebRTC connections. Examples ||example.com^$webrtc,domain=example.org blocks webRTC connections to example.com from example.org.@@*$webrtc,domain=example.org disables the RTC wrapper for example.org. "},{"title":"Exception rules modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#exception-modifiers","content":"Exception rules disable the other basic rules for the addresses to which they correspond. They begin with a @@ mark. All the basic modifiers listed above can be applied to them and they also have a few special modifiers. Visual representation We recommend to get acquainted with the Adblock Plus filter cheatsheet, for better understanding of how exception rules should be made. Modifier \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tAdGuard for iOS\tAdGuard for Safari\tAdGuardコンテンツブロッカー$content\t✅\t❌\t✅\t❌\t❌\t❌ $elemhide\t✅\t✅\t✅\t✅\t✅\t✅ $extension\t✅\t❌\t❌\t❌\t❌\t❌ $jsinject\t✅\t✅\t✅\t✅\t✅\t❌ $stealth\t✅\t✅\t✅\t❌\t❌\t❌ $urlblock\t✅\t✅\t✅\t✅ *\t✅ *\t❌ $genericblock\t✅\t✅\t✅\t✅ *\t✅ *\t❌ $generichide\t✅\t✅\t✅\t✅\t✅\t✅ $specifichide\t✅\t✅\t✅\t❌\t❌\t❌ note ✅ — fully supported✅ * — supported, but reliability may vary or limitations may occur; check the modifier description for more details❌ — not supported $content​ Disables HTML filtering, $hls, $replace, and $jsonprune rules on the pages that match the rule. Examples @@||example.com^$content disables all content modifying rules on pages at example.com and all its subdomains. $elemhide​ Disables any cosmetic rules on the pages matching the rule. Examples @@||example.com^$elemhide disables all cosmetic rules on pages at example.com and all subdomains. note You may use a shorter name (alias) instead of using the full modifier name: $ehide. $extension​ Disables specific userscripts or all userscripts for a given domain. Syntax $extension[=&quot;userscript_name1&quot;[|&quot;userscript_name2&quot;[|&quot;userscript_name3&quot;[...]]]]  userscript_name(i) stands for a specific userscript name to be disabled by the modifier. The modifier can contain any number of userscript names or none. In the latter case the modifier disables all the userscripts. Userscript names usually contain spaces or other special characters, which is why you should enclose the name in quotes. Both single (') and double (&quot;) ASCII quotes are supported. Multiple userscript names should be separated with a pipe (|). However, if a userscript name is a single word without any special characters, it can be used without quotes. You can also exclude a userscript by adding a ~ character before it. In this case, the userscript will not be disabled by the modifier. $extension=~&quot;userscript name&quot;  note When excluding a userscript, you must place ~ outside the quotes. If a userscript's name includes quotes (&quot;), commas (,), or pipes (|), they must be escaped with a backslash (\\). $extension=&quot;userscript name\\, with \\&quot;quote\\&quot;&quot;  Examples @@||example.com^$extension=&quot;AdGuard Assistant&quot; disables the AdGuard Assistant userscript on example.com website.@@||example.com^$extension=MyUserscript disables the MyUserscript userscript on example.com website.@@||example.com^$extension='AdGuard Assistant'|'Popup Blocker' disables both AdGuard Assistant and Popup Blocker userscripts on example.com website.@@||example.com^$extension=~&quot;AdGuard Assistant&quot; disables all user scripts on example.com website, except AdGuard Assistant.@@||example.com^$extension=~&quot;AdGuard Assistant&quot;|~&quot;Popup Blocker&quot; disables all user scripts on example.com website, except AdGuard Assistant and Popup Blocker.@@||example.com^$extension no userscript will work on webpages on example.com.@@||example.com^$extension=&quot;AdGuard \\&quot;Assistant\\&quot;&quot; disables the AdGuard &quot;Assistant&quot; userscript on example.com website. Compatibility Only AdGuard for Windows, Mac, Android are technically capable of using rules with $extension modifier.Rules with $extension modifier with specific userscript name are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.13 or later. $jsinject​ Forbids adding of javascript code to the page. You can read about scriptlets and javascript rules further. Examples @@||example.com^$jsinject disables javascript on pages at example.com and all subdomains. $stealth​ Disables the Stealth Mode module for all corresponding pages and requests. Syntax $stealth [= opt1 [| opt2 [| opt3 [...]]]]  opt(i) stand for certain Stealth Mode options disabled by the modifier. The modifier can contain any number of options (see below) or none. In the latter case the modifier disables all the Stealth Mode features. The list of the available modifier options: searchqueries disables Hide your search queries optiondonottrack disables Ask websites not to track you option3p-cookie disables Self-destructing third-party cookies option1p-cookie disables Self-destructing first-party cookies option3p-cache disables Disable cache for third-party requests option3p-auth disables Block third-party Authorization header optionwebrtc disables Block WebRTC optionpush disables Block Push API optionlocation disables Block Location API optionflash disables Block Flash optionjava disables Block Java optionreferrer disables Hide Referer from third parties optionuseragent disables Hide your User-Agent optionip disables Hide your IP address optionxclientdata disables Remove X-Client-Data header from HTTP requests optiondpi disables Protect from DPI option Examples @@||example.com^$stealth disables Stealth Mode for example.com (and subdomains) requests, except for blocking cookies and hiding tracking parameters (see below).@@||domain.com^$script,stealth,domain=example.com disables Stealth Mode only for script requests to domain.com (and its subdomains) on example.com and all its subdomains.@@||example.com^$stealth=3p-cookie|dpi disables blocking third-party cookies and DPI fooling measures for example.com. note Blocking cookies and removing tracking parameters is achieved by using rules with the $cookie, $urltransform and $removeparam modifiers. Exception rules that contain only the $stealth modifier will not do these things. If you want to completely disable all Stealth mode features for a given domain, you must include all three modifiers: @@||example.org^$stealth,removeparam,cookie. Restrictions Modifier options must be lowercase, i.e. $stealth=DPI will be rejected.Modifier options cannot be negated, i.e. $stealth=~3p-cookie will be rejected. Compatibility Stealth Mode is available in AdGuard for Windows, Mac, and Android, and AdGuard Browser Extension. All other products will ignore the rules with $stealth modifier.Rules with $stealth modifier with specific options are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.10 or later. $urlblock​ Disables blocking of all requests sent from the pages matching the rule and disables all $cookie rules. Examples @@||example.com^$urlblock — any requests sent from the pages at example.com and all subdomains are not going to be blocked. Compatibility In AdGuard for iOS and AdGuard for Safari, rules with $urlblock work as $document exclusion — unblock everything. Rules with $urlblock modifier are not supported by AdGuard Content Blocker. Generic rules​ Before we can proceed to the next modifiers, we have to make a definition of generic rules. The rule is generic if it is not limited to specific domains. Wildcard character * is supported as well. For example, these rules are generic: ###banner *###banner #@#.adsblock *#@#.adsblock ~domain.com###banner ||domain.com^ ||domain.com^$domain=~example.com  And these are not: domain.com###banner ||domain.com^$domain=example.com  $genericblock​ Disables generic basic rules on pages that correspond to exception rule. Examples @@||example.com^$genericblock disables generic basic rules on any pages at example.com and all subdomains. Compatibility In AdGuard for iOS and AdGuard for Safari, rules with $genericblock work as $document exclusion — unblock everything. Rules with $genericblock modifier are not supported by AdGuard Content Blocker. $generichide​ Disables all generic cosmetic rules on pages that correspond to the exception rule. Examples @@||example.com^$generichide disables generic cosmetic rules on any pages at example.com and its subdomains. note You may use a shorter name (alias) instead of using the full modifier name: $ghide. specifichide​ Disables all specific element hiding and CSS rules, but not general ones. Has an opposite effect to $generichide. Examples @@||example.org^$specifichide disables example.org##.banner but not ##.banner. note You may use a shorter name (alias) instead of using the full modifier name: $shide. note All cosmetic rules — not just specific ones — can be disabled by $elemhide modifier. Compatibility Rules with $specifichide modifier are not supported by AdGuard for iOS, AdGuard for Safari, and AdGuard Content Blocker. "},{"title":"Advanced capabilities​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#advanced-modifiers","content":"These modifiers are able to completely change the behavior of basic rules. Modifier \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tAdGuard for iOS\tAdGuard for Safari\tAdGuardコンテンツブロッカー$all\t✅\t✅\t✅\t✅\t✅\t❌ $badfilter\t✅\t✅\t✅\t✅\t✅\t❌ $cookie\t✅\t✅\t✅\t❌\t❌\t❌ $csp\t✅\t✅\t✅\t❌\t❌\t❌ $hls\t✅\t❌\t❌\t❌\t❌\t❌ $inline-font\t✅\t✅\t✅\t❌\t❌\t❌ $inline-script\t✅\t✅\t✅\t❌\t❌\t❌ $jsonprune\t✅\t❌\t❌\t❌\t❌\t❌ $xmlprune\t✅\t❌\t❌\t❌\t❌\t❌ $network\t✅\t❌\t❌\t❌\t❌\t❌ $permissions\t✅\t⏳\t⏳\t❌\t❌\t❌ $redirect\t✅\t✅\t✅\t❌\t❌\t❌ $redirect-rule\t✅\t✅\t✅\t❌\t❌\t❌ $referrerpolicy\t✅\t❌\t❌\t❌\t❌\t❌ $removeheader\t✅\t✅\t✅\t❌\t❌\t❌ $removeparam\t✅\t✅\t✅\t❌\t❌\t❌ $replace\t✅\t❌\t✅\t❌\t❌\t❌ $urltransform\t✅\t❌\t❌\t❌\t❌\t❌ noop\t✅\t✅\t✅\t✅\t✅\t❌ $empty 👎\t✅\t✅\t✅\t❌\t❌\t❌ $mp4 👎\t✅\t✅\t✅\t❌\t❌\t❌ note ✅ — fully supported✅ * — supported, but reliability may vary or limitations may occur; check the modifier description for more details⏳ — feature that has been implemented or is planned to be implemented but is not yet available in any product❌ — not supported👎 — deprecated; still supported but will be removed in the future $all​ $all modifier is made of all content-types modifiers and $popup. E.g. rule ||example.org^$all is converting into rule: ||example.org^$document,subdocument,font,image,media,object,other,ping,script,stylesheet,websocket,xmlhttprequest,popup  This modifier cannot be used as an exception with the @@ mark. Compatibility Rules with $all modifier are not supported by AdGuard Content Blocker. $badfilter​ The rules with the $badfilter modifier disable other basic rules to which they refer. It means that the text of the disabled rule should match the text of the $badfilter rule (without the $badfilter modifier). Examples ||example.com$badfilter disables ||example.com||example.com$image,badfilter disables ||example.com$image@@||example.com$badfilter disables @@||example.com||example.com$domain=domain.com,badfilter disables ||example.com$domain=domain.com Rules with $badfilter modifier can disable other basic rules for specific domains if they fulfill the following conditions: The rule has a $domain modifierThe rule does not have a negated domain ~ in $domain modifier value In that case, the $badfilter rule will disable the corresponding rule for domains specified in both the $badfilter and basic rules. Please note that wildcard-TLD logic works here as well. Examples /some$domain=example.com|example.org|example.io is disabled for example.com by /some$domain=example.com,badfilter/some$domain=example.com|example.org|example.io is disabled for example.com and example.org by /some$domain=example.com|example.org,badfilter/some$domain=example.com|example.org and /some$domain=example.io are disabled completely by /some$domain=example.com|example.org|example.io,badfilter/some$domain=example.com|example.org|example.io is disabled completely by /some$domain=example.*,badfilter/some$domain=example.* is disabled for example.com and example.org by /some$domain=example.com|example.org,badfilter/some$domain=example.com|example.org|example.io is NOT disabled for example.com by /some$domain=example.com|~example.org,badfilter because the value of $domain modifier contains a negated domain Compatibility Rules with $badfilter modifier are not supported by AdGuard Content Blocker. $cookie​ The $cookie modifier completely changes rule behavior. Instead of blocking a request, this modifier makes AdGuard suppress or modify the Cookie and Set-Cookie headers. Multiple rules matching a single request In case if multiple $cookie rules match a single request, we will apply each of them one by one. Syntax $cookie [= name[; maxAge = seconds [; sameSite = strategy ]]]  where: name — optional, string or regular expression to match cookie name.seconds — number of seconds for current time to offset the expiration date of cookie.strategy — string for Same-Site strategy to make cookie use. For example, ||example.org^$cookie=NAME;maxAge=3600;sameSite=lax  every time AdGuard encounters a cookie called NAME in a request to example.org, it will do the following: Set its expiration date to current time plus 3600 secondsMakes the cookie use Same-Site &quot;lax&quot; strategy. Escaping special characters If regular expression name is used for matching, two characters must be escaped: comma , and dollar sign $. Use backslash \\ escape each of them. For example, escaped comma looks like this: \\,. Examples ||example.org^$cookie blocks all cookies set by example.org; this is an equivalent to setting maxAge=0$cookie=__cfduid blocks CloudFlare cookie everywhere$cookie=/__utm[a-z]/ blocks Google Analytics cookies everywhere||facebook.com^$third-party,cookie=c_user prevents Facebook from tracking you even if you are logged in There are two methods to deactivate $cookie rules: the primary method involves using an exception marked with @@ — @@||example.org^$cookie. The alternative method employs a $urlblock exception (also included under the $document exception alias — $elemhide,jsinject,content,urlblock,extension). Here's how it works: @@||example.org^$cookie unblocks all cookies set by example.org@@||example.org^$urlblock unblocks all cookies set by example.org and disables blocking of all requests sent from example.org@@||example.org^$cookie=concept unblocks a single cookie named concept@@||example.org^$cookie=/^_ga_/ unblocks every cookie that matches the regular expression Restrictions $cookie rules support three types of modifiers: $domain, $~domain, $important, $third-party, and $~third-party. Compatibility Rules with $cookie modifier are not supported by AdGuard Content Blocker, AdGuard for iOS, and AdGuard for Safari. $csp​ This modifier completely changes the rule behavior. If it is applied to a rule, the rule will not block the matching request. Response headers will be modified instead. info In order to use this type of rules, it is required to have the basic understanding of the Content Security Policy security layer. For the requests matching a $csp rule, we will strengthen response security policy by enhancing the content security policy, similar to the content security policy of the $csp modifier contents. $csp rules are applied independently from any other rule type. Only document-level exceptions can influence it (see the examples section), but no other basic rules. Multiple rules matching a single request In case if multiple $csp rules match a single request, we will apply each of them. Syntax $csp value syntax is similar to the Content Security Policy header syntax. $csp value can be empty in the case of exception rules. See examples section below. Examples ||example.org^$csp=frame-src 'none' blocks all frames on example.org and its subdomains.@@||example.org/page/*$csp=frame-src 'none' disables all rules with the $csp modifier exactly matching frame-src 'none' on all the pages matching the rule pattern. For instance, the rule above.@@||example.org/page/*$csp disables all the $csp rules on all the pages matching the rule pattern.||example.org^$csp=script-src 'self' 'unsafe-eval' http: https: disables inline scripts on all the pages matching the rule pattern.@@||example.org^$document or @@||example.org^$urlblock disables all the $csp rules on all the pages matching the rule pattern. Restrictions There are a few characters forbidden in the $csp value: ,, $.$csp rules support limited list of modifiers: $domain, $important, $subdocument.Rules with report-* directives are considered invalid. Compatibility Rules with $csp modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and AdGuard for Safari. $hls​ $hls rules modify the response of a matching request. They are intended as a convenient way to remove segments from HLS playlists (RFC 8216). note The word &quot;segment&quot; in this document means either a &quot;Media Segment&quot; or a &quot;playlist&quot; as part of a &quot;Master Playlist&quot;: $hls rules do not distinguish between a &quot;Master Playlist&quot; and a &quot;Media Playlist&quot;. Syntax ||example.org^$hls=urlpattern removes segments whose URL matches the URL pattern urlpattern. The pattern works just like the one in basic URL rules, however, the characters /, $ and , must be escaped with \\ inside urlpattern.||example.org^$hls=/regexp/options removes segments where the URL or one of the tags (for certain options, if present) is matched by the regular expression regexp. Available options are: t — instead of testing the segment's URL, test each of the segment's tags against the regular expression. A segment with a matching tag is removed;i — make the regular expression case-insensitive. The characters /, $ and , must be escaped with \\ inside regexp. Exceptions Basic URL exceptions shall not disable rules with $hls modifier. They can be disabled as described below: @@||example.org^$hls disables all $hls rules for responses from URLs matching ||example.org^.@@||example.org^$hls=text disables all $hls rules with the value of the $hls modifier equal to text for responses from URLs matching ||example.org^. tip $hls rules can also be disabled by $document, $content and $urlblock exception rules. note When multiple $hls rules match the same request, their effect is cumulative. Examples ||example.org^$hls=\\/videoplayback^?*&amp;source=dclk_video_ads removes all segments with the matching URL.||example.org^$hls=/\\/videoplayback\\/?\\?.*\\&amp;source=dclk_video_ads/i achieves more or less the same with a regular expression instead of a URL pattern.||example.org^$hls=/#UPLYNK-SEGMENT:.*\\,ad/t removes all segments which have the matching tag. Anatomy of an HLS playlist A quick summary of the specification: An HLS playlist is a collection of text linesA line may be empty, a comment (starts with #), a tag (also starts with #, can only be recognized by name) or a URLA URL line is called a &quot;segment&quot;Tags may apply to a single segment, i.e. the first URL line after the tag, to all segments following the tag and until the tag with the same name, or to the whole playlist Some points specific to the operation of $hls rules: When a segment is removed, all of the tags that apply only to that segment are also removedWhen there is a tag that applies to multiple segments, and all of those segments are removed, the tag is also removedSince there is no way to recognize different kinds of tags by syntax, we recognize all of the tags specified by the RFC, plus some non-standard tags that we have seen in the field. Any lines starting with # and not recognized as a tag are passed through without modification, and are not matched against the rulesTags will not be matched if they apply to the entire playlist, and $hls rrules cannot be used to remove them, as these rule types are intended for segment removals. If you know what you are doing, you can use $replace rules to remove or rewrite just a single tag from the playlist An example of a transformation done by the rules: Original response #EXTM3U #EXT-X-TARGETDURATION:10 #EXTINF,5 preroll.ts #UPLYNK-SEGMENT:abc123,ad #UPLYNK-KEY:aabb1122 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #UPLYNK-SEGMENT:abc123,segment #UPLYNK-KEY:ccdd2233 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #EXT-X-ENDLIST  Applied rules ||example.org^$hls=preroll ||example.org^$hls=/#UPLYNK-SEGMENT:.*\\,ad/t  Modified response #EXTM3U #EXT-X-TARGETDURATION:10 #UPLYNK-SEGMENT:abc123,segment #UPLYNK-KEY:ccdd2233 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #EXT-X-ENDLIST  Restrictions $hls rules are only allowed in trusted filters.$hls rules are compatible with the modifiers $domain, $third-party, $app, $important, $match-case, and $xmlhttprequest only.$hls rules only apply to HLS playlists, which are UTF-8 encoded text starting with the line #EXTM3U. Any other response will not be modified by these rules.$hls rules do not apply if the size of the original response is more than 10 MB. Compatibility Rules with the $hls modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.10 or later. $inline-script​ The $inline-script modifier is designed to block inline JavaScript embedded into the web page, using Content Security Policy (CSP). It improves security and privacy by preventing application of inline ads or potentially malicious scripts. The rule ||example.org^$inline-script is converting into the CSP-syntax rule: ||example.org^$csp=script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:  $inline-font​ The $inline-font modifier is designed to block inline fonts embedded into the web page, using Content Security Policy (CSP). It improves security and privacy by preventing application of inline fonts that could be used for data collection and fingerprinting. The rule ||example.org^$inline-font is converting into the CSP-syntax rule: ||example.org^$csp=font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:  $jsonprune​ $jsonprune rules modify the response to a matching request by removing JSON items that match a modified JSONPath expression. They do not modify responses which are not valid JSON documents. In AdGuard for Windows, Mac, and Android with CoreLibs v1.11 or later, $jsonprune also supports modifying JSONP (padded JSON) documents. Syntax ||example.org^$jsonprune=expression removes items that match the modified JSONPath expression expression from the response. Due to the way rule parsing works, the characters $ and , must be escaped with \\ inside expression. The modified JSONPath syntax has the following differences from the original: Script expressions are not supportedThe supported filter expressions are: ?(has &lt;key&gt;) — true if the current object has the specified key?(key-eq &lt;key&gt; &lt;value&gt;) — true if the current object has the specified key, and its value is equal to the specified value?(key-substr &lt;key&gt; &lt;value&gt;) — true if the specified value is a substring of the value of the specified key of the current object Whitespace outside of double- or single-quoted strings has no meaningBoth double- and single-quoted strings can be usedExpressions ending with .. are not supportedMultiple array slices can be specified in square brackets There are various online tools that make working with JSONPath expressions more convenient: https://www.site24x7.com/tools/jsonpath-finder-validator.html https://jsonpathfinder.com/ https://jsonpath.com/ Keep in mind, though, that all JSONPath implementations have unique features/quirks and are subtly incompatible with each other. Exceptions Basic URL exceptions shall not disable rules with the $jsonprune modifier. They can be disabled as described below: @@||example.org^$jsonprune disables all $jsonprune rules for responses from URLs matching ||example.org^.@@||example.org^$jsonprune=text disables all $jsonprune rules with the value of the $jsonprune modifier equal to text for responses from URLs matching ||example.org^. $jsonprune rules can also be disabled by $document, $content and $urlblock exception rules. note When multiple $jsonprune rules match the same request, they are sorted in lexicographical order, the first rule is applied to the original response, and each of the remaining rules is applied to the result of applying the previous one. Examples ||example.org^$jsonprune=\\$..[one\\, &quot;two three&quot;] removes all occurrences of the keys &quot;one&quot; and &quot;two three&quot; anywhere in the JSON document. Input { &quot;one&quot;: 1, &quot;two&quot;: { &quot;two three&quot;: 23, &quot;four five&quot;: 45 } }  Output { &quot;two&quot;: { &quot;four five&quot;: 45 } }  ||example.org^$jsonprune=\\$.a[?(has ad_origin)] removes all children of a that have an ad_origin key. Input { &quot;a&quot;: [ { &quot;ad_origin&quot;: &quot;https://example.org&quot;, &quot;b&quot;: 42 }, { &quot;b&quot;: 1234 } ] }  Output { &quot;a&quot;: [ { &quot;b&quot;: 1234 } ] }  ||example.org^$jsonprune=\\$.*.*[?(key-eq 'Some key' 'Some value')] removes all items that are at nesting level 3 and have a property &quot;Some key&quot; equal to &quot;Some value&quot;. Input { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: {&quot;Some key&quot;: &quot;Some value&quot;}, &quot;d&quot;: {&quot;Some key&quot;: &quot;Other value&quot;}}}, &quot;e&quot;: {&quot;f&quot;: [{&quot;Some key&quot;: &quot;Some value&quot;}, {&quot;Some key&quot;: &quot;Other value&quot;}]} }  Output { &quot;a&quot;: {&quot;b&quot;: {&quot;d&quot;: {&quot;Some key&quot;: &quot;Other value&quot;}}}, &quot;e&quot;: {&quot;f&quot;: [{&quot;Some key&quot;: &quot;Other value&quot;}]} }  Nested JSONPath expressions In AdGuard for Windows, Mac and Android with CoreLibs v1.11 or later, JSONPath expressions may be used as keys in filter expressions. ||example.org^$jsonprune=\\$.elems[?(has &quot;\\$.a.b.c&quot;)] removes all children of elems which have a property selectable by the JSONPath expression $.a.b.c. Input { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}}, &quot;k&quot;: &quot;v&quot; }, { &quot;d&quot;: {&quot;e&quot;: {&quot;f&quot;: 123}}, &quot;k1&quot;: &quot;v1&quot; } ] }  Output { &quot;elems&quot;: [ { &quot;d&quot;: {&quot;e&quot;: {&quot;f&quot;: 123}}, &quot;k1&quot;: &quot;v1&quot; } ] }  ||example.org^$jsonprune=\\$.elems[?(key-eq &quot;\\$.a.b.c&quot; &quot;abc&quot;)] removes all children of elems which have a property selectable by the JSONPath expression $.a.b.c with a value equal to &quot;abc&quot;. Input { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}}, }, { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: &quot;abc&quot;}} } ] }  Output { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}} } ] }  Restrictions $jsonprune rules are only compatible with these modifiers: $domain, $third-party, $app, $important, $match-case, and $xmlhttprequest.$jsonprune rules do not apply if the size of the original response is greater than 10 MB. Compatibility Rules with the $jsonprune modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.10 or later. $xmlprune​ $xmlprune rules modify the response to a matching request by removing XML items that match an XPath 1.0 expression. The expression must return a node-set. $xmlprune rules do not modify responses which are not well-formed XML documents. Syntax ||example.org^$xmlprune=expression removes items that match the XPath expression expression from the response. Due to the way rule parsing works, the characters $ and , must be escaped with \\ inside expression. Exceptions Basic URL exceptions shall not disable rules with the $xmlprune modifier. They can be disabled as described below: @@||example.org^$xmlprune disables all $xmlprune rules for responses from URLs matching ||example.org^.@@||example.org^$xmlprune=text disables all $xmlprune rules with the value of the $xmlprune modifier equal to text for responses from URLs matching ||example.org^. $xmlprune rules can also be disabled by $document, $content and $urlblock exception rules. note When multiple $xmlprune rules match the same request, they are applied in lexicographical order. Examples ||example.org^$xmlprune=/bookstore/book[position() mod 2 = 1] removes odd-numbered books from the bookstore. Input &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;bookstore&gt; &lt;book category=&quot;cooking&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Everyday Italian&lt;/title&gt; &lt;author&gt;Giada De Laurentiis&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;30.00&lt;/price&gt; &lt;/book&gt; &lt;book category=&quot;children&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Harry Potter&lt;/title&gt; &lt;author&gt;J K. Rowling&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;29.99&lt;/price&gt; &lt;/book&gt; &lt;book category=&quot;web&quot;&gt; &lt;title lang=&quot;en&quot;&gt;XQuery Kick Start&lt;/title&gt; &lt;author&gt;James McGovern&lt;/author&gt; &lt;author&gt;Per Bothner&lt;/author&gt; &lt;author&gt;Kurt Cagle&lt;/author&gt; &lt;author&gt;James Linn&lt;/author&gt; &lt;author&gt;Vaidyanathan Nagarajan&lt;/author&gt; &lt;year&gt;2003&lt;/year&gt; &lt;price&gt;49.99&lt;/price&gt; &lt;/book&gt; &lt;book category=&quot;web&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Learning XML&lt;/title&gt; &lt;author&gt;Erik T. Ray&lt;/author&gt; &lt;year&gt;2003&lt;/year&gt; &lt;price&gt;39.95&lt;/price&gt; &lt;/book&gt; &lt;/bookstore&gt;  Output &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;bookstore&gt; &lt;book category=&quot;children&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Harry Potter&lt;/title&gt; &lt;author&gt;J K. Rowling&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;29.99&lt;/price&gt; &lt;/book&gt; &lt;book category=&quot;web&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Learning XML&lt;/title&gt; &lt;author&gt;Erik T. Ray&lt;/author&gt; &lt;year&gt;2003&lt;/year&gt; &lt;price&gt;39.95&lt;/price&gt; &lt;/book&gt; &lt;/bookstore&gt;  ||example.org^$xmlprune=/bookstore/book[year = 2003] removes books from the year 2003 from the bookstore. Input &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;bookstore&gt; &lt;book category=&quot;cooking&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Everyday Italian&lt;/title&gt; &lt;author&gt;Giada De Laurentiis&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;30.00&lt;/price&gt; &lt;/book&gt; &lt;book category=&quot;children&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Harry Potter&lt;/title&gt; &lt;author&gt;J K. Rowling&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;29.99&lt;/price&gt; &lt;/book&gt; &lt;book category=&quot;web&quot;&gt; &lt;title lang=&quot;en&quot;&gt;XQuery Kick Start&lt;/title&gt; &lt;author&gt;James McGovern&lt;/author&gt; &lt;author&gt;Per Bothner&lt;/author&gt; &lt;author&gt;Kurt Cagle&lt;/author&gt; &lt;author&gt;James Linn&lt;/author&gt; &lt;author&gt;Vaidyanathan Nagarajan&lt;/author&gt; &lt;year&gt;2003&lt;/year&gt; &lt;price&gt;49.99&lt;/price&gt; &lt;/book&gt; &lt;book category=&quot;web&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Learning XML&lt;/title&gt; &lt;author&gt;Erik T. Ray&lt;/author&gt; &lt;year&gt;2003&lt;/year&gt; &lt;price&gt;39.95&lt;/price&gt; &lt;/book&gt; &lt;/bookstore&gt;  Output &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;bookstore&gt; &lt;book category=&quot;cooking&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Everyday Italian&lt;/title&gt; &lt;author&gt;Giada De Laurentiis&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;30.00&lt;/price&gt; &lt;/book&gt; &lt;book category=&quot;children&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Harry Potter&lt;/title&gt; &lt;author&gt;J K. Rowling&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;29.99&lt;/price&gt; &lt;/book&gt; &lt;/bookstore&gt;  ||example.org^$xmlprune=//*/@* removes all attributes from all elements. Input &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;bookstore location=&quot;cy&quot;&gt; &lt;book category=&quot;cooking&quot;&gt; &lt;title lang=&quot;en&quot;&gt;Everyday Italian&lt;/title&gt; &lt;author&gt;Giada De Laurentiis&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;30.00&lt;/price&gt; &lt;/book&gt; &lt;/bookstore&gt;  Output &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;bookstore&gt; &lt;book&gt; &lt;title&gt;Everyday Italian&lt;/title&gt; &lt;author&gt;Giada De Laurentiis&lt;/author&gt; &lt;year&gt;2005&lt;/year&gt; &lt;price&gt;30.00&lt;/price&gt; &lt;/book&gt; &lt;/bookstore&gt;  Restrictions $xmlprune rules are only compatible with these modifiers: $domain, $third-party, $app, $important, $match-case, and $xmlhttprequest.$xmlprune rules do not apply if the size of the original response is greater than 10 MB. Compatibility Rules with the $xmlprune modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.15 or later. $network​ This is basically a Firewall-like rule allowing to fully block or unblock access to a specified remote address. $network rules match IP addresses only! You cannot use them to block or unblock access to a domain.To match an IPv6 address, you have to use the collapsed syntax, e.g. use [2001:4860:4860::8888]$network instead of [2001:4860:4860:0:0:0:0:8888]$network.An allowlist $network rule makes AdGuard bypass data to the matching endpoint, hence there will be no further filtering at all.If the IP part starts and ends with / character, it is treated as a regular expression. We recommend to get acquainted with this article for better understanding of regular expressions. Restrictions The $network modifier can only be used in rules together with the $app and $important modifiers, and not with any other modifiers. Examples 174.129.166.49:3478^$network blocks access to 174.129.166.49:3478 (but not to 174.129.166.49:34788).[2001:4860:4860::8888]:443^$network blocks access to [2001:4860:4860::8888]:443.174.129.166.49$network blocks access to 174.129.166.49:*.@@174.129.166.49$network makes AdGuard bypass data to the endpoint. No other rules will be applied./.+:3[0-9]{4}/$network blocks access to any port from 30000 to 39999./8.8.8.(:?8|4)/$network blocks access to both 8.8.8.8 and 8.8.8.4. Compatibility Only AdGuard for Windows, Mac, and Android are technically capable of using rules with $network modifier. $permissions​ This modifier completely changes the rule behavior. If it is applied to a rule, the rule will not block the matching request. Response headers will be modified instead. info In order to use this type of rules, it is required to have a basic understanding of the Permissions Policy security layer. For the requests matching a $permissions rule, AdGuard strengthens response's permissions policy by adding an additional permission policy equal to the $permissions modifier contents. $permissions rules are applied independently from any other rule type. Only document-level exceptions can influence it (see the examples section), but no other basic rules. Syntax $permissions value syntax is similar to the Permissions-Policy header syntax with one exception: comma that separates several features MUST be escaped — see examples below. The list of the available directives is available here. $permissions value can be empty in the case of exception rules — see examples below. Examples ||example.org^$permissions=autoplay=() disallows autoplay media requested through the HTMLMediaElement interface across example.org.@@||example.org/page/*$permissions=autoplay=() disables all rules with the $permissions modifier exactly matching autoplay=() on all the pages matching the rule pattern. For instance, the rule above. It is important to note that the exception rule only takes effect in the case of an exact value match. For example, if you want to disable the rule $permissions=a=()\\,b=(), you need exception rule @@$permissions=a=()\\,b=(), and not @@$permissions=b=()\\,a=(), nor @@$permissions=b=() because b=()\\,a=() or b=() does not match with a=()\\,b=().@@||example.org/page/*$permissions disables all the $permissions rules on all the pages matching the rule pattern.$domain=example.org|example.com,permissions=storage-access=()\\, camera=() disallows using the Storage Access API to request access to unpartitioned cookies and using video input devices across example.org and example.com.For better compatibility, we also support pipe-separated values for $permissions modifier: $permissions=storage-access=()|camera=().@@||example.org^$document or @@||example.org^$urlblock disables all the $permission rules on all the pages matching the rule pattern. note $permissions rules only take effect for main frame and sub frame requests. This means they are applied when a page is loaded or when an iframe is loaded. note If there are multiple $permissions rules that match the same request, multiple Permissions-Policy headers will be added to the response for each rule with their $permissions value. So if you have two rules: ||example.org^$permissions=autoplay=() and ||example.org^$permissions=geolocation=()\\,camera=() that match the same request, the response will contain two Permissions-Policy headers: autoplay=() and geolocation=()\\,camera=(). Limitations Firefox ignores the Permissions-Policy header. For more information, see this issue. Restrictions Characters forbidden in the $permissions value: $$permissions is compatible with three types of modifiers: $domain, $important, and $subdocument Compatibility Rules with the $permissions modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.11 or later. $redirect​ AdGuard is able to redirect web requests to a local &quot;resource&quot;. Syntax AdGuard uses the same filtering rule syntax as uBlock Origin. Also, it is compatible with ABP $rewrite=abp-resource modifier. $redirect is a modifier for the basic filtering rules so rules with this modifier support all other basic modifiers like $domain, $third-party, $script, etc. The value of the $redirect modifier must be the name of the resource that will be used for redirection. Disabling $redirect rules​ ||example.org/script.js$script,redirect=noopjs — this rule redirects all requests to example.org/script.js to the resource named noopjs.||example.org/test.mp4$media,redirect=noopmp4-1s — this rule redirects all requests to example.org/test.mp4 to the resource named noopmp4-1s.@@||example.org^$redirect will disable all $redirect rules for URLs that match ||example.org^.@@||example.org^$redirect=nooptext will disable all rules with $redirect=nooptext for any request that matches ||example.org^. More information on redirects and their usage is available on GitHub. Priorities of $redirect rules​ $redirect rules have higher priority than regular basic blocking rules. This means that if there is a basic blocking rule, the $redirect rule will override it. Allowlist rules with @@ mark have higher priority than $redirect rules. If a basic rule with the $important modifier and the $redirect rule matches the same URL, the latter is overridden unless it's also marked as $important. In short: $important &gt; @@ &gt; $redirect &gt; basic rules. Go to rules priorities for more details. Compatibility Rules with $redirect modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and AdGuard for Safari.$redirect in uBlock Origin supports specifying priority, e.g. $redirect=noopjs:42. AdGuard does not support it and instead just discards the priority postfix. $redirect-rule​ This is basically an alias to $redirect since it has the same &quot;redirection&quot; values and the logic is almost similar. The difference is that $redirect-rule is applied only in the case when the target request is blocked by a different basic rule. Go to rules priorities for more details. Negating $redirect-rule works exactly the same way as for regular $redirect rules. Even more than that, @@||example.org^$redirect will negate both $redirect and $redirect-rule rules. Examples ||example.org/script.js ||example.org^$redirect-rule=noopjs  In this case, only requests to example.org/script.js will be &quot;redirected&quot; to noopjs. All other requests to example.org will be kept intact. Compatibility Rules with $redirect-rule modifier are not supported by AdGuard Content Blocker, AdGuard for iOS, and AdGuard for Safari. $referrerpolicy​ These rules allow overriding of a page's referrer policy. Responses to matching requests will have all of their Referrer-Policy headers replaced with a single header with the value equal to the matching rule's modifier value. If the response carries an HTML document with a &lt;meta name=&quot;referrer&quot;... tag, the content attribute of the tag will also be replaced with the modifier value. An exception rule with a modifier value disables the blocking rule with the same modifier value. An exception rule without a modifier value disables all matched referrer-policy rules. If a request matches multiple $referrerpolicy rules not disabled by exceptions, only one of them (it is not specified which one) is applied. $referrerpolicy rules without specified content-type modifiers apply to $document and $subdocument content types. Examples ||example.com^$referrerpolicy=unsafe-url overrides the referrer policy for example.com with unsafe-url.@@||example.com^$referrerpolicy=unsafe-url disables the previous rule.@@||example.com/abcd.html^$referrerpolicy disables all $referrerpolicy rules on example.com/abcd.html. Compatibility Rules with the $referrerpolicy modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.12 or later. $removeheader​ Rules with $removeheader modifier are intended to remove headers from HTTP requests and responses. The initial motivation for this rule type is to be able to get rid of the Refresh header which is often used to redirect users to an undesirable location. However, this is not the only case where this modifier can be useful. Just like $csp, $redirect, $removeparam, and $cookie, this modifier exists independently, rules with it do not depend on the regular basic rules, i.e. regular exception or blocking rules will not affect it. By default, it only affects response headers. However, you can also change it to remove headers from HTTP requests as well. Syntax Basic syntax ||example.org^$removeheader=header-name removes a response header called header-name||example.org^$removeheader=request:header-name removes a request header called header-name $removeheader is case-insensitive, but we suggest always using lower case. Negating $removeheader This type of rules works pretty much the same way it works with $csp and $redirect modifiers. Use @@ to negate $removeheader: @@||example.org^$removeheader negates all $removeheader rules for URLs that match ||example.org^.@@||example.org^$removeheader=header negates the rule with $removeheader=header for any request matching ||example.org^. $removeheader rules can also be disabled by $document and $urlblock exception rules. But basic exception rules without modifiers will not do that. For example, @@||example.com^ will not disable $removeheader=p for requests to example.com, but @@||example.com^$urlblock will. note In case of multiple $removeheader rules matching a single request, we will apply each of them one by one. Examples ||example.org^$removeheader=refresh removes Refresh header from all HTTP responses returned by example.org and its subdomains. ||example.org^$removeheader=request:x-client-data removes X-Client-Data header from all HTTP requests. Next block of rules removes Refresh and Location headers from all HTTP responses returned by example.org save for requests to example.org/path/*, for which no headers will be removed: ||example.org^$removeheader=refresh ||example.org^$removeheader=location @@||example.org/path/$removeheader  Restrictions This type of rules can be used only in trusted filters. In order to avoid compromising the security $removeheader cannot remove headers from the list below: access-control-allow-originaccess-control-allow-credentialsaccess-control-allow-headersaccess-control-allow-methodsaccess-control-expose-headersaccess-control-max-ageaccess-control-request-headersaccess-control-request-methodorigintiming-allow-originallowcross-origin-embedder-policycross-origin-opener-policycross-origin-resource-policycontent-security-policycontent-security-policy-report-onlyexpect-ctfeature-policyorigin-isolationstrict-transport-securityupgrade-insecure-requestsx-content-type-optionsx-download-optionsx-frame-optionsx-permitted-cross-domain-policiesx-powered-byx-xss-protectionpublic-key-pinspublic-key-pins-report-onlysec-websocket-keysec-websocket-extensionssec-websocket-acceptsec-websocket-protocolsec-websocket-versionp3psec-fetch-modesec-fetch-destsec-fetch-sitesec-fetch-userreferrer-policycontent-typecontent-lengthacceptaccept-encodinghostconnectiontransfer-encodingupgrade $removeheader rules are only compatible with $domain, $third-party, $app, $important, $match-case, and content type modifiers such as $script and $stylesheet. The rules which have any other modifiers are considered invalid and will be discarded. Compatibility Rules with $removeheader modifier are supported by AdGuard for Windows, Mac, and Android, and AdGuard Browser Extension for Chrome, Firefox, and Edge. $removeparam​ note $queryprune is an alias of $removeparam. Since $queryprune is deprecated, avoid using it and use $removeparam instead. Rules with $removeparam modifier are intended to strip query parameters from requests' URLs. Please note that such rules are only applied to GET, HEAD, OPTIONS, and sometimes POST requests. $removeparam rules that do not have any content type modifiers will match only requests where content type is document. Syntax Basic syntax $removeparam=param removes query parameter with the name param from URLs of any request, e.g. a request to http://example.com/page?param=1&amp;another=2 will be transformed into http://example.com/page?another=2. Compatibility Rules with $removeparam modifier are supported by AdGuard for Windows, Mac and, Android with CoreLibs v1.7 or later and AdGuard Browser Extension v3.6 or later. Regular expressions You can also use regular expressions to match query parameters and/or their values: $removeparam=/regexp/[options] — removes query parameters that matches the regexp regular expression from URLs of any request. Unlike basic syntax, it means &quot;remove query parameters normalized to a name=value string which match the regexp regular expression&quot;. [options] here is the list of regular expression options. At the moment, the only supported option is i which makes matching case-insensitive. Escaping special characters Do not forget to escape special characters like ,, / and $ in the regular expressions. Use \\ character for that purpose. For example, an escaped comma should look like this: \\,. note Regexp-type rules target both name and value of the parameter. To minimize mistakes, it is safer to start every regexp with /^ unless you specifically target parameter values. We will try to detect and ignore unescaped $ automatically using a simple rule of thumb — it is not an options delimiter if all three are true: It looks like $/There is another slash character / to the left of itThere is another unescaped dollar sign $ to the left of that slash character Remove all query parameters Specify naked $removeparam to remove all query parameters: ||example.org^$removeparam — removes all query parameters from URLs matching ||example.org^. Inversion Use ~ to apply inversion: $removeparam=~param — removes all query parameters with the name different from param.$removeparam=~/regexp/ — removes all query parameters that do not match the regexp regular expression. Negating $removeparam This sort of rules work pretty much the same way it works with $csp and $redirect modifiers. Use @@ to negate $removeparam: @@||example.org^$removeparam negates all $removeparam rules for URLs that match ||example.org^.@@||example.org^$removeparam=param negates the rule with $removeparam=param for any request matching ||example.org^.@@||example.org^$removeparam=/regexp/ negates the rule with $removeparam=/regexp/ for any request matching ||example.org^. Multiple rules matching a single request In the case when multiple $removeparam rules match a single request, each of them will be applied one by one. Examples $removeparam=/^(utm_source|utm_medium|utm_term)=/ $removeparam=/^(utm_content|utm_campaign|utm_referrer)=/ @@||example.com^$removeparam  With these rules some UTM parameters will be stripped out from any request, except that requests to example.com will not be stripped at all, e.g. http://google.com/page?utm_source=s&amp;utm_referrer=fb.com&amp;utm_content=img will be transformed to http://google.com/page, but http://example.com/page?utm_source=s&amp;utm_referrer=fb.com&amp;utm_content=img will not be affected by the blocking rule. $removeparam=utm_source removes utm_source query parameter from all requests. $removeparam=/utm_.*/ removes all utm_* query parameters from URL queries of any request, e.g. a request to http://example.com/page?utm_source=test will be transformed to http://example.com/page. $removeparam=/^utm_source=campaign$/ removes utm_source query parameter with the value equal to campaign. It does not touch other utm_source parameters. Negating one $removeparam rule and replacing it with a different rule $removeparam=/^(gclid|yclid|fbclid)=/ @@||example.com^$removeparam=/^(gclid|yclid|fbclid)=/ ||example.com^$removeparam=/^(yclid|fbclid)=/  With these rules, Google, Yandex, and Facebook Click IDs will be removed from all requests. There is one exception: Google Click ID (gclid) will not be removed from requests to example.com. Negating $removeparam for all parameters $removeparam=/^(utm_source|utm_medium|utm_term)=/ $removeparam=/^(utm_content|utm_campaign|utm_referrer)=/ @@||example.com^$removeparam  With these rules, specified UTM parameters will be removed from any request save for requests to example.org. $removeparam rules can also be disabled by $document and $urlblock exception rules. But basic exception rules without modifiers do not do that. For example, @@||example.com^ will not disable $removeparam=p for requests to example.com, but @@||example.com^$urlblock will. Restrictions Rules with $removeparam modifier can be used only in trusted filters.$removeparam rules are compatible with basic modifiers, content-type modifiers, and with $important and $app modifiers. Rules with any other modifiers are considered invalid and will be discarded. Compatibility Rules with $removeparam modifier are supported by AdGuard for Windows, Mac, and Android and AdGuard Browser Extension for Chrome, Firefox, and Edge.$removeparam syntax for regular expressions is supported by AdGuard Browser Extension v4.0 and AdGuard for Windows, Mac, and Android with CoreLibs v1.8 or later.POST request types are supported only by AdGuard for Windows, Mac, and Android with CoreLibs v1.10 or later, and AdGuard Browser Extension with TSWebExtension v0.4.6 or later. $replace​ This modifier completely changes the rule behavior. If it is applied, the rule will not block the request. The response is going to be modified instead. You will need some knowledge of regular expressions to use $replace modifier. Features $replace rules apply to any text response, but will not apply to binary (media, image, object, etc.).$replace rules do not apply if the size of the original response is more than 10 MB.$replace rules have a higher priority than other basic rules (including exception rules). So if a request corresponds to two different rules one of which has the $replace modifier, this rule will be applied.Document-level exception rules with $content or $document modifiers do disable $replace rules for requests matching them.Other document-level exception rules ($generichide, $elemhide or $jsinject modifiers) are applied alongside $replace rules. It means that you can modify the page content with a $replace rule and disable cosmetic rules there at the same time. $replace value can be empty in the case of exception rules. See examples section for further information. Multiple rules matching a single request In case if multiple $replace rules match a single request, we will apply each of them. The order is defined alphabetically. Syntax In general, $replace syntax is similar to replacement with regular expressions in Perl. replace = &quot;/&quot; regexp &quot;/&quot; replacement &quot;/&quot; modifiers  regexp — a regular expression.replacement — a string that will be used to replace the string corresponding to regexp.modifiers — a regular expression flags. For example, i — insensitive search, or s — single-line mode. In the $replace value, two characters must be escaped: comma , and dollar sign $. Use backslash \\ for it. For example, an escaped comma looks like this: \\,. Examples ||example.org^$replace=/(&lt;VAST[\\s\\S]*?&gt;)[\\s\\S]*&lt;\\/VAST&gt;/\\$1&lt;\\/VAST&gt;/i  There are three parts in this rule: regexp — (&lt;VAST(.|\\s)*?&gt;)(.|\\s)*&lt;\\/VAST&gt;;replacement — \\$1&lt;\\/VAST&gt; where $ is escaped;modifiers — i for insensitive search. You can see how this rule works here: http://regexr.com/3cesk Multiple $replace rules ||example.org^$replace=/X/Y/||example.org^$replace=/Z/Y/@@||example.org/page/*$replace=/Z/Y/ Both rule 1 and 2 will be applied to all requests sent to example.org.Rule 2 is disabled for requests matching ||example.org/page/, but rule 1 still works! Disabling $replace rules @@||example.org^$replace will disable all $replace rules matching ||example.org^.@@||example.org^$document or @@||example.org^$content will disable all $replace rules originated from pages of example.org including the page itself. Restrictions Rules with $replace modifier can be used only in trusted filters. Compatibility Rules with $replace modifier are supported by AdGuard for Windows, Mac, and Android and AdGuard Browser Extension for Firefox. Such rules do not work in extensions for other browsers because they are unable to modify content on the network level. urltransform​ The $urltransform rules allow you to modify the request URL by replacing the text matched by the regular expression. Features $urltransform rules apply to any request URL text.$urltransform rules can also modify the query part of the URL.$urltransform will not be applied if the original URL is blocked by other rules.$urltransform will be applied before $removeparam rules. The $urltransform value can be empty for exception rules. Multiple rules matching a single request If multiple $urltransform rules match a single request, we will apply each of them. The order is defined alphabetically. Syntax $urltransform syntax is similar to replacement with regular expressions in Perl. urltransform = &quot;/&quot; regexp &quot;/&quot; replacement &quot;/&quot; modifiers  regexp — a regular expression.replacement — a string that will be used to replace the string corresponding to regexp.modifiers — a regular expression flags. For example, i — insensitive search, or s — single-line mode. In the $urltransform value, two characters must be escaped: the comma , and the dollar sign $. Use the backslash character \\ for this. For example, an escaped comma looks like this: \\,. Examples ||example.org^$urltransform=/(pref\\/).*\\/(suf)/\\$1\\$2/i  There are three parts in this rule: regexp — (pref\\/).*\\/(suf);replacement — \\$1\\$2 where $ is escaped;modifiers — i for insensitive search. Multiple $urltransform rules ||example.org^$urltransform=/X/Y/||example.org^$urltransform=/Z/Y/@@||example.org/page/*$urltransform=/Z/Y/ Both rule 1 and 2 will be applied to all requests sent to example.org.Rule 2 is disabled for requests matching ||example.org/page/, but rule 1 still works! Re-matching rules after transforming the URL If the $urltransform rule is applied to a request, all the rules will be re-evaluated against the new URL. E.g., with the following rules: ||example.com^$urltransform=/firstpath/secondpath/ ||example.com/secondpath^  the request to https://example.com/firstpath will be blocked before it is sent. However, $urltransform rules will not be re-applied in this case to avoid infinite recursion, e.g., with the following rules: ||example.com/firstpath^$urltransform=/firstpath/secondpath/ ||example.com/secondpath^$urltransform=/secondpath/firstpath/  the request to https://example.com/fisrtpath will be transformed to https://example.com/secondpath and the second rule will not be applied. Disabling $urltransform rules @@||example.org^$urltransform will disable all $urltransform rules matching ||example.org^.@@||example.org^$urltransform=/Z/Y/ will disable the rule with $urltransform=/Z/Y/ for any request matching ||example.org^. $urltransform rules can also be disabled by $document and $urlblock exception rules. But basic exception rules without modifiers do not do that. For example, @@||example.com^ will not disable $urltransform=/X/Y/ for requests to example.com, but @@||example.com^$urlblock will. Restrictions Rules with the $urltransform modifier can be used only in trusted filters. Compatibility Rules with the $urltransform modifier are supported by AdGuard for Windows, AdGuard for Mac, and AdGuard for Android with CoreLibs v1.15 or later. noop​ noop modifier does nothing and can be used solely to increase rules' readability. It consists of a sequence of underscore characters (_) of any length and can appear in a rule as many times as needed. Examples ||example.com$_,removeparam=/^ss\\\\$/,_,image ||example.com$replace=/bad/good/,___,~third-party  Compatibility Rules with noop modifier are not supported by AdGuard Content Blocker. $empty (deprecated)​ Deprecation notice This modifier is deprecated in favor of the $redirect modifier. Rules with $empty are still supported and being converted into $redirect=nooptext now but the support shall be removed in the future. Usually, blocked requests look like a server error to browser. If you use $empty modifier, AdGuard will emulate a blank response from the server with200 OK status. Examples ||example.org^$empty returns an empty response to all requests to example.org and all subdomains. Compatibility Rules with $empty modifier are not supported by AdGuard Content Blocker, AdGuard for iOS, and AdGuard for Safari. $mp4 (deprecated)​ Deprecation notice This modifier is deprecated in favor of the $redirect modifier. Rules with $mp4 are still supported and being converted into $redirect=noopmp4-1s,media now but the support shall be removed in the future. As a response to blocked request AdGuard returns a short video placeholder. Examples ||example.com/videos/$mp4 blocks all video downloads from ||example.com/videos/* and changes the response to a video placeholder. Compatibility Rules with $mp4 modifier are not supported by AdGuard Content Blocker, AdGuard for iOS, and AdGuard for Safari. "},{"title":"Rule priorities​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#rule-priorities","content":"Each rule has its own priority, which is necessary when several rules match the request and the filtering engine needs to select one of them. Priority is measured by a positive integer. Collisions When two rules with the same priority match the same request, it depends on the filtering engine implementation which one will be selected. info The concept of rule priorities becomes increasingly important in light of Manifest V3 as the existing rules need to be converted to declarativeNetRequest rules. Priority calculation​ To calculate priority, we've categorized modifiers into different groups. These groups are ranked based on their priority, from lowest to highest. A modifier that significantly narrows the scope of a rule adds more weight to its total priority. Conversely, if a rule applies to a broader range of requests, its priority decreases. It's worth noting that there are cases where a single-parameter modifier has a higher priority than multi-parameter ones. For instance, in the case of $domain=example.com|example.org, a rule that includes two domains has a slightly broader effective area than a rule with one specified domain, therefore its priority is lower. The base priority of any rule is 1. If the calculated priority is a floating-point number, it will be rounded up to the smallest integer greater than or equal to the calculated priority. Compatibility The concept of priority has been introduced in TSUrlFilter v2.1.0 and CoreLibs v1.13. Before that AdGuard didn't have any special priority computation algorithm and collisions handling could be different depending on AdGuard product and version.AdGuard for iOS, Safari, and AdGuard Content Blocker rely on the browsers implementation and they cannot follow the rules specified here. note Modifier aliases (1p, 3p, etc.) are not included in these categories, however, they are utilized within the engine to compute the rule priority. Basic modifiers, the presence of each adds 1 to the priority​ $app with negated applications using ~,$denyallow,$domain with negated domains using ~,$match-case,$method with negated methods using ~,$third-party,$to,restricted content-types with ~. When dealing with a negated domain, app, method, or content-type, we add 1 point for the existence of the modifier itself, regardless of the quantity of negated domains or content-types. This is because the rule's scope is already infinitely broad. Put simply, by prohibiting multiple domains, content-types, methods or apps, the scope of the rule becomes only minimally smaller. Defined content-type modifiers, defined methods, defined headers, $all, $popup, specific exceptions​ All allowed content types: $document,$font,$image,$media,$object,$other,$ping,$script,$stylesheet,$subdocument,$websocket,$xmlhttprequest; This also includes rules that implicitly add all content types: $all; Or rules that implicitly add the modifier $document: $popup; Or some specific exceptions that implicitly add $document,subdocument: $content,$elemhide,$extension,$genericblock,$generichide,$jsinject,$specifichide,$urlblock; Or allowed methods via $method. Or rules with $header. The presence of any content-type modifiers adds (50 + 50 / N), where N is the number of modifiers present, for example: ||example.com^$image,script will add 50 + 50 / 2 = 50 + 25 = 75 to the total weight of the rule. The $all also belongs to this category, because it implicitly adds all content type modifiers, e.g., $document,subdocument,image,script,media,&lt;etc&gt; + $popup. The $popup also belongs to this category, because it implicitly adds the modifier $document. Similarly, specific exceptions add $document,subdocument. If there is a $method modifier in the rule with allowed methods it adds (50 + 50 / N), where N is the number of methods allowed, for example: ||example.com^$method=GET|POST|PUT will add 50 + 50 / 3 = 50 + 16.6 = 67 to the total weight of the rule. If there is a $header modifier in the rule it adds 50. $domain or $app with allowed domains or applications​ Specified domains through $domain or specified applications through $app add 100 + 100 / N, where N is the number of modifier values for example: ||example.com^$domain=example.com|example.org|example.net will add 100 + 100 / 3 = 134.3 = 135 or ||example.com^$app=org.example.app1|org.example.app2 will add 100 + 100 / 2 = 151 or ||example.com^$domain=example.com,app=org.example.app1|org.example.app2 will add 100 + 100/1 ($domain part) and 100 + 100/2 ($app part), totaling 350. Modifier values that are regexps or tld will be interpreted as normal entries of the form example.com and counted one by one, for example: ||example.com^$domain=example.* will add 100 + 100 / 1 = 200 or ||example.com^$domain=example.*|adguard.* will add 100 + 100 / 2 = 150. $redirect rules​ $redirect,$redirect-rule. Each of which adds 10^3 to rule priority. Specific exceptions​ $content,$elemhide,$extension,$genericblock,$generichide,$jsinject,$specifichide,$urlblock; Each of which adds 10^4 to the priority. As well as exception with $document modifier: because it's an alias for $elemhide,content,jsinject,urlblock,extension. It will add 10^4 for each modifier from the top list, 10^4 * 5 in total. In addition, each of these exceptions implicitly adds the two allowed content-type modifiers $document,subdocument. Allowlist rules​ Modifier @@ adds 10^5 to rule priority. $important rules​ Modifier $important adds 10^6 to rule priority. Rules for which there is no priority weight​ Other modifiers, which are supposed to perform additional post- or pre-processing of requests, do not add anything to the rules priority. note The $replace modifier takes precedence over all blocking rules of categories 1-3, as well as exception rules from categories 3-5, except $content, because an exception with the $content modifier overrides all $replace rules. Examples​ ||example.com^ Weight of the rule without modifiers: 1. ||example.com^$match-case Rule weight: base weight + weight of the modifier from category 1: 1 + 1 = 2. ||example.org^$removeparam=p Rule weight: base weight + 0, since $removeparam is not involved in the priority calculation: 1 + 0 = 1. ||example.org^$document,redirect=nooptext Rule weight: base weight + allowed content type, category 3 + $redirect from category 6: 1 + (100 + 100 / 1) + 1000 = 1201. @@||example.org^$removeparam=p,document Rule weight: base weight + allowlist rule, category 5 + 0 because $removeparam is not involved in the priority calculation + allowed content type, category 2: 1 + 10000 + 0 + (50 + 50 / 1) = 10101. @@||example.com/ad/*$domain=example.org|example.net,important Rule weight: base weight + allowlist rule, category 5 + important rule, category 7 + allowed domains, category 3: 1 + 10000 + 1000000 + (100 + 100 / 2) = 1010152. @@||example.org^$document without additional modifiers is an alias for @@||example.com^$elemhide,content,jsinject,urlblock,extension Rule weight: base weight + specific exceptions, category 4 + two allowed content types (document and subdocument), category 2: 1 + 10000 * 4 + (50 + 50 / 2) = 40076. *$script,domain=a.com,denyallow=x.com|y.com Rule weight: base weight + allowed content type, category 2 + allowed domain, category 3 + denyallow, category 1: 1 + (50 + 50/1) + (100 + 100 / 1) + 1 = 303. ||example.com^$all — alias to ||example.com^$document,subdocument,image,script,media,etc. + $popup Rule weight: base weight + popup (category 1) + allowed content types (category 2): 1 + 1 + (50 + 50/12) = 55. "},{"title":"Non-basic rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-rules","content":"However, basic rules may not be enough to block ads. Sometimes you need to hide an element or change part of the HTML code of a web page without breaking anything. The rules described in this section are created specifically for this purpose. Categories \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tAdGuard for iOS\tAdGuard for Safari\tAdGuardコンテンツブロッカーElement hiding\t✅\t✅\t✅\t✅\t✅\t✅ CSS rules\t✅\t✅\t✅\t✅\t✅\t❌ Extended CSS\t✅\t✅\t✅\t✅\t✅\t❌ HTML filtering\t✅\t❌\t✅\t❌\t❌\t❌ JavaScript\t✅\t✅\t✅\t✅\t✅\t❌ Scriptlets\t✅\t✅\t✅\t✅\t✅\t❌ note ✅ — fully supported❌ — not supported "},{"title":"Cosmetic rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-rules","content":"info Work with non-basic rules requires the basic knowledge of HTML and CSS. So, if you want to learn how to make such rules, we recommend to get acquainted with this documentation. "},{"title":"Element hiding rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-elemhide-rules","content":"Element hiding rules are used to hide the elements of web pages. It is similar to applying { display: none; } style to selected element. Element hiding rules may operate differently depending on the platform. Syntax​  rule = [domains] &quot;##&quot; selector domains = [domain0, domain1[, ...[, domainN]]]  selector — CSS selector, defines the elements to be hidden.domains — domain restriction for the rule. If you want to limit the rule application area to certain domains, just enter them separated with commas. For example: example.org,example.com##selector. This rule will be also applied to all subdomains of example.org and example.com. If you want the rule not to be applied to certain domains, start a domain name with ~ sign. For example: ~example.org##selector. You can use both approaches in a single rule. For example, example.org,~subdomain.example.org##domain will work for example.org and all subdomains, except subdomain.example.org. note Element hiding rules are not dependent on each other. If there is a rule example.org##selector in the filter and you add ~example.org##selector both rules will be applied independently. Examples example.com##div.textad — hides a div with the class textad at example.com and all subdomains.example.com,example.org###adblock — hides an element with attribute id equals adblock at example.com, example.org and all subdomains.~example.com##.textad — hides an element with the class textad at all domains, except example.com and its subdomains. Limitations Safari does not support both permitted and restricted domains. So the rules like example.org,~foo.example.org##.textad are invalid in AdGuard for Safari. Exceptions Exceptions can disable some rules on particular domains. They are very similar to usual exception rules, but instead of ## you have to use #@#. For example, there is a rule in filter: ##.textad  If you want to disable it for example.com, you can create an exception rule: example.com#@#.textad  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. It will completely disable matching CSS elemhide rule on ALL domains: #@#.textad  The same can be achieved by adding this rule: *#@#.textad  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. "},{"title":"CSS rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-css-rules","content":"Sometimes, simple hiding of an element is not enough to deal with advertising. For example, blocking an advertising element can just break the page layout. In this case AdGuard can use rules that are much more flexible than hiding rules. With these rules you can basically add any CSS styles to the page. Syntax  rule = [domains] &quot;#$#&quot; selector &quot;{&quot; style &quot;}&quot; domains = [domain0, domain1[, ...[, domainN]]]  selector — CSS selector, that defines the elements we want to apply the style to.domains — domain restriction for the rule. Same principles as in element hiding rules.style — CSS style, that we want to apply to selected elements. Examples example.com#$#body { background-color: #333!important; }  This rule will apply a style background-color: #333!important; to the body element at example.com and all subdomains. Exceptions Just like with element hiding, there is a type of rules that disable the selected CSS style rule for particular domains. Exception rule syntax is almost the same, you just have to change #$# to #@$#. For example, there is a rule in filter: #$#.textad { visibility: hidden; }  If you want to disable it for example.com, you can create an exception rule: example.com#@$#.textad { visibility: hidden; }  We recommend to use this kind of exceptions only if it is not possible to change the CSS rule itself. In other cases it is better to change the original rule, using domain restrictions. Restrictions Styles that lead to loading any resource are forbidden. Basically, it means that you cannot use any &lt;url&gt; type of value in the style. Compatibility CSS rules are not supported by AdGuard Content Blocker. CSS rules may operate differently depending on the platform. "},{"title":"Extended CSS selectors​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#extended-css-selectors","content":"LimitationsPseudo-class :has()Pseudo-class :contains()Pseudo-class :matches-css()Pseudo-class :matches-attr()Pseudo-class :matches-property()Pseudo-class :xpath()Pseudo-class :nth-ancestor()Pseudo-class :upward()Pseudo-class :remove() and pseudo-property removePseudo-class :is()Pseudo-class :not()Pseudo-class :if-not() (removed) CSS 3.0 is not always enough to block ads. To solve this problem AdGuard extends CSS capabilities by adding support for the new pseudo-elements. We have developed a separate open-source library for non-standard element selecting and applying CSS styles with extended properties. The idea of extended capabilities is an opportunity to match DOM elements with selectors based on their own representation (style, text content, etc.) or relations with other elements. There is also an opportunity to apply styles with non-standard CSS properties. Application area Extended selectors can be used in any cosmetic rule, whether they are element hiding rules or CSS rules. Compatibility Rules with extended CSS selectors are not supported by AdGuard Content Blocker. Syntax Regardless of the CSS pseudo-classes you are using in the rule, you can use special markers to force applying these rules by ExtendedCss. It is recommended to use these markers for all extended CSS cosmetic rules so that it was easier to find them. The syntax for extended CSS rules: #?# — for element hiding, #@?# — for exceptions#$?# — for CSS rules, #@$?# — for exceptions We strongly recommend using these markers any time when you use an extended CSS selector. Examples example.org#?#div:has(&gt; a[target=&quot;_blank&quot;][rel=&quot;nofollow&quot;]) — this rule blocks all div elements containing a child node that has a link with the attributes [target=&quot;_blank&quot;][rel=&quot;nofollow&quot;]. The rule applies only to example.org and its subdomains.example.com#$?#h3:contains(cookies) { display: none!important; } — this rule sets the style display: none!important to all h3 elements that contain the word cookies. The rule applies only to example.com and all its subdomains.example.net#?#.banner:matches-css(width: 360px) — this rule blocks all .banner elements with the style property width: 360px. The rule applies only to example.net and its subdomains.example.net#@?#.banner:matches-css(width: 360px) — this rule will disable the previous rule. You can apply standard CSS selectors using the ExtendedCss library by using the rule marker #?#, e.g. #?#div.banner. Learn more about how to debug extended selectors. note Some pseudo-classes do not require selector before it. Still adding the universal selector * makes an extended selector easier to read, even though it has no effect on the matching behavior. So selector #block :has(&gt; .inner) works exactly like #block *:has(&gt; .inner) but second one is more obvious. Pseudo-class names are case-insensitive, e.g. :HAS() works as :has(). Still the lower-case names are used commonly. ExtendedCss Limitations​ CSS comments and at-rules are not supported. Specific pseudo-class may have its own limitations: :has(), :xpath(), :nth-ancestor(), :upward(), :is(), :not(), and :remove(). Pseudo-class :has()​ Draft CSS 4.0 specification describes the :has() pseudo-class. Unfortunately, it is not yet supported by all popular browsers. note Rules with the :has() pseudo-class must use the native implementation of :has() if they use ## marker and if it is possible, i.e. with no other extended selectors inside. To force applying of ExtendedCss rules with :has(), use #?#/#$?# marker explicitly. Compatibility with other pseudo-classes Synonyms :-abp-has() is supported by ExtendedCss for better compatibility. Removal notice :if() is no longer supported as a synonym for :has(). Syntax [target]:has(selector)  target — optional, standard or extended CSS selector, can be skipped for checking any elementselector — required, standard or extended CSS selector The pseudo-class :has() selects the target elements that fit to the selector. Also the selector can start with a combinator. A selector list can be set in selector as well. In this case all selectors in the list are being matched for now. In the future it will be fixed for &lt;forgiving-relative-selector-list&gt; as argument. :has() limitations​ Usage of the :has() pseudo-class is restricted for some cases (2, 3): disallow :has() inside the pseudos accepting only compound selectors;disallow :has() after regular pseudo-elements. Native :has() pseudo-class does not allow :has(), :is(), :where() inside :has() argument to avoid increasing the :has() invalidation complexity (case 1). But ExtendedCss did not have such limitation earlier and filter lists already contain such rules, so we have not added this limitation to ExtendedCss and allow to use :has() inside :has() as it was possible before. To use it, just force ExtendedCss usage by setting #?#/#$?# rule marker. Native implementation does not allow any usage of :scope inside the :has() argument ([1], [2]). Still, there are some such rules in filter lists: div:has(:scope a) which we continue to support by simply converting them to div:has(&gt; a), as it used to be done previously. Examples div:has(.banner) selects all div elements which include an element with the banner class: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;span class=&quot;banner&quot;&gt;inner element&lt;/span&gt; &lt;/div&gt;  div:has(&gt; .banner) selects all div elements which include an banner class element as a direct child of div: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;p class=&quot;banner&quot;&gt;child element&lt;/p&gt; &lt;/div&gt;  div:has(+ .banner) selects all div elements preceding banner class element which immediately follows the div and both are children of the same parent: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected&lt;/div&gt; &lt;p class=&quot;banner&quot;&gt;adjacent sibling&lt;/p&gt; &lt;span&gt;Not selected&lt;/span&gt;  div:has(~ .banner) selects all div elements preceding banner class element which follows the div but not necessarily immediately and both are children of the same parent: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected&lt;/div&gt; &lt;span&gt;Not selected&lt;/span&gt; &lt;p class=&quot;banner&quot;&gt;general sibling&lt;/p&gt;  div:has(span, .banner) selects all div elements which include both span element and banner class element: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;span&gt;child span&lt;/span&gt; &lt;p class=&quot;banner&quot;&gt;child .banner&lt;/p&gt; &lt;/div&gt;  Old syntax Backward compatible syntax for :has() is supported but not recommended. Pseudo-class :contains()​ The :contains() pseudo-class principle is very simple: it allows to select the elements that contain specified text or which content matches a specified regular expression. Regexp flags are supported. note The :contains() pseudo-class uses the textContent element property for matching, not the innerHTML. Compatibility with other pseudo-classes Synonyms :-abp-contains() and :has-text() are supported for better compatibility. Syntax [target]:contains(match)  target — optional, standard or extended CSS selector, can be skipped for checking any elementmatch — required, string or regular expression for matching element textContent. Regular expression flags are supported. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div id=&quot;match&quot;&gt;Selected as IT contains &quot;banner&quot;&lt;/div&gt; &lt;div&gt;Not selected &lt;div class=&quot;banner&quot;&gt;&lt;/div&gt;&lt;/div&gt;  the element div#match can be selected by any of these extended selectors: ! plain text div:contains(banner) ! regular expression div:contains(/as .* banner/) ! regular expression with flags div:contains(/it .* banner/gi)  note Only the div with id=match is selected because the next element does not contain any text, and banner is a part of code, not a text. Old syntax Backward compatible syntax for :contains() is supported but not recommended. Pseudo-class :matches-css()​ The :matches-css() pseudo-class allows to match the element by its current style properties. The work of the pseudo-class is based on using the Window.getComputedStyle() method. Syntax [target]:matches-css([pseudo-element, ] property: pattern)  target — optional, standard or extended CSS selector, can be skipped for checking any elementpseudo-element — optional, valid standard pseudo-element, e.g. before, after, first-line, etc.property — required, a name of CSS property to check the element forpattern — required, a value pattern that is using the same simple wildcard matching as in the basic url filtering rules OR a regular expression. For this type of matching, AdGuard always does matching in a case-insensitive manner. In the case of a regular expression, the pattern looks like /regexp/. Special characters escaping and unescaping For non-regexp patterns (,),[,] must be unescaped, e.g. :matches-css(background-image:url(data:*)). For regexp patterns \\ should be escaped, e.g. :matches-css(background-image: /^url\\\\(&quot;data:image\\\\/gif;base64.+/). Examples For such DOM: &lt;!-- HTML code --&gt; &lt;style type=&quot;text/css&quot;&gt; #matched::before { content: &quot;Block me&quot; } &lt;/style&gt; &lt;div id=&quot;matched&quot;&gt;&lt;/div&gt; &lt;div id=&quot;not-matched&quot;&gt;&lt;/div&gt;  the div elements with pseudo-element ::before and with specified content property can be selected by any of these extended selectors: ! string pattern div:matches-css(before, content: block me) ! string pattern with wildcard div:matches-css(before, content: block*) ! regular expression pattern div:matches-css(before, content: /block me/)  Restrictions Regexp patterns do not support flags. Compatibility Obsolete pseudo-classes :matches-css-before() and :matches-css-after() are no longer recommended but still are supported for better compatibility. Old syntax Backward compatible syntax for :matches-css() is supported but not recommended. Pseudo-class :matches-attr()​ The :matches-attr() pseudo-class allows selecting an element by its attributes, especially if they are randomized. Syntax [target]:matches-attr(&quot;name&quot;[=&quot;value&quot;])  target — optional, standard or extended CSS selector, can be skipped for checking any elementname — required, simple string or string with wildcard or regular expression for attribute name matchingvalue — optional, simple string or string with wildcard or regular expression for attribute value matching Escaping special characters For regexp patterns &quot; and \\ should be escaped, e.g. div:matches-attr(class=/[\\\\w]{5}/). Examples div:matches-attr(&quot;ad-link&quot;) selects the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; ad-link=&quot;1random23-banner_240x400&quot;&gt;&lt;/div&gt;  div:matches-attr(&quot;data-*&quot;=&quot;adBanner&quot;) selects the element div#target2: &lt;!-- HTML code --&gt; &lt;div id=&quot;target2&quot; data-1random23=&quot;adBanner&quot;&gt;&lt;/div&gt;  div:matches-attr(*unit*=/^click$/) selects the element div#target3: &lt;!-- HTML code --&gt; &lt;div id=&quot;target3&quot; random123-unit094=&quot;click&quot;&gt;&lt;/div&gt;  *:matches-attr(&quot;/.{5,}delay$/&quot;=&quot;/^[0-9]*$/&quot;) selects the element #target4: &lt;!-- HTML code --&gt; &lt;div&gt; &lt;inner-random23 id=&quot;target4&quot; nt4f5be90delay=&quot;1000&quot;&gt;&lt;/inner-random23&gt; &lt;/div&gt;  Restrictions Regexp patterns do not support flags. Pseudo-class :matches-property()​ The :matches-property() pseudo-class allows selecting an element by matching its properties. Syntax [target]:matches-property(&quot;name&quot;[=&quot;value&quot;])  target — optional, standard or extended CSS selector, can be skipped for checking any elementname — required, simple string or string with wildcard or regular expression for element property name matchingvalue — optional, simple string or string with wildcard or regular expression for element property value matching Escaping special characters For regexp patterns &quot; and \\ must be escaped, e.g. div:matches-property(prop=/[\\\\w]{4}/). note Regexp patterns are supported in name for any property in chain, e.g. prop./^unit[\\\\d]{4}$/.type. Examples An element with such properties: divProperties = { id: 1, check: { track: true, unit_2random1: true, }, memoizedProps: { key: null, tag: 12, _owner: { effectTag: 1, src: 'ad.com', }, }, };  can be selected by any of these extended selectors: div:matches-property(check.track) div:matches-property(&quot;check./^unit_.{4,8}$/&quot;) div:matches-property(&quot;check.unit_*&quot;=true) div:matches-property(memoizedProps.key=&quot;null&quot;) div:matches-property(memoizedProps._owner.src=/ad/)  For filters maintainers To check properties of a specific element, do the following: Inspect the page element or select it in Elements tab of browser DevToolsRun console.dir($0) in Console tab Restrictions Regexp patterns do not support flags. Pseudo-class :xpath()​ The :xpath() pseudo-class allows selecting an element by evaluating an XPath expression. Syntax [target]:xpath(expression)  target- optional, standard or extended CSS selectorexpression — required, valid XPath expression :xpath() limitations​ target can be omitted so it is optional. For any other pseudo-class that would mean &quot;apply to all DOM nodes&quot;, but in case of :xpath() it just means &quot;apply to the whole document&quot;, and such applying slows elements selecting significantly. That's why rules like #?#:xpath(expression) are limited to looking inside the body tag. For example, rule #?#:xpath(//div[@data-st-area=\\'Advert\\']) is parsed as #?#body:xpath(//div[@data-st-area=\\'Advert\\']). Extended selectors with defined target as any selector — *:xpath(expression) — can still be used but it is not recommended, so target should be specified instead. Works properly only at the end of selector, except for pseudo-class :remove(). Examples :xpath(//*[@class=&quot;banner&quot;]) selects the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; class=&quot;banner&quot;&gt;&lt;/div&gt;  :xpath(//*[@class=&quot;inner&quot;]/..) selects the element div#target2: &lt;!-- HTML code --&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt;  Pseudo-class :nth-ancestor()​ The :nth-ancestor() pseudo-class allows to lookup the nth ancestor relative to the previously selected element. subject:nth-ancestor(n)  subject — required, standard or extended CSS selectorn — required, number &gt;= 1 and &lt; 256, distance to the needed ancestor from the element selected by subject Syntax subject:nth-ancestor(n)  subject — required, standard or extended CSS selectorn — required, number &gt;= 1 and &lt; 256, distance to the needed ancestor from the element selected by subject :nth-ancestor() limitations​ The :nth-ancestor() pseudo-class is not supported inside the argument of the :not() pseudo-class. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot;&gt; &lt;div class=&quot;child&quot;&gt;&lt;/div&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div&gt; &lt;div&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  .child:nth-ancestor(1) selects the element div#target1, div[class=&quot;inner&quot;]:nth-ancestor(3) selects the element div#target2. Pseudo-class :upward()​ The :upward() pseudo-class allows to lookup the ancestor relative to the previously selected element. Syntax subject:upward(ancestor)  subject — required, standard or extended CSS selectorancestor — required, specification for the ancestor of the element selected by subject, can be set as: number &gt;= 1 and &lt; 256 for distance to the needed ancestor, same as :nth-ancestor()standard CSS selector for matching closest ancestor :upward() limitations​ The :upward() pseudo-class is not supported inside the argument of the :not() pseudo-class. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; data=&quot;true&quot;&gt; &lt;div class=&quot;child&quot;&gt;&lt;/div&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div&gt; &lt;div&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  .inner:upward(div[data]) selects the element div#target1, .inner:upward(div[id]) selects the element div#target2, .child:upward(1) selects the element div#target1, .inner:upward(3) selects the element div#target2. Pseudo-class :remove() and pseudo-property remove​ Sometimes, it is necessary to remove a matching element instead of hiding it or applying custom styles. In order to do it, you can use the :remove() pseudo-class as well as the remove pseudo-property. Pseudo-class :remove() can be placed only at the end of a selector. Syntax ! pseudo-class selector:remove() ! pseudo-property selector { remove: true; }  selector — required, standard or extended CSS selector :remove() and remove limitations​ The :remove() pseudo-class is limited to work properly only at the end of selector. For applying the :remove() pseudo-class to any element, the universal selector * should be used. Otherwise such extended selector may be considered as invalid, e.g. .banner &gt; :remove() is not valid for removing any child element of banner class element, so it should look like .banner &gt; *:remove(). If the :remove() pseudo-class or the remove pseudo-property is used, all style properties are ignored except for the debug pseudo-property. Examples div.banner:remove() div:has(&gt; div[ad-attr]):remove() div:contains(advertisement) { remove: true; } div[class]:has(&gt; a &gt; img) { remove: true; }  note Rules with the remove pseudo-property must use #$?# marker: $ for CSS-style rule syntax, ? for ExtendedCss syntax. Pseudo-class :is()​ The :is() pseudo-class allows to match any element that can be selected by any of selectors passed to it. Invalid selectors are skipped and the pseudo-class deals with valid ones with no error thrown. Our implementation of the native :is() pseudo-class. Syntax [target]:is(selectors)  target — optional, standard or extended CSS selector, can be skipped for checking any elementselectors — forgiving selector list of standard or extended selectors. For extended selectors, only compound selectors are supported, not complex. :is() limitations​ Rules with the :is() pseudo-class must use the native implementation of :is() if rules use ## marker and it is possible, i.e. with no other extended selectors inside. To force applying ExtendedCss rules with :is(), use #?#/#$?# marker explicitly. If the :is() pseudo-class argument selectors is an extended selector, due to the way how the :is() pseudo-class is implemented in ExtendedCss v2.0, it is impossible to apply it to the top DOM node which is html, i.e. #?#html:is(&lt;extended-selectors&gt;) does not work. So if target is not defined or defined as the universal selector *, the extended pseudo-class applying is limited to html's children, e.g. rules #?#:is(...) and #?#*:is(...) are parsed as #?#html *:is(...). Please note that there is no such limitation for a standard selector argument, i.e. #?#html:is(.locked) works fine. Complex selectors with extended pseudo-classes are not supported as selectors argument for :is() pseudo-class, only compound ones are allowed. Check examples below for more details. Examples #container *:is(.inner, .footer) selects only the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;container&quot;&gt; &lt;div data=&quot;true&quot;&gt; &lt;div&gt; &lt;div id=&quot;target1&quot; class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  Due to limitations :is(*:not([class]) &gt; .banner)' does not work but :is(*:not([class]):has(&gt; .banner)) can be used instead of it to select the element div#target2: &lt;!-- HTML code --&gt; &lt;span class=&quot;span&quot;&gt;text&lt;/span&gt; &lt;div id=&quot;target2&quot;&gt; &lt;p class=&quot;banner&quot;&gt;inner paragraph&lt;/p&gt; &lt;/div&gt;  Pseudo-class :not()​ The :not() pseudo-class allows to select elements which are not matched by selectors passed as argument. Invalid argument selectors are not allowed and error is to be thrown. Our implementation of the :not() pseudo-class. Syntax [target]:not(selectors)  target — optional, standard or extended CSS selector, can be skipped for checking any elementselectors — list of standard or extended selectors :not() limitations​ Rules with the :not() pseudo-class must use the native implementation of :not() if rules use ## marker and it is possible, i.e. with no other extended selectors inside. To force applying ExtendedCss rules with :not(), use #?#/#$?# marker explicitly. If the :not() pseudo-class argument selectors is an extended selector, due to the way how the :not() pseudo-class is implemented in ExtendedCss v2.0, it is impossible to apply it to the top DOM node which is html, i.e. #?#html:not(&lt;extended-selectors&gt;) does not work. So if target is not defined or defined as the universal selector *, the extended pseudo-class applying is limited to html's children, e.g. rules #?#:not(...) and #?#*:not(...) are parsed as #?#html *:not(...). Please note that there is no such limitation for a standard selector argument, i.e. #?#html:not(.locked) works fine. The :not() is considered as a standard CSS pseudo-class inside the argument of the :upward() pseudo-class because :upward() supports only standard selectors. &quot;Up-looking&quot; pseudo-classes which are :nth-ancestor() and :upward() are not supported inside selectors argument for :not() pseudo-class. Examples #container &gt; *:not(h2, .text) selects only the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;container&quot;&gt; &lt;h2&gt;Header&lt;/h2&gt; &lt;div id=&quot;target1&quot;&gt;&lt;/div&gt; &lt;span class=&quot;text&quot;&gt;text&lt;/span&gt; &lt;/div&gt;  Pseudo-class :if-not() (removed)​ Removal notice The :if-not() pseudo-class is removed and is no longer supported. Rules with it are considered as invalid. This pseudo-class was basically a shortcut for :not(:has()). It was supported by ExtendedCss for better compatibility with some filters subscriptions. "},{"title":"Cosmetic rules priority​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-rules-priority","content":"The way element hiding and CSS rules are applied is platform-specific. In AdGuard for Windows, Mac, and Android, we use a stylesheet injected into the page. The priority of cosmetic rules is the same as any other websites' CSS stylesheet. But there is a limitation: element hiding and CSS rules cannot override inline styles. In such cases, it is recommended to use extended selectors or HTML filtering. In AdGuard Browser Extension, the so called &quot;user stylesheets&quot; are used. They have higher priority than even the inline styles. Extended CSS selectors use JavaScript to work and basically add an inline style themselves, therefore they can override any style. "},{"title":"HTML filtering rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#html-filtering-rules","content":"In most cases, the basis and cosmetic rules are enough to filter ads. But sometimes it is necessary to change the HTML-code of the page itself before it is loaded. This is when you need filtering rules for HTML content. They allow to indicate the HTML elements to be cut out before the browser loads the page. Compatibility HTML filtering rules are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser Extension for Firefox. Such rules do not work in extensions for other browsers because they are unable to modify content on network level. "},{"title":"Syntax​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#syntax-1","content":" selector = [tagName] [attributes] [pseudoClasses] combinator = &quot;&gt;&quot; rule = [domains] &quot;$$&quot; selector *(combinator selector) domains = [domain0, domain1[, ...[, domainN]]] attributes = &quot;[&quot; name0 = value0 &quot;]&quot; &quot;[&quot; name1 = value2 &quot;]&quot; ... &quot;[&quot; nameN = valueN &quot;]&quot; pseudoClasses = pseudoClass *pseudoClass pseudoClass = &quot;:&quot; pseudoName [ &quot;(&quot; pseudoArgs &quot;)&quot; ]  tagName — name of the element in lower case, for example, div or script.domains — domain restriction for the rule. Same principles as in element hiding rule syntax.attributes — a list of attributes that limit the selection of elements. name — attribute name, value — substring, that is contained in attribute value.pseudoName — the name of a pseudo-class.pseudoArgs — the arguments of a function-style pseudo-class.combinator — an operator that works similarly to the CSS child combinator: that is, the selector on the right of the combinator will only match an element whose direct parent matches the selector on the left of the combinator. "},{"title":"Examples​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#examples-2","content":"HTML code: &lt;script data-src=&quot;/banner.js&quot;&gt;&lt;/script&gt;  Rule: example.org$$script[data-src=&quot;banner&quot;]  This rule removes all script elements with the attribute data-src containing the substring banner. The rule applies only to example.org and all its subdomains. "},{"title":"Special attributes​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#special-attributes","content":"In addition to usual attributes, which value is every element checked for, there is a set of special attributes that change the way a rule works. Below there is a list of these attributes: tag-content​ Deprecation notice This special attribute may become unsupported in the future. Prefer using the :contains() pseudo-class where it is available. This is the most frequently used special attribute. It limits selection with those elements whose innerHTML code contains the specified substring. You must use &quot;&quot; to escape &quot;, for instance: $$script[tag-content=&quot;alert(&quot;&quot;this is ad&quot;&quot;)&quot;] For example, take a look at this HTML code: &lt;script type=&quot;text/javascript&quot;&gt; document.write('&lt;div&gt;banner text&lt;/div&gt;&quot; /&gt;'); &lt;/script&gt;  Following rule will delete all script elements with a banner substring in their code: $$script[tag-content=&quot;banner&quot;]  Limitations The tag-content special attribute must not appear in a selector to the left of a &gt; combinator. wildcard​ Deprecation notice This special attribute may become unsupported in the future. Prefer using the :contains() pseudo-class where it is available. This special attribute works almost like tag-content and allows you to check the innerHTML code of the document. Rule will check if HTML code of the element fits to the search pattern. You must use &quot;&quot; to escape &quot;, for instance: $$script[wildcard=&quot;&quot;banner&quot;&quot;] For example: $$script[wildcard=&quot;*banner*text*&quot;] It checks if the element code contains the two consecutive substrings banner and text. Limitations The wildcard special attribute must not appear in a selector to the left of a &gt; combinator. max-length​ Deprecation notice This special attribute may become unsupported in the future. Prefer using the :contains() pseudo-class with a regular expression where it is available. Specifies the maximum length for content of HTML element. If this parameter is set and the content length exceeds the value, a rule does not apply to the element. Default value If this parameter is not specified, the max-length is considered to be 8192. For example: $$div[tag-content=&quot;banner&quot;][max-length=&quot;400&quot;]  This rule will remove all the div elements, whose code contains the substring banner and the length of which does not exceed 400 characters. Limitations The max-length special attribute must not appear in a selector to the left of a &gt; combinator. min-length​ Deprecation notice This special attribute may become unsupported in the future. Prefer using the :contains() pseudo-class with a regular expression where it is available. Specifies the minimum length for content of HTML element. If this parameter is set and the content length is less than preset value, a rule does not apply to the element. For example: $$div[tag-content=&quot;banner&quot;][min-length=&quot;400&quot;]  This rule will remove all the div elements, whose code contains the substring banner and the length of which exceeds 400 characters. Limitations The min-length special attribute must not appear in a selector to the left of a &gt; combinator. "},{"title":"Pseudo-classes​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#pseudo-classes","content":":contains()​ Syntax​ :contains(unquoted text)  or :contains(/reg(ular )?ex(pression)?/)  Compatibility :-abp-contains() and :has-text() are synonyms for :contains(). Compatibility The :contains() pseudo-class is supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.13 or later. Requires that the inner HTML of the element contains the specified text or matches the specified regular expression. Limitations A :contains() pseudo-class must not appear in a selector to the left of a &gt; combinator. "},{"title":"Exceptions​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#exceptions","content":"Similar to hiding rules, there is a special type of rules that disable the selected HTML filtering rule for particular domains. The syntax is the same, you just have to change $$ to $@$. For example, there is a rule in filter: $$script[tag-content=&quot;banner&quot;]  If you want to disable it for example.com, you can create an exception rule: example.com$@$script[tag-content=&quot;banner&quot;]  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. $@$script[tag-content=&quot;banner&quot;]  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. "},{"title":"JavaScript rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#javascript-rules","content":"AdGuard supports a special type of rules that allows you to inject any javascript code to websites pages. We strongly recommend using scriptlets instead of JavaScript rules whenever possible. JS rules are supposed to help with debugging, but as a long-time solution a scriptlet rule should be used. Syntax rule = [domains] &quot;#%#&quot; script  domains — domain restriction for the rule. Same principles as in element hiding rules.script — arbitrary javascript code in one string. Examples example.org#%#window.__gaq = undefined; executes the code window.__gaq = undefined; on all pages at example.org and all subdomains. Exceptions Similar to hiding rules, there is a special type of rules that disable the selected javascript rule for particular domains. The syntax is the same, you just have to change #%# to #@%#. For example, there is a rule in filter: #%#window.__gaq = undefined;  If you want to disable it for example.com, you can create an exception rule: example.com#@%#window.__gaq = undefined;  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. #@%#window.__gaq = undefined;  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. Restrictions JavaScript rules can be used only in trusted filters. Compatibility JavaScript rules are not supported by AdGuard Content Blocker. "},{"title":"Scriptlet rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#scriptlets","content":"Scriptlet is a JavaScript function that provides extended capabilities for content blocking. These functions can be used in a declarative manner in AdGuard filtering rules. note AdGuard supports a lot of different scriptlets. In order to achieve cross-blocker compatibility, we also support syntax of uBO and ABP. Syntax rule = [domains] &quot;#%#//scriptlet(&quot; scriptletName arguments &quot;)&quot;  scriptletName — required, a name of the scriptlet from AdGuard's Scriptlets libraryarguments — optional, a list of string arguments (no other types of arguments are supported) Examples example.org#%#//scriptlet(&quot;abort-on-property-read&quot;, &quot;alert&quot;)  This rule will be applied to example.org and subdomains pages and will execute the abort-on-property-read scriptlet with the alert parameter. Learn more about how to debug scriptlets. More information about scriptlets can be found on GitHub. Compatibility Scriptlet rules are not supported by AdGuard Content Blocker. "},{"title":"Trusted scriptlets​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#trusted-scriptlets","content":"Trusted scriptlets are scriptlets with extended functionality. It means the same syntax and restrictions. Trusted scriptlet names are prefixed with trusted-, e.g. trusted-set-cookie, to be easily distinguished from common scriptlets. note Trusted scriptlets are not compatible with other ad blockers except AdGuard. Restrictions Trusted scriptlets rules can be used only in trusted filters. Compatibility Trusted scriptlets rules are not supported by AdGuard Content Blocker. Learn more about how to debug scriptlets. More information about trusted scriptlets can be found on GitHub. "},{"title":"Modifiers for non-basic type of rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-rules-modifiers","content":"Each rule can be modified using the modifiers described in the following paragraphs. Syntax {#non-basic-rules-modifiers-syntax} rule = &quot;[$&quot; modifiers &quot;]&quot; [rule text] modifiers = modifier0[, modifier1[, ...[, modifierN]]]  modifier — set of the modifiers described below.rule text — a rule to be modified. For example, [$domain=example.com,app=test_app]##selector. In the modifiers values, the following characters must be escaped: [, ], ,, and \\ (unless it is used for the escaping). Use \\ to escape them. For example, an escaped bracket looks like this: \\]. Modifier \\ Products\tCoreLibs apps\tAdGuard for Chromium\tAdGuard for Firefox\tAdGuard for iOS\tAdGuard for Safari\tAdGuardコンテンツブロッカー$app\t✅\t❌\t❌\t❌\t❌\t❌ $domain\t✅\t✅\t✅\t✅\t✅\t❌ $path\t✅\t✅\t✅\t✅\t✅\t❌ $url\t✅\t⏳\t⏳\t❌\t❌\t❌ note ✅ — fully supported⏳ — feature that has been implemented or is planned to be implemented but is not yet available in any product❌ — not supported "},{"title":"$app​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-app-modifier","content":"$app modifier lets you narrow the rule coverage down to a specific application or a list of applications. The modifier's behavior and syntax perfectly match the corresponding basic rules $app modifier. Examples [$app=org.example.app]example.com##.textad hides a div with the class textad at example.com and all subdomains in requests sent from the org.example.app Android app.[$app=~org.example.app1|~org.example.app2]example.com##.textad hides a div with the class textad at example.com and all subdomains in requests sent from any app except org.example.app1 and org.example.app2.[$app=com.apple.Safari]example.org#%#//scriptlet('prevent-setInterval', 'check', '!300') applies scriptlet prevent-setInterval only in Safari browser on Mac.[$app=org.example.app]#@#.textad disables all ##.textad rules for all domains while using org.example.app. Compatibility Such rules with $app modifier are supported by AdGuard for Windows, Mac, and Android. "},{"title":"$domain​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-domain-modifier","content":"$domain modifier limits the rule application area to a list of domains and their subdomains. The modifier's behavior and syntax perfectly match the corresponding basic rules $domain modifier. Examples [$domain=example.com]##.textad — hides a div with the class textad at example.com and all subdomains.[$domain=example.com|example.org]###adblock — hides an element with attribute id equals adblock at example.com, example.org and all subdomains.[$domain=~example.com]##.textad — this rule hides div elements of the class textad for all domains, except example.com and its subdomains. There are 2 ways to specify domain restrictions for non-basic rules: the &quot;classic&quot; way is to specify domains before rule mask and attributes: example.com##.textad;the modifier approach is to specify domains via $domain modifier: [$domain=example.com]##.textad. But rules with mixed style domains restriction are considered invalid. So, for example, the rule [$domain=example.org]example.com##.textad will be ignored. Compatibility Such rules with $domain modifier are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser Extension for Chrome, Firefox, Edge. "},{"title":"$path​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-path-modifier","content":"$path modifier limits the rule application area to specific locations or pages on websites. Syntax $path [&quot;=&quot; pattern]  pattern — optional, a path mask to which the rule is restricted. Its syntax and behavior are pretty much the same as with the pattern for basic rules. You can also use special characters, except for ||, which does not make any sense in this case (see examples below). If pattern is not set for $path, rule will apply only on the main page of website. $path modifier matches the query string as well. $path modifier supports regular expressions in the same way basic rules do. Examples [$path=page.html]##.textad hides a div with the class textad at /page.html or /page.html?&lt;query&gt; or /sub/page.html or /another_page.html[$path=/page.html]##.textad hides a div with the class textad at /page.html or /page.html?&lt;query&gt; or /sub/page.html of any domain but not at /another_page.html[$path=|/page.html]##.textad hides a div with the class textad at /page.html or /page.html?&lt;query&gt; of any domain but not at /sub/page.html[$path=/page.html|]##.textad hides a div with the class textad at /page.html or /sub/page.html of any domain but not at /page.html?&lt;query&gt;[$path=/page*.html]example.com##.textad hides a div with the class textad at /page1.html or /page2.html or any other path matching /page&lt;...&gt;.html of example.com[$path]example.com##.textad hides a div with the class textad at the main page of example.com[$domain=example.com,path=/page.html]##.textad hides a div with the class textad at page.html of example.com and all subdomains but not at another_page.html[$path=/\\\\/(sub1|sub2)\\\\/page\\\\.html/]##.textad hides a div with the class textad at both /sub1/page.html and /sub2/page.html of any domain (please note the escaped special characters) Compatibility Rules with $path modifier are not supported by AdGuard Content Blocker. "},{"title":"$url​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#non-basic-url-modifier","content":"$url modifier limits the rule application area to URLs matching the specified mask. Syntax url = pattern  where pattern is pretty much the same as pattern of the basic rules assuming that some characters must be escaped. The special characters and regular expressions are supported as well. Examples [$url=||example.com/content/*]##div.textad hides a div with the class textad at addresses like https://example.com/content/article.html and even https://subdomain.example.com/content/article.html.[$url=||example.org^]###adblock hides an element with attribute id equal to adblock at example.org and its subdomains.[$url=/\\[a-z\\]+\\\\.example\\\\.com^/]##.textad hides div elements of the class textad for all domains matching the regular expression [a-z]+\\.example\\.com^. Compatibility Rules with the $url modifier are supported by AdGuard for Windows, Mac, and Android with CoreLibs v1.11 or later. "},{"title":"Information for filters maintainers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#information-for-filters-maintainers","content":"If you maintain a third-party filter that is known to AdGuard, you might be interested in the information presented in this section. Please note that hints will be applied to registered filters only. The filter is considered to be registered and known by AdGuard, if it is present in the known filters index. If you want your filter to be registered, please file an issue to AdguardFilters repo. "},{"title":"Preprocessor directives​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#preprocessor-directives","content":"We provide preprocessor directives that can be used by filters maintainers to improve compatibility with different ad blockers and provide: including a fileapplying rules conditionally by ad blocker typecontent blocker specifying for rules applying in Safari note Any mistake in a preprocessor directive will lead to AdGuard failing the filter update in the same way as if the filter URL was unavailable. Preprocessor directives can be used in the user rules or in the custom filters. Including a file​ The !#include directive allows to include contents of a specified file into the filter. It supports only files from the same origin to make sure that the filter maintainer is in control of the specified file. The included file can also contain pre- directives (even other !#include directives). Ad blockers should consider the case of recursive !#include and implement a protection mechanism. Syntax !#include file_path  where file_path is a same origin absolute or relative file path to be included. The files must originate from the same domain but may be located in a different folder. If included file is not found or unavailable, the whole filter update should fail. Same-origin limitation should be disabled for local custom filters. Examples Filter URL: https://example.org/path/filter.txt ! Valid (same origin): !#include https://example.org/path/includedfile.txt ! ! Valid (relative path): !#include /includedfile.txt !#include ../path2/includedfile.txt ! ! Invalid (another origin): !#include https://domain.com/path/includedfile.txt  Conditions​ Filters maintainers can use conditions to supply different rules depending on the ad blocker type. A conditional directive beginning with an !#if directive must explicitly be terminated with an !#endif directive. Conditions support all basic logical operators. There are two possible scenarios: When an ad blocker encounters an !#if directive and no !#else directive, it will compile the code between !#if and !#endif directives only if the specified condition is true. If there is an !#else directive, the code between !#if and !#else will be compiled if the condition is true; otherwise, the code between !#else and !#endif will be compiled. note Whitespaces matter. !#if is a valid directive, while !# if is not. Syntax !#if (conditions) rules_list !#endif  or !#if (conditions) true_conditions_rules_list !#else false_conditions_rules_list !#endif  where: !#if (conditions) — start of the block when conditions are trueconditions — just like in some popular programming languages, preprocessor conditions are based on constants declared by ad blockers. Authors of ad blockers define on their own what exact constants they declare. Possible values: adguard always declared; shows maintainers that this is one of AdGuard products; should be enough in 95% of casesproduct-specific constants for cases when you need a rule to work (or not work — then ! should be used before constant) in a specific product only: adguard_app_windows — AdGuard for Windowsadguard_app_mac — AdGuard for Macadguard_app_android — AdGuard for Androidadguard_app_ios — AdGuard for iOSadguard_ext_safari — AdGuard for Safariadguard_ext_chromium — AdGuard Browser Extension for Chrome (and chromium-based browsers, e.g. new Microsoft Edge)adguard_ext_firefox — AdGuard Browser Extension for Firefoxadguard_ext_edge — AdGuard Browser Extension for Edge Legacyadguard_ext_opera — AdGuard Browser Extension for Operaadguard_ext_android_cb — AdGuard Content Blocker for mobile Samsung and Yandex browsersext_ublock — special case; this one is declared when a uBlock version of a filter is compiled by the FiltersRegistrycap_html_filtering — products that support HTML filtering rules: AdGuard for Windows, AdGuard for Mac, and AdGuard for Android !#else — start of the block when conditions are falserules_list, true_conditions_rules_list, false_conditions_rules_list — lists of rules!#endif — end of the block Examples ! for all AdGuard products except AdGuard for Safari !#if (adguard &amp;&amp; !adguard_ext_safari) ||example.org^$third-party domain.com##div.ad !#endif  ! directives even can be combined !#if (adguard_app_android) !#include /androidspecific.txt !#endif  !#if (adguard &amp;&amp; !adguard_ext_safari) ! for all AdGuard products except AdGuard for Safari ||example.org^$third-party domain.com##div.ad !#else ! for AdGuard for Safari only ||subdomain.example.org^$third-party !#endif  Compatibility The !#else directive is supported by the FiltersDownloader v1.1.20 or later. It is already supported for filter lists compiled by the FiltersRegistry, but it still may not be supported by AdGuard products when adding a filter list with !#else as a custom one. The following products will support it in the mentioned versions or later: AdGuard for Windows, Mac, and Android with CoreLibs v1.13;AdGuard Browser Extension v4.2.208;AdGuard v1.11.16 for Safari. Safari affinity​ Safari's limit for each content blocker is 150,000 active rules. But in AdGuard for Safari and AdGuard for iOS, we've split the rules into 6 content blockers, thus increasing the rule limit to 900,000. Here is the composition of each content blocker: AdGuard General — Ad Blocking, Language-specificAdGuard Privacy — PrivacyAdGuard Social — Social Widgets, AnnoyancesAdGuard Security — SecurityAdGuard Other — OtherAdGuard Custom — Custom User rules and allowlist are added to every content blocker. caution The main disadvantage of using multiple content blockers is that rules from different blockers are applied independently. Blocking rules are not affected by this, but unblocking rules may cause problems. If a blocking rule is in one content blocker and an exception is in another, the exception will not work. Filter maintainers use !#safari_cb_affinity to define Safari content blocker affinity for the rules inside of the directive block. Syntax !#safari_cb_affinity(content_blockers) rules_list !#safari_cb_affinity  where: !#safari_cb_affinity(content_blockers) — start of the blockcontent_blockers — comma-separated list of content blockers. Possible values: general — AdGuard General content blockerprivacy — AdGuard Privacy content blockersocial — AdGuard Social content blockersecurity — AdGuard Security content blockerother — AdGuard Other content blockercustom — AdGuard Custom content blockerall — special keyword that means that the rules must be included into all content blockers rules_list — list of rules!#safari_cb_affinity — end of the block Examples ! to unhide specific element which is hidden by AdGuard Base filter: !#safari_cb_affinity(general) example.org#@#.adBanner !#safari_cb_affinity  ! to allowlist basic rule from AdGuard Tracking Protection filter: !#safari_cb_affinity(privacy) @@||example.org^ !#safari_cb_affinity  "},{"title":"Hints​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#hints","content":"&quot;Hint&quot; is a special comment, instruction to the filters compiler used on the server side (see FiltersRegistry). Syntax !+ HINT_NAME1(PARAMS) HINT_NAME2(PARAMS)  Multiple hints can be applied. NOT_OPTIMIZED hint​ For each filter, AdGuard compiles two versions: full and optimized. Optimized version is much more lightweight and does not contain rules which are not used at all or used rarely. Rules usage frequency comes from the collected filter rules statistics. But filters optimization is based on more than that — some filters have specific configuration. This is how it looks like for Base filter: &quot;filter&quot;: AdGuard Base filter, &quot;percent&quot;: 30, &quot;minPercent&quot;: 20, &quot;maxPercent&quot;: 40, &quot;strict&quot;: true  where: filter — filter identifierpercent — expected optimization percent ~= (rules count in optimized filter) / (rules count in original filter) * 100minPercent — lower bound of percent valuemaxPercent — upper bound of percent valuestrict — if percent &lt; minPercent OR percent &gt; maxPercent and strict mode is on then filter compilation should fail, otherwise original rules must be used In other words, percent is the &quot;compression level&quot;. For instance, for the Base filter it is configured to 40%. It means that optimization algorithm should strip 60% of rules. Eventually, here are the two versions of the Base filter for AdGuard Browser Extension: full: https://filters.adtidy.org/extension/chromium/filters/2.txtoptimized: https://filters.adtidy.org/extension/chromium/filters/2_optimized.txt If you want to add a rule which should not be removed at optimization use the NOT_OPTIMIZED hint: !+ NOT_OPTIMIZED ||example.org^  And this rule will not be optimized only for AdGuard for Android: !+ NOT_OPTIMIZED PLATFORM(android) ||example.org^  PLATFORM and NOT_PLATFORM hints​ Used to specify the platforms to apply the rules. List of existing platforms and links to Base filter, for example, for each of them: windows — AdGuard for Windows — https://filters.adtidy.org/windows/filters/2.txt mac — AdGuard for Mac — https://filters.adtidy.org/mac_v2/filters/2.txt android — AdGuard for Android — https://filters.adtidy.org/android/filters/2.txt ios — AdGuard for iOS — https://filters.adtidy.org/ios/filters/2.txt ext_chromium — AdGuard Browser Extension for Chrome — https://filters.adtidy.org/extension/chromium/filters/2.txt ext_chromium_mv3 — AdGuard Browser Extension for Chrome MV3 — https://filters.adtidy.org/extension/chromium-mv3/filters/2.txt ext_ff — AdGuard Browser Extension for Firefox — https://filters.adtidy.org/extension/firefox/filters/2.txt ext_edge — AdGuard Browser Extension for Edge — https://filters.adtidy.org/extension/edge/filters/2.txt ext_opera — AdGuard Browser Extension for Opera — https://filters.adtidy.org/extension/opera/filters/2.txt ext_safari — AdGuard for Safari — https://filters.adtidy.org/extension/safari/filters/2.txt ext_android_cb — AdGuard Content Blocker — https://filters.adtidy.org/extension/android-content-blocker/filters/2.txt ext_ublock — uBlock Origin — https://filters.adtidy.org/extension/ublock/filters/2.txt Examples This rule will be available only in AdGuard for Windows, Mac, Android: !+ PLATFORM(windows,mac,android) ||example.org^  Except for AdGuard for Safari, AdGuard Content Blocker, and AdGuard for iOS, this rule is available on all platforms: !+ NOT_PLATFORM(ext_safari, ext_android_cb, ios) ||example.org^  "},{"title":"How to debug filtering rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#how-to-debug-filtering-rules","content":"It may be possible to create simple filtering rules &quot;in your head&quot; but for anything even slightly more complicated you will need additional tools to debug and iterate them. There are tools to assist you with that. You can use DevTools in Chrome and its analogs in other browsers but most AdGuard products provide another one — Filtering log. "},{"title":"Filtering log​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#filtering-log","content":"Filtering log is an advanced tool that will be helpful mostly to filter developers. It lists all web requests that pass through AdGuard, gives you exhaustive information on each of them, offers multiple sorting options, and has other useful features. Depending on which AdGuard product you are using, Filtering log can be located in different places. In AdGuard for Windows, you can find it in the Ad Blocker tab or via the tray menuIn AdGuard for Mac, it is located in Settings → Advanced → Filtering logIn AdGuard for Android, you can find it under Statistics → Recent activity. Recent activity can also be accessed from the AssistantIn AdGuard Browser Extension, it is accessible from the Miscellaneous settings tab or by right-clicking the extension icon. Only Chromium- and Firefox-based web browsers show applied element hiding rules (including CSS, ExtCSS) and JS rules and scriptlets in their Filtering logs note In AdGuard for iOS and AdGuard for Safari, Filtering log does not exist because of the way content blockers are implemented in Safari. AdGuard does not see the web requests and therefore cannot display them. "},{"title":"Selectors debugging mode​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#selectors-debug-mode","content":"Sometimes, you might need to check the performance of a given selector or a stylesheet. In order to do it without interacting with JavaScript directly, you can use a special debug style property. When ExtendedCss meets this property, it enables the debugging mode either for a single selector or for all selectors, depending on the debug value. Open the browser console while on a web page to see the timing statistics for selector(s) that were applied there. Debugging mode displays the following stats as object where each of the debugged selectors are keys, and value is an object with such properties: Always printed: selectorParsed — text of eventually parsed selectortimings — list of DOM nodes matched by the selector appliesCount — total number of times that the selector has been applied on the pageappliesTimings — time that it took to apply the selector on the page, for each of the instances that it has been applied (in milliseconds)meanTiming — mean time that it took to apply the selector on the pagestandardDeviation — standard deviationtimingsSum — total time it took to apply the selector on the page across all instances Printed only for remove pseudos: removed — flag to signal if elements were removed Printed if elements are not removed: matchedElements — list of DOM nodes matched by the selectorstyleApplied — parsed rule style declaration related to the selector Examples Debugging a single selector: When the value of the debug property is true, only information about this selector will be shown in the browser console. #$?#.banner { display: none; debug: true; }  Enabling global debug: When the value of the debug property is global, the console will display information about all extended CSS selectors that have matches on the current page, for all the rules from any of the enabled filters. #$?#.banner { display: none; debug: global; }  Testing extended selectors without AdGuard ExtendedCss can be executed on any page without using any AdGuard product. In order to do that you should copy and execute the following code in a browser console: !function(e,t,d){C=e.createElement(t),C.src=d,C.onload=function(){alert(&quot;ExtendedCss loaded successfully&quot;)},s=e.getElementsByTagName(t)[0],s?s.parentNode.insertBefore(C,s):(h=e.getElementsByTagName(&quot;head&quot;)[0],h.appendChild(C))}(document,&quot;script&quot;,&quot;https://AdguardTeam.github.io/ExtendedCss/extended-css.min.js&quot;);  Alternatively, install the ExtendedCssDebugger userscript. Now you can now use the ExtendedCss from global scope, and run its method query() as Document.querySelectorAll(). Examples const selector = 'div.block:has=(.header:matches-css(after, content: Ads))'; // array of HTMLElements matched the `selector` is to be returned ExtendedCss.query(selector);  "},{"title":"Debugging scriptlets​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#debug-scriptlets","content":"If you are using AdGuard Browser Extension and want to debug a scriptlet or a trusted scriptlet rule, you can get additional information by opening the Filtering log. In that case, scriptlets will switch to debug mode and there will be more information in the browser console. The following scriptlets are especially developed for debug purposes: debug-current-inline-scriptdebug-on-property-readdebug-on-property-writelog-addEventListenerlog-on-stack-tracelog-evallog The following scriptlets also may be used for debug purposes: json-pruneprevent-fetchprevent-requestAnimationFrameprevent-setIntervalprevent-setTimeoutprevent-window-open with specified replacement parameterprevent-xhrtrusted-replace-fetch-responsetrusted-replace-xhr-response "},{"title":"Compatibility tables legend​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#compatibility-tables-legend","content":""},{"title":"Product shortcuts​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#what-product","content":"CoreLibs apps — AdGuard for Windows, AdGuard for Mac, and AdGuard for AndroidAdGuard for Chromium — AdGuard Browser Extension for Chrome and other Chromium-based browsers such as Microsoft Edge, OperaAdGuard for Firefox — AdGuard Browser Extension for FirefoxAdGuard for iOS — AdGuard for iOS and AdGuard Pro for iOS (for mobile Safari browser)AdGuard for Safari — AdGuard for desktop Safari browser AdGuard Content Blocker — Content Blocker for Android mobile browsers: Samsung Internet and Yandex Browser "},{"title":"Compatibility shortcuts​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#what-compatibility","content":"note ✅ — fully supported✅ * — supported, but reliability may vary or limitations may occur; check the modifier description for more details🧩 — may already be implemented in nightly or beta versions but is not yet supported in release versions⏳ — feature that has been implemented or is planned to be implemented but is not yet available in any product❌ — not supported👎 — deprecated; still supported but will be removed in the future🚫 — removed and no longer supported "}]